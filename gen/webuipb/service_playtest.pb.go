// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: service_playtest.proto

package webuipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CPlaytest_GetInviteHistory_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         *uint32                `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	TimeBefore    *uint32                `protobuf:"varint,2,opt,name=time_before,json=timeBefore" json:"time_before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetInviteHistory_Request) Reset() {
	*x = CPlaytest_GetInviteHistory_Request{}
	mi := &file_service_playtest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInviteHistory_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteHistory_Request) ProtoMessage() {}

func (x *CPlaytest_GetInviteHistory_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteHistory_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteHistory_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{0}
}

func (x *CPlaytest_GetInviteHistory_Request) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *CPlaytest_GetInviteHistory_Request) GetTimeBefore() uint32 {
	if x != nil && x.TimeBefore != nil {
		return *x.TimeBefore
	}
	return 0
}

type CPlaytest_GetInviteHistory_Response struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Invites       []*CPlaytest_GetInviteHistory_Response_Invite `protobuf:"bytes,1,rep,name=invites" json:"invites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetInviteHistory_Response) Reset() {
	*x = CPlaytest_GetInviteHistory_Response{}
	mi := &file_service_playtest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInviteHistory_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteHistory_Response) ProtoMessage() {}

func (x *CPlaytest_GetInviteHistory_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteHistory_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteHistory_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{1}
}

func (x *CPlaytest_GetInviteHistory_Response) GetInvites() []*CPlaytest_GetInviteHistory_Response_Invite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type CPlaytest_GetInviteHistory_Response_Invite struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Appid          *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	SteamidInvited *uint64                `protobuf:"fixed64,2,opt,name=steamid_invited,json=steamidInvited" json:"steamid_invited,omitempty"`
	TimeCreated    *uint32                `protobuf:"varint,3,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	AppName        *string                `protobuf:"bytes,4,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPlaytest_GetInviteHistory_Response_Invite) Reset() {
	*x = CPlaytest_GetInviteHistory_Response_Invite{}
	mi := &file_service_playtest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInviteHistory_Response_Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteHistory_Response_Invite) ProtoMessage() {}

func (x *CPlaytest_GetInviteHistory_Response_Invite) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteHistory_Response_Invite.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteHistory_Response_Invite) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{2}
}

func (x *CPlaytest_GetInviteHistory_Response_Invite) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_GetInviteHistory_Response_Invite) GetSteamidInvited() uint64 {
	if x != nil && x.SteamidInvited != nil {
		return *x.SteamidInvited
	}
	return 0
}

func (x *CPlaytest_GetInviteHistory_Response_Invite) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CPlaytest_GetInviteHistory_Response_Invite) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

type CPlaytest_GetInviteOptions_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetInviteOptions_Request) Reset() {
	*x = CPlaytest_GetInviteOptions_Request{}
	mi := &file_service_playtest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInviteOptions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteOptions_Request) ProtoMessage() {}

func (x *CPlaytest_GetInviteOptions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteOptions_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteOptions_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{3}
}

func (x *CPlaytest_GetInviteOptions_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CPlaytest_GetInviteOptions_Response struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IneligibleFriends []uint32               `protobuf:"varint,1,rep,name=ineligible_friends,json=ineligibleFriends" json:"ineligible_friends,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CPlaytest_GetInviteOptions_Response) Reset() {
	*x = CPlaytest_GetInviteOptions_Response{}
	mi := &file_service_playtest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInviteOptions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInviteOptions_Response) ProtoMessage() {}

func (x *CPlaytest_GetInviteOptions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInviteOptions_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInviteOptions_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{4}
}

func (x *CPlaytest_GetInviteOptions_Response) GetIneligibleFriends() []uint32 {
	if x != nil {
		return x.IneligibleFriends
	}
	return nil
}

type CPlaytest_GetInvites_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InviteId      *uint64                `protobuf:"varint,1,opt,name=invite_id,json=inviteId" json:"invite_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetInvites_Request) Reset() {
	*x = CPlaytest_GetInvites_Request{}
	mi := &file_service_playtest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInvites_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInvites_Request) ProtoMessage() {}

func (x *CPlaytest_GetInvites_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInvites_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInvites_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{5}
}

func (x *CPlaytest_GetInvites_Request) GetInviteId() uint64 {
	if x != nil && x.InviteId != nil {
		return *x.InviteId
	}
	return 0
}

type CPlaytest_GetInvites_Response struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Invites       []*CPlaytest_GetInvites_Response_Invite `protobuf:"bytes,1,rep,name=invites" json:"invites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetInvites_Response) Reset() {
	*x = CPlaytest_GetInvites_Response{}
	mi := &file_service_playtest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInvites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInvites_Response) ProtoMessage() {}

func (x *CPlaytest_GetInvites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInvites_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInvites_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{6}
}

func (x *CPlaytest_GetInvites_Response) GetInvites() []*CPlaytest_GetInvites_Response_Invite {
	if x != nil {
		return x.Invites
	}
	return nil
}

type CPlaytest_GetInvites_Response_Invite struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InviteId       *uint64                `protobuf:"varint,1,opt,name=invite_id,json=inviteId" json:"invite_id,omitempty"`
	Appid          *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	SteamidInviter *uint64                `protobuf:"fixed64,3,opt,name=steamid_inviter,json=steamidInviter" json:"steamid_inviter,omitempty"`
	Status         *int32                 `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	TimeCreated    *uint32                `protobuf:"varint,5,opt,name=time_created,json=timeCreated" json:"time_created,omitempty"`
	AppName        *string                `protobuf:"bytes,6,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPlaytest_GetInvites_Response_Invite) Reset() {
	*x = CPlaytest_GetInvites_Response_Invite{}
	mi := &file_service_playtest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetInvites_Response_Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetInvites_Response_Invite) ProtoMessage() {}

func (x *CPlaytest_GetInvites_Response_Invite) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetInvites_Response_Invite.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetInvites_Response_Invite) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{7}
}

func (x *CPlaytest_GetInvites_Response_Invite) GetInviteId() uint64 {
	if x != nil && x.InviteId != nil {
		return *x.InviteId
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetSteamidInviter() uint64 {
	if x != nil && x.SteamidInviter != nil {
		return *x.SteamidInviter
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetTimeCreated() uint32 {
	if x != nil && x.TimeCreated != nil {
		return *x.TimeCreated
	}
	return 0
}

func (x *CPlaytest_GetInvites_Response_Invite) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

type CPlaytest_GetUserStatus_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetUserStatus_Request) Reset() {
	*x = CPlaytest_GetUserStatus_Request{}
	mi := &file_service_playtest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetUserStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetUserStatus_Request) ProtoMessage() {}

func (x *CPlaytest_GetUserStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetUserStatus_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetUserStatus_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{8}
}

func (x *CPlaytest_GetUserStatus_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CPlaytest_GetUserStatus_Response struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	Results       []*CPlaytest_GetUserStatus_Response_AppStatus `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_GetUserStatus_Response) Reset() {
	*x = CPlaytest_GetUserStatus_Response{}
	mi := &file_service_playtest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetUserStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetUserStatus_Response) ProtoMessage() {}

func (x *CPlaytest_GetUserStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetUserStatus_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetUserStatus_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{9}
}

func (x *CPlaytest_GetUserStatus_Response) GetResults() []*CPlaytest_GetUserStatus_Response_AppStatus {
	if x != nil {
		return x.Results
	}
	return nil
}

type CPlaytest_GetUserStatus_Response_AppStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Appid            *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Status           *int32                 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	InvitesRemaining *int32                 `protobuf:"varint,3,opt,name=invites_remaining,json=invitesRemaining" json:"invites_remaining,omitempty"`
	TimeJoined       *uint32                `protobuf:"varint,4,opt,name=time_joined,json=timeJoined" json:"time_joined,omitempty"`
	Packageid        *uint32                `protobuf:"varint,5,opt,name=packageid" json:"packageid,omitempty"`
	InvitesSent      *int32                 `protobuf:"varint,6,opt,name=invites_sent,json=invitesSent" json:"invites_sent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) Reset() {
	*x = CPlaytest_GetUserStatus_Response_AppStatus{}
	mi := &file_service_playtest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_GetUserStatus_Response_AppStatus) ProtoMessage() {}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_GetUserStatus_Response_AppStatus.ProtoReflect.Descriptor instead.
func (*CPlaytest_GetUserStatus_Response_AppStatus) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{10}
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetInvitesRemaining() int32 {
	if x != nil && x.InvitesRemaining != nil {
		return *x.InvitesRemaining
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetTimeJoined() uint32 {
	if x != nil && x.TimeJoined != nil {
		return *x.TimeJoined
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CPlaytest_GetUserStatus_Response_AppStatus) GetInvitesSent() int32 {
	if x != nil && x.InvitesSent != nil {
		return *x.InvitesSent
	}
	return 0
}

type CPlaytest_RequestInvite_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_RequestInvite_Request) Reset() {
	*x = CPlaytest_RequestInvite_Request{}
	mi := &file_service_playtest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_RequestInvite_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_RequestInvite_Request) ProtoMessage() {}

func (x *CPlaytest_RequestInvite_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_RequestInvite_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_RequestInvite_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{11}
}

func (x *CPlaytest_RequestInvite_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CPlaytest_RequestInvite_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CPlaytest_RequestInvite_Response struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	InvitesRemaining *int32                 `protobuf:"varint,1,opt,name=invites_remaining,json=invitesRemaining" json:"invites_remaining,omitempty"`
	Status           *int32                 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CPlaytest_RequestInvite_Response) Reset() {
	*x = CPlaytest_RequestInvite_Response{}
	mi := &file_service_playtest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_RequestInvite_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_RequestInvite_Response) ProtoMessage() {}

func (x *CPlaytest_RequestInvite_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_RequestInvite_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_RequestInvite_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{12}
}

func (x *CPlaytest_RequestInvite_Response) GetInvitesRemaining() int32 {
	if x != nil && x.InvitesRemaining != nil {
		return *x.InvitesRemaining
	}
	return 0
}

func (x *CPlaytest_RequestInvite_Response) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type CPlaytest_UpdateInvites_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InviteIds     []uint64               `protobuf:"varint,1,rep,name=invite_ids,json=inviteIds" json:"invite_ids,omitempty"`
	Status        *int32                 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytest_UpdateInvites_Request) Reset() {
	*x = CPlaytest_UpdateInvites_Request{}
	mi := &file_service_playtest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_UpdateInvites_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_UpdateInvites_Request) ProtoMessage() {}

func (x *CPlaytest_UpdateInvites_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_UpdateInvites_Request.ProtoReflect.Descriptor instead.
func (*CPlaytest_UpdateInvites_Request) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{13}
}

func (x *CPlaytest_UpdateInvites_Request) GetInviteIds() []uint64 {
	if x != nil {
		return x.InviteIds
	}
	return nil
}

func (x *CPlaytest_UpdateInvites_Request) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type CPlaytest_UpdateInvites_Response struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InvitesUpdated *uint32                `protobuf:"varint,1,opt,name=invites_updated,json=invitesUpdated" json:"invites_updated,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPlaytest_UpdateInvites_Response) Reset() {
	*x = CPlaytest_UpdateInvites_Response{}
	mi := &file_service_playtest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytest_UpdateInvites_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytest_UpdateInvites_Response) ProtoMessage() {}

func (x *CPlaytest_UpdateInvites_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_playtest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytest_UpdateInvites_Response.ProtoReflect.Descriptor instead.
func (*CPlaytest_UpdateInvites_Response) Descriptor() ([]byte, []int) {
	return file_service_playtest_proto_rawDescGZIP(), []int{14}
}

func (x *CPlaytest_UpdateInvites_Response) GetInvitesUpdated() uint32 {
	if x != nil && x.InvitesUpdated != nil {
		return *x.InvitesUpdated
	}
	return 0
}

var File_service_playtest_proto protoreflect.FileDescriptor

const file_service_playtest_proto_rawDesc = "" +
	"\n" +
	"\x16service_playtest.proto\x1a\x11common_base.proto\"[\n" +
	"\"CPlaytest_GetInviteHistory_Request\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\rR\x05limit\x12\x1f\n" +
	"\vtime_before\x18\x02 \x01(\rR\n" +
	"timeBefore\"l\n" +
	"#CPlaytest_GetInviteHistory_Response\x12E\n" +
	"\ainvites\x18\x01 \x03(\v2+.CPlaytest_GetInviteHistory_Response_InviteR\ainvites\"\xa9\x01\n" +
	"*CPlaytest_GetInviteHistory_Response_Invite\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12'\n" +
	"\x0fsteamid_invited\x18\x02 \x01(\x06R\x0esteamidInvited\x12!\n" +
	"\ftime_created\x18\x03 \x01(\rR\vtimeCreated\x12\x19\n" +
	"\bapp_name\x18\x04 \x01(\tR\aappName\":\n" +
	"\"CPlaytest_GetInviteOptions_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"T\n" +
	"#CPlaytest_GetInviteOptions_Response\x12-\n" +
	"\x12ineligible_friends\x18\x01 \x03(\rR\x11ineligibleFriends\";\n" +
	"\x1cCPlaytest_GetInvites_Request\x12\x1b\n" +
	"\tinvite_id\x18\x01 \x01(\x04R\binviteId\"`\n" +
	"\x1dCPlaytest_GetInvites_Response\x12?\n" +
	"\ainvites\x18\x01 \x03(\v2%.CPlaytest_GetInvites_Response_InviteR\ainvites\"\xe2\x01\n" +
	"$CPlaytest_GetInvites_Response_Invite\x12\x1b\n" +
	"\tinvite_id\x18\x01 \x01(\x04R\binviteId\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x12'\n" +
	"\x0fsteamid_inviter\x18\x03 \x01(\x06R\x0esteamidInviter\x12 \n" +
	"\x06status\x18\x04 \x01(\x05B\b\x82\xb5\x18\x04enumR\x06status\x12!\n" +
	"\ftime_created\x18\x05 \x01(\rR\vtimeCreated\x12\x19\n" +
	"\bapp_name\x18\x06 \x01(\tR\aappName\"7\n" +
	"\x1fCPlaytest_GetUserStatus_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"i\n" +
	" CPlaytest_GetUserStatus_Response\x12E\n" +
	"\aresults\x18\x01 \x03(\v2+.CPlaytest_GetUserStatus_Response_AppStatusR\aresults\"\xf3\x01\n" +
	"*CPlaytest_GetUserStatus_Response_AppStatus\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12 \n" +
	"\x06status\x18\x02 \x01(\x05B\b\x82\xb5\x18\x04enumR\x06status\x12+\n" +
	"\x11invites_remaining\x18\x03 \x01(\x05R\x10invitesRemaining\x12\x1f\n" +
	"\vtime_joined\x18\x04 \x01(\rR\n" +
	"timeJoined\x12\x1c\n" +
	"\tpackageid\x18\x05 \x01(\rR\tpackageid\x12!\n" +
	"\finvites_sent\x18\x06 \x01(\x05R\vinvitesSent\"Q\n" +
	"\x1fCPlaytest_RequestInvite_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\"q\n" +
	" CPlaytest_RequestInvite_Response\x12+\n" +
	"\x11invites_remaining\x18\x01 \x01(\x05R\x10invitesRemaining\x12 \n" +
	"\x06status\x18\x02 \x01(\x05B\b\x82\xb5\x18\x04enumR\x06status\"b\n" +
	"\x1fCPlaytest_UpdateInvites_Request\x12\x1d\n" +
	"\n" +
	"invite_ids\x18\x01 \x03(\x04R\tinviteIds\x12 \n" +
	"\x06status\x18\x02 \x01(\x05B\b\x82\xb5\x18\x04enumR\x06status\"K\n" +
	" CPlaytest_UpdateInvites_Response\x12'\n" +
	"\x0finvites_updated\x18\x01 \x01(\rR\x0einvitesUpdated2\x97\x04\n" +
	"\bPlaytest\x12]\n" +
	"\x10GetInviteHistory\x12#.CPlaytest_GetInviteHistory_Request\x1a$.CPlaytest_GetInviteHistory_Response\x12]\n" +
	"\x10GetInviteOptions\x12#.CPlaytest_GetInviteOptions_Request\x1a$.CPlaytest_GetInviteOptions_Response\x12K\n" +
	"\n" +
	"GetInvites\x12\x1d.CPlaytest_GetInvites_Request\x1a\x1e.CPlaytest_GetInvites_Response\x12T\n" +
	"\rGetUserStatus\x12 .CPlaytest_GetUserStatus_Request\x1a!.CPlaytest_GetUserStatus_Response\x12T\n" +
	"\rRequestInvite\x12 .CPlaytest_RequestInvite_Request\x1a!.CPlaytest_RequestInvite_Response\x12T\n" +
	"\rUpdateInvites\x12 .CPlaytest_UpdateInvites_Request\x1a!.CPlaytest_UpdateInvites_Response"

var (
	file_service_playtest_proto_rawDescOnce sync.Once
	file_service_playtest_proto_rawDescData []byte
)

func file_service_playtest_proto_rawDescGZIP() []byte {
	file_service_playtest_proto_rawDescOnce.Do(func() {
		file_service_playtest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_playtest_proto_rawDesc), len(file_service_playtest_proto_rawDesc)))
	})
	return file_service_playtest_proto_rawDescData
}

var file_service_playtest_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_service_playtest_proto_goTypes = []any{
	(*CPlaytest_GetInviteHistory_Request)(nil),         // 0: CPlaytest_GetInviteHistory_Request
	(*CPlaytest_GetInviteHistory_Response)(nil),        // 1: CPlaytest_GetInviteHistory_Response
	(*CPlaytest_GetInviteHistory_Response_Invite)(nil), // 2: CPlaytest_GetInviteHistory_Response_Invite
	(*CPlaytest_GetInviteOptions_Request)(nil),         // 3: CPlaytest_GetInviteOptions_Request
	(*CPlaytest_GetInviteOptions_Response)(nil),        // 4: CPlaytest_GetInviteOptions_Response
	(*CPlaytest_GetInvites_Request)(nil),               // 5: CPlaytest_GetInvites_Request
	(*CPlaytest_GetInvites_Response)(nil),              // 6: CPlaytest_GetInvites_Response
	(*CPlaytest_GetInvites_Response_Invite)(nil),       // 7: CPlaytest_GetInvites_Response_Invite
	(*CPlaytest_GetUserStatus_Request)(nil),            // 8: CPlaytest_GetUserStatus_Request
	(*CPlaytest_GetUserStatus_Response)(nil),           // 9: CPlaytest_GetUserStatus_Response
	(*CPlaytest_GetUserStatus_Response_AppStatus)(nil), // 10: CPlaytest_GetUserStatus_Response_AppStatus
	(*CPlaytest_RequestInvite_Request)(nil),            // 11: CPlaytest_RequestInvite_Request
	(*CPlaytest_RequestInvite_Response)(nil),           // 12: CPlaytest_RequestInvite_Response
	(*CPlaytest_UpdateInvites_Request)(nil),            // 13: CPlaytest_UpdateInvites_Request
	(*CPlaytest_UpdateInvites_Response)(nil),           // 14: CPlaytest_UpdateInvites_Response
}
var file_service_playtest_proto_depIdxs = []int32{
	2,  // 0: CPlaytest_GetInviteHistory_Response.invites:type_name -> CPlaytest_GetInviteHistory_Response_Invite
	7,  // 1: CPlaytest_GetInvites_Response.invites:type_name -> CPlaytest_GetInvites_Response_Invite
	10, // 2: CPlaytest_GetUserStatus_Response.results:type_name -> CPlaytest_GetUserStatus_Response_AppStatus
	0,  // 3: Playtest.GetInviteHistory:input_type -> CPlaytest_GetInviteHistory_Request
	3,  // 4: Playtest.GetInviteOptions:input_type -> CPlaytest_GetInviteOptions_Request
	5,  // 5: Playtest.GetInvites:input_type -> CPlaytest_GetInvites_Request
	8,  // 6: Playtest.GetUserStatus:input_type -> CPlaytest_GetUserStatus_Request
	11, // 7: Playtest.RequestInvite:input_type -> CPlaytest_RequestInvite_Request
	13, // 8: Playtest.UpdateInvites:input_type -> CPlaytest_UpdateInvites_Request
	1,  // 9: Playtest.GetInviteHistory:output_type -> CPlaytest_GetInviteHistory_Response
	4,  // 10: Playtest.GetInviteOptions:output_type -> CPlaytest_GetInviteOptions_Response
	6,  // 11: Playtest.GetInvites:output_type -> CPlaytest_GetInvites_Response
	9,  // 12: Playtest.GetUserStatus:output_type -> CPlaytest_GetUserStatus_Response
	12, // 13: Playtest.RequestInvite:output_type -> CPlaytest_RequestInvite_Response
	14, // 14: Playtest.UpdateInvites:output_type -> CPlaytest_UpdateInvites_Response
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_playtest_proto_init() }
func file_service_playtest_proto_init() {
	if File_service_playtest_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_playtest_proto_rawDesc), len(file_service_playtest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_playtest_proto_goTypes,
		DependencyIndexes: file_service_playtest_proto_depIdxs,
		MessageInfos:      file_service_playtest_proto_msgTypes,
	}.Build()
	File_service_playtest_proto = out.File
	file_service_playtest_proto_goTypes = nil
	file_service_playtest_proto_depIdxs = nil
}
