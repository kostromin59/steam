// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: service_remoteclientsteam.proto

package webuipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CRemoteClient_RegisterStatusUpdate_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *uint64                `protobuf:"fixed64,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	DeviceId      *uint64                `protobuf:"fixed64,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_RegisterStatusUpdate_Notification) Reset() {
	*x = CRemoteClient_RegisterStatusUpdate_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_RegisterStatusUpdate_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_RegisterStatusUpdate_Notification) ProtoMessage() {}

func (x *CRemoteClient_RegisterStatusUpdate_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_RegisterStatusUpdate_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_RegisterStatusUpdate_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{0}
}

func (x *CRemoteClient_RegisterStatusUpdate_Notification) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CRemoteClient_RegisterStatusUpdate_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemoteClient_RegisterStatusUpdate_Notification) GetDeviceId() uint64 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

type CRemoteClient_RemotePacket_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *uint64                `protobuf:"fixed64,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_RemotePacket_Notification) Reset() {
	*x = CRemoteClient_RemotePacket_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_RemotePacket_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_RemotePacket_Notification) ProtoMessage() {}

func (x *CRemoteClient_RemotePacket_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_RemotePacket_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_RemotePacket_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{1}
}

func (x *CRemoteClient_RemotePacket_Notification) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CRemoteClient_RemotePacket_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemoteClient_RemotePacket_Notification) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CRemoteClient_SteamBroadcast_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Clientid      *uint64                `protobuf:"fixed64,2,opt,name=clientid" json:"clientid,omitempty"`
	Payload       []byte                 `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_SteamBroadcast_Notification) Reset() {
	*x = CRemoteClient_SteamBroadcast_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_SteamBroadcast_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_SteamBroadcast_Notification) ProtoMessage() {}

func (x *CRemoteClient_SteamBroadcast_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_SteamBroadcast_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_SteamBroadcast_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{2}
}

func (x *CRemoteClient_SteamBroadcast_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemoteClient_SteamBroadcast_Notification) GetClientid() uint64 {
	if x != nil && x.Clientid != nil {
		return *x.Clientid
	}
	return 0
}

func (x *CRemoteClient_SteamBroadcast_Notification) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CRemoteClient_SteamToSteam_Notification struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Steamid          *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	SrcClientid      *uint64                `protobuf:"fixed64,2,opt,name=src_clientid,json=srcClientid" json:"src_clientid,omitempty"`
	DstClientid      *uint64                `protobuf:"fixed64,3,opt,name=dst_clientid,json=dstClientid" json:"dst_clientid,omitempty"`
	Secretid         *uint32                `protobuf:"varint,4,opt,name=secretid" json:"secretid,omitempty"`
	EncryptedPayload []byte                 `protobuf:"bytes,5,opt,name=encrypted_payload,json=encryptedPayload" json:"encrypted_payload,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CRemoteClient_SteamToSteam_Notification) Reset() {
	*x = CRemoteClient_SteamToSteam_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_SteamToSteam_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_SteamToSteam_Notification) ProtoMessage() {}

func (x *CRemoteClient_SteamToSteam_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_SteamToSteam_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_SteamToSteam_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{3}
}

func (x *CRemoteClient_SteamToSteam_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemoteClient_SteamToSteam_Notification) GetSrcClientid() uint64 {
	if x != nil && x.SrcClientid != nil {
		return *x.SrcClientid
	}
	return 0
}

func (x *CRemoteClient_SteamToSteam_Notification) GetDstClientid() uint64 {
	if x != nil && x.DstClientid != nil {
		return *x.DstClientid
	}
	return 0
}

func (x *CRemoteClient_SteamToSteam_Notification) GetSecretid() uint32 {
	if x != nil && x.Secretid != nil {
		return *x.Secretid
	}
	return 0
}

func (x *CRemoteClient_SteamToSteam_Notification) GetEncryptedPayload() []byte {
	if x != nil {
		return x.EncryptedPayload
	}
	return nil
}

type CRemoteClient_Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	TaskId        *uint64                `protobuf:"fixed64,2,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	Url           *string                `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	FileId        *int64                 `protobuf:"varint,4,opt,name=file_id,json=fileId" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_Task) Reset() {
	*x = CRemoteClient_Task{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_Task) ProtoMessage() {}

func (x *CRemoteClient_Task) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_Task.ProtoReflect.Descriptor instead.
func (*CRemoteClient_Task) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{4}
}

func (x *CRemoteClient_Task) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CRemoteClient_Task) GetTaskId() uint64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *CRemoteClient_Task) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CRemoteClient_Task) GetFileId() int64 {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return 0
}

type CRemoteClient_TaskList_Notification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RemoteClientId *uint64                `protobuf:"fixed64,1,opt,name=remote_client_id,json=remoteClientId" json:"remote_client_id,omitempty"`
	Tasklist       []*CRemoteClient_Task  `protobuf:"bytes,2,rep,name=tasklist" json:"tasklist,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemoteClient_TaskList_Notification) Reset() {
	*x = CRemoteClient_TaskList_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_TaskList_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_TaskList_Notification) ProtoMessage() {}

func (x *CRemoteClient_TaskList_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_TaskList_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_TaskList_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{5}
}

func (x *CRemoteClient_TaskList_Notification) GetRemoteClientId() uint64 {
	if x != nil && x.RemoteClientId != nil {
		return *x.RemoteClientId
	}
	return 0
}

func (x *CRemoteClient_TaskList_Notification) GetTasklist() []*CRemoteClient_Task {
	if x != nil {
		return x.Tasklist
	}
	return nil
}

type CRemoteClient_UnregisterStatusUpdate_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *uint64                `protobuf:"fixed64,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_UnregisterStatusUpdate_Notification) Reset() {
	*x = CRemoteClient_UnregisterStatusUpdate_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_UnregisterStatusUpdate_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_UnregisterStatusUpdate_Notification) ProtoMessage() {}

func (x *CRemoteClient_UnregisterStatusUpdate_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_UnregisterStatusUpdate_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_UnregisterStatusUpdate_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{6}
}

func (x *CRemoteClient_UnregisterStatusUpdate_Notification) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CRemoteClient_UnregisterStatusUpdate_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CRemotePlayTogether_Notification struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Steamid       *uint64                                        `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	GroupUpdated  *CRemotePlayTogether_Notification_GroupUpdated `protobuf:"bytes,2,opt,name=group_updated,json=groupUpdated" json:"group_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemotePlayTogether_Notification) Reset() {
	*x = CRemotePlayTogether_Notification{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlayTogether_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlayTogether_Notification) ProtoMessage() {}

func (x *CRemotePlayTogether_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlayTogether_Notification.ProtoReflect.Descriptor instead.
func (*CRemotePlayTogether_Notification) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{7}
}

func (x *CRemotePlayTogether_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification) GetGroupUpdated() *CRemotePlayTogether_Notification_GroupUpdated {
	if x != nil {
		return x.GroupUpdated
	}
	return nil
}

type CRemotePlayTogether_Notification_ControllerSlot struct {
	state          protoimpl.MessageState                   `protogen:"open.v1"`
	Slotid         *uint32                                  `protobuf:"varint,1,opt,name=slotid" json:"slotid,omitempty"`
	Player         *CRemotePlayTogether_Notification_Player `protobuf:"bytes,2,opt,name=player" json:"player,omitempty"`
	ControllerType *int32                                   `protobuf:"varint,3,opt,name=controller_type,json=controllerType" json:"controller_type,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemotePlayTogether_Notification_ControllerSlot) Reset() {
	*x = CRemotePlayTogether_Notification_ControllerSlot{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlayTogether_Notification_ControllerSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlayTogether_Notification_ControllerSlot) ProtoMessage() {}

func (x *CRemotePlayTogether_Notification_ControllerSlot) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlayTogether_Notification_ControllerSlot.ProtoReflect.Descriptor instead.
func (*CRemotePlayTogether_Notification_ControllerSlot) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{8}
}

func (x *CRemotePlayTogether_Notification_ControllerSlot) GetSlotid() uint32 {
	if x != nil && x.Slotid != nil {
		return *x.Slotid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_ControllerSlot) GetPlayer() *CRemotePlayTogether_Notification_Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *CRemotePlayTogether_Notification_ControllerSlot) GetControllerType() int32 {
	if x != nil && x.ControllerType != nil {
		return *x.ControllerType
	}
	return 0
}

type CRemotePlayTogether_Notification_ControllerSlotObsolete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slotid        *uint32                `protobuf:"varint,1,opt,name=slotid" json:"slotid,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemotePlayTogether_Notification_ControllerSlotObsolete) Reset() {
	*x = CRemotePlayTogether_Notification_ControllerSlotObsolete{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlayTogether_Notification_ControllerSlotObsolete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlayTogether_Notification_ControllerSlotObsolete) ProtoMessage() {}

func (x *CRemotePlayTogether_Notification_ControllerSlotObsolete) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlayTogether_Notification_ControllerSlotObsolete.ProtoReflect.Descriptor instead.
func (*CRemotePlayTogether_Notification_ControllerSlotObsolete) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{9}
}

func (x *CRemotePlayTogether_Notification_ControllerSlotObsolete) GetSlotid() uint32 {
	if x != nil && x.Slotid != nil {
		return *x.Slotid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_ControllerSlotObsolete) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CRemotePlayTogether_Notification_GroupUpdated struct {
	state                   protoimpl.MessageState                                     `protogen:"open.v1"`
	HostSteamid             *uint64                                                    `protobuf:"fixed64,1,opt,name=host_steamid,json=hostSteamid" json:"host_steamid,omitempty"`
	HostClientid            *uint64                                                    `protobuf:"fixed64,2,opt,name=host_clientid,json=hostClientid" json:"host_clientid,omitempty"`
	PlayersObsolete         []uint64                                                   `protobuf:"fixed64,3,rep,name=players_obsolete,json=playersObsolete" json:"players_obsolete,omitempty"`
	HostGameid              *uint64                                                    `protobuf:"fixed64,4,opt,name=host_gameid,json=hostGameid" json:"host_gameid,omitempty"`
	ControllerSlotsObsolete []*CRemotePlayTogether_Notification_ControllerSlotObsolete `protobuf:"bytes,5,rep,name=controller_slots_obsolete,json=controllerSlotsObsolete" json:"controller_slots_obsolete,omitempty"`
	HasNewPlayers           *bool                                                      `protobuf:"varint,6,opt,name=has_new_players,json=hasNewPlayers" json:"has_new_players,omitempty"`
	PlayerSlots             []*CRemotePlayTogether_Notification_Player                 `protobuf:"bytes,7,rep,name=player_slots,json=playerSlots" json:"player_slots,omitempty"`
	ControllerSlots         []*CRemotePlayTogether_Notification_ControllerSlot         `protobuf:"bytes,8,rep,name=controller_slots,json=controllerSlots" json:"controller_slots,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) Reset() {
	*x = CRemotePlayTogether_Notification_GroupUpdated{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlayTogether_Notification_GroupUpdated) ProtoMessage() {}

func (x *CRemotePlayTogether_Notification_GroupUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlayTogether_Notification_GroupUpdated.ProtoReflect.Descriptor instead.
func (*CRemotePlayTogether_Notification_GroupUpdated) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{10}
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetHostSteamid() uint64 {
	if x != nil && x.HostSteamid != nil {
		return *x.HostSteamid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetHostClientid() uint64 {
	if x != nil && x.HostClientid != nil {
		return *x.HostClientid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetPlayersObsolete() []uint64 {
	if x != nil {
		return x.PlayersObsolete
	}
	return nil
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetHostGameid() uint64 {
	if x != nil && x.HostGameid != nil {
		return *x.HostGameid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetControllerSlotsObsolete() []*CRemotePlayTogether_Notification_ControllerSlotObsolete {
	if x != nil {
		return x.ControllerSlotsObsolete
	}
	return nil
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetHasNewPlayers() bool {
	if x != nil && x.HasNewPlayers != nil {
		return *x.HasNewPlayers
	}
	return false
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetPlayerSlots() []*CRemotePlayTogether_Notification_Player {
	if x != nil {
		return x.PlayerSlots
	}
	return nil
}

func (x *CRemotePlayTogether_Notification_GroupUpdated) GetControllerSlots() []*CRemotePlayTogether_Notification_ControllerSlot {
	if x != nil {
		return x.ControllerSlots
	}
	return nil
}

type CRemotePlayTogether_Notification_Player struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Steamid           *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Guestid           *uint32                `protobuf:"varint,2,opt,name=guestid" json:"guestid,omitempty"`
	AvatarHash        []byte                 `protobuf:"bytes,3,opt,name=avatar_hash,json=avatarHash" json:"avatar_hash,omitempty"`
	KeyboardEnabled   *bool                  `protobuf:"varint,4,opt,name=keyboard_enabled,json=keyboardEnabled" json:"keyboard_enabled,omitempty"`
	MouseEnabled      *bool                  `protobuf:"varint,5,opt,name=mouse_enabled,json=mouseEnabled" json:"mouse_enabled,omitempty"`
	ControllerEnabled *bool                  `protobuf:"varint,6,opt,name=controller_enabled,json=controllerEnabled" json:"controller_enabled,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CRemotePlayTogether_Notification_Player) Reset() {
	*x = CRemotePlayTogether_Notification_Player{}
	mi := &file_service_remoteclientsteam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlayTogether_Notification_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlayTogether_Notification_Player) ProtoMessage() {}

func (x *CRemotePlayTogether_Notification_Player) ProtoReflect() protoreflect.Message {
	mi := &file_service_remoteclientsteam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlayTogether_Notification_Player.ProtoReflect.Descriptor instead.
func (*CRemotePlayTogether_Notification_Player) Descriptor() ([]byte, []int) {
	return file_service_remoteclientsteam_proto_rawDescGZIP(), []int{11}
}

func (x *CRemotePlayTogether_Notification_Player) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_Player) GetGuestid() uint32 {
	if x != nil && x.Guestid != nil {
		return *x.Guestid
	}
	return 0
}

func (x *CRemotePlayTogether_Notification_Player) GetAvatarHash() []byte {
	if x != nil {
		return x.AvatarHash
	}
	return nil
}

func (x *CRemotePlayTogether_Notification_Player) GetKeyboardEnabled() bool {
	if x != nil && x.KeyboardEnabled != nil {
		return *x.KeyboardEnabled
	}
	return false
}

func (x *CRemotePlayTogether_Notification_Player) GetMouseEnabled() bool {
	if x != nil && x.MouseEnabled != nil {
		return *x.MouseEnabled
	}
	return false
}

func (x *CRemotePlayTogether_Notification_Player) GetControllerEnabled() bool {
	if x != nil && x.ControllerEnabled != nil {
		return *x.ControllerEnabled
	}
	return false
}

var File_service_remoteclientsteam_proto protoreflect.FileDescriptor

const file_service_remoteclientsteam_proto_rawDesc = "" +
	"\n" +
	"\x1fservice_remoteclientsteam.proto\x1a\x11common_base.proto\"\x87\x01\n" +
	"/CRemoteClient_RegisterStatusUpdate_Notification\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x06R\tsessionId\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\x06R\bdeviceId\"|\n" +
	"'CRemoteClient_RemotePacket_Notification\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x06R\tsessionId\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\"{\n" +
	")CRemoteClient_SteamBroadcast_Notification\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x1a\n" +
	"\bclientid\x18\x02 \x01(\x06R\bclientid\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\"\xd2\x01\n" +
	"'CRemoteClient_SteamToSteam_Notification\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12!\n" +
	"\fsrc_clientid\x18\x02 \x01(\x06R\vsrcClientid\x12!\n" +
	"\fdst_clientid\x18\x03 \x01(\x06R\vdstClientid\x12\x1a\n" +
	"\bsecretid\x18\x04 \x01(\rR\bsecretid\x12+\n" +
	"\x11encrypted_payload\x18\x05 \x01(\fR\x10encryptedPayload\"v\n" +
	"\x12CRemoteClient_Task\x12\x1c\n" +
	"\x04type\x18\x01 \x01(\x05B\b\x82\xb5\x18\x04enumR\x04type\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\x06R\x06taskId\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12\x17\n" +
	"\afile_id\x18\x04 \x01(\x03R\x06fileId\"\x80\x01\n" +
	"#CRemoteClient_TaskList_Notification\x12(\n" +
	"\x10remote_client_id\x18\x01 \x01(\x06R\x0eremoteClientId\x12/\n" +
	"\btasklist\x18\x02 \x03(\v2\x13.CRemoteClient_TaskR\btasklist\"l\n" +
	"1CRemoteClient_UnregisterStatusUpdate_Notification\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x06R\tsessionId\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\"\x91\x01\n" +
	" CRemotePlayTogether_Notification\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12S\n" +
	"\rgroup_updated\x18\x02 \x01(\v2..CRemotePlayTogether_Notification_GroupUpdatedR\fgroupUpdated\"\xb4\x01\n" +
	"/CRemotePlayTogether_Notification_ControllerSlot\x12\x16\n" +
	"\x06slotid\x18\x01 \x01(\rR\x06slotid\x12@\n" +
	"\x06player\x18\x02 \x01(\v2(.CRemotePlayTogether_Notification_PlayerR\x06player\x12'\n" +
	"\x0fcontroller_type\x18\x03 \x01(\x05R\x0econtrollerType\"l\n" +
	"8CRemotePlayTogether_Notification_ControllerSlot_obsolete\x12\x16\n" +
	"\x06slotid\x18\x01 \x01(\rR\x06slotid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\"\x8c\x04\n" +
	"-CRemotePlayTogether_Notification_GroupUpdated\x12!\n" +
	"\fhost_steamid\x18\x01 \x01(\x06R\vhostSteamid\x12#\n" +
	"\rhost_clientid\x18\x02 \x01(\x06R\fhostClientid\x12)\n" +
	"\x10players_obsolete\x18\x03 \x03(\x06R\x0fplayersObsolete\x12\x1f\n" +
	"\vhost_gameid\x18\x04 \x01(\x06R\n" +
	"hostGameid\x12u\n" +
	"\x19controller_slots_obsolete\x18\x05 \x03(\v29.CRemotePlayTogether_Notification_ControllerSlot_obsoleteR\x17controllerSlotsObsolete\x12&\n" +
	"\x0fhas_new_players\x18\x06 \x01(\bR\rhasNewPlayers\x12K\n" +
	"\fplayer_slots\x18\a \x03(\v2(.CRemotePlayTogether_Notification_PlayerR\vplayerSlots\x12[\n" +
	"\x10controller_slots\x18\b \x03(\v20.CRemotePlayTogether_Notification_ControllerSlotR\x0fcontrollerSlots\"\xfd\x01\n" +
	"'CRemotePlayTogether_Notification_Player\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x18\n" +
	"\aguestid\x18\x02 \x01(\rR\aguestid\x12\x1f\n" +
	"\vavatar_hash\x18\x03 \x01(\fR\n" +
	"avatarHash\x12)\n" +
	"\x10keyboard_enabled\x18\x04 \x01(\bR\x0fkeyboardEnabled\x12#\n" +
	"\rmouse_enabled\x18\x05 \x01(\bR\fmouseEnabled\x12-\n" +
	"\x12controller_enabled\x18\x06 \x01(\bR\x11controllerEnabled2\xe5\x04\n" +
	"\x17RemoteClientSteamClient\x12[\n" +
	"\x1aNotifyRegisterStatusUpdate\x120.CRemoteClient_RegisterStatusUpdate_Notification\x1a\v.NoResponse\x12K\n" +
	"\x12NotifyRemotePacket\x12(.CRemoteClient_RemotePacket_Notification\x1a\v.NoResponse\x12P\n" +
	"\x1eNotifyRemotePlayTogetherPacket\x12!.CRemotePlayTogether_Notification\x1a\v.NoResponse\x12U\n" +
	"\x1aNotifySteamBroadcastPacket\x12*.CRemoteClient_SteamBroadcast_Notification\x1a\v.NoResponse\x12Q\n" +
	"\x18NotifySteamToSteamPacket\x12(.CRemoteClient_SteamToSteam_Notification\x1a\v.NoResponse\x12C\n" +
	"\x0eNotifyTaskList\x12$.CRemoteClient_TaskList_Notification\x1a\v.NoResponse\x12_\n" +
	"\x1cNotifyUnregisterStatusUpdate\x122.CRemoteClient_UnregisterStatusUpdate_Notification\x1a\v.NoResponse"

var (
	file_service_remoteclientsteam_proto_rawDescOnce sync.Once
	file_service_remoteclientsteam_proto_rawDescData []byte
)

func file_service_remoteclientsteam_proto_rawDescGZIP() []byte {
	file_service_remoteclientsteam_proto_rawDescOnce.Do(func() {
		file_service_remoteclientsteam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_remoteclientsteam_proto_rawDesc), len(file_service_remoteclientsteam_proto_rawDesc)))
	})
	return file_service_remoteclientsteam_proto_rawDescData
}

var file_service_remoteclientsteam_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_service_remoteclientsteam_proto_goTypes = []any{
	(*CRemoteClient_RegisterStatusUpdate_Notification)(nil),         // 0: CRemoteClient_RegisterStatusUpdate_Notification
	(*CRemoteClient_RemotePacket_Notification)(nil),                 // 1: CRemoteClient_RemotePacket_Notification
	(*CRemoteClient_SteamBroadcast_Notification)(nil),               // 2: CRemoteClient_SteamBroadcast_Notification
	(*CRemoteClient_SteamToSteam_Notification)(nil),                 // 3: CRemoteClient_SteamToSteam_Notification
	(*CRemoteClient_Task)(nil),                                      // 4: CRemoteClient_Task
	(*CRemoteClient_TaskList_Notification)(nil),                     // 5: CRemoteClient_TaskList_Notification
	(*CRemoteClient_UnregisterStatusUpdate_Notification)(nil),       // 6: CRemoteClient_UnregisterStatusUpdate_Notification
	(*CRemotePlayTogether_Notification)(nil),                        // 7: CRemotePlayTogether_Notification
	(*CRemotePlayTogether_Notification_ControllerSlot)(nil),         // 8: CRemotePlayTogether_Notification_ControllerSlot
	(*CRemotePlayTogether_Notification_ControllerSlotObsolete)(nil), // 9: CRemotePlayTogether_Notification_ControllerSlot_obsolete
	(*CRemotePlayTogether_Notification_GroupUpdated)(nil),           // 10: CRemotePlayTogether_Notification_GroupUpdated
	(*CRemotePlayTogether_Notification_Player)(nil),                 // 11: CRemotePlayTogether_Notification_Player
	(*NoResponse)(nil), // 12: NoResponse
}
var file_service_remoteclientsteam_proto_depIdxs = []int32{
	4,  // 0: CRemoteClient_TaskList_Notification.tasklist:type_name -> CRemoteClient_Task
	10, // 1: CRemotePlayTogether_Notification.group_updated:type_name -> CRemotePlayTogether_Notification_GroupUpdated
	11, // 2: CRemotePlayTogether_Notification_ControllerSlot.player:type_name -> CRemotePlayTogether_Notification_Player
	9,  // 3: CRemotePlayTogether_Notification_GroupUpdated.controller_slots_obsolete:type_name -> CRemotePlayTogether_Notification_ControllerSlot_obsolete
	11, // 4: CRemotePlayTogether_Notification_GroupUpdated.player_slots:type_name -> CRemotePlayTogether_Notification_Player
	8,  // 5: CRemotePlayTogether_Notification_GroupUpdated.controller_slots:type_name -> CRemotePlayTogether_Notification_ControllerSlot
	0,  // 6: RemoteClientSteamClient.NotifyRegisterStatusUpdate:input_type -> CRemoteClient_RegisterStatusUpdate_Notification
	1,  // 7: RemoteClientSteamClient.NotifyRemotePacket:input_type -> CRemoteClient_RemotePacket_Notification
	7,  // 8: RemoteClientSteamClient.NotifyRemotePlayTogetherPacket:input_type -> CRemotePlayTogether_Notification
	2,  // 9: RemoteClientSteamClient.NotifySteamBroadcastPacket:input_type -> CRemoteClient_SteamBroadcast_Notification
	3,  // 10: RemoteClientSteamClient.NotifySteamToSteamPacket:input_type -> CRemoteClient_SteamToSteam_Notification
	5,  // 11: RemoteClientSteamClient.NotifyTaskList:input_type -> CRemoteClient_TaskList_Notification
	6,  // 12: RemoteClientSteamClient.NotifyUnregisterStatusUpdate:input_type -> CRemoteClient_UnregisterStatusUpdate_Notification
	12, // 13: RemoteClientSteamClient.NotifyRegisterStatusUpdate:output_type -> NoResponse
	12, // 14: RemoteClientSteamClient.NotifyRemotePacket:output_type -> NoResponse
	12, // 15: RemoteClientSteamClient.NotifyRemotePlayTogetherPacket:output_type -> NoResponse
	12, // 16: RemoteClientSteamClient.NotifySteamBroadcastPacket:output_type -> NoResponse
	12, // 17: RemoteClientSteamClient.NotifySteamToSteamPacket:output_type -> NoResponse
	12, // 18: RemoteClientSteamClient.NotifyTaskList:output_type -> NoResponse
	12, // 19: RemoteClientSteamClient.NotifyUnregisterStatusUpdate:output_type -> NoResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_service_remoteclientsteam_proto_init() }
func file_service_remoteclientsteam_proto_init() {
	if File_service_remoteclientsteam_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_remoteclientsteam_proto_rawDesc), len(file_service_remoteclientsteam_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_remoteclientsteam_proto_goTypes,
		DependencyIndexes: file_service_remoteclientsteam_proto_depIdxs,
		MessageInfos:      file_service_remoteclientsteam_proto_msgTypes,
	}.Build()
	File_service_remoteclientsteam_proto = out.File
	file_service_remoteclientsteam_proto_goTypes = nil
	file_service_remoteclientsteam_proto_depIdxs = nil
}
