// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: service_storesales.proto

package webuipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CStore_GetUserVotes_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SaleAppid     *uint32                `protobuf:"varint,1,opt,name=sale_appid,json=saleAppid" json:"sale_appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetUserVotes_Request) Reset() {
	*x = CStore_GetUserVotes_Request{}
	mi := &file_service_storesales_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetUserVotes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserVotes_Request) ProtoMessage() {}

func (x *CStore_GetUserVotes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserVotes_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetUserVotes_Request) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{0}
}

func (x *CStore_GetUserVotes_Request) GetSaleAppid() uint32 {
	if x != nil && x.SaleAppid != nil {
		return *x.SaleAppid
	}
	return 0
}

type CStore_GetUserVotes_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserVotes     []*SteamAwardsUserVote `protobuf:"bytes,1,rep,name=user_votes,json=userVotes" json:"user_votes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetUserVotes_Response) Reset() {
	*x = CStore_GetUserVotes_Response{}
	mi := &file_service_storesales_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetUserVotes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserVotes_Response) ProtoMessage() {}

func (x *CStore_GetUserVotes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserVotes_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetUserVotes_Response) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{1}
}

func (x *CStore_GetUserVotes_Response) GetUserVotes() []*SteamAwardsUserVote {
	if x != nil {
		return x.UserVotes
	}
	return nil
}

type CStore_GetVoteDefinitions_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	SaleAppid     *uint32                `protobuf:"varint,2,opt,name=sale_appid,json=saleAppid" json:"sale_appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetVoteDefinitions_Request) Reset() {
	*x = CStore_GetVoteDefinitions_Request{}
	mi := &file_service_storesales_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetVoteDefinitions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetVoteDefinitions_Request) ProtoMessage() {}

func (x *CStore_GetVoteDefinitions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetVoteDefinitions_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetVoteDefinitions_Request) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{2}
}

func (x *CStore_GetVoteDefinitions_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStore_GetVoteDefinitions_Request) GetSaleAppid() uint32 {
	if x != nil && x.SaleAppid != nil {
		return *x.SaleAppid
	}
	return 0
}

type CStore_GetVoteDefinitions_Response struct {
	state              protoimpl.MessageState   `protogen:"open.v1"`
	Votes              []*CStore_VoteDefinition `protobuf:"bytes,1,rep,name=votes" json:"votes,omitempty"`
	LaborOfLoveWinners []uint32                 `protobuf:"varint,2,rep,name=labor_of_love_winners,json=laborOfLoveWinners" json:"labor_of_love_winners,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CStore_GetVoteDefinitions_Response) Reset() {
	*x = CStore_GetVoteDefinitions_Response{}
	mi := &file_service_storesales_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetVoteDefinitions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetVoteDefinitions_Response) ProtoMessage() {}

func (x *CStore_GetVoteDefinitions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetVoteDefinitions_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetVoteDefinitions_Response) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{3}
}

func (x *CStore_GetVoteDefinitions_Response) GetVotes() []*CStore_VoteDefinition {
	if x != nil {
		return x.Votes
	}
	return nil
}

func (x *CStore_GetVoteDefinitions_Response) GetLaborOfLoveWinners() []uint32 {
	if x != nil {
		return x.LaborOfLoveWinners
	}
	return nil
}

type CStore_SetVote_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Voteid        *int32                 `protobuf:"varint,1,opt,name=voteid" json:"voteid,omitempty"`
	Appid         *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	SaleAppid     *uint32                `protobuf:"varint,3,opt,name=sale_appid,json=saleAppid" json:"sale_appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_SetVote_Request) Reset() {
	*x = CStore_SetVote_Request{}
	mi := &file_service_storesales_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_SetVote_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SetVote_Request) ProtoMessage() {}

func (x *CStore_SetVote_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SetVote_Request.ProtoReflect.Descriptor instead.
func (*CStore_SetVote_Request) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{4}
}

func (x *CStore_SetVote_Request) GetVoteid() int32 {
	if x != nil && x.Voteid != nil {
		return *x.Voteid
	}
	return 0
}

func (x *CStore_SetVote_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_SetVote_Request) GetSaleAppid() uint32 {
	if x != nil && x.SaleAppid != nil {
		return *x.SaleAppid
	}
	return 0
}

type CStore_SetVote_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserVotes     []*SteamAwardsUserVote `protobuf:"bytes,1,rep,name=user_votes,json=userVotes" json:"user_votes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_SetVote_Response) Reset() {
	*x = CStore_SetVote_Response{}
	mi := &file_service_storesales_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_SetVote_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SetVote_Response) ProtoMessage() {}

func (x *CStore_SetVote_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SetVote_Response.ProtoReflect.Descriptor instead.
func (*CStore_SetVote_Response) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{5}
}

func (x *CStore_SetVote_Response) GetUserVotes() []*SteamAwardsUserVote {
	if x != nil {
		return x.UserVotes
	}
	return nil
}

type CStore_VoteDefinition struct {
	state              protoimpl.MessageState                   `protogen:"open.v1"`
	Voteid             *int32                                   `protobuf:"varint,1,opt,name=voteid" json:"voteid,omitempty"`
	Active             *bool                                    `protobuf:"varint,2,opt,name=active" json:"active,omitempty"`
	StartTime          *uint32                                  `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime            *uint32                                  `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	AppDiscounts       []*CStore_VoteDefinition_AppDefinition   `protobuf:"bytes,5,rep,name=app_discounts,json=appDiscounts" json:"app_discounts,omitempty"`
	GroupedVoteOptions *uint32                                  `protobuf:"varint,6,opt,name=grouped_vote_options,json=groupedVoteOptions" json:"grouped_vote_options,omitempty"`
	Groups             []*CStore_VoteDefinition_GroupDefinition `protobuf:"bytes,7,rep,name=groups" json:"groups,omitempty"`
	InternalName       *string                                  `protobuf:"bytes,8,opt,name=internal_name,json=internalName" json:"internal_name,omitempty"`
	Localization       *CStore_VoteDefinition_Localization      `protobuf:"bytes,9,opt,name=localization" json:"localization,omitempty"`
	RevealTime         *uint32                                  `protobuf:"varint,10,opt,name=reveal_time,json=revealTime" json:"reveal_time,omitempty"`
	ReleaseDateMin     *uint32                                  `protobuf:"varint,11,opt,name=release_date_min,json=releaseDateMin" json:"release_date_min,omitempty"`
	WinnerAppid        *uint32                                  `protobuf:"varint,12,opt,name=winner_appid,json=winnerAppid" json:"winner_appid,omitempty"`
	Flag               *int32                                   `protobuf:"varint,13,opt,name=flag" json:"flag,omitempty"`
	ReleaseDateMax     *uint32                                  `protobuf:"varint,14,opt,name=release_date_max,json=releaseDateMax" json:"release_date_max,omitempty"`
	ItemType           *uint32                                  `protobuf:"varint,15,opt,name=item_type,json=itemType" json:"item_type,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CStore_VoteDefinition) Reset() {
	*x = CStore_VoteDefinition{}
	mi := &file_service_storesales_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_VoteDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_VoteDefinition) ProtoMessage() {}

func (x *CStore_VoteDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_VoteDefinition.ProtoReflect.Descriptor instead.
func (*CStore_VoteDefinition) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{6}
}

func (x *CStore_VoteDefinition) GetVoteid() int32 {
	if x != nil && x.Voteid != nil {
		return *x.Voteid
	}
	return 0
}

func (x *CStore_VoteDefinition) GetActive() bool {
	if x != nil && x.Active != nil {
		return *x.Active
	}
	return false
}

func (x *CStore_VoteDefinition) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *CStore_VoteDefinition) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *CStore_VoteDefinition) GetAppDiscounts() []*CStore_VoteDefinition_AppDefinition {
	if x != nil {
		return x.AppDiscounts
	}
	return nil
}

func (x *CStore_VoteDefinition) GetGroupedVoteOptions() uint32 {
	if x != nil && x.GroupedVoteOptions != nil {
		return *x.GroupedVoteOptions
	}
	return 0
}

func (x *CStore_VoteDefinition) GetGroups() []*CStore_VoteDefinition_GroupDefinition {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *CStore_VoteDefinition) GetInternalName() string {
	if x != nil && x.InternalName != nil {
		return *x.InternalName
	}
	return ""
}

func (x *CStore_VoteDefinition) GetLocalization() *CStore_VoteDefinition_Localization {
	if x != nil {
		return x.Localization
	}
	return nil
}

func (x *CStore_VoteDefinition) GetRevealTime() uint32 {
	if x != nil && x.RevealTime != nil {
		return *x.RevealTime
	}
	return 0
}

func (x *CStore_VoteDefinition) GetReleaseDateMin() uint32 {
	if x != nil && x.ReleaseDateMin != nil {
		return *x.ReleaseDateMin
	}
	return 0
}

func (x *CStore_VoteDefinition) GetWinnerAppid() uint32 {
	if x != nil && x.WinnerAppid != nil {
		return *x.WinnerAppid
	}
	return 0
}

func (x *CStore_VoteDefinition) GetFlag() int32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *CStore_VoteDefinition) GetReleaseDateMax() uint32 {
	if x != nil && x.ReleaseDateMax != nil {
		return *x.ReleaseDateMax
	}
	return 0
}

func (x *CStore_VoteDefinition) GetItemType() uint32 {
	if x != nil && x.ItemType != nil {
		return *x.ItemType
	}
	return 0
}

type CStore_VoteDefinition_AppDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Discount      *uint32                `protobuf:"varint,2,opt,name=discount" json:"discount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_VoteDefinition_AppDefinition) Reset() {
	*x = CStore_VoteDefinition_AppDefinition{}
	mi := &file_service_storesales_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_VoteDefinition_AppDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_VoteDefinition_AppDefinition) ProtoMessage() {}

func (x *CStore_VoteDefinition_AppDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_VoteDefinition_AppDefinition.ProtoReflect.Descriptor instead.
func (*CStore_VoteDefinition_AppDefinition) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{7}
}

func (x *CStore_VoteDefinition_AppDefinition) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_VoteDefinition_AppDefinition) GetDiscount() uint32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

type CStore_VoteDefinition_GroupDefinition struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Groupid       *uint32                                `protobuf:"varint,1,opt,name=groupid" json:"groupid,omitempty"`
	GroupName     *string                                `protobuf:"bytes,2,opt,name=group_name,json=groupName" json:"group_name,omitempty"`
	AppDiscounts  []*CStore_VoteDefinition_AppDefinition `protobuf:"bytes,3,rep,name=app_discounts,json=appDiscounts" json:"app_discounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_VoteDefinition_GroupDefinition) Reset() {
	*x = CStore_VoteDefinition_GroupDefinition{}
	mi := &file_service_storesales_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_VoteDefinition_GroupDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_VoteDefinition_GroupDefinition) ProtoMessage() {}

func (x *CStore_VoteDefinition_GroupDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_VoteDefinition_GroupDefinition.ProtoReflect.Descriptor instead.
func (*CStore_VoteDefinition_GroupDefinition) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{8}
}

func (x *CStore_VoteDefinition_GroupDefinition) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *CStore_VoteDefinition_GroupDefinition) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

func (x *CStore_VoteDefinition_GroupDefinition) GetAppDiscounts() []*CStore_VoteDefinition_AppDefinition {
	if x != nil {
		return x.AppDiscounts
	}
	return nil
}

type CStore_VoteDefinition_Localization struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Title            *string                `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	TitleLinebreak   *string                `protobuf:"bytes,2,opt,name=title_linebreak,json=titleLinebreak" json:"title_linebreak,omitempty"`
	TitleAward       *string                `protobuf:"bytes,3,opt,name=title_award,json=titleAward" json:"title_award,omitempty"`
	AwardDescription *string                `protobuf:"bytes,4,opt,name=award_description,json=awardDescription" json:"award_description,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CStore_VoteDefinition_Localization) Reset() {
	*x = CStore_VoteDefinition_Localization{}
	mi := &file_service_storesales_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_VoteDefinition_Localization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_VoteDefinition_Localization) ProtoMessage() {}

func (x *CStore_VoteDefinition_Localization) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_VoteDefinition_Localization.ProtoReflect.Descriptor instead.
func (*CStore_VoteDefinition_Localization) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{9}
}

func (x *CStore_VoteDefinition_Localization) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CStore_VoteDefinition_Localization) GetTitleLinebreak() string {
	if x != nil && x.TitleLinebreak != nil {
		return *x.TitleLinebreak
	}
	return ""
}

func (x *CStore_VoteDefinition_Localization) GetTitleAward() string {
	if x != nil && x.TitleAward != nil {
		return *x.TitleAward
	}
	return ""
}

func (x *CStore_VoteDefinition_Localization) GetAwardDescription() string {
	if x != nil && x.AwardDescription != nil {
		return *x.AwardDescription
	}
	return ""
}

type SteamAwardsUserVote struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Voteid          *uint32                `protobuf:"varint,1,opt,name=voteid" json:"voteid,omitempty"`
	Appid           *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Communityitemid *uint64                `protobuf:"varint,3,opt,name=communityitemid" json:"communityitemid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SteamAwardsUserVote) Reset() {
	*x = SteamAwardsUserVote{}
	mi := &file_service_storesales_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SteamAwardsUserVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteamAwardsUserVote) ProtoMessage() {}

func (x *SteamAwardsUserVote) ProtoReflect() protoreflect.Message {
	mi := &file_service_storesales_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteamAwardsUserVote.ProtoReflect.Descriptor instead.
func (*SteamAwardsUserVote) Descriptor() ([]byte, []int) {
	return file_service_storesales_proto_rawDescGZIP(), []int{10}
}

func (x *SteamAwardsUserVote) GetVoteid() uint32 {
	if x != nil && x.Voteid != nil {
		return *x.Voteid
	}
	return 0
}

func (x *SteamAwardsUserVote) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *SteamAwardsUserVote) GetCommunityitemid() uint64 {
	if x != nil && x.Communityitemid != nil {
		return *x.Communityitemid
	}
	return 0
}

var File_service_storesales_proto protoreflect.FileDescriptor

const file_service_storesales_proto_rawDesc = "" +
	"\n" +
	"\x18service_storesales.proto\x1a\x11common_base.proto\"<\n" +
	"\x1bCStore_GetUserVotes_Request\x12\x1d\n" +
	"\n" +
	"sale_appid\x18\x01 \x01(\rR\tsaleAppid\"S\n" +
	"\x1cCStore_GetUserVotes_Response\x123\n" +
	"\n" +
	"user_votes\x18\x01 \x03(\v2\x14.SteamAwardsUserVoteR\tuserVotes\"^\n" +
	"!CStore_GetVoteDefinitions_Request\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"sale_appid\x18\x02 \x01(\rR\tsaleAppid\"\x85\x01\n" +
	"\"CStore_GetVoteDefinitions_Response\x12,\n" +
	"\x05votes\x18\x01 \x03(\v2\x16.CStore_VoteDefinitionR\x05votes\x121\n" +
	"\x15labor_of_love_winners\x18\x02 \x03(\rR\x12laborOfLoveWinners\"e\n" +
	"\x16CStore_SetVote_Request\x12\x16\n" +
	"\x06voteid\x18\x01 \x01(\x05R\x06voteid\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x12\x1d\n" +
	"\n" +
	"sale_appid\x18\x03 \x01(\rR\tsaleAppid\"N\n" +
	"\x17CStore_SetVote_Response\x123\n" +
	"\n" +
	"user_votes\x18\x01 \x03(\v2\x14.SteamAwardsUserVoteR\tuserVotes\"\xff\x04\n" +
	"\x15CStore_VoteDefinition\x12\x16\n" +
	"\x06voteid\x18\x01 \x01(\x05R\x06voteid\x12\x16\n" +
	"\x06active\x18\x02 \x01(\bR\x06active\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\rR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x04 \x01(\rR\aendTime\x12I\n" +
	"\rapp_discounts\x18\x05 \x03(\v2$.CStore_VoteDefinition_AppDefinitionR\fappDiscounts\x120\n" +
	"\x14grouped_vote_options\x18\x06 \x01(\rR\x12groupedVoteOptions\x12>\n" +
	"\x06groups\x18\a \x03(\v2&.CStore_VoteDefinition_GroupDefinitionR\x06groups\x12#\n" +
	"\rinternal_name\x18\b \x01(\tR\finternalName\x12G\n" +
	"\flocalization\x18\t \x01(\v2#.CStore_VoteDefinition_LocalizationR\flocalization\x12\x1f\n" +
	"\vreveal_time\x18\n" +
	" \x01(\rR\n" +
	"revealTime\x12(\n" +
	"\x10release_date_min\x18\v \x01(\rR\x0ereleaseDateMin\x12!\n" +
	"\fwinner_appid\x18\f \x01(\rR\vwinnerAppid\x12\x1c\n" +
	"\x04flag\x18\r \x01(\x05B\b\x82\xb5\x18\x04enumR\x04flag\x12(\n" +
	"\x10release_date_max\x18\x0e \x01(\rR\x0ereleaseDateMax\x12\x1b\n" +
	"\titem_type\x18\x0f \x01(\rR\bitemType\"W\n" +
	"#CStore_VoteDefinition_AppDefinition\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1a\n" +
	"\bdiscount\x18\x02 \x01(\rR\bdiscount\"\xab\x01\n" +
	"%CStore_VoteDefinition_GroupDefinition\x12\x18\n" +
	"\agroupid\x18\x01 \x01(\rR\agroupid\x12\x1d\n" +
	"\n" +
	"group_name\x18\x02 \x01(\tR\tgroupName\x12I\n" +
	"\rapp_discounts\x18\x03 \x03(\v2$.CStore_VoteDefinition_AppDefinitionR\fappDiscounts\"\xb1\x01\n" +
	"\"CStore_VoteDefinition_Localization\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12'\n" +
	"\x0ftitle_linebreak\x18\x02 \x01(\tR\x0etitleLinebreak\x12\x1f\n" +
	"\vtitle_award\x18\x03 \x01(\tR\n" +
	"titleAward\x12+\n" +
	"\x11award_description\x18\x04 \x01(\tR\x10awardDescription\"m\n" +
	"\x13SteamAwardsUserVote\x12\x16\n" +
	"\x06voteid\x18\x01 \x01(\rR\x06voteid\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x12(\n" +
	"\x0fcommunityitemid\x18\x03 \x01(\x04R\x0fcommunityitemid2\xf6\x01\n" +
	"\n" +
	"StoreSales\x12K\n" +
	"\fGetUserVotes\x12\x1c.CStore_GetUserVotes_Request\x1a\x1d.CStore_GetUserVotes_Response\x12]\n" +
	"\x12GetVoteDefinitions\x12\".CStore_GetVoteDefinitions_Request\x1a#.CStore_GetVoteDefinitions_Response\x12<\n" +
	"\aSetVote\x12\x17.CStore_SetVote_Request\x1a\x18.CStore_SetVote_Response"

var (
	file_service_storesales_proto_rawDescOnce sync.Once
	file_service_storesales_proto_rawDescData []byte
)

func file_service_storesales_proto_rawDescGZIP() []byte {
	file_service_storesales_proto_rawDescOnce.Do(func() {
		file_service_storesales_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_storesales_proto_rawDesc), len(file_service_storesales_proto_rawDesc)))
	})
	return file_service_storesales_proto_rawDescData
}

var file_service_storesales_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_storesales_proto_goTypes = []any{
	(*CStore_GetUserVotes_Request)(nil),           // 0: CStore_GetUserVotes_Request
	(*CStore_GetUserVotes_Response)(nil),          // 1: CStore_GetUserVotes_Response
	(*CStore_GetVoteDefinitions_Request)(nil),     // 2: CStore_GetVoteDefinitions_Request
	(*CStore_GetVoteDefinitions_Response)(nil),    // 3: CStore_GetVoteDefinitions_Response
	(*CStore_SetVote_Request)(nil),                // 4: CStore_SetVote_Request
	(*CStore_SetVote_Response)(nil),               // 5: CStore_SetVote_Response
	(*CStore_VoteDefinition)(nil),                 // 6: CStore_VoteDefinition
	(*CStore_VoteDefinition_AppDefinition)(nil),   // 7: CStore_VoteDefinition_AppDefinition
	(*CStore_VoteDefinition_GroupDefinition)(nil), // 8: CStore_VoteDefinition_GroupDefinition
	(*CStore_VoteDefinition_Localization)(nil),    // 9: CStore_VoteDefinition_Localization
	(*SteamAwardsUserVote)(nil),                   // 10: SteamAwardsUserVote
}
var file_service_storesales_proto_depIdxs = []int32{
	10, // 0: CStore_GetUserVotes_Response.user_votes:type_name -> SteamAwardsUserVote
	6,  // 1: CStore_GetVoteDefinitions_Response.votes:type_name -> CStore_VoteDefinition
	10, // 2: CStore_SetVote_Response.user_votes:type_name -> SteamAwardsUserVote
	7,  // 3: CStore_VoteDefinition.app_discounts:type_name -> CStore_VoteDefinition_AppDefinition
	8,  // 4: CStore_VoteDefinition.groups:type_name -> CStore_VoteDefinition_GroupDefinition
	9,  // 5: CStore_VoteDefinition.localization:type_name -> CStore_VoteDefinition_Localization
	7,  // 6: CStore_VoteDefinition_GroupDefinition.app_discounts:type_name -> CStore_VoteDefinition_AppDefinition
	0,  // 7: StoreSales.GetUserVotes:input_type -> CStore_GetUserVotes_Request
	2,  // 8: StoreSales.GetVoteDefinitions:input_type -> CStore_GetVoteDefinitions_Request
	4,  // 9: StoreSales.SetVote:input_type -> CStore_SetVote_Request
	1,  // 10: StoreSales.GetUserVotes:output_type -> CStore_GetUserVotes_Response
	3,  // 11: StoreSales.GetVoteDefinitions:output_type -> CStore_GetVoteDefinitions_Response
	5,  // 12: StoreSales.SetVote:output_type -> CStore_SetVote_Response
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_service_storesales_proto_init() }
func file_service_storesales_proto_init() {
	if File_service_storesales_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_storesales_proto_rawDesc), len(file_service_storesales_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_storesales_proto_goTypes,
		DependencyIndexes: file_service_storesales_proto_depIdxs,
		MessageInfos:      file_service_storesales_proto_msgTypes,
	}.Build()
	File_service_storesales_proto = out.File
	file_service_storesales_proto_goTypes = nil
	file_service_storesales_proto_depIdxs = nil
}
