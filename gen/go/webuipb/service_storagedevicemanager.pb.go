// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: service_storagedevicemanager.proto

package webuipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CStorageDeviceManager_Adopt_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriveId       *uint32                `protobuf:"varint,1,opt,name=drive_id,json=driveId" json:"drive_id,omitempty"`
	Label         *string                `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Validate      *bool                  `protobuf:"varint,3,opt,name=validate" json:"validate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Adopt_Request) Reset() {
	*x = CStorageDeviceManager_Adopt_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Adopt_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Adopt_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_Adopt_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Adopt_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Adopt_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{0}
}

func (x *CStorageDeviceManager_Adopt_Request) GetDriveId() uint32 {
	if x != nil && x.DriveId != nil {
		return *x.DriveId
	}
	return 0
}

func (x *CStorageDeviceManager_Adopt_Request) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *CStorageDeviceManager_Adopt_Request) GetValidate() bool {
	if x != nil && x.Validate != nil {
		return *x.Validate
	}
	return false
}

type CStorageDeviceManager_Adopt_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Adopt_Response) Reset() {
	*x = CStorageDeviceManager_Adopt_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Adopt_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Adopt_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_Adopt_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Adopt_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Adopt_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{1}
}

type CStorageDeviceManager_Eject_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriveId       *uint32                `protobuf:"varint,1,opt,name=drive_id,json=driveId" json:"drive_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Eject_Request) Reset() {
	*x = CStorageDeviceManager_Eject_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Eject_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Eject_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_Eject_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Eject_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Eject_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{2}
}

func (x *CStorageDeviceManager_Eject_Request) GetDriveId() uint32 {
	if x != nil && x.DriveId != nil {
		return *x.DriveId
	}
	return 0
}

type CStorageDeviceManager_Eject_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Eject_Response) Reset() {
	*x = CStorageDeviceManager_Eject_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Eject_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Eject_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_Eject_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Eject_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Eject_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{3}
}

type CStorageDeviceManager_Format_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockDeviceId *uint32                `protobuf:"varint,1,opt,name=block_device_id,json=blockDeviceId" json:"block_device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Format_Request) Reset() {
	*x = CStorageDeviceManager_Format_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Format_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Format_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_Format_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Format_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Format_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{4}
}

func (x *CStorageDeviceManager_Format_Request) GetBlockDeviceId() uint32 {
	if x != nil && x.BlockDeviceId != nil {
		return *x.BlockDeviceId
	}
	return 0
}

type CStorageDeviceManager_Format_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Format_Response) Reset() {
	*x = CStorageDeviceManager_Format_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Format_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Format_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_Format_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Format_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Format_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{5}
}

type CStorageDeviceManager_GetState_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_GetState_Request) Reset() {
	*x = CStorageDeviceManager_GetState_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_GetState_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_GetState_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_GetState_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{6}
}

type CStorageDeviceManager_GetState_Response struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	State         *CStorageDeviceManagerState `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_GetState_Response) Reset() {
	*x = CStorageDeviceManager_GetState_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_GetState_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_GetState_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_GetState_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{7}
}

func (x *CStorageDeviceManager_GetState_Response) GetState() *CStorageDeviceManagerState {
	if x != nil {
		return x.State
	}
	return nil
}

type CStorageDeviceManager_IsServiceAvailable_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_IsServiceAvailable_Request) Reset() {
	*x = CStorageDeviceManager_IsServiceAvailable_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_IsServiceAvailable_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_IsServiceAvailable_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_IsServiceAvailable_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_IsServiceAvailable_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_IsServiceAvailable_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{8}
}

type CStorageDeviceManager_IsServiceAvailable_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAvailable   *bool                  `protobuf:"varint,1,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_IsServiceAvailable_Response) Reset() {
	*x = CStorageDeviceManager_IsServiceAvailable_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_IsServiceAvailable_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_IsServiceAvailable_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_IsServiceAvailable_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_IsServiceAvailable_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_IsServiceAvailable_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{9}
}

func (x *CStorageDeviceManager_IsServiceAvailable_Response) GetIsAvailable() bool {
	if x != nil && x.IsAvailable != nil {
		return *x.IsAvailable
	}
	return false
}

type CStorageDeviceManager_StateChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_StateChanged_Notification) Reset() {
	*x = CStorageDeviceManager_StateChanged_Notification{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_StateChanged_Notification) ProtoMessage() {}

func (x *CStorageDeviceManager_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{10}
}

type CStorageDeviceManager_TrimAll_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_TrimAll_Request) Reset() {
	*x = CStorageDeviceManager_TrimAll_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_TrimAll_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_TrimAll_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_TrimAll_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_TrimAll_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_TrimAll_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{11}
}

type CStorageDeviceManager_TrimAll_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_TrimAll_Response) Reset() {
	*x = CStorageDeviceManager_TrimAll_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_TrimAll_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_TrimAll_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_TrimAll_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_TrimAll_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_TrimAll_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{12}
}

type CStorageDeviceManager_Unmount_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockDeviceId *uint32                `protobuf:"varint,1,opt,name=block_device_id,json=blockDeviceId" json:"block_device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Unmount_Request) Reset() {
	*x = CStorageDeviceManager_Unmount_Request{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Unmount_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Unmount_Request) ProtoMessage() {}

func (x *CStorageDeviceManager_Unmount_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Unmount_Request.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Unmount_Request) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{13}
}

func (x *CStorageDeviceManager_Unmount_Request) GetBlockDeviceId() uint32 {
	if x != nil && x.BlockDeviceId != nil {
		return *x.BlockDeviceId
	}
	return 0
}

type CStorageDeviceManager_Unmount_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStorageDeviceManager_Unmount_Response) Reset() {
	*x = CStorageDeviceManager_Unmount_Response{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManager_Unmount_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManager_Unmount_Response) ProtoMessage() {}

func (x *CStorageDeviceManager_Unmount_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManager_Unmount_Response.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManager_Unmount_Response) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{14}
}

type CStorageDeviceManagerBlockDevice struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              *uint32                `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	DriveId         *uint32                `protobuf:"varint,2,opt,name=drive_id,json=driveId,def=0" json:"drive_id,omitempty"`
	Path            *string                `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	FriendlyPath    *string                `protobuf:"bytes,4,opt,name=friendly_path,json=friendlyPath" json:"friendly_path,omitempty"`
	Label           *string                `protobuf:"bytes,5,opt,name=label" json:"label,omitempty"`
	SizeBytes       *uint64                `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	IsFormattable   *bool                  `protobuf:"varint,7,opt,name=is_formattable,json=isFormattable" json:"is_formattable,omitempty"`
	IsReadOnly      *bool                  `protobuf:"varint,8,opt,name=is_read_only,json=isReadOnly" json:"is_read_only,omitempty"`
	IsRootDevice    *bool                  `protobuf:"varint,9,opt,name=is_root_device,json=isRootDevice" json:"is_root_device,omitempty"`
	ContentType     *int32                 `protobuf:"varint,10,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	FilesystemType  *int32                 `protobuf:"varint,11,opt,name=filesystem_type,json=filesystemType" json:"filesystem_type,omitempty"`
	MountPaths      []string               `protobuf:"bytes,12,rep,name=mount_paths,json=mountPaths" json:"mount_paths,omitempty"`
	IsUnmounting    *bool                  `protobuf:"varint,13,opt,name=is_unmounting,json=isUnmounting" json:"is_unmounting,omitempty"`
	HasSteamLibrary *bool                  `protobuf:"varint,14,opt,name=has_steam_library,json=hasSteamLibrary" json:"has_steam_library,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CStorageDeviceManagerBlockDevice fields.
const (
	Default_CStorageDeviceManagerBlockDevice_Id      = uint32(0)
	Default_CStorageDeviceManagerBlockDevice_DriveId = uint32(0)
)

func (x *CStorageDeviceManagerBlockDevice) Reset() {
	*x = CStorageDeviceManagerBlockDevice{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManagerBlockDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManagerBlockDevice) ProtoMessage() {}

func (x *CStorageDeviceManagerBlockDevice) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManagerBlockDevice.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManagerBlockDevice) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{15}
}

func (x *CStorageDeviceManagerBlockDevice) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_CStorageDeviceManagerBlockDevice_Id
}

func (x *CStorageDeviceManagerBlockDevice) GetDriveId() uint32 {
	if x != nil && x.DriveId != nil {
		return *x.DriveId
	}
	return Default_CStorageDeviceManagerBlockDevice_DriveId
}

func (x *CStorageDeviceManagerBlockDevice) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *CStorageDeviceManagerBlockDevice) GetFriendlyPath() string {
	if x != nil && x.FriendlyPath != nil {
		return *x.FriendlyPath
	}
	return ""
}

func (x *CStorageDeviceManagerBlockDevice) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *CStorageDeviceManagerBlockDevice) GetSizeBytes() uint64 {
	if x != nil && x.SizeBytes != nil {
		return *x.SizeBytes
	}
	return 0
}

func (x *CStorageDeviceManagerBlockDevice) GetIsFormattable() bool {
	if x != nil && x.IsFormattable != nil {
		return *x.IsFormattable
	}
	return false
}

func (x *CStorageDeviceManagerBlockDevice) GetIsReadOnly() bool {
	if x != nil && x.IsReadOnly != nil {
		return *x.IsReadOnly
	}
	return false
}

func (x *CStorageDeviceManagerBlockDevice) GetIsRootDevice() bool {
	if x != nil && x.IsRootDevice != nil {
		return *x.IsRootDevice
	}
	return false
}

func (x *CStorageDeviceManagerBlockDevice) GetContentType() int32 {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return 0
}

func (x *CStorageDeviceManagerBlockDevice) GetFilesystemType() int32 {
	if x != nil && x.FilesystemType != nil {
		return *x.FilesystemType
	}
	return 0
}

func (x *CStorageDeviceManagerBlockDevice) GetMountPaths() []string {
	if x != nil {
		return x.MountPaths
	}
	return nil
}

func (x *CStorageDeviceManagerBlockDevice) GetIsUnmounting() bool {
	if x != nil && x.IsUnmounting != nil {
		return *x.IsUnmounting
	}
	return false
}

func (x *CStorageDeviceManagerBlockDevice) GetHasSteamLibrary() bool {
	if x != nil && x.HasSteamLibrary != nil {
		return *x.HasSteamLibrary
	}
	return false
}

type CStorageDeviceManagerDrive struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               *uint32                `protobuf:"varint,1,opt,name=id,def=0" json:"id,omitempty"`
	Model            *string                `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Vendor           *string                `protobuf:"bytes,3,opt,name=vendor" json:"vendor,omitempty"`
	Serial           *string                `protobuf:"bytes,4,opt,name=serial" json:"serial,omitempty"`
	IsEjectable      *bool                  `protobuf:"varint,5,opt,name=is_ejectable,json=isEjectable" json:"is_ejectable,omitempty"`
	SizeBytes        *uint64                `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes" json:"size_bytes,omitempty"`
	MediaType        *int32                 `protobuf:"varint,7,opt,name=media_type,json=mediaType" json:"media_type,omitempty"`
	IsUnformatted    *bool                  `protobuf:"varint,8,opt,name=is_unformatted,json=isUnformatted" json:"is_unformatted,omitempty"`
	AdoptStage       *int32                 `protobuf:"varint,9,opt,name=adopt_stage,json=adoptStage" json:"adopt_stage,omitempty"`
	IsFormattable    *bool                  `protobuf:"varint,10,opt,name=is_formattable,json=isFormattable" json:"is_formattable,omitempty"`
	IsMediaAvailable *bool                  `protobuf:"varint,11,opt,name=is_media_available,json=isMediaAvailable" json:"is_media_available,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for CStorageDeviceManagerDrive fields.
const (
	Default_CStorageDeviceManagerDrive_Id = uint32(0)
)

func (x *CStorageDeviceManagerDrive) Reset() {
	*x = CStorageDeviceManagerDrive{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManagerDrive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManagerDrive) ProtoMessage() {}

func (x *CStorageDeviceManagerDrive) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManagerDrive.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManagerDrive) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{16}
}

func (x *CStorageDeviceManagerDrive) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_CStorageDeviceManagerDrive_Id
}

func (x *CStorageDeviceManagerDrive) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *CStorageDeviceManagerDrive) GetVendor() string {
	if x != nil && x.Vendor != nil {
		return *x.Vendor
	}
	return ""
}

func (x *CStorageDeviceManagerDrive) GetSerial() string {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return ""
}

func (x *CStorageDeviceManagerDrive) GetIsEjectable() bool {
	if x != nil && x.IsEjectable != nil {
		return *x.IsEjectable
	}
	return false
}

func (x *CStorageDeviceManagerDrive) GetSizeBytes() uint64 {
	if x != nil && x.SizeBytes != nil {
		return *x.SizeBytes
	}
	return 0
}

func (x *CStorageDeviceManagerDrive) GetMediaType() int32 {
	if x != nil && x.MediaType != nil {
		return *x.MediaType
	}
	return 0
}

func (x *CStorageDeviceManagerDrive) GetIsUnformatted() bool {
	if x != nil && x.IsUnformatted != nil {
		return *x.IsUnformatted
	}
	return false
}

func (x *CStorageDeviceManagerDrive) GetAdoptStage() int32 {
	if x != nil && x.AdoptStage != nil {
		return *x.AdoptStage
	}
	return 0
}

func (x *CStorageDeviceManagerDrive) GetIsFormattable() bool {
	if x != nil && x.IsFormattable != nil {
		return *x.IsFormattable
	}
	return false
}

func (x *CStorageDeviceManagerDrive) GetIsMediaAvailable() bool {
	if x != nil && x.IsMediaAvailable != nil {
		return *x.IsMediaAvailable
	}
	return false
}

type CStorageDeviceManagerState struct {
	state              protoimpl.MessageState              `protogen:"open.v1"`
	Drives             []*CStorageDeviceManagerDrive       `protobuf:"bytes,1,rep,name=drives" json:"drives,omitempty"`
	BlockDevices       []*CStorageDeviceManagerBlockDevice `protobuf:"bytes,2,rep,name=block_devices,json=blockDevices" json:"block_devices,omitempty"`
	IsUnmountSupported *bool                               `protobuf:"varint,3,opt,name=is_unmount_supported,json=isUnmountSupported" json:"is_unmount_supported,omitempty"`
	IsTrimSupported    *bool                               `protobuf:"varint,4,opt,name=is_trim_supported,json=isTrimSupported" json:"is_trim_supported,omitempty"`
	IsTrimRunning      *bool                               `protobuf:"varint,5,opt,name=is_trim_running,json=isTrimRunning" json:"is_trim_running,omitempty"`
	IsAdoptSupported   *bool                               `protobuf:"varint,6,opt,name=is_adopt_supported,json=isAdoptSupported" json:"is_adopt_supported,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CStorageDeviceManagerState) Reset() {
	*x = CStorageDeviceManagerState{}
	mi := &file_service_storagedevicemanager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStorageDeviceManagerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStorageDeviceManagerState) ProtoMessage() {}

func (x *CStorageDeviceManagerState) ProtoReflect() protoreflect.Message {
	mi := &file_service_storagedevicemanager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStorageDeviceManagerState.ProtoReflect.Descriptor instead.
func (*CStorageDeviceManagerState) Descriptor() ([]byte, []int) {
	return file_service_storagedevicemanager_proto_rawDescGZIP(), []int{17}
}

func (x *CStorageDeviceManagerState) GetDrives() []*CStorageDeviceManagerDrive {
	if x != nil {
		return x.Drives
	}
	return nil
}

func (x *CStorageDeviceManagerState) GetBlockDevices() []*CStorageDeviceManagerBlockDevice {
	if x != nil {
		return x.BlockDevices
	}
	return nil
}

func (x *CStorageDeviceManagerState) GetIsUnmountSupported() bool {
	if x != nil && x.IsUnmountSupported != nil {
		return *x.IsUnmountSupported
	}
	return false
}

func (x *CStorageDeviceManagerState) GetIsTrimSupported() bool {
	if x != nil && x.IsTrimSupported != nil {
		return *x.IsTrimSupported
	}
	return false
}

func (x *CStorageDeviceManagerState) GetIsTrimRunning() bool {
	if x != nil && x.IsTrimRunning != nil {
		return *x.IsTrimRunning
	}
	return false
}

func (x *CStorageDeviceManagerState) GetIsAdoptSupported() bool {
	if x != nil && x.IsAdoptSupported != nil {
		return *x.IsAdoptSupported
	}
	return false
}

var File_service_storagedevicemanager_proto protoreflect.FileDescriptor

const file_service_storagedevicemanager_proto_rawDesc = "" +
	"\n" +
	"\"service_storagedevicemanager.proto\x1a\x11common_base.proto\"r\n" +
	"#CStorageDeviceManager_Adopt_Request\x12\x19\n" +
	"\bdrive_id\x18\x01 \x01(\rR\adriveId\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x1a\n" +
	"\bvalidate\x18\x03 \x01(\bR\bvalidate\"&\n" +
	"$CStorageDeviceManager_Adopt_Response\"@\n" +
	"#CStorageDeviceManager_Eject_Request\x12\x19\n" +
	"\bdrive_id\x18\x01 \x01(\rR\adriveId\"&\n" +
	"$CStorageDeviceManager_Eject_Response\"N\n" +
	"$CStorageDeviceManager_Format_Request\x12&\n" +
	"\x0fblock_device_id\x18\x01 \x01(\rR\rblockDeviceId\"'\n" +
	"%CStorageDeviceManager_Format_Response\"(\n" +
	"&CStorageDeviceManager_GetState_Request\"\\\n" +
	"'CStorageDeviceManager_GetState_Response\x121\n" +
	"\x05state\x18\x01 \x01(\v2\x1b.CStorageDeviceManagerStateR\x05state\"2\n" +
	"0CStorageDeviceManager_IsServiceAvailable_Request\"V\n" +
	"1CStorageDeviceManager_IsServiceAvailable_Response\x12!\n" +
	"\fis_available\x18\x01 \x01(\bR\visAvailable\"1\n" +
	"/CStorageDeviceManager_StateChanged_Notification\"'\n" +
	"%CStorageDeviceManager_TrimAll_Request\"(\n" +
	"&CStorageDeviceManager_TrimAll_Response\"O\n" +
	"%CStorageDeviceManager_Unmount_Request\x12&\n" +
	"\x0fblock_device_id\x18\x01 \x01(\rR\rblockDeviceId\"(\n" +
	"&CStorageDeviceManager_Unmount_Response\"\x82\x04\n" +
	" CStorageDeviceManagerBlockDevice\x12\x11\n" +
	"\x02id\x18\x01 \x01(\r:\x010R\x02id\x12\x1c\n" +
	"\bdrive_id\x18\x02 \x01(\r:\x010R\adriveId\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12#\n" +
	"\rfriendly_path\x18\x04 \x01(\tR\ffriendlyPath\x12\x14\n" +
	"\x05label\x18\x05 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x04R\tsizeBytes\x12%\n" +
	"\x0eis_formattable\x18\a \x01(\bR\risFormattable\x12 \n" +
	"\fis_read_only\x18\b \x01(\bR\n" +
	"isReadOnly\x12$\n" +
	"\x0eis_root_device\x18\t \x01(\bR\fisRootDevice\x12+\n" +
	"\fcontent_type\x18\n" +
	" \x01(\x05B\b\x82\xb5\x18\x04enumR\vcontentType\x121\n" +
	"\x0ffilesystem_type\x18\v \x01(\x05B\b\x82\xb5\x18\x04enumR\x0efilesystemType\x12\x1f\n" +
	"\vmount_paths\x18\f \x03(\tR\n" +
	"mountPaths\x12#\n" +
	"\ris_unmounting\x18\r \x01(\bR\fisUnmounting\x12*\n" +
	"\x11has_steam_library\x18\x0e \x01(\bR\x0fhasSteamLibrary\"\x87\x03\n" +
	"\x1aCStorageDeviceManagerDrive\x12\x11\n" +
	"\x02id\x18\x01 \x01(\r:\x010R\x02id\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x16\n" +
	"\x06vendor\x18\x03 \x01(\tR\x06vendor\x12\x16\n" +
	"\x06serial\x18\x04 \x01(\tR\x06serial\x12!\n" +
	"\fis_ejectable\x18\x05 \x01(\bR\visEjectable\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x04R\tsizeBytes\x12'\n" +
	"\n" +
	"media_type\x18\a \x01(\x05B\b\x82\xb5\x18\x04enumR\tmediaType\x12%\n" +
	"\x0eis_unformatted\x18\b \x01(\bR\risUnformatted\x12)\n" +
	"\vadopt_stage\x18\t \x01(\x05B\b\x82\xb5\x18\x04enumR\n" +
	"adoptStage\x12%\n" +
	"\x0eis_formattable\x18\n" +
	" \x01(\bR\risFormattable\x12,\n" +
	"\x12is_media_available\x18\v \x01(\bR\x10isMediaAvailable\"\xcd\x02\n" +
	"\x1aCStorageDeviceManagerState\x123\n" +
	"\x06drives\x18\x01 \x03(\v2\x1b.CStorageDeviceManagerDriveR\x06drives\x12F\n" +
	"\rblock_devices\x18\x02 \x03(\v2!.CStorageDeviceManagerBlockDeviceR\fblockDevices\x120\n" +
	"\x14is_unmount_supported\x18\x03 \x01(\bR\x12isUnmountSupported\x12*\n" +
	"\x11is_trim_supported\x18\x04 \x01(\bR\x0fisTrimSupported\x12&\n" +
	"\x0fis_trim_running\x18\x05 \x01(\bR\risTrimRunning\x12,\n" +
	"\x12is_adopt_supported\x18\x06 \x01(\bR\x10isAdoptSupported2\x84\x06\n" +
	"\x14StorageDeviceManager\x12T\n" +
	"\x05Adopt\x12$.CStorageDeviceManager_Adopt_Request\x1a%.CStorageDeviceManager_Adopt_Response\x12T\n" +
	"\x05Eject\x12$.CStorageDeviceManager_Eject_Request\x1a%.CStorageDeviceManager_Eject_Response\x12W\n" +
	"\x06Format\x12%.CStorageDeviceManager_Format_Request\x1a&.CStorageDeviceManager_Format_Response\x12]\n" +
	"\bGetState\x12'.CStorageDeviceManager_GetState_Request\x1a(.CStorageDeviceManager_GetState_Response\x12{\n" +
	"\x12IsServiceAvailable\x121.CStorageDeviceManager_IsServiceAvailable_Request\x1a2.CStorageDeviceManager_IsServiceAvailable_Response\x12S\n" +
	"\x12NotifyStateChanged\x120.CStorageDeviceManager_StateChanged_Notification\x1a\v.NoResponse\x12Z\n" +
	"\aTrimAll\x12&.CStorageDeviceManager_TrimAll_Request\x1a'.CStorageDeviceManager_TrimAll_Response\x12Z\n" +
	"\aUnmount\x12&.CStorageDeviceManager_Unmount_Request\x1a'.CStorageDeviceManager_Unmount_Response"

var (
	file_service_storagedevicemanager_proto_rawDescOnce sync.Once
	file_service_storagedevicemanager_proto_rawDescData []byte
)

func file_service_storagedevicemanager_proto_rawDescGZIP() []byte {
	file_service_storagedevicemanager_proto_rawDescOnce.Do(func() {
		file_service_storagedevicemanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_storagedevicemanager_proto_rawDesc), len(file_service_storagedevicemanager_proto_rawDesc)))
	})
	return file_service_storagedevicemanager_proto_rawDescData
}

var file_service_storagedevicemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_service_storagedevicemanager_proto_goTypes = []any{
	(*CStorageDeviceManager_Adopt_Request)(nil),               // 0: CStorageDeviceManager_Adopt_Request
	(*CStorageDeviceManager_Adopt_Response)(nil),              // 1: CStorageDeviceManager_Adopt_Response
	(*CStorageDeviceManager_Eject_Request)(nil),               // 2: CStorageDeviceManager_Eject_Request
	(*CStorageDeviceManager_Eject_Response)(nil),              // 3: CStorageDeviceManager_Eject_Response
	(*CStorageDeviceManager_Format_Request)(nil),              // 4: CStorageDeviceManager_Format_Request
	(*CStorageDeviceManager_Format_Response)(nil),             // 5: CStorageDeviceManager_Format_Response
	(*CStorageDeviceManager_GetState_Request)(nil),            // 6: CStorageDeviceManager_GetState_Request
	(*CStorageDeviceManager_GetState_Response)(nil),           // 7: CStorageDeviceManager_GetState_Response
	(*CStorageDeviceManager_IsServiceAvailable_Request)(nil),  // 8: CStorageDeviceManager_IsServiceAvailable_Request
	(*CStorageDeviceManager_IsServiceAvailable_Response)(nil), // 9: CStorageDeviceManager_IsServiceAvailable_Response
	(*CStorageDeviceManager_StateChanged_Notification)(nil),   // 10: CStorageDeviceManager_StateChanged_Notification
	(*CStorageDeviceManager_TrimAll_Request)(nil),             // 11: CStorageDeviceManager_TrimAll_Request
	(*CStorageDeviceManager_TrimAll_Response)(nil),            // 12: CStorageDeviceManager_TrimAll_Response
	(*CStorageDeviceManager_Unmount_Request)(nil),             // 13: CStorageDeviceManager_Unmount_Request
	(*CStorageDeviceManager_Unmount_Response)(nil),            // 14: CStorageDeviceManager_Unmount_Response
	(*CStorageDeviceManagerBlockDevice)(nil),                  // 15: CStorageDeviceManagerBlockDevice
	(*CStorageDeviceManagerDrive)(nil),                        // 16: CStorageDeviceManagerDrive
	(*CStorageDeviceManagerState)(nil),                        // 17: CStorageDeviceManagerState
	(*NoResponse)(nil),                                        // 18: NoResponse
}
var file_service_storagedevicemanager_proto_depIdxs = []int32{
	17, // 0: CStorageDeviceManager_GetState_Response.state:type_name -> CStorageDeviceManagerState
	16, // 1: CStorageDeviceManagerState.drives:type_name -> CStorageDeviceManagerDrive
	15, // 2: CStorageDeviceManagerState.block_devices:type_name -> CStorageDeviceManagerBlockDevice
	0,  // 3: StorageDeviceManager.Adopt:input_type -> CStorageDeviceManager_Adopt_Request
	2,  // 4: StorageDeviceManager.Eject:input_type -> CStorageDeviceManager_Eject_Request
	4,  // 5: StorageDeviceManager.Format:input_type -> CStorageDeviceManager_Format_Request
	6,  // 6: StorageDeviceManager.GetState:input_type -> CStorageDeviceManager_GetState_Request
	8,  // 7: StorageDeviceManager.IsServiceAvailable:input_type -> CStorageDeviceManager_IsServiceAvailable_Request
	10, // 8: StorageDeviceManager.NotifyStateChanged:input_type -> CStorageDeviceManager_StateChanged_Notification
	11, // 9: StorageDeviceManager.TrimAll:input_type -> CStorageDeviceManager_TrimAll_Request
	13, // 10: StorageDeviceManager.Unmount:input_type -> CStorageDeviceManager_Unmount_Request
	1,  // 11: StorageDeviceManager.Adopt:output_type -> CStorageDeviceManager_Adopt_Response
	3,  // 12: StorageDeviceManager.Eject:output_type -> CStorageDeviceManager_Eject_Response
	5,  // 13: StorageDeviceManager.Format:output_type -> CStorageDeviceManager_Format_Response
	7,  // 14: StorageDeviceManager.GetState:output_type -> CStorageDeviceManager_GetState_Response
	9,  // 15: StorageDeviceManager.IsServiceAvailable:output_type -> CStorageDeviceManager_IsServiceAvailable_Response
	18, // 16: StorageDeviceManager.NotifyStateChanged:output_type -> NoResponse
	12, // 17: StorageDeviceManager.TrimAll:output_type -> CStorageDeviceManager_TrimAll_Response
	14, // 18: StorageDeviceManager.Unmount:output_type -> CStorageDeviceManager_Unmount_Response
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_storagedevicemanager_proto_init() }
func file_service_storagedevicemanager_proto_init() {
	if File_service_storagedevicemanager_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_storagedevicemanager_proto_rawDesc), len(file_service_storagedevicemanager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_storagedevicemanager_proto_goTypes,
		DependencyIndexes: file_service_storagedevicemanager_proto_depIdxs,
		MessageInfos:      file_service_storagedevicemanager_proto_msgTypes,
	}.Build()
	File_service_storagedevicemanager_proto = out.File
	file_service_storagedevicemanager_proto_goTypes = nil
	file_service_storagedevicemanager_proto_depIdxs = nil
}
