// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: service_remote.proto

package webuipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CRemoteClient_AllocateRelayServer_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cellid        *uint32                `protobuf:"varint,1,opt,name=cellid" json:"cellid,omitempty"`
	Credentials   *string                `protobuf:"bytes,2,opt,name=credentials" json:"credentials,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_AllocateRelayServer_Request) Reset() {
	*x = CRemoteClient_AllocateRelayServer_Request{}
	mi := &file_service_remote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_AllocateRelayServer_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_AllocateRelayServer_Request) ProtoMessage() {}

func (x *CRemoteClient_AllocateRelayServer_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_AllocateRelayServer_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_AllocateRelayServer_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{0}
}

func (x *CRemoteClient_AllocateRelayServer_Request) GetCellid() uint32 {
	if x != nil && x.Cellid != nil {
		return *x.Cellid
	}
	return 0
}

func (x *CRemoteClient_AllocateRelayServer_Request) GetCredentials() string {
	if x != nil && x.Credentials != nil {
		return *x.Credentials
	}
	return ""
}

type CRemoteClient_AllocateRelayServer_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RelayServer   *string                `protobuf:"bytes,1,opt,name=relay_server,json=relayServer" json:"relay_server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_AllocateRelayServer_Response) Reset() {
	*x = CRemoteClient_AllocateRelayServer_Response{}
	mi := &file_service_remote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_AllocateRelayServer_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_AllocateRelayServer_Response) ProtoMessage() {}

func (x *CRemoteClient_AllocateRelayServer_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_AllocateRelayServer_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_AllocateRelayServer_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{1}
}

func (x *CRemoteClient_AllocateRelayServer_Response) GetRelayServer() string {
	if x != nil && x.RelayServer != nil {
		return *x.RelayServer
	}
	return ""
}

type CRemoteClient_AllocateSDR_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_AllocateSDR_Request) Reset() {
	*x = CRemoteClient_AllocateSDR_Request{}
	mi := &file_service_remote_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_AllocateSDR_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_AllocateSDR_Request) ProtoMessage() {}

func (x *CRemoteClient_AllocateSDR_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_AllocateSDR_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_AllocateSDR_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{2}
}

func (x *CRemoteClient_AllocateSDR_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CRemoteClient_AllocateSDR_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_AllocateSDR_Response) Reset() {
	*x = CRemoteClient_AllocateSDR_Response{}
	mi := &file_service_remote_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_AllocateSDR_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_AllocateSDR_Response) ProtoMessage() {}

func (x *CRemoteClient_AllocateSDR_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_AllocateSDR_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_AllocateSDR_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{3}
}

type CRemoteClient_ClientDetails struct {
	state          protoimpl.MessageState       `protogen:"open.v1"`
	RemoteClientId *uint64                      `protobuf:"fixed64,1,opt,name=remote_client_id,json=remoteClientId" json:"remote_client_id,omitempty"`
	DeviceDetails  *CRemoteClient_DeviceDetails `protobuf:"bytes,2,opt,name=device_details,json=deviceDetails" json:"device_details,omitempty"`
	LastSeen       *uint64                      `protobuf:"varint,4,opt,name=last_seen,json=lastSeen" json:"last_seen,omitempty"`
	City           *string                      `protobuf:"bytes,5,opt,name=city" json:"city,omitempty"`
	State          *string                      `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	Country        *string                      `protobuf:"bytes,7,opt,name=country" json:"country,omitempty"`
	IsOnline       *bool                        `protobuf:"varint,8,opt,name=is_online,json=isOnline" json:"is_online,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemoteClient_ClientDetails) Reset() {
	*x = CRemoteClient_ClientDetails{}
	mi := &file_service_remote_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_ClientDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_ClientDetails) ProtoMessage() {}

func (x *CRemoteClient_ClientDetails) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_ClientDetails.ProtoReflect.Descriptor instead.
func (*CRemoteClient_ClientDetails) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{4}
}

func (x *CRemoteClient_ClientDetails) GetRemoteClientId() uint64 {
	if x != nil && x.RemoteClientId != nil {
		return *x.RemoteClientId
	}
	return 0
}

func (x *CRemoteClient_ClientDetails) GetDeviceDetails() *CRemoteClient_DeviceDetails {
	if x != nil {
		return x.DeviceDetails
	}
	return nil
}

func (x *CRemoteClient_ClientDetails) GetLastSeen() uint64 {
	if x != nil && x.LastSeen != nil {
		return *x.LastSeen
	}
	return 0
}

func (x *CRemoteClient_ClientDetails) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *CRemoteClient_ClientDetails) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *CRemoteClient_ClientDetails) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *CRemoteClient_ClientDetails) GetIsOnline() bool {
	if x != nil && x.IsOnline != nil {
		return *x.IsOnline
	}
	return false
}

type CRemoteClient_CreateRemotePlayTogetherInvitation_Request struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Appid            *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	LaunchParameters *string                `protobuf:"bytes,2,opt,name=launch_parameters,json=launchParameters" json:"launch_parameters,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Request) Reset() {
	*x = CRemoteClient_CreateRemotePlayTogetherInvitation_Request{}
	mi := &file_service_remote_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_CreateRemotePlayTogetherInvitation_Request) ProtoMessage() {}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_CreateRemotePlayTogetherInvitation_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_CreateRemotePlayTogetherInvitation_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{5}
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Request) GetLaunchParameters() string {
	if x != nil && x.LaunchParameters != nil {
		return *x.LaunchParameters
	}
	return ""
}

type CRemoteClient_CreateRemotePlayTogetherInvitation_Response struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InvitationCode *string                `protobuf:"bytes,1,opt,name=invitation_code,json=invitationCode" json:"invitation_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Response) Reset() {
	*x = CRemoteClient_CreateRemotePlayTogetherInvitation_Response{}
	mi := &file_service_remote_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_CreateRemotePlayTogetherInvitation_Response) ProtoMessage() {}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_CreateRemotePlayTogetherInvitation_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_CreateRemotePlayTogetherInvitation_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{6}
}

func (x *CRemoteClient_CreateRemotePlayTogetherInvitation_Response) GetInvitationCode() string {
	if x != nil && x.InvitationCode != nil {
		return *x.InvitationCode
	}
	return ""
}

type CRemoteClient_DeleteRemotePlayTogetherInvitation_Request struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InvitationCode *string                `protobuf:"bytes,1,opt,name=invitation_code,json=invitationCode" json:"invitation_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Request) Reset() {
	*x = CRemoteClient_DeleteRemotePlayTogetherInvitation_Request{}
	mi := &file_service_remote_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_DeleteRemotePlayTogetherInvitation_Request) ProtoMessage() {}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_DeleteRemotePlayTogetherInvitation_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_DeleteRemotePlayTogetherInvitation_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{7}
}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Request) GetInvitationCode() string {
	if x != nil && x.InvitationCode != nil {
		return *x.InvitationCode
	}
	return ""
}

type CRemoteClient_DeleteRemotePlayTogetherInvitation_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Response) Reset() {
	*x = CRemoteClient_DeleteRemotePlayTogetherInvitation_Response{}
	mi := &file_service_remote_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_DeleteRemotePlayTogetherInvitation_Response) ProtoMessage() {}

func (x *CRemoteClient_DeleteRemotePlayTogetherInvitation_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_DeleteRemotePlayTogetherInvitation_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_DeleteRemotePlayTogetherInvitation_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{8}
}

type CRemoteClient_DeviceDetails struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DeviceFriendlyName *string                `protobuf:"bytes,1,opt,name=device_friendly_name,json=deviceFriendlyName" json:"device_friendly_name,omitempty"`
	OsType             *int32                 `protobuf:"varint,2,opt,name=os_type,json=osType" json:"os_type,omitempty"`
	GamingDeviceType   *uint32                `protobuf:"varint,3,opt,name=gaming_device_type,json=gamingDeviceType" json:"gaming_device_type,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CRemoteClient_DeviceDetails) Reset() {
	*x = CRemoteClient_DeviceDetails{}
	mi := &file_service_remote_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_DeviceDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_DeviceDetails) ProtoMessage() {}

func (x *CRemoteClient_DeviceDetails) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_DeviceDetails.ProtoReflect.Descriptor instead.
func (*CRemoteClient_DeviceDetails) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{9}
}

func (x *CRemoteClient_DeviceDetails) GetDeviceFriendlyName() string {
	if x != nil && x.DeviceFriendlyName != nil {
		return *x.DeviceFriendlyName
	}
	return ""
}

func (x *CRemoteClient_DeviceDetails) GetOsType() int32 {
	if x != nil && x.OsType != nil {
		return *x.OsType
	}
	return 0
}

func (x *CRemoteClient_DeviceDetails) GetGamingDeviceType() uint32 {
	if x != nil && x.GamingDeviceType != nil {
		return *x.GamingDeviceType
	}
	return 0
}

type CRemoteClient_GetPairingInfo_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pin           *uint32                `protobuf:"varint,1,opt,name=pin" json:"pin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_GetPairingInfo_Request) Reset() {
	*x = CRemoteClient_GetPairingInfo_Request{}
	mi := &file_service_remote_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_GetPairingInfo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_GetPairingInfo_Request) ProtoMessage() {}

func (x *CRemoteClient_GetPairingInfo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_GetPairingInfo_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_GetPairingInfo_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{10}
}

func (x *CRemoteClient_GetPairingInfo_Request) GetPin() uint32 {
	if x != nil && x.Pin != nil {
		return *x.Pin
	}
	return 0
}

type CRemoteClient_GetPairingInfo_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *uint64                `protobuf:"fixed64,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	DeviceId      *uint64                `protobuf:"fixed64,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Request       []byte                 `protobuf:"bytes,3,opt,name=request" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_GetPairingInfo_Response) Reset() {
	*x = CRemoteClient_GetPairingInfo_Response{}
	mi := &file_service_remote_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_GetPairingInfo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_GetPairingInfo_Response) ProtoMessage() {}

func (x *CRemoteClient_GetPairingInfo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_GetPairingInfo_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_GetPairingInfo_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{11}
}

func (x *CRemoteClient_GetPairingInfo_Response) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CRemoteClient_GetPairingInfo_Response) GetDeviceId() uint64 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

func (x *CRemoteClient_GetPairingInfo_Response) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

type CRemoteClient_GetRecentClients_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_GetRecentClients_Request) Reset() {
	*x = CRemoteClient_GetRecentClients_Request{}
	mi := &file_service_remote_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_GetRecentClients_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_GetRecentClients_Request) ProtoMessage() {}

func (x *CRemoteClient_GetRecentClients_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_GetRecentClients_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_GetRecentClients_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{12}
}

type CRemoteClient_GetRecentClients_Response struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Clients       []*CRemoteClient_ClientDetails `protobuf:"bytes,1,rep,name=clients" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_GetRecentClients_Response) Reset() {
	*x = CRemoteClient_GetRecentClients_Response{}
	mi := &file_service_remote_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_GetRecentClients_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_GetRecentClients_Response) ProtoMessage() {}

func (x *CRemoteClient_GetRecentClients_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_GetRecentClients_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_GetRecentClients_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{13}
}

func (x *CRemoteClient_GetRecentClients_Response) GetClients() []*CRemoteClient_ClientDetails {
	if x != nil {
		return x.Clients
	}
	return nil
}

type CRemoteClient_MarkTaskComplete_Request struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RemoteClientId *uint64                `protobuf:"fixed64,1,opt,name=remote_client_id,json=remoteClientId" json:"remote_client_id,omitempty"`
	TaskId         *uint64                `protobuf:"fixed64,2,opt,name=task_id,json=taskId" json:"task_id,omitempty"`
	ContentId      *string                `protobuf:"bytes,3,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemoteClient_MarkTaskComplete_Request) Reset() {
	*x = CRemoteClient_MarkTaskComplete_Request{}
	mi := &file_service_remote_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_MarkTaskComplete_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_MarkTaskComplete_Request) ProtoMessage() {}

func (x *CRemoteClient_MarkTaskComplete_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_MarkTaskComplete_Request.ProtoReflect.Descriptor instead.
func (*CRemoteClient_MarkTaskComplete_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{14}
}

func (x *CRemoteClient_MarkTaskComplete_Request) GetRemoteClientId() uint64 {
	if x != nil && x.RemoteClientId != nil {
		return *x.RemoteClientId
	}
	return 0
}

func (x *CRemoteClient_MarkTaskComplete_Request) GetTaskId() uint64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *CRemoteClient_MarkTaskComplete_Request) GetContentId() string {
	if x != nil && x.ContentId != nil {
		return *x.ContentId
	}
	return ""
}

type CRemoteClient_MarkTaskComplete_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_MarkTaskComplete_Response) Reset() {
	*x = CRemoteClient_MarkTaskComplete_Response{}
	mi := &file_service_remote_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_MarkTaskComplete_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_MarkTaskComplete_Response) ProtoMessage() {}

func (x *CRemoteClient_MarkTaskComplete_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_MarkTaskComplete_Response.ProtoReflect.Descriptor instead.
func (*CRemoteClient_MarkTaskComplete_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{15}
}

type CRemoteClient_Online_Notification struct {
	state          protoimpl.MessageState       `protogen:"open.v1"`
	Steamid        *uint64                      `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	RemoteClientId *uint64                      `protobuf:"fixed64,2,opt,name=remote_client_id,json=remoteClientId" json:"remote_client_id,omitempty"`
	DeviceDetails  *CRemoteClient_DeviceDetails `protobuf:"bytes,3,opt,name=device_details,json=deviceDetails" json:"device_details,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CRemoteClient_Online_Notification) Reset() {
	*x = CRemoteClient_Online_Notification{}
	mi := &file_service_remote_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_Online_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_Online_Notification) ProtoMessage() {}

func (x *CRemoteClient_Online_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_Online_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_Online_Notification) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{16}
}

func (x *CRemoteClient_Online_Notification) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CRemoteClient_Online_Notification) GetRemoteClientId() uint64 {
	if x != nil && x.RemoteClientId != nil {
		return *x.RemoteClientId
	}
	return 0
}

func (x *CRemoteClient_Online_Notification) GetDeviceDetails() *CRemoteClient_DeviceDetails {
	if x != nil {
		return x.DeviceDetails
	}
	return nil
}

type CRemoteClient_ReplyPacket_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     *uint64                `protobuf:"fixed64,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemoteClient_ReplyPacket_Notification) Reset() {
	*x = CRemoteClient_ReplyPacket_Notification{}
	mi := &file_service_remote_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemoteClient_ReplyPacket_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemoteClient_ReplyPacket_Notification) ProtoMessage() {}

func (x *CRemoteClient_ReplyPacket_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemoteClient_ReplyPacket_Notification.ProtoReflect.Descriptor instead.
func (*CRemoteClient_ReplyPacket_Notification) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{17}
}

func (x *CRemoteClient_ReplyPacket_Notification) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CRemoteClient_ReplyPacket_Notification) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CRemotePlay_SessionStarted_Request struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	HostAccountId      *uint32                `protobuf:"varint,1,opt,name=host_account_id,json=hostAccountId" json:"host_account_id,omitempty"`
	ClientAccountId    *uint32                `protobuf:"varint,2,opt,name=client_account_id,json=clientAccountId" json:"client_account_id,omitempty"`
	Appid              *uint32                `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	DeviceFormFactor   *int32                 `protobuf:"varint,4,opt,name=device_form_factor,json=deviceFormFactor" json:"device_form_factor,omitempty"`
	RemotePlayTogether *bool                  `protobuf:"varint,5,opt,name=remote_play_together,json=remotePlayTogether" json:"remote_play_together,omitempty"`
	GuestSession       *bool                  `protobuf:"varint,6,opt,name=guest_session,json=guestSession" json:"guest_session,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CRemotePlay_SessionStarted_Request) Reset() {
	*x = CRemotePlay_SessionStarted_Request{}
	mi := &file_service_remote_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlay_SessionStarted_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlay_SessionStarted_Request) ProtoMessage() {}

func (x *CRemotePlay_SessionStarted_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlay_SessionStarted_Request.ProtoReflect.Descriptor instead.
func (*CRemotePlay_SessionStarted_Request) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{18}
}

func (x *CRemotePlay_SessionStarted_Request) GetHostAccountId() uint32 {
	if x != nil && x.HostAccountId != nil {
		return *x.HostAccountId
	}
	return 0
}

func (x *CRemotePlay_SessionStarted_Request) GetClientAccountId() uint32 {
	if x != nil && x.ClientAccountId != nil {
		return *x.ClientAccountId
	}
	return 0
}

func (x *CRemotePlay_SessionStarted_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CRemotePlay_SessionStarted_Request) GetDeviceFormFactor() int32 {
	if x != nil && x.DeviceFormFactor != nil {
		return *x.DeviceFormFactor
	}
	return 0
}

func (x *CRemotePlay_SessionStarted_Request) GetRemotePlayTogether() bool {
	if x != nil && x.RemotePlayTogether != nil {
		return *x.RemotePlayTogether
	}
	return false
}

func (x *CRemotePlay_SessionStarted_Request) GetGuestSession() bool {
	if x != nil && x.GuestSession != nil {
		return *x.GuestSession
	}
	return false
}

type CRemotePlay_SessionStarted_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      *uint64                `protobuf:"fixed64,1,opt,name=record_id,json=recordId" json:"record_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRemotePlay_SessionStarted_Response) Reset() {
	*x = CRemotePlay_SessionStarted_Response{}
	mi := &file_service_remote_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRemotePlay_SessionStarted_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRemotePlay_SessionStarted_Response) ProtoMessage() {}

func (x *CRemotePlay_SessionStarted_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_remote_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRemotePlay_SessionStarted_Response.ProtoReflect.Descriptor instead.
func (*CRemotePlay_SessionStarted_Response) Descriptor() ([]byte, []int) {
	return file_service_remote_proto_rawDescGZIP(), []int{19}
}

func (x *CRemotePlay_SessionStarted_Response) GetRecordId() uint64 {
	if x != nil && x.RecordId != nil {
		return *x.RecordId
	}
	return 0
}

var File_service_remote_proto protoreflect.FileDescriptor

const file_service_remote_proto_rawDesc = "" +
	"\n" +
	"\x14service_remote.proto\x1a\x11common_base.proto\"e\n" +
	")CRemoteClient_AllocateRelayServer_Request\x12\x16\n" +
	"\x06cellid\x18\x01 \x01(\rR\x06cellid\x12 \n" +
	"\vcredentials\x18\x02 \x01(\tR\vcredentials\"O\n" +
	"*CRemoteClient_AllocateRelayServer_Response\x12!\n" +
	"\frelay_server\x18\x01 \x01(\tR\vrelayServer\"9\n" +
	"!CRemoteClient_AllocateSDR_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"$\n" +
	"\"CRemoteClient_AllocateSDR_Response\"\x8a\x02\n" +
	"\x1bCRemoteClient_ClientDetails\x12(\n" +
	"\x10remote_client_id\x18\x01 \x01(\x06R\x0eremoteClientId\x12C\n" +
	"\x0edevice_details\x18\x02 \x01(\v2\x1c.CRemoteClient_DeviceDetailsR\rdeviceDetails\x12\x1b\n" +
	"\tlast_seen\x18\x04 \x01(\x04R\blastSeen\x12\x12\n" +
	"\x04city\x18\x05 \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\x06 \x01(\tR\x05state\x12\x18\n" +
	"\acountry\x18\a \x01(\tR\acountry\x12\x1b\n" +
	"\tis_online\x18\b \x01(\bR\bisOnline\"}\n" +
	"8CRemoteClient_CreateRemotePlayTogetherInvitation_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12+\n" +
	"\x11launch_parameters\x18\x02 \x01(\tR\x10launchParameters\"d\n" +
	"9CRemoteClient_CreateRemotePlayTogetherInvitation_Response\x12'\n" +
	"\x0finvitation_code\x18\x01 \x01(\tR\x0einvitationCode\"c\n" +
	"8CRemoteClient_DeleteRemotePlayTogetherInvitation_Request\x12'\n" +
	"\x0finvitation_code\x18\x01 \x01(\tR\x0einvitationCode\";\n" +
	"9CRemoteClient_DeleteRemotePlayTogetherInvitation_Response\"\x96\x01\n" +
	"\x1bCRemoteClient_DeviceDetails\x120\n" +
	"\x14device_friendly_name\x18\x01 \x01(\tR\x12deviceFriendlyName\x12\x17\n" +
	"\aos_type\x18\x02 \x01(\x05R\x06osType\x12,\n" +
	"\x12gaming_device_type\x18\x03 \x01(\rR\x10gamingDeviceType\"8\n" +
	"$CRemoteClient_GetPairingInfo_Request\x12\x10\n" +
	"\x03pin\x18\x01 \x01(\rR\x03pin\"}\n" +
	"%CRemoteClient_GetPairingInfo_Response\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x06R\tsessionId\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\x06R\bdeviceId\x12\x18\n" +
	"\arequest\x18\x03 \x01(\fR\arequest\"(\n" +
	"&CRemoteClient_GetRecentClients_Request\"a\n" +
	"'CRemoteClient_GetRecentClients_Response\x126\n" +
	"\aclients\x18\x01 \x03(\v2\x1c.CRemoteClient_ClientDetailsR\aclients\"\x8a\x01\n" +
	"&CRemoteClient_MarkTaskComplete_Request\x12(\n" +
	"\x10remote_client_id\x18\x01 \x01(\x06R\x0eremoteClientId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\x06R\x06taskId\x12\x1d\n" +
	"\n" +
	"content_id\x18\x03 \x01(\tR\tcontentId\")\n" +
	"'CRemoteClient_MarkTaskComplete_Response\"\xac\x01\n" +
	"!CRemoteClient_Online_Notification\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12(\n" +
	"\x10remote_client_id\x18\x02 \x01(\x06R\x0eremoteClientId\x12C\n" +
	"\x0edevice_details\x18\x03 \x01(\v2\x1c.CRemoteClient_DeviceDetailsR\rdeviceDetails\"a\n" +
	"&CRemoteClient_ReplyPacket_Notification\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\x06R\tsessionId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"\x93\x02\n" +
	"\"CRemotePlay_SessionStarted_Request\x12&\n" +
	"\x0fhost_account_id\x18\x01 \x01(\rR\rhostAccountId\x12*\n" +
	"\x11client_account_id\x18\x02 \x01(\rR\x0fclientAccountId\x12\x14\n" +
	"\x05appid\x18\x03 \x01(\rR\x05appid\x12,\n" +
	"\x12device_form_factor\x18\x04 \x01(\x05R\x10deviceFormFactor\x120\n" +
	"\x14remote_play_together\x18\x05 \x01(\bR\x12remotePlayTogether\x12#\n" +
	"\rguest_session\x18\x06 \x01(\bR\fguestSession\"B\n" +
	"#CRemotePlay_SessionStarted_Response\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\x06R\brecordId2\xa6\n" +
	"\n" +
	"\fRemoteClient\x12n\n" +
	"\x13AllocateRelayServer\x12*.CRemoteClient_AllocateRelayServer_Request\x1a+.CRemoteClient_AllocateRelayServer_Response\x12V\n" +
	"\vAllocateSDR\x12\".CRemoteClient_AllocateSDR_Request\x1a#.CRemoteClient_AllocateSDR_Response\x12\x9b\x01\n" +
	"\"CreateRemotePlayTogetherInvitation\x129.CRemoteClient_CreateRemotePlayTogetherInvitation_Request\x1a:.CRemoteClient_CreateRemotePlayTogetherInvitation_Response\x12\x9b\x01\n" +
	"\"DeleteRemotePlayTogetherInvitation\x129.CRemoteClient_DeleteRemotePlayTogetherInvitation_Request\x1a:.CRemoteClient_DeleteRemotePlayTogetherInvitation_Response\x12_\n" +
	"\x0eGetPairingInfo\x12%.CRemoteClient_GetPairingInfo_Request\x1a&.CRemoteClient_GetPairingInfo_Response\x12e\n" +
	"\x10GetRecentClients\x12'.CRemoteClient_GetRecentClients_Request\x1a(.CRemoteClient_GetRecentClients_Response\x12e\n" +
	"\x10MarkTaskComplete\x12'.CRemoteClient_MarkTaskComplete_Request\x1a(.CRemoteClient_MarkTaskComplete_Response\x12?\n" +
	"\fNotifyOnline\x12\".CRemoteClient_Online_Notification\x1a\v.NoResponse\x12I\n" +
	"\x11NotifyReplyPacket\x12'.CRemoteClient_ReplyPacket_Notification\x1a\v.NoResponse\x12i\n" +
	"\x1cSendRemotePlaySessionStarted\x12#.CRemotePlay_SessionStarted_Request\x1a$.CRemotePlay_SessionStarted_Response\x12<\n" +
	"\x1cSendRemotePlaySessionStopped\x12\x0f.NotImplemented\x1a\v.NoResponse\x12<\n" +
	"\x1cSendRemotePlayTogetherPacket\x12\x0f.NotImplemented\x1a\v.NoResponse\x128\n" +
	"\x18SendSteamBroadcastPacket\x12\x0f.NotImplemented\x1a\v.NoResponse\x126\n" +
	"\x16SendSteamToSteamPacket\x12\x0f.NotImplemented\x1a\v.NoResponse"

var (
	file_service_remote_proto_rawDescOnce sync.Once
	file_service_remote_proto_rawDescData []byte
)

func file_service_remote_proto_rawDescGZIP() []byte {
	file_service_remote_proto_rawDescOnce.Do(func() {
		file_service_remote_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_remote_proto_rawDesc), len(file_service_remote_proto_rawDesc)))
	})
	return file_service_remote_proto_rawDescData
}

var file_service_remote_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_service_remote_proto_goTypes = []any{
	(*CRemoteClient_AllocateRelayServer_Request)(nil),                 // 0: CRemoteClient_AllocateRelayServer_Request
	(*CRemoteClient_AllocateRelayServer_Response)(nil),                // 1: CRemoteClient_AllocateRelayServer_Response
	(*CRemoteClient_AllocateSDR_Request)(nil),                         // 2: CRemoteClient_AllocateSDR_Request
	(*CRemoteClient_AllocateSDR_Response)(nil),                        // 3: CRemoteClient_AllocateSDR_Response
	(*CRemoteClient_ClientDetails)(nil),                               // 4: CRemoteClient_ClientDetails
	(*CRemoteClient_CreateRemotePlayTogetherInvitation_Request)(nil),  // 5: CRemoteClient_CreateRemotePlayTogetherInvitation_Request
	(*CRemoteClient_CreateRemotePlayTogetherInvitation_Response)(nil), // 6: CRemoteClient_CreateRemotePlayTogetherInvitation_Response
	(*CRemoteClient_DeleteRemotePlayTogetherInvitation_Request)(nil),  // 7: CRemoteClient_DeleteRemotePlayTogetherInvitation_Request
	(*CRemoteClient_DeleteRemotePlayTogetherInvitation_Response)(nil), // 8: CRemoteClient_DeleteRemotePlayTogetherInvitation_Response
	(*CRemoteClient_DeviceDetails)(nil),                               // 9: CRemoteClient_DeviceDetails
	(*CRemoteClient_GetPairingInfo_Request)(nil),                      // 10: CRemoteClient_GetPairingInfo_Request
	(*CRemoteClient_GetPairingInfo_Response)(nil),                     // 11: CRemoteClient_GetPairingInfo_Response
	(*CRemoteClient_GetRecentClients_Request)(nil),                    // 12: CRemoteClient_GetRecentClients_Request
	(*CRemoteClient_GetRecentClients_Response)(nil),                   // 13: CRemoteClient_GetRecentClients_Response
	(*CRemoteClient_MarkTaskComplete_Request)(nil),                    // 14: CRemoteClient_MarkTaskComplete_Request
	(*CRemoteClient_MarkTaskComplete_Response)(nil),                   // 15: CRemoteClient_MarkTaskComplete_Response
	(*CRemoteClient_Online_Notification)(nil),                         // 16: CRemoteClient_Online_Notification
	(*CRemoteClient_ReplyPacket_Notification)(nil),                    // 17: CRemoteClient_ReplyPacket_Notification
	(*CRemotePlay_SessionStarted_Request)(nil),                        // 18: CRemotePlay_SessionStarted_Request
	(*CRemotePlay_SessionStarted_Response)(nil),                       // 19: CRemotePlay_SessionStarted_Response
	(*NotImplemented)(nil),                                            // 20: NotImplemented
	(*NoResponse)(nil),                                                // 21: NoResponse
}
var file_service_remote_proto_depIdxs = []int32{
	9,  // 0: CRemoteClient_ClientDetails.device_details:type_name -> CRemoteClient_DeviceDetails
	4,  // 1: CRemoteClient_GetRecentClients_Response.clients:type_name -> CRemoteClient_ClientDetails
	9,  // 2: CRemoteClient_Online_Notification.device_details:type_name -> CRemoteClient_DeviceDetails
	0,  // 3: RemoteClient.AllocateRelayServer:input_type -> CRemoteClient_AllocateRelayServer_Request
	2,  // 4: RemoteClient.AllocateSDR:input_type -> CRemoteClient_AllocateSDR_Request
	5,  // 5: RemoteClient.CreateRemotePlayTogetherInvitation:input_type -> CRemoteClient_CreateRemotePlayTogetherInvitation_Request
	7,  // 6: RemoteClient.DeleteRemotePlayTogetherInvitation:input_type -> CRemoteClient_DeleteRemotePlayTogetherInvitation_Request
	10, // 7: RemoteClient.GetPairingInfo:input_type -> CRemoteClient_GetPairingInfo_Request
	12, // 8: RemoteClient.GetRecentClients:input_type -> CRemoteClient_GetRecentClients_Request
	14, // 9: RemoteClient.MarkTaskComplete:input_type -> CRemoteClient_MarkTaskComplete_Request
	16, // 10: RemoteClient.NotifyOnline:input_type -> CRemoteClient_Online_Notification
	17, // 11: RemoteClient.NotifyReplyPacket:input_type -> CRemoteClient_ReplyPacket_Notification
	18, // 12: RemoteClient.SendRemotePlaySessionStarted:input_type -> CRemotePlay_SessionStarted_Request
	20, // 13: RemoteClient.SendRemotePlaySessionStopped:input_type -> NotImplemented
	20, // 14: RemoteClient.SendRemotePlayTogetherPacket:input_type -> NotImplemented
	20, // 15: RemoteClient.SendSteamBroadcastPacket:input_type -> NotImplemented
	20, // 16: RemoteClient.SendSteamToSteamPacket:input_type -> NotImplemented
	1,  // 17: RemoteClient.AllocateRelayServer:output_type -> CRemoteClient_AllocateRelayServer_Response
	3,  // 18: RemoteClient.AllocateSDR:output_type -> CRemoteClient_AllocateSDR_Response
	6,  // 19: RemoteClient.CreateRemotePlayTogetherInvitation:output_type -> CRemoteClient_CreateRemotePlayTogetherInvitation_Response
	8,  // 20: RemoteClient.DeleteRemotePlayTogetherInvitation:output_type -> CRemoteClient_DeleteRemotePlayTogetherInvitation_Response
	11, // 21: RemoteClient.GetPairingInfo:output_type -> CRemoteClient_GetPairingInfo_Response
	13, // 22: RemoteClient.GetRecentClients:output_type -> CRemoteClient_GetRecentClients_Response
	15, // 23: RemoteClient.MarkTaskComplete:output_type -> CRemoteClient_MarkTaskComplete_Response
	21, // 24: RemoteClient.NotifyOnline:output_type -> NoResponse
	21, // 25: RemoteClient.NotifyReplyPacket:output_type -> NoResponse
	19, // 26: RemoteClient.SendRemotePlaySessionStarted:output_type -> CRemotePlay_SessionStarted_Response
	21, // 27: RemoteClient.SendRemotePlaySessionStopped:output_type -> NoResponse
	21, // 28: RemoteClient.SendRemotePlayTogetherPacket:output_type -> NoResponse
	21, // 29: RemoteClient.SendSteamBroadcastPacket:output_type -> NoResponse
	21, // 30: RemoteClient.SendSteamToSteamPacket:output_type -> NoResponse
	17, // [17:31] is the sub-list for method output_type
	3,  // [3:17] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_remote_proto_init() }
func file_service_remote_proto_init() {
	if File_service_remote_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_remote_proto_rawDesc), len(file_service_remote_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_remote_proto_goTypes,
		DependencyIndexes: file_service_remote_proto_depIdxs,
		MessageInfos:      file_service_remote_proto_msgTypes,
	}.Build()
	File_service_remote_proto = out.File
	file_service_remote_proto_goTypes = nil
	file_service_remote_proto_depIdxs = nil
}
