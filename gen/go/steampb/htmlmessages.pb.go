// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: htmlmessages.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EJSRegisterMethodType int32

const (
	EJSRegisterMethodType_k_EJSRegisterMethodType_Invalid  EJSRegisterMethodType = 0
	EJSRegisterMethodType_k_EJSRegisterMethodType_Function EJSRegisterMethodType = 1
	EJSRegisterMethodType_k_EJSRegisterMethodType_Callback EJSRegisterMethodType = 2
	EJSRegisterMethodType_k_EJSRegisterMethodType_Promise  EJSRegisterMethodType = 3
)

// Enum value maps for EJSRegisterMethodType.
var (
	EJSRegisterMethodType_name = map[int32]string{
		0: "k_EJSRegisterMethodType_Invalid",
		1: "k_EJSRegisterMethodType_Function",
		2: "k_EJSRegisterMethodType_Callback",
		3: "k_EJSRegisterMethodType_Promise",
	}
	EJSRegisterMethodType_value = map[string]int32{
		"k_EJSRegisterMethodType_Invalid":  0,
		"k_EJSRegisterMethodType_Function": 1,
		"k_EJSRegisterMethodType_Callback": 2,
		"k_EJSRegisterMethodType_Promise":  3,
	}
)

func (x EJSRegisterMethodType) Enum() *EJSRegisterMethodType {
	p := new(EJSRegisterMethodType)
	*p = x
	return p
}

func (x EJSRegisterMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EJSRegisterMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_htmlmessages_proto_enumTypes[0].Descriptor()
}

func (EJSRegisterMethodType) Type() protoreflect.EnumType {
	return &file_htmlmessages_proto_enumTypes[0]
}

func (x EJSRegisterMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EJSRegisterMethodType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EJSRegisterMethodType(num)
	return nil
}

// Deprecated: Use EJSRegisterMethodType.Descriptor instead.
func (EJSRegisterMethodType) EnumDescriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{0}
}

type EAccessibilityContrastMode int32

const (
	EAccessibilityContrastMode_k_EBrowserContrastMode_NoPreference EAccessibilityContrastMode = 0
	EAccessibilityContrastMode_k_EBrowserContrastMode_More         EAccessibilityContrastMode = 1
	EAccessibilityContrastMode_k_EBrowserContrastMode_Less         EAccessibilityContrastMode = 2
)

// Enum value maps for EAccessibilityContrastMode.
var (
	EAccessibilityContrastMode_name = map[int32]string{
		0: "k_EBrowserContrastMode_NoPreference",
		1: "k_EBrowserContrastMode_More",
		2: "k_EBrowserContrastMode_Less",
	}
	EAccessibilityContrastMode_value = map[string]int32{
		"k_EBrowserContrastMode_NoPreference": 0,
		"k_EBrowserContrastMode_More":         1,
		"k_EBrowserContrastMode_Less":         2,
	}
)

func (x EAccessibilityContrastMode) Enum() *EAccessibilityContrastMode {
	p := new(EAccessibilityContrastMode)
	*p = x
	return p
}

func (x EAccessibilityContrastMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAccessibilityContrastMode) Descriptor() protoreflect.EnumDescriptor {
	return file_htmlmessages_proto_enumTypes[1].Descriptor()
}

func (EAccessibilityContrastMode) Type() protoreflect.EnumType {
	return &file_htmlmessages_proto_enumTypes[1]
}

func (x EAccessibilityContrastMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EAccessibilityContrastMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EAccessibilityContrastMode(num)
	return nil
}

// Deprecated: Use EAccessibilityContrastMode.Descriptor instead.
func (EAccessibilityContrastMode) EnumDescriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{1}
}

type CMsgKeyUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	KeyCode       *uint32                `protobuf:"varint,2,opt,name=keyCode" json:"keyCode,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	NativeKeyCode *uint32                `protobuf:"varint,4,opt,name=nativeKeyCode" json:"nativeKeyCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgKeyUp) Reset() {
	*x = CMsgKeyUp{}
	mi := &file_htmlmessages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgKeyUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKeyUp) ProtoMessage() {}

func (x *CMsgKeyUp) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKeyUp.ProtoReflect.Descriptor instead.
func (*CMsgKeyUp) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgKeyUp) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgKeyUp) GetKeyCode() uint32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *CMsgKeyUp) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgKeyUp) GetNativeKeyCode() uint32 {
	if x != nil && x.NativeKeyCode != nil {
		return *x.NativeKeyCode
	}
	return 0
}

type CMsgKeyDown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	KeyCode       *uint32                `protobuf:"varint,2,opt,name=keyCode" json:"keyCode,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	IsSystemKey   *bool                  `protobuf:"varint,4,opt,name=is_system_key,json=isSystemKey" json:"is_system_key,omitempty"`
	NativeKeyCode *uint32                `protobuf:"varint,5,opt,name=nativeKeyCode" json:"nativeKeyCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgKeyDown) Reset() {
	*x = CMsgKeyDown{}
	mi := &file_htmlmessages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgKeyDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKeyDown) ProtoMessage() {}

func (x *CMsgKeyDown) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKeyDown.ProtoReflect.Descriptor instead.
func (*CMsgKeyDown) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgKeyDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgKeyDown) GetKeyCode() uint32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *CMsgKeyDown) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgKeyDown) GetIsSystemKey() bool {
	if x != nil && x.IsSystemKey != nil {
		return *x.IsSystemKey
	}
	return false
}

func (x *CMsgKeyDown) GetNativeKeyCode() uint32 {
	if x != nil && x.NativeKeyCode != nil {
		return *x.NativeKeyCode
	}
	return 0
}

type CMsgKeyChar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Unichar       *uint32                `protobuf:"varint,2,opt,name=unichar" json:"unichar,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	KeyCode       *uint32                `protobuf:"varint,4,opt,name=keyCode" json:"keyCode,omitempty"`
	NativeKeyCode *uint32                `protobuf:"varint,5,opt,name=nativeKeyCode" json:"nativeKeyCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgKeyChar) Reset() {
	*x = CMsgKeyChar{}
	mi := &file_htmlmessages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgKeyChar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgKeyChar) ProtoMessage() {}

func (x *CMsgKeyChar) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgKeyChar.ProtoReflect.Descriptor instead.
func (*CMsgKeyChar) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgKeyChar) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgKeyChar) GetUnichar() uint32 {
	if x != nil && x.Unichar != nil {
		return *x.Unichar
	}
	return 0
}

func (x *CMsgKeyChar) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgKeyChar) GetKeyCode() uint32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *CMsgKeyChar) GetNativeKeyCode() uint32 {
	if x != nil && x.NativeKeyCode != nil {
		return *x.NativeKeyCode
	}
	return 0
}

type CMsgMouseDown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	MouseButton   *uint32                `protobuf:"varint,2,opt,name=mouse_button,json=mouseButton" json:"mouse_button,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMouseDown) Reset() {
	*x = CMsgMouseDown{}
	mi := &file_htmlmessages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMouseDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseDown) ProtoMessage() {}

func (x *CMsgMouseDown) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseDown.ProtoReflect.Descriptor instead.
func (*CMsgMouseDown) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgMouseDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseDown) GetMouseButton() uint32 {
	if x != nil && x.MouseButton != nil {
		return *x.MouseButton
	}
	return 0
}

func (x *CMsgMouseDown) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	MouseButton   *uint32                `protobuf:"varint,2,opt,name=mouse_button,json=mouseButton" json:"mouse_button,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	IsOffPanel    *bool                  `protobuf:"varint,4,opt,name=is_off_panel,json=isOffPanel" json:"is_off_panel,omitempty"`
	X             *int32                 `protobuf:"varint,5,opt,name=x" json:"x,omitempty"`
	Y             *int32                 `protobuf:"varint,6,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMouseUp) Reset() {
	*x = CMsgMouseUp{}
	mi := &file_htmlmessages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMouseUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseUp) ProtoMessage() {}

func (x *CMsgMouseUp) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseUp.ProtoReflect.Descriptor instead.
func (*CMsgMouseUp) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgMouseUp) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseUp) GetMouseButton() uint32 {
	if x != nil && x.MouseButton != nil {
		return *x.MouseButton
	}
	return 0
}

func (x *CMsgMouseUp) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

func (x *CMsgMouseUp) GetIsOffPanel() bool {
	if x != nil && x.IsOffPanel != nil {
		return *x.IsOffPanel
	}
	return false
}

func (x *CMsgMouseUp) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgMouseUp) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgMouseDblClick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	MouseButton   *uint32                `protobuf:"varint,2,opt,name=mouse_button,json=mouseButton" json:"mouse_button,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,3,opt,name=modifiers" json:"modifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMouseDblClick) Reset() {
	*x = CMsgMouseDblClick{}
	mi := &file_htmlmessages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMouseDblClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseDblClick) ProtoMessage() {}

func (x *CMsgMouseDblClick) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseDblClick.ProtoReflect.Descriptor instead.
func (*CMsgMouseDblClick) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgMouseDblClick) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseDblClick) GetMouseButton() uint32 {
	if x != nil && x.MouseButton != nil {
		return *x.MouseButton
	}
	return 0
}

func (x *CMsgMouseDblClick) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseWheel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Deltax        *int32                 `protobuf:"varint,2,opt,name=deltax" json:"deltax,omitempty"`
	Deltay        *int32                 `protobuf:"varint,3,opt,name=deltay" json:"deltay,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,4,opt,name=modifiers" json:"modifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMouseWheel) Reset() {
	*x = CMsgMouseWheel{}
	mi := &file_htmlmessages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMouseWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseWheel) ProtoMessage() {}

func (x *CMsgMouseWheel) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseWheel.ProtoReflect.Descriptor instead.
func (*CMsgMouseWheel) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgMouseWheel) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseWheel) GetDeltax() int32 {
	if x != nil && x.Deltax != nil {
		return *x.Deltax
	}
	return 0
}

func (x *CMsgMouseWheel) GetDeltay() int32 {
	if x != nil && x.Deltay != nil {
		return *x.Deltay
	}
	return 0
}

func (x *CMsgMouseWheel) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32                 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32                 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Modifiers     *uint32                `protobuf:"varint,4,opt,name=modifiers" json:"modifiers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMouseMove) Reset() {
	*x = CMsgMouseMove{}
	mi := &file_htmlmessages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMouseMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseMove) ProtoMessage() {}

func (x *CMsgMouseMove) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseMove.ProtoReflect.Descriptor instead.
func (*CMsgMouseMove) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgMouseMove) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgMouseMove) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgMouseMove) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgMouseMove) GetModifiers() uint32 {
	if x != nil && x.Modifiers != nil {
		return *x.Modifiers
	}
	return 0
}

type CMsgMouseLeave struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMouseLeave) Reset() {
	*x = CMsgMouseLeave{}
	mi := &file_htmlmessages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMouseLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMouseLeave) ProtoMessage() {}

func (x *CMsgMouseLeave) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMouseLeave.ProtoReflect.Descriptor instead.
func (*CMsgMouseLeave) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgMouseLeave) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgBrowserCreate struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	RequestId              *uint32                `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Useragent              *string                `protobuf:"bytes,3,opt,name=useragent" json:"useragent,omitempty"`
	UserCss                *string                `protobuf:"bytes,5,opt,name=user_css,json=userCss" json:"user_css,omitempty"`
	NativeDropdowns        *bool                  `protobuf:"varint,6,opt,name=native_dropdowns,json=nativeDropdowns" json:"native_dropdowns,omitempty"`
	DpiScaling             *float32               `protobuf:"fixed32,7,opt,name=dpi_scaling,json=dpiScaling" json:"dpi_scaling,omitempty"`
	Offscreen              *bool                  `protobuf:"varint,8,opt,name=offscreen,def=1" json:"offscreen,omitempty"`
	InitialWidth           *uint32                `protobuf:"varint,9,opt,name=initial_width,json=initialWidth,def=0" json:"initial_width,omitempty"`
	InitialHeight          *uint32                `protobuf:"varint,10,opt,name=initial_height,json=initialHeight,def=0" json:"initial_height,omitempty"`
	WindowIcon             *string                `protobuf:"bytes,11,opt,name=window_icon,json=windowIcon" json:"window_icon,omitempty"`
	Borderless             *bool                  `protobuf:"varint,12,opt,name=borderless,def=0" json:"borderless,omitempty"`
	VroverlayKey           *string                `protobuf:"bytes,13,opt,name=vroverlay_key,json=vroverlayKey" json:"vroverlay_key,omitempty"`
	BrowserType            *uint32                `protobuf:"varint,14,opt,name=browser_type,json=browserType,def=0" json:"browser_type,omitempty"`
	InitialTop             *int32                 `protobuf:"varint,15,opt,name=initial_top,json=initialTop,def=-2147483648" json:"initial_top,omitempty"`
	InitialLeft            *int32                 `protobuf:"varint,16,opt,name=initial_left,json=initialLeft,def=-2147483648" json:"initial_left,omitempty"`
	OnlyAllowTrustedPopups *bool                  `protobuf:"varint,17,opt,name=only_allow_trusted_popups,json=onlyAllowTrustedPopups,def=0" json:"only_allow_trusted_popups,omitempty"`
	InitialUrl             *string                `protobuf:"bytes,18,opt,name=initial_url,json=initialUrl" json:"initial_url,omitempty"`
	HwndParent             *uint64                `protobuf:"fixed64,19,opt,name=hwnd_parent,json=hwndParent" json:"hwnd_parent,omitempty"`
	CreationFlags          *uint32                `protobuf:"varint,20,opt,name=creation_flags,json=creationFlags,def=0" json:"creation_flags,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

// Default values for CMsgBrowserCreate fields.
const (
	Default_CMsgBrowserCreate_Offscreen              = bool(true)
	Default_CMsgBrowserCreate_InitialWidth           = uint32(0)
	Default_CMsgBrowserCreate_InitialHeight          = uint32(0)
	Default_CMsgBrowserCreate_Borderless             = bool(false)
	Default_CMsgBrowserCreate_BrowserType            = uint32(0)
	Default_CMsgBrowserCreate_InitialTop             = int32(-2147483648)
	Default_CMsgBrowserCreate_InitialLeft            = int32(-2147483648)
	Default_CMsgBrowserCreate_OnlyAllowTrustedPopups = bool(false)
	Default_CMsgBrowserCreate_CreationFlags          = uint32(0)
)

func (x *CMsgBrowserCreate) Reset() {
	*x = CMsgBrowserCreate{}
	mi := &file_htmlmessages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserCreate) ProtoMessage() {}

func (x *CMsgBrowserCreate) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserCreate.ProtoReflect.Descriptor instead.
func (*CMsgBrowserCreate) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgBrowserCreate) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgBrowserCreate) GetUseragent() string {
	if x != nil && x.Useragent != nil {
		return *x.Useragent
	}
	return ""
}

func (x *CMsgBrowserCreate) GetUserCss() string {
	if x != nil && x.UserCss != nil {
		return *x.UserCss
	}
	return ""
}

func (x *CMsgBrowserCreate) GetNativeDropdowns() bool {
	if x != nil && x.NativeDropdowns != nil {
		return *x.NativeDropdowns
	}
	return false
}

func (x *CMsgBrowserCreate) GetDpiScaling() float32 {
	if x != nil && x.DpiScaling != nil {
		return *x.DpiScaling
	}
	return 0
}

func (x *CMsgBrowserCreate) GetOffscreen() bool {
	if x != nil && x.Offscreen != nil {
		return *x.Offscreen
	}
	return Default_CMsgBrowserCreate_Offscreen
}

func (x *CMsgBrowserCreate) GetInitialWidth() uint32 {
	if x != nil && x.InitialWidth != nil {
		return *x.InitialWidth
	}
	return Default_CMsgBrowserCreate_InitialWidth
}

func (x *CMsgBrowserCreate) GetInitialHeight() uint32 {
	if x != nil && x.InitialHeight != nil {
		return *x.InitialHeight
	}
	return Default_CMsgBrowserCreate_InitialHeight
}

func (x *CMsgBrowserCreate) GetWindowIcon() string {
	if x != nil && x.WindowIcon != nil {
		return *x.WindowIcon
	}
	return ""
}

func (x *CMsgBrowserCreate) GetBorderless() bool {
	if x != nil && x.Borderless != nil {
		return *x.Borderless
	}
	return Default_CMsgBrowserCreate_Borderless
}

func (x *CMsgBrowserCreate) GetVroverlayKey() string {
	if x != nil && x.VroverlayKey != nil {
		return *x.VroverlayKey
	}
	return ""
}

func (x *CMsgBrowserCreate) GetBrowserType() uint32 {
	if x != nil && x.BrowserType != nil {
		return *x.BrowserType
	}
	return Default_CMsgBrowserCreate_BrowserType
}

func (x *CMsgBrowserCreate) GetInitialTop() int32 {
	if x != nil && x.InitialTop != nil {
		return *x.InitialTop
	}
	return Default_CMsgBrowserCreate_InitialTop
}

func (x *CMsgBrowserCreate) GetInitialLeft() int32 {
	if x != nil && x.InitialLeft != nil {
		return *x.InitialLeft
	}
	return Default_CMsgBrowserCreate_InitialLeft
}

func (x *CMsgBrowserCreate) GetOnlyAllowTrustedPopups() bool {
	if x != nil && x.OnlyAllowTrustedPopups != nil {
		return *x.OnlyAllowTrustedPopups
	}
	return Default_CMsgBrowserCreate_OnlyAllowTrustedPopups
}

func (x *CMsgBrowserCreate) GetInitialUrl() string {
	if x != nil && x.InitialUrl != nil {
		return *x.InitialUrl
	}
	return ""
}

func (x *CMsgBrowserCreate) GetHwndParent() uint64 {
	if x != nil && x.HwndParent != nil {
		return *x.HwndParent
	}
	return 0
}

func (x *CMsgBrowserCreate) GetCreationFlags() uint32 {
	if x != nil && x.CreationFlags != nil {
		return *x.CreationFlags
	}
	return Default_CMsgBrowserCreate_CreationFlags
}

type CMsgBrowserCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	RequestId     *uint32                `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserCreateResponse) Reset() {
	*x = CMsgBrowserCreateResponse{}
	mi := &file_htmlmessages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserCreateResponse) ProtoMessage() {}

func (x *CMsgBrowserCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserCreateResponse.ProtoReflect.Descriptor instead.
func (*CMsgBrowserCreateResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgBrowserCreateResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserCreateResponse) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

type CMsgBrowserRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserRemove) Reset() {
	*x = CMsgBrowserRemove{}
	mi := &file_htmlmessages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserRemove) ProtoMessage() {}

func (x *CMsgBrowserRemove) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserRemove.ProtoReflect.Descriptor instead.
func (*CMsgBrowserRemove) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgBrowserRemove) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetLocalFileRequestMapping struct {
	state            protoimpl.MessageState                            `protogen:"open.v1"`
	BrowserHandle    *uint32                                           `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	RequestUrl       *string                                           `protobuf:"bytes,2,opt,name=request_url,json=requestUrl" json:"request_url,omitempty"`
	DefaultLocalPath *string                                           `protobuf:"bytes,3,opt,name=default_local_path,json=defaultLocalPath" json:"default_local_path,omitempty"`
	Routes           []*CMsgSetLocalFileRequestMapping_AdditionalRoute `protobuf:"bytes,4,rep,name=routes" json:"routes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgSetLocalFileRequestMapping) Reset() {
	*x = CMsgSetLocalFileRequestMapping{}
	mi := &file_htmlmessages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetLocalFileRequestMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetLocalFileRequestMapping) ProtoMessage() {}

func (x *CMsgSetLocalFileRequestMapping) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetLocalFileRequestMapping.ProtoReflect.Descriptor instead.
func (*CMsgSetLocalFileRequestMapping) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgSetLocalFileRequestMapping) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetLocalFileRequestMapping) GetRequestUrl() string {
	if x != nil && x.RequestUrl != nil {
		return *x.RequestUrl
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping) GetDefaultLocalPath() string {
	if x != nil && x.DefaultLocalPath != nil {
		return *x.DefaultLocalPath
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping) GetRoutes() []*CMsgSetLocalFileRequestMapping_AdditionalRoute {
	if x != nil {
		return x.Routes
	}
	return nil
}

type CMsgBrowserErrorStrings struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle     *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Title             *string                `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Header            *string                `protobuf:"bytes,3,opt,name=header" json:"header,omitempty"`
	CacheMiss         *string                `protobuf:"bytes,4,opt,name=cache_miss,json=cacheMiss" json:"cache_miss,omitempty"`
	BadUrl            *string                `protobuf:"bytes,5,opt,name=bad_url,json=badUrl" json:"bad_url,omitempty"`
	ConnectionProblem *string                `protobuf:"bytes,6,opt,name=connection_problem,json=connectionProblem" json:"connection_problem,omitempty"`
	ProxyProblem      *string                `protobuf:"bytes,7,opt,name=proxy_problem,json=proxyProblem" json:"proxy_problem,omitempty"`
	Unknown           *string                `protobuf:"bytes,8,opt,name=unknown" json:"unknown,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgBrowserErrorStrings) Reset() {
	*x = CMsgBrowserErrorStrings{}
	mi := &file_htmlmessages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserErrorStrings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserErrorStrings) ProtoMessage() {}

func (x *CMsgBrowserErrorStrings) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserErrorStrings.ProtoReflect.Descriptor instead.
func (*CMsgBrowserErrorStrings) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgBrowserErrorStrings) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserErrorStrings) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetCacheMiss() string {
	if x != nil && x.CacheMiss != nil {
		return *x.CacheMiss
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetBadUrl() string {
	if x != nil && x.BadUrl != nil {
		return *x.BadUrl
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetConnectionProblem() string {
	if x != nil && x.ConnectionProblem != nil {
		return *x.ConnectionProblem
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetProxyProblem() string {
	if x != nil && x.ProxyProblem != nil {
		return *x.ProxyProblem
	}
	return ""
}

func (x *CMsgBrowserErrorStrings) GetUnknown() string {
	if x != nil && x.Unknown != nil {
		return *x.Unknown
	}
	return ""
}

type CMsgBrowserSetName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserSetName) Reset() {
	*x = CMsgBrowserSetName{}
	mi := &file_htmlmessages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserSetName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserSetName) ProtoMessage() {}

func (x *CMsgBrowserSetName) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserSetName.ProtoReflect.Descriptor instead.
func (*CMsgBrowserSetName) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgBrowserSetName) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserSetName) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CMsgBrowserSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *float64               `protobuf:"fixed64,2,opt,name=width" json:"width,omitempty"`
	Height        *float64               `protobuf:"fixed64,3,opt,name=height" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserSize) Reset() {
	*x = CMsgBrowserSize{}
	mi := &file_htmlmessages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserSize) ProtoMessage() {}

func (x *CMsgBrowserSize) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserSize.ProtoReflect.Descriptor instead.
func (*CMsgBrowserSize) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgBrowserSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserSize) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgBrowserSize) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgBrowserSetMinSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *float64               `protobuf:"fixed64,2,opt,name=width" json:"width,omitempty"`
	Height        *float64               `protobuf:"fixed64,3,opt,name=height" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserSetMinSize) Reset() {
	*x = CMsgBrowserSetMinSize{}
	mi := &file_htmlmessages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserSetMinSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserSetMinSize) ProtoMessage() {}

func (x *CMsgBrowserSetMinSize) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserSetMinSize.ProtoReflect.Descriptor instead.
func (*CMsgBrowserSetMinSize) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgBrowserSetMinSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserSetMinSize) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgBrowserSetMinSize) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgBrowserPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *float64               `protobuf:"fixed64,2,opt,name=x" json:"x,omitempty"`
	Y             *float64               `protobuf:"fixed64,3,opt,name=y" json:"y,omitempty"`
	XLocal        *float64               `protobuf:"fixed64,4,opt,name=x_local,json=xLocal" json:"x_local,omitempty"`
	YLocal        *float64               `protobuf:"fixed64,5,opt,name=y_local,json=yLocal" json:"y_local,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserPosition) Reset() {
	*x = CMsgBrowserPosition{}
	mi := &file_htmlmessages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserPosition) ProtoMessage() {}

func (x *CMsgBrowserPosition) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserPosition.ProtoReflect.Descriptor instead.
func (*CMsgBrowserPosition) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgBrowserPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserPosition) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgBrowserPosition) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgBrowserPosition) GetXLocal() float64 {
	if x != nil && x.XLocal != nil {
		return *x.XLocal
	}
	return 0
}

func (x *CMsgBrowserPosition) GetYLocal() float64 {
	if x != nil && x.YLocal != nil {
		return *x.YLocal
	}
	return 0
}

type CMsgBrowserResized struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *float64               `protobuf:"fixed64,2,opt,name=x" json:"x,omitempty"`
	Y             *float64               `protobuf:"fixed64,3,opt,name=y" json:"y,omitempty"`
	Width         *float64               `protobuf:"fixed64,4,opt,name=width" json:"width,omitempty"`
	Height        *float64               `protobuf:"fixed64,5,opt,name=height" json:"height,omitempty"`
	Fullscreen    *bool                  `protobuf:"varint,6,opt,name=fullscreen" json:"fullscreen,omitempty"`
	DpiHorizontal *float64               `protobuf:"fixed64,7,opt,name=dpi_horizontal,json=dpiHorizontal" json:"dpi_horizontal,omitempty"`
	DpiVertical   *float64               `protobuf:"fixed64,8,opt,name=dpi_vertical,json=dpiVertical" json:"dpi_vertical,omitempty"`
	DisplayName   *string                `protobuf:"bytes,9,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayWidth  *uint32                `protobuf:"varint,10,opt,name=display_width,json=displayWidth" json:"display_width,omitempty"`
	DisplayHeight *uint32                `protobuf:"varint,11,opt,name=display_height,json=displayHeight" json:"display_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserResized) Reset() {
	*x = CMsgBrowserResized{}
	mi := &file_htmlmessages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserResized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserResized) ProtoMessage() {}

func (x *CMsgBrowserResized) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserResized.ProtoReflect.Descriptor instead.
func (*CMsgBrowserResized) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgBrowserResized) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserResized) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgBrowserResized) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgBrowserResized) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgBrowserResized) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgBrowserResized) GetFullscreen() bool {
	if x != nil && x.Fullscreen != nil {
		return *x.Fullscreen
	}
	return false
}

func (x *CMsgBrowserResized) GetDpiHorizontal() float64 {
	if x != nil && x.DpiHorizontal != nil {
		return *x.DpiHorizontal
	}
	return 0
}

func (x *CMsgBrowserResized) GetDpiVertical() float64 {
	if x != nil && x.DpiVertical != nil {
		return *x.DpiVertical
	}
	return 0
}

func (x *CMsgBrowserResized) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CMsgBrowserResized) GetDisplayWidth() uint32 {
	if x != nil && x.DisplayWidth != nil {
		return *x.DisplayWidth
	}
	return 0
}

func (x *CMsgBrowserResized) GetDisplayHeight() uint32 {
	if x != nil && x.DisplayHeight != nil {
		return *x.DisplayHeight
	}
	return 0
}

type CMsgPostURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Post          *string                `protobuf:"bytes,3,opt,name=post" json:"post,omitempty"`
	Pageserial    *uint32                `protobuf:"varint,4,opt,name=pageserial" json:"pageserial,omitempty"`
	ReplaceEntry  *bool                  `protobuf:"varint,5,opt,name=replace_entry,json=replaceEntry" json:"replace_entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPostURL) Reset() {
	*x = CMsgPostURL{}
	mi := &file_htmlmessages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPostURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPostURL) ProtoMessage() {}

func (x *CMsgPostURL) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPostURL.ProtoReflect.Descriptor instead.
func (*CMsgPostURL) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CMsgPostURL) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPostURL) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgPostURL) GetPost() string {
	if x != nil && x.Post != nil {
		return *x.Post
	}
	return ""
}

func (x *CMsgPostURL) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

func (x *CMsgPostURL) GetReplaceEntry() bool {
	if x != nil && x.ReplaceEntry != nil {
		return *x.ReplaceEntry
	}
	return false
}

type CMsgAddHeader struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle   *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Key             *string                `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value           *string                `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	OnlySendToSteam *bool                  `protobuf:"varint,4,opt,name=only_send_to_steam,json=onlySendToSteam" json:"only_send_to_steam,omitempty"`
	SendInXhr       *bool                  `protobuf:"varint,5,opt,name=send_in_xhr,json=sendInXhr" json:"send_in_xhr,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgAddHeader) Reset() {
	*x = CMsgAddHeader{}
	mi := &file_htmlmessages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAddHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAddHeader) ProtoMessage() {}

func (x *CMsgAddHeader) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAddHeader.ProtoReflect.Descriptor instead.
func (*CMsgAddHeader) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CMsgAddHeader) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgAddHeader) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CMsgAddHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CMsgAddHeader) GetOnlySendToSteam() bool {
	if x != nil && x.OnlySendToSteam != nil {
		return *x.OnlySendToSteam
	}
	return false
}

func (x *CMsgAddHeader) GetSendInXhr() bool {
	if x != nil && x.SendInXhr != nil {
		return *x.SendInXhr
	}
	return false
}

type CMsgStopLoad struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgStopLoad) Reset() {
	*x = CMsgStopLoad{}
	mi := &file_htmlmessages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgStopLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStopLoad) ProtoMessage() {}

func (x *CMsgStopLoad) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStopLoad.ProtoReflect.Descriptor instead.
func (*CMsgStopLoad) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CMsgStopLoad) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgReload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgReload) Reset() {
	*x = CMsgReload{}
	mi := &file_htmlmessages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgReload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgReload) ProtoMessage() {}

func (x *CMsgReload) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgReload.ProtoReflect.Descriptor instead.
func (*CMsgReload) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CMsgReload) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGoForward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGoForward) Reset() {
	*x = CMsgGoForward{}
	mi := &file_htmlmessages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGoForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGoForward) ProtoMessage() {}

func (x *CMsgGoForward) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGoForward.ProtoReflect.Descriptor instead.
func (*CMsgGoForward) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CMsgGoForward) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGoBack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGoBack) Reset() {
	*x = CMsgGoBack{}
	mi := &file_htmlmessages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGoBack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGoBack) ProtoMessage() {}

func (x *CMsgGoBack) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGoBack.ProtoReflect.Descriptor instead.
func (*CMsgGoBack) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CMsgGoBack) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgWasHidden struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Hidden        *bool                  `protobuf:"varint,2,opt,name=hidden" json:"hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgWasHidden) Reset() {
	*x = CMsgWasHidden{}
	mi := &file_htmlmessages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgWasHidden) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgWasHidden) ProtoMessage() {}

func (x *CMsgWasHidden) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgWasHidden.ProtoReflect.Descriptor instead.
func (*CMsgWasHidden) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CMsgWasHidden) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgWasHidden) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

type CMsgSetWindowVisibility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Visible       *bool                  `protobuf:"varint,2,opt,name=visible" json:"visible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetWindowVisibility) Reset() {
	*x = CMsgSetWindowVisibility{}
	mi := &file_htmlmessages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetWindowVisibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetWindowVisibility) ProtoMessage() {}

func (x *CMsgSetWindowVisibility) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetWindowVisibility.ProtoReflect.Descriptor instead.
func (*CMsgSetWindowVisibility) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CMsgSetWindowVisibility) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetWindowVisibility) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

type CMsgClearHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClearHistory) Reset() {
	*x = CMsgClearHistory{}
	mi := &file_htmlmessages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClearHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearHistory) ProtoMessage() {}

func (x *CMsgClearHistory) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearHistory.ProtoReflect.Descriptor instead.
func (*CMsgClearHistory) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CMsgClearHistory) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgClearAllBrowsingData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClearAllBrowsingData) Reset() {
	*x = CMsgClearAllBrowsingData{}
	mi := &file_htmlmessages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClearAllBrowsingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearAllBrowsingData) ProtoMessage() {}

func (x *CMsgClearAllBrowsingData) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearAllBrowsingData.ProtoReflect.Descriptor instead.
func (*CMsgClearAllBrowsingData) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{28}
}

func (x *CMsgClearAllBrowsingData) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgCopy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgCopy) Reset() {
	*x = CMsgCopy{}
	mi := &file_htmlmessages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgCopy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCopy) ProtoMessage() {}

func (x *CMsgCopy) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCopy.ProtoReflect.Descriptor instead.
func (*CMsgCopy) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CMsgCopy) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgPaste struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPaste) Reset() {
	*x = CMsgPaste{}
	mi := &file_htmlmessages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPaste) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPaste) ProtoMessage() {}

func (x *CMsgPaste) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPaste.ProtoReflect.Descriptor instead.
func (*CMsgPaste) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CMsgPaste) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgExecuteJavaScript struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Script        *string                `protobuf:"bytes,2,opt,name=script" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgExecuteJavaScript) Reset() {
	*x = CMsgExecuteJavaScript{}
	mi := &file_htmlmessages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgExecuteJavaScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgExecuteJavaScript) ProtoMessage() {}

func (x *CMsgExecuteJavaScript) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgExecuteJavaScript.ProtoReflect.Descriptor instead.
func (*CMsgExecuteJavaScript) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{31}
}

func (x *CMsgExecuteJavaScript) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgExecuteJavaScript) GetScript() string {
	if x != nil && x.Script != nil {
		return *x.Script
	}
	return ""
}

type CMsgSetFocus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Focus         *bool                  `protobuf:"varint,2,opt,name=focus" json:"focus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetFocus) Reset() {
	*x = CMsgSetFocus{}
	mi := &file_htmlmessages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetFocus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetFocus) ProtoMessage() {}

func (x *CMsgSetFocus) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetFocus.ProtoReflect.Descriptor instead.
func (*CMsgSetFocus) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{32}
}

func (x *CMsgSetFocus) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetFocus) GetFocus() bool {
	if x != nil && x.Focus != nil {
		return *x.Focus
	}
	return false
}

type CMsgHorizontalScrollBarSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHorizontalScrollBarSize) Reset() {
	*x = CMsgHorizontalScrollBarSize{}
	mi := &file_htmlmessages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHorizontalScrollBarSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHorizontalScrollBarSize) ProtoMessage() {}

func (x *CMsgHorizontalScrollBarSize) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHorizontalScrollBarSize.ProtoReflect.Descriptor instead.
func (*CMsgHorizontalScrollBarSize) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{33}
}

func (x *CMsgHorizontalScrollBarSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgHorizontalScrollBarSizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ScrollMax     *uint32                `protobuf:"varint,6,opt,name=scroll_max,json=scrollMax" json:"scroll_max,omitempty"`
	Scroll        *uint32                `protobuf:"varint,7,opt,name=scroll" json:"scroll,omitempty"`
	Zoom          *float32               `protobuf:"fixed32,8,opt,name=zoom" json:"zoom,omitempty"`
	Visible       *bool                  `protobuf:"varint,9,opt,name=visible" json:"visible,omitempty"`
	PageSize      *uint32                `protobuf:"varint,10,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHorizontalScrollBarSizeResponse) Reset() {
	*x = CMsgHorizontalScrollBarSizeResponse{}
	mi := &file_htmlmessages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHorizontalScrollBarSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHorizontalScrollBarSizeResponse) ProtoMessage() {}

func (x *CMsgHorizontalScrollBarSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHorizontalScrollBarSizeResponse.ProtoReflect.Descriptor instead.
func (*CMsgHorizontalScrollBarSizeResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{34}
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetScrollMax() uint32 {
	if x != nil && x.ScrollMax != nil {
		return *x.ScrollMax
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

func (x *CMsgHorizontalScrollBarSizeResponse) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type CMsgVerticalScrollBarSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgVerticalScrollBarSize) Reset() {
	*x = CMsgVerticalScrollBarSize{}
	mi := &file_htmlmessages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVerticalScrollBarSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVerticalScrollBarSize) ProtoMessage() {}

func (x *CMsgVerticalScrollBarSize) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVerticalScrollBarSize.ProtoReflect.Descriptor instead.
func (*CMsgVerticalScrollBarSize) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{35}
}

func (x *CMsgVerticalScrollBarSize) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgVerticalScrollBarSizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ScrollMax     *uint32                `protobuf:"varint,6,opt,name=scroll_max,json=scrollMax" json:"scroll_max,omitempty"`
	Scroll        *uint32                `protobuf:"varint,7,opt,name=scroll" json:"scroll,omitempty"`
	Zoom          *float32               `protobuf:"fixed32,8,opt,name=zoom" json:"zoom,omitempty"`
	Visible       *bool                  `protobuf:"varint,9,opt,name=visible" json:"visible,omitempty"`
	PageSize      *uint32                `protobuf:"varint,10,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgVerticalScrollBarSizeResponse) Reset() {
	*x = CMsgVerticalScrollBarSizeResponse{}
	mi := &file_htmlmessages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVerticalScrollBarSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVerticalScrollBarSizeResponse) ProtoMessage() {}

func (x *CMsgVerticalScrollBarSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVerticalScrollBarSizeResponse.ProtoReflect.Descriptor instead.
func (*CMsgVerticalScrollBarSizeResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{36}
}

func (x *CMsgVerticalScrollBarSizeResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetScrollMax() uint32 {
	if x != nil && x.ScrollMax != nil {
		return *x.ScrollMax
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

func (x *CMsgVerticalScrollBarSizeResponse) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

func (x *CMsgVerticalScrollBarSizeResponse) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type CMsgFind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Find          *string                `protobuf:"bytes,2,opt,name=find" json:"find,omitempty"`
	Infind        *bool                  `protobuf:"varint,3,opt,name=infind" json:"infind,omitempty"`
	Reverse       *bool                  `protobuf:"varint,4,opt,name=reverse,def=0" json:"reverse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgFind fields.
const (
	Default_CMsgFind_Reverse = bool(false)
)

func (x *CMsgFind) Reset() {
	*x = CMsgFind{}
	mi := &file_htmlmessages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFind) ProtoMessage() {}

func (x *CMsgFind) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFind.ProtoReflect.Descriptor instead.
func (*CMsgFind) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{37}
}

func (x *CMsgFind) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFind) GetFind() string {
	if x != nil && x.Find != nil {
		return *x.Find
	}
	return ""
}

func (x *CMsgFind) GetInfind() bool {
	if x != nil && x.Infind != nil {
		return *x.Infind
	}
	return false
}

func (x *CMsgFind) GetReverse() bool {
	if x != nil && x.Reverse != nil {
		return *x.Reverse
	}
	return Default_CMsgFind_Reverse
}

type CMsgStopFind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgStopFind) Reset() {
	*x = CMsgStopFind{}
	mi := &file_htmlmessages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgStopFind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStopFind) ProtoMessage() {}

func (x *CMsgStopFind) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStopFind.ProtoReflect.Descriptor instead.
func (*CMsgStopFind) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{38}
}

func (x *CMsgStopFind) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetHorizontalScroll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scroll        *uint32                `protobuf:"varint,2,opt,name=scroll" json:"scroll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetHorizontalScroll) Reset() {
	*x = CMsgSetHorizontalScroll{}
	mi := &file_htmlmessages_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetHorizontalScroll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetHorizontalScroll) ProtoMessage() {}

func (x *CMsgSetHorizontalScroll) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetHorizontalScroll.ProtoReflect.Descriptor instead.
func (*CMsgSetHorizontalScroll) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{39}
}

func (x *CMsgSetHorizontalScroll) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetHorizontalScroll) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

type CMsgSetVerticalScroll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scroll        *uint32                `protobuf:"varint,2,opt,name=scroll" json:"scroll,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetVerticalScroll) Reset() {
	*x = CMsgSetVerticalScroll{}
	mi := &file_htmlmessages_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetVerticalScroll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetVerticalScroll) ProtoMessage() {}

func (x *CMsgSetVerticalScroll) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetVerticalScroll.ProtoReflect.Descriptor instead.
func (*CMsgSetVerticalScroll) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{40}
}

func (x *CMsgSetVerticalScroll) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetVerticalScroll) GetScroll() uint32 {
	if x != nil && x.Scroll != nil {
		return *x.Scroll
	}
	return 0
}

type CMsgSetZoomLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Zoom          *float64               `protobuf:"fixed64,2,opt,name=zoom" json:"zoom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetZoomLevel) Reset() {
	*x = CMsgSetZoomLevel{}
	mi := &file_htmlmessages_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetZoomLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetZoomLevel) ProtoMessage() {}

func (x *CMsgSetZoomLevel) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetZoomLevel.ProtoReflect.Descriptor instead.
func (*CMsgSetZoomLevel) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{41}
}

func (x *CMsgSetZoomLevel) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetZoomLevel) GetZoom() float64 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

type CMsgViewSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgViewSource) Reset() {
	*x = CMsgViewSource{}
	mi := &file_htmlmessages_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgViewSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgViewSource) ProtoMessage() {}

func (x *CMsgViewSource) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgViewSource.ProtoReflect.Descriptor instead.
func (*CMsgViewSource) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{42}
}

func (x *CMsgViewSource) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgBrowserReady struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	VrOverlayKey  *string                `protobuf:"bytes,2,opt,name=vr_overlay_key,json=vrOverlayKey" json:"vr_overlay_key,omitempty"`
	HwndBrowser   *uint64                `protobuf:"fixed64,3,opt,name=hwnd_browser,json=hwndBrowser" json:"hwnd_browser,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserReady) Reset() {
	*x = CMsgBrowserReady{}
	mi := &file_htmlmessages_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserReady) ProtoMessage() {}

func (x *CMsgBrowserReady) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserReady.ProtoReflect.Descriptor instead.
func (*CMsgBrowserReady) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{43}
}

func (x *CMsgBrowserReady) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserReady) GetVrOverlayKey() string {
	if x != nil && x.VrOverlayKey != nil {
		return *x.VrOverlayKey
	}
	return ""
}

func (x *CMsgBrowserReady) GetHwndBrowser() uint64 {
	if x != nil && x.HwndBrowser != nil {
		return *x.HwndBrowser
	}
	return 0
}

type CMsgURLChanged struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle  *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url            *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	PostData       *string                `protobuf:"bytes,3,opt,name=postData" json:"postData,omitempty"`
	BIsRedirect    *bool                  `protobuf:"varint,4,opt,name=bIsRedirect" json:"bIsRedirect,omitempty"`
	Pagetitle      *string                `protobuf:"bytes,5,opt,name=pagetitle" json:"pagetitle,omitempty"`
	BNewNavigation *bool                  `protobuf:"varint,6,opt,name=bNewNavigation" json:"bNewNavigation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgURLChanged) Reset() {
	*x = CMsgURLChanged{}
	mi := &file_htmlmessages_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgURLChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgURLChanged) ProtoMessage() {}

func (x *CMsgURLChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgURLChanged.ProtoReflect.Descriptor instead.
func (*CMsgURLChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{44}
}

func (x *CMsgURLChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgURLChanged) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgURLChanged) GetPostData() string {
	if x != nil && x.PostData != nil {
		return *x.PostData
	}
	return ""
}

func (x *CMsgURLChanged) GetBIsRedirect() bool {
	if x != nil && x.BIsRedirect != nil {
		return *x.BIsRedirect
	}
	return false
}

func (x *CMsgURLChanged) GetPagetitle() string {
	if x != nil && x.Pagetitle != nil {
		return *x.Pagetitle
	}
	return ""
}

func (x *CMsgURLChanged) GetBNewNavigation() bool {
	if x != nil && x.BNewNavigation != nil {
		return *x.BNewNavigation
	}
	return false
}

type CHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           *string                `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHistoryEntry) Reset() {
	*x = CHistoryEntry{}
	mi := &file_htmlmessages_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHistoryEntry) ProtoMessage() {}

func (x *CHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHistoryEntry.ProtoReflect.Descriptor instead.
func (*CHistoryEntry) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{45}
}

func (x *CHistoryEntry) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgHistoryChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Index         *uint32                `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Entries       []*CHistoryEntry       `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHistoryChanged) Reset() {
	*x = CMsgHistoryChanged{}
	mi := &file_htmlmessages_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHistoryChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHistoryChanged) ProtoMessage() {}

func (x *CMsgHistoryChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHistoryChanged.ProtoReflect.Descriptor instead.
func (*CMsgHistoryChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{46}
}

func (x *CMsgHistoryChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgHistoryChanged) GetIndex() uint32 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

func (x *CMsgHistoryChanged) GetEntries() []*CHistoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CMsgLoadError struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle    *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ErrorCode        *int32                 `protobuf:"varint,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	Url              *string                `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	ErrorDescription *string                `protobuf:"bytes,4,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgLoadError) Reset() {
	*x = CMsgLoadError{}
	mi := &file_htmlmessages_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLoadError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadError) ProtoMessage() {}

func (x *CMsgLoadError) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadError.ProtoReflect.Descriptor instead.
func (*CMsgLoadError) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{47}
}

func (x *CMsgLoadError) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadError) GetErrorCode() int32 {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return 0
}

func (x *CMsgLoadError) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgLoadError) GetErrorDescription() string {
	if x != nil && x.ErrorDescription != nil {
		return *x.ErrorDescription
	}
	return ""
}

type CHTMLHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHTMLHeader) Reset() {
	*x = CHTMLHeader{}
	mi := &file_htmlmessages_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHTMLHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHTMLHeader) ProtoMessage() {}

func (x *CHTMLHeader) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHTMLHeader.ProtoReflect.Descriptor instead.
func (*CHTMLHeader) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{48}
}

func (x *CHTMLHeader) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CHTMLHeader) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CHTMLPageSecurityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BIsSecure     *bool                  `protobuf:"varint,1,opt,name=bIsSecure,def=0" json:"bIsSecure,omitempty"`
	BHasCertError *bool                  `protobuf:"varint,2,opt,name=bHasCertError,def=0" json:"bHasCertError,omitempty"`
	IssuerName    *string                `protobuf:"bytes,3,opt,name=issuerName" json:"issuerName,omitempty"`
	CertName      *string                `protobuf:"bytes,4,opt,name=certName" json:"certName,omitempty"`
	CertExpiry    *int32                 `protobuf:"varint,5,opt,name=certExpiry,def=0" json:"certExpiry,omitempty"`
	NCertBits     *int32                 `protobuf:"varint,6,opt,name=nCertBits,def=0" json:"nCertBits,omitempty"`
	BIsEVCert     *bool                  `protobuf:"varint,7,opt,name=bIsEVCert,def=0" json:"bIsEVCert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CHTMLPageSecurityInfo fields.
const (
	Default_CHTMLPageSecurityInfo_BIsSecure     = bool(false)
	Default_CHTMLPageSecurityInfo_BHasCertError = bool(false)
	Default_CHTMLPageSecurityInfo_CertExpiry    = int32(0)
	Default_CHTMLPageSecurityInfo_NCertBits     = int32(0)
	Default_CHTMLPageSecurityInfo_BIsEVCert     = bool(false)
)

func (x *CHTMLPageSecurityInfo) Reset() {
	*x = CHTMLPageSecurityInfo{}
	mi := &file_htmlmessages_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHTMLPageSecurityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHTMLPageSecurityInfo) ProtoMessage() {}

func (x *CHTMLPageSecurityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHTMLPageSecurityInfo.ProtoReflect.Descriptor instead.
func (*CHTMLPageSecurityInfo) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{49}
}

func (x *CHTMLPageSecurityInfo) GetBIsSecure() bool {
	if x != nil && x.BIsSecure != nil {
		return *x.BIsSecure
	}
	return Default_CHTMLPageSecurityInfo_BIsSecure
}

func (x *CHTMLPageSecurityInfo) GetBHasCertError() bool {
	if x != nil && x.BHasCertError != nil {
		return *x.BHasCertError
	}
	return Default_CHTMLPageSecurityInfo_BHasCertError
}

func (x *CHTMLPageSecurityInfo) GetIssuerName() string {
	if x != nil && x.IssuerName != nil {
		return *x.IssuerName
	}
	return ""
}

func (x *CHTMLPageSecurityInfo) GetCertName() string {
	if x != nil && x.CertName != nil {
		return *x.CertName
	}
	return ""
}

func (x *CHTMLPageSecurityInfo) GetCertExpiry() int32 {
	if x != nil && x.CertExpiry != nil {
		return *x.CertExpiry
	}
	return Default_CHTMLPageSecurityInfo_CertExpiry
}

func (x *CHTMLPageSecurityInfo) GetNCertBits() int32 {
	if x != nil && x.NCertBits != nil {
		return *x.NCertBits
	}
	return Default_CHTMLPageSecurityInfo_NCertBits
}

func (x *CHTMLPageSecurityInfo) GetBIsEVCert() bool {
	if x != nil && x.BIsEVCert != nil {
		return *x.BIsEVCert
	}
	return Default_CHTMLPageSecurityInfo_BIsEVCert
}

type CMsgFinishedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	PageTitle     *string                `protobuf:"bytes,3,opt,name=pageTitle" json:"pageTitle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgFinishedRequest) Reset() {
	*x = CMsgFinishedRequest{}
	mi := &file_htmlmessages_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFinishedRequest) ProtoMessage() {}

func (x *CMsgFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFinishedRequest.ProtoReflect.Descriptor instead.
func (*CMsgFinishedRequest) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgFinishedRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFinishedRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgFinishedRequest) GetPageTitle() string {
	if x != nil && x.PageTitle != nil {
		return *x.PageTitle
	}
	return ""
}

type CMsgLoadedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	PageTitle     *string                `protobuf:"bytes,3,opt,name=pageTitle" json:"pageTitle,omitempty"`
	Headers       []*CHTMLHeader         `protobuf:"bytes,5,rep,name=headers" json:"headers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgLoadedRequest) Reset() {
	*x = CMsgLoadedRequest{}
	mi := &file_htmlmessages_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLoadedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadedRequest) ProtoMessage() {}

func (x *CMsgLoadedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadedRequest.ProtoReflect.Descriptor instead.
func (*CMsgLoadedRequest) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{51}
}

func (x *CMsgLoadedRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadedRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgLoadedRequest) GetPageTitle() string {
	if x != nil && x.PageTitle != nil {
		return *x.PageTitle
	}
	return ""
}

func (x *CMsgLoadedRequest) GetHeaders() []*CHTMLHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type CMsgFavIconURLChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Urls          []string               `protobuf:"bytes,2,rep,name=urls" json:"urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgFavIconURLChanged) Reset() {
	*x = CMsgFavIconURLChanged{}
	mi := &file_htmlmessages_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFavIconURLChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFavIconURLChanged) ProtoMessage() {}

func (x *CMsgFavIconURLChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFavIconURLChanged.ProtoReflect.Descriptor instead.
func (*CMsgFavIconURLChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{52}
}

func (x *CMsgFavIconURLChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFavIconURLChanged) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type CMsgPageSecurity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	SecurityInfo  *CHTMLPageSecurityInfo `protobuf:"bytes,3,opt,name=security_info,json=securityInfo" json:"security_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPageSecurity) Reset() {
	*x = CMsgPageSecurity{}
	mi := &file_htmlmessages_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPageSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPageSecurity) ProtoMessage() {}

func (x *CMsgPageSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPageSecurity.ProtoReflect.Descriptor instead.
func (*CMsgPageSecurity) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{53}
}

func (x *CMsgPageSecurity) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPageSecurity) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgPageSecurity) GetSecurityInfo() *CHTMLPageSecurityInfo {
	if x != nil {
		return x.SecurityInfo
	}
	return nil
}

type CMsgStartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Target        *string                `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	PostData      *string                `protobuf:"bytes,4,opt,name=postData" json:"postData,omitempty"`
	BIsRedirect   *bool                  `protobuf:"varint,5,opt,name=bIsRedirect" json:"bIsRedirect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgStartRequest) Reset() {
	*x = CMsgStartRequest{}
	mi := &file_htmlmessages_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStartRequest) ProtoMessage() {}

func (x *CMsgStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStartRequest.ProtoReflect.Descriptor instead.
func (*CMsgStartRequest) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{54}
}

func (x *CMsgStartRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStartRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgStartRequest) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *CMsgStartRequest) GetPostData() string {
	if x != nil && x.PostData != nil {
		return *x.PostData
	}
	return ""
}

func (x *CMsgStartRequest) GetBIsRedirect() bool {
	if x != nil && x.BIsRedirect != nil {
		return *x.BIsRedirect
	}
	return false
}

type CMsgStartRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	BAllow        *bool                  `protobuf:"varint,2,opt,name=bAllow" json:"bAllow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgStartRequestResponse) Reset() {
	*x = CMsgStartRequestResponse{}
	mi := &file_htmlmessages_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgStartRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStartRequestResponse) ProtoMessage() {}

func (x *CMsgStartRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStartRequestResponse.ProtoReflect.Descriptor instead.
func (*CMsgStartRequestResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{55}
}

func (x *CMsgStartRequestResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStartRequestResponse) GetBAllow() bool {
	if x != nil && x.BAllow != nil {
		return *x.BAllow
	}
	return false
}

type CMsgShowPopup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgShowPopup) Reset() {
	*x = CMsgShowPopup{}
	mi := &file_htmlmessages_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgShowPopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowPopup) ProtoMessage() {}

func (x *CMsgShowPopup) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowPopup.ProtoReflect.Descriptor instead.
func (*CMsgShowPopup) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{56}
}

func (x *CMsgShowPopup) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgHidePopup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHidePopup) Reset() {
	*x = CMsgHidePopup{}
	mi := &file_htmlmessages_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHidePopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHidePopup) ProtoMessage() {}

func (x *CMsgHidePopup) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHidePopup.ProtoReflect.Descriptor instead.
func (*CMsgHidePopup) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{57}
}

func (x *CMsgHidePopup) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSizePopup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *int32                 `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *int32                 `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Wide          *uint32                `protobuf:"varint,4,opt,name=wide" json:"wide,omitempty"`
	Tall          *uint32                `protobuf:"varint,5,opt,name=tall" json:"tall,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSizePopup) Reset() {
	*x = CMsgSizePopup{}
	mi := &file_htmlmessages_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSizePopup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSizePopup) ProtoMessage() {}

func (x *CMsgSizePopup) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSizePopup.ProtoReflect.Descriptor instead.
func (*CMsgSizePopup) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{58}
}

func (x *CMsgSizePopup) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSizePopup) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgSizePopup) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgSizePopup) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgSizePopup) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

type CMsgOpenNewTab struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	BForeground   *bool                  `protobuf:"varint,3,opt,name=bForeground" json:"bForeground,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgOpenNewTab) Reset() {
	*x = CMsgOpenNewTab{}
	mi := &file_htmlmessages_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgOpenNewTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpenNewTab) ProtoMessage() {}

func (x *CMsgOpenNewTab) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpenNewTab.ProtoReflect.Descriptor instead.
func (*CMsgOpenNewTab) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{59}
}

func (x *CMsgOpenNewTab) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgOpenNewTab) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgOpenNewTab) GetBForeground() bool {
	if x != nil && x.BForeground != nil {
		return *x.BForeground
	}
	return false
}

type CMsgPopupHTMLWindow struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle    *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url              *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	X                *int32                 `protobuf:"varint,3,opt,name=x,def=-2147483648" json:"x,omitempty"`
	Y                *int32                 `protobuf:"varint,4,opt,name=y,def=-2147483648" json:"y,omitempty"`
	Wide             *uint32                `protobuf:"varint,5,opt,name=wide" json:"wide,omitempty"`
	Tall             *uint32                `protobuf:"varint,6,opt,name=tall" json:"tall,omitempty"`
	PopupIndex       *uint32                `protobuf:"varint,7,opt,name=popup_index,json=popupIndex" json:"popup_index,omitempty"`
	TrustedCreator   *bool                  `protobuf:"varint,8,opt,name=trusted_creator,json=trustedCreator" json:"trusted_creator,omitempty"`
	Name             *string                `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	Hwnd             *uint64                `protobuf:"varint,10,opt,name=hwnd" json:"hwnd,omitempty"`
	ParentPopupIndex *uint32                `protobuf:"varint,11,opt,name=parent_popup_index,json=parentPopupIndex" json:"parent_popup_index,omitempty"`
	CreationFlags    *uint32                `protobuf:"varint,12,opt,name=creation_flags,json=creationFlags" json:"creation_flags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for CMsgPopupHTMLWindow fields.
const (
	Default_CMsgPopupHTMLWindow_X = int32(-2147483648)
	Default_CMsgPopupHTMLWindow_Y = int32(-2147483648)
)

func (x *CMsgPopupHTMLWindow) Reset() {
	*x = CMsgPopupHTMLWindow{}
	mi := &file_htmlmessages_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPopupHTMLWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopupHTMLWindow) ProtoMessage() {}

func (x *CMsgPopupHTMLWindow) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopupHTMLWindow.ProtoReflect.Descriptor instead.
func (*CMsgPopupHTMLWindow) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgPopupHTMLWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgPopupHTMLWindow) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return Default_CMsgPopupHTMLWindow_X
}

func (x *CMsgPopupHTMLWindow) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return Default_CMsgPopupHTMLWindow_Y
}

func (x *CMsgPopupHTMLWindow) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetPopupIndex() uint32 {
	if x != nil && x.PopupIndex != nil {
		return *x.PopupIndex
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetTrustedCreator() bool {
	if x != nil && x.TrustedCreator != nil {
		return *x.TrustedCreator
	}
	return false
}

func (x *CMsgPopupHTMLWindow) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgPopupHTMLWindow) GetHwnd() uint64 {
	if x != nil && x.Hwnd != nil {
		return *x.Hwnd
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetParentPopupIndex() uint32 {
	if x != nil && x.ParentPopupIndex != nil {
		return *x.ParentPopupIndex
	}
	return 0
}

func (x *CMsgPopupHTMLWindow) GetCreationFlags() uint32 {
	if x != nil && x.CreationFlags != nil {
		return *x.CreationFlags
	}
	return 0
}

type CMsgPopupHTMLWindowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	BAllow        *bool                  `protobuf:"varint,2,opt,name=bAllow" json:"bAllow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPopupHTMLWindowResponse) Reset() {
	*x = CMsgPopupHTMLWindowResponse{}
	mi := &file_htmlmessages_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPopupHTMLWindowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopupHTMLWindowResponse) ProtoMessage() {}

func (x *CMsgPopupHTMLWindowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopupHTMLWindowResponse.ProtoReflect.Descriptor instead.
func (*CMsgPopupHTMLWindowResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{61}
}

func (x *CMsgPopupHTMLWindowResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgPopupHTMLWindowResponse) GetBAllow() bool {
	if x != nil && x.BAllow != nil {
		return *x.BAllow
	}
	return false
}

type CMsgSetHTMLTitle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetHTMLTitle) Reset() {
	*x = CMsgSetHTMLTitle{}
	mi := &file_htmlmessages_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetHTMLTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetHTMLTitle) ProtoMessage() {}

func (x *CMsgSetHTMLTitle) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetHTMLTitle.ProtoReflect.Descriptor instead.
func (*CMsgSetHTMLTitle) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{62}
}

func (x *CMsgSetHTMLTitle) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetHTMLTitle) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type CMsgLoadingResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgLoadingResource) Reset() {
	*x = CMsgLoadingResource{}
	mi := &file_htmlmessages_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLoadingResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadingResource) ProtoMessage() {}

func (x *CMsgLoadingResource) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadingResource.ProtoReflect.Descriptor instead.
func (*CMsgLoadingResource) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{63}
}

func (x *CMsgLoadingResource) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadingResource) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgStatusText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgStatusText) Reset() {
	*x = CMsgStatusText{}
	mi := &file_htmlmessages_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgStatusText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStatusText) ProtoMessage() {}

func (x *CMsgStatusText) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStatusText.ProtoReflect.Descriptor instead.
func (*CMsgStatusText) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{64}
}

func (x *CMsgStatusText) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStatusText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgSetCursor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Cursor        *uint32                `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
	CustomData    []byte                 `protobuf:"bytes,3,opt,name=custom_data,json=customData" json:"custom_data,omitempty"`
	Wide          *uint32                `protobuf:"varint,4,opt,name=wide" json:"wide,omitempty"`
	Tall          *uint32                `protobuf:"varint,5,opt,name=tall" json:"tall,omitempty"`
	Xhotspot      *uint32                `protobuf:"varint,6,opt,name=xhotspot" json:"xhotspot,omitempty"`
	Yhotspot      *uint32                `protobuf:"varint,7,opt,name=yhotspot" json:"yhotspot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetCursor) Reset() {
	*x = CMsgSetCursor{}
	mi := &file_htmlmessages_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetCursor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetCursor) ProtoMessage() {}

func (x *CMsgSetCursor) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetCursor.ProtoReflect.Descriptor instead.
func (*CMsgSetCursor) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{65}
}

func (x *CMsgSetCursor) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetCursor) GetCursor() uint32 {
	if x != nil && x.Cursor != nil {
		return *x.Cursor
	}
	return 0
}

func (x *CMsgSetCursor) GetCustomData() []byte {
	if x != nil {
		return x.CustomData
	}
	return nil
}

func (x *CMsgSetCursor) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgSetCursor) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

func (x *CMsgSetCursor) GetXhotspot() uint32 {
	if x != nil && x.Xhotspot != nil {
		return *x.Xhotspot
	}
	return 0
}

func (x *CMsgSetCursor) GetYhotspot() uint32 {
	if x != nil && x.Yhotspot != nil {
		return *x.Yhotspot
	}
	return 0
}

type CMsgFileLoadDialog struct {
	state               protoimpl.MessageState       `protogen:"open.v1"`
	BrowserHandle       *uint32                      `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                      `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	Title               *string                      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	InitialFile         *string                      `protobuf:"bytes,4,opt,name=initialFile" json:"initialFile,omitempty"`
	AcceptTypes         []string                     `protobuf:"bytes,5,rep,name=accept_types,json=acceptTypes" json:"accept_types,omitempty"`
	IsSave              *bool                        `protobuf:"varint,6,opt,name=is_save,json=isSave" json:"is_save,omitempty"`
	ChooseDirectory     *bool                        `protobuf:"varint,7,opt,name=choose_directory,json=chooseDirectory" json:"choose_directory,omitempty"`
	Filters             []*CMsgFileLoadDialog_Filter `protobuf:"bytes,8,rep,name=filters" json:"filters,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgFileLoadDialog) Reset() {
	*x = CMsgFileLoadDialog{}
	mi := &file_htmlmessages_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFileLoadDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFileLoadDialog) ProtoMessage() {}

func (x *CMsgFileLoadDialog) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFileLoadDialog.ProtoReflect.Descriptor instead.
func (*CMsgFileLoadDialog) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgFileLoadDialog) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFileLoadDialog) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgFileLoadDialog) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *CMsgFileLoadDialog) GetInitialFile() string {
	if x != nil && x.InitialFile != nil {
		return *x.InitialFile
	}
	return ""
}

func (x *CMsgFileLoadDialog) GetAcceptTypes() []string {
	if x != nil {
		return x.AcceptTypes
	}
	return nil
}

func (x *CMsgFileLoadDialog) GetIsSave() bool {
	if x != nil && x.IsSave != nil {
		return *x.IsSave
	}
	return false
}

func (x *CMsgFileLoadDialog) GetChooseDirectory() bool {
	if x != nil && x.ChooseDirectory != nil {
		return *x.ChooseDirectory
	}
	return false
}

func (x *CMsgFileLoadDialog) GetFilters() []*CMsgFileLoadDialog_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type CMsgFileLoadDialogResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle       *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	Bsuccess            *bool                  `protobuf:"varint,3,opt,name=bsuccess" json:"bsuccess,omitempty"`
	Files               []string               `protobuf:"bytes,4,rep,name=files" json:"files,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgFileLoadDialogResponse) Reset() {
	*x = CMsgFileLoadDialogResponse{}
	mi := &file_htmlmessages_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFileLoadDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFileLoadDialogResponse) ProtoMessage() {}

func (x *CMsgFileLoadDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFileLoadDialogResponse.ProtoReflect.Descriptor instead.
func (*CMsgFileLoadDialogResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{67}
}

func (x *CMsgFileLoadDialogResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFileLoadDialogResponse) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgFileLoadDialogResponse) GetBsuccess() bool {
	if x != nil && x.Bsuccess != nil {
		return *x.Bsuccess
	}
	return false
}

func (x *CMsgFileLoadDialogResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type CMsgRequestProcessInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requestid     *uint64                `protobuf:"varint,1,opt,name=requestid" json:"requestid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRequestProcessInfo) Reset() {
	*x = CMsgRequestProcessInfo{}
	mi := &file_htmlmessages_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRequestProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestProcessInfo) ProtoMessage() {}

func (x *CMsgRequestProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestProcessInfo.ProtoReflect.Descriptor instead.
func (*CMsgRequestProcessInfo) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{68}
}

func (x *CMsgRequestProcessInfo) GetRequestid() uint64 {
	if x != nil && x.Requestid != nil {
		return *x.Requestid
	}
	return 0
}

type CMsgProcessInfoNotification struct {
	state                            protoimpl.MessageState `protogen:"open.v1"`
	Requestid                        *uint64                `protobuf:"varint,1,opt,name=requestid" json:"requestid,omitempty"`
	GpuStatus                        *EBrowserGPUStatus     `protobuf:"varint,2,opt,name=gpu_status,json=gpuStatus,enum=EBrowserGPUStatus,def=0" json:"gpu_status,omitempty"`
	Canvas_2D                        *EBrowserFeatureStatus `protobuf:"varint,3,opt,name=canvas_2d,json=canvas2d,enum=EBrowserFeatureStatus,def=0" json:"canvas_2d,omitempty"`
	CanvasOopRasterization           *EBrowserFeatureStatus `protobuf:"varint,4,opt,name=canvas_oop_rasterization,json=canvasOopRasterization,enum=EBrowserFeatureStatus,def=0" json:"canvas_oop_rasterization,omitempty"`
	DirectRenderingDisplayCompositor *EBrowserFeatureStatus `protobuf:"varint,5,opt,name=direct_rendering_display_compositor,json=directRenderingDisplayCompositor,enum=EBrowserFeatureStatus,def=0" json:"direct_rendering_display_compositor,omitempty"`
	GpuCompositing                   *EBrowserFeatureStatus `protobuf:"varint,6,opt,name=gpu_compositing,json=gpuCompositing,enum=EBrowserFeatureStatus,def=0" json:"gpu_compositing,omitempty"`
	MultipleRasterThreads            *EBrowserFeatureStatus `protobuf:"varint,7,opt,name=multiple_raster_threads,json=multipleRasterThreads,enum=EBrowserFeatureStatus,def=0" json:"multiple_raster_threads,omitempty"`
	Opengl                           *EBrowserFeatureStatus `protobuf:"varint,8,opt,name=opengl,enum=EBrowserFeatureStatus,def=0" json:"opengl,omitempty"`
	Rasterization                    *EBrowserFeatureStatus `protobuf:"varint,9,opt,name=rasterization,enum=EBrowserFeatureStatus,def=0" json:"rasterization,omitempty"`
	RawDraw                          *EBrowserFeatureStatus `protobuf:"varint,10,opt,name=raw_draw,json=rawDraw,enum=EBrowserFeatureStatus,def=0" json:"raw_draw,omitempty"`
	SkiaGraphite                     *EBrowserFeatureStatus `protobuf:"varint,11,opt,name=skia_graphite,json=skiaGraphite,enum=EBrowserFeatureStatus,def=0" json:"skia_graphite,omitempty"`
	VideoDecode                      *EBrowserFeatureStatus `protobuf:"varint,13,opt,name=video_decode,json=videoDecode,enum=EBrowserFeatureStatus,def=0" json:"video_decode,omitempty"`
	VideoEncode                      *EBrowserFeatureStatus `protobuf:"varint,14,opt,name=video_encode,json=videoEncode,enum=EBrowserFeatureStatus,def=0" json:"video_encode,omitempty"`
	Vulkan                           *EBrowserFeatureStatus `protobuf:"varint,15,opt,name=vulkan,enum=EBrowserFeatureStatus,def=0" json:"vulkan,omitempty"`
	Webgl                            *EBrowserFeatureStatus `protobuf:"varint,16,opt,name=webgl,enum=EBrowserFeatureStatus,def=0" json:"webgl,omitempty"`
	Webgl2                           *EBrowserFeatureStatus `protobuf:"varint,17,opt,name=webgl2,enum=EBrowserFeatureStatus,def=0" json:"webgl2,omitempty"`
	Webgpu                           *EBrowserFeatureStatus `protobuf:"varint,18,opt,name=webgpu,enum=EBrowserFeatureStatus,def=0" json:"webgpu,omitempty"`
	Webnn                            *EBrowserFeatureStatus `protobuf:"varint,19,opt,name=webnn,enum=EBrowserFeatureStatus,def=0" json:"webnn,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

// Default values for CMsgProcessInfoNotification fields.
const (
	Default_CMsgProcessInfoNotification_GpuStatus                        = EBrowserGPUStatus_k_EBrowserGPUStatus_Invalid
	Default_CMsgProcessInfoNotification_Canvas_2D                        = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_CanvasOopRasterization           = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_DirectRenderingDisplayCompositor = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_GpuCompositing                   = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_MultipleRasterThreads            = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Opengl                           = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Rasterization                    = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_RawDraw                          = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_SkiaGraphite                     = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_VideoDecode                      = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_VideoEncode                      = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Vulkan                           = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Webgl                            = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Webgl2                           = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Webgpu                           = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
	Default_CMsgProcessInfoNotification_Webnn                            = EBrowserFeatureStatus_k_EBrowserFeatureStatus_Invalid
)

func (x *CMsgProcessInfoNotification) Reset() {
	*x = CMsgProcessInfoNotification{}
	mi := &file_htmlmessages_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgProcessInfoNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgProcessInfoNotification) ProtoMessage() {}

func (x *CMsgProcessInfoNotification) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgProcessInfoNotification.ProtoReflect.Descriptor instead.
func (*CMsgProcessInfoNotification) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{69}
}

func (x *CMsgProcessInfoNotification) GetRequestid() uint64 {
	if x != nil && x.Requestid != nil {
		return *x.Requestid
	}
	return 0
}

func (x *CMsgProcessInfoNotification) GetGpuStatus() EBrowserGPUStatus {
	if x != nil && x.GpuStatus != nil {
		return *x.GpuStatus
	}
	return Default_CMsgProcessInfoNotification_GpuStatus
}

func (x *CMsgProcessInfoNotification) GetCanvas_2D() EBrowserFeatureStatus {
	if x != nil && x.Canvas_2D != nil {
		return *x.Canvas_2D
	}
	return Default_CMsgProcessInfoNotification_Canvas_2D
}

func (x *CMsgProcessInfoNotification) GetCanvasOopRasterization() EBrowserFeatureStatus {
	if x != nil && x.CanvasOopRasterization != nil {
		return *x.CanvasOopRasterization
	}
	return Default_CMsgProcessInfoNotification_CanvasOopRasterization
}

func (x *CMsgProcessInfoNotification) GetDirectRenderingDisplayCompositor() EBrowserFeatureStatus {
	if x != nil && x.DirectRenderingDisplayCompositor != nil {
		return *x.DirectRenderingDisplayCompositor
	}
	return Default_CMsgProcessInfoNotification_DirectRenderingDisplayCompositor
}

func (x *CMsgProcessInfoNotification) GetGpuCompositing() EBrowserFeatureStatus {
	if x != nil && x.GpuCompositing != nil {
		return *x.GpuCompositing
	}
	return Default_CMsgProcessInfoNotification_GpuCompositing
}

func (x *CMsgProcessInfoNotification) GetMultipleRasterThreads() EBrowserFeatureStatus {
	if x != nil && x.MultipleRasterThreads != nil {
		return *x.MultipleRasterThreads
	}
	return Default_CMsgProcessInfoNotification_MultipleRasterThreads
}

func (x *CMsgProcessInfoNotification) GetOpengl() EBrowserFeatureStatus {
	if x != nil && x.Opengl != nil {
		return *x.Opengl
	}
	return Default_CMsgProcessInfoNotification_Opengl
}

func (x *CMsgProcessInfoNotification) GetRasterization() EBrowserFeatureStatus {
	if x != nil && x.Rasterization != nil {
		return *x.Rasterization
	}
	return Default_CMsgProcessInfoNotification_Rasterization
}

func (x *CMsgProcessInfoNotification) GetRawDraw() EBrowserFeatureStatus {
	if x != nil && x.RawDraw != nil {
		return *x.RawDraw
	}
	return Default_CMsgProcessInfoNotification_RawDraw
}

func (x *CMsgProcessInfoNotification) GetSkiaGraphite() EBrowserFeatureStatus {
	if x != nil && x.SkiaGraphite != nil {
		return *x.SkiaGraphite
	}
	return Default_CMsgProcessInfoNotification_SkiaGraphite
}

func (x *CMsgProcessInfoNotification) GetVideoDecode() EBrowserFeatureStatus {
	if x != nil && x.VideoDecode != nil {
		return *x.VideoDecode
	}
	return Default_CMsgProcessInfoNotification_VideoDecode
}

func (x *CMsgProcessInfoNotification) GetVideoEncode() EBrowserFeatureStatus {
	if x != nil && x.VideoEncode != nil {
		return *x.VideoEncode
	}
	return Default_CMsgProcessInfoNotification_VideoEncode
}

func (x *CMsgProcessInfoNotification) GetVulkan() EBrowserFeatureStatus {
	if x != nil && x.Vulkan != nil {
		return *x.Vulkan
	}
	return Default_CMsgProcessInfoNotification_Vulkan
}

func (x *CMsgProcessInfoNotification) GetWebgl() EBrowserFeatureStatus {
	if x != nil && x.Webgl != nil {
		return *x.Webgl
	}
	return Default_CMsgProcessInfoNotification_Webgl
}

func (x *CMsgProcessInfoNotification) GetWebgl2() EBrowserFeatureStatus {
	if x != nil && x.Webgl2 != nil {
		return *x.Webgl2
	}
	return Default_CMsgProcessInfoNotification_Webgl2
}

func (x *CMsgProcessInfoNotification) GetWebgpu() EBrowserFeatureStatus {
	if x != nil && x.Webgpu != nil {
		return *x.Webgpu
	}
	return Default_CMsgProcessInfoNotification_Webgpu
}

func (x *CMsgProcessInfoNotification) GetWebnn() EBrowserFeatureStatus {
	if x != nil && x.Webnn != nil {
		return *x.Webnn
	}
	return Default_CMsgProcessInfoNotification_Webnn
}

type CMsgShowToolTip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgShowToolTip) Reset() {
	*x = CMsgShowToolTip{}
	mi := &file_htmlmessages_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgShowToolTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowToolTip) ProtoMessage() {}

func (x *CMsgShowToolTip) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowToolTip.ProtoReflect.Descriptor instead.
func (*CMsgShowToolTip) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{70}
}

func (x *CMsgShowToolTip) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgShowToolTip) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgUpdateToolTip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgUpdateToolTip) Reset() {
	*x = CMsgUpdateToolTip{}
	mi := &file_htmlmessages_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgUpdateToolTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUpdateToolTip) ProtoMessage() {}

func (x *CMsgUpdateToolTip) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUpdateToolTip.ProtoReflect.Descriptor instead.
func (*CMsgUpdateToolTip) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{71}
}

func (x *CMsgUpdateToolTip) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgUpdateToolTip) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgHideToolTip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHideToolTip) Reset() {
	*x = CMsgHideToolTip{}
	mi := &file_htmlmessages_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHideToolTip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHideToolTip) ProtoMessage() {}

func (x *CMsgHideToolTip) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHideToolTip.ProtoReflect.Descriptor instead.
func (*CMsgHideToolTip) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{72}
}

func (x *CMsgHideToolTip) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSearchResults struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ActiveMatch   *int32                 `protobuf:"varint,2,opt,name=activeMatch" json:"activeMatch,omitempty"`
	Results       *int32                 `protobuf:"varint,3,opt,name=results" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSearchResults) Reset() {
	*x = CMsgSearchResults{}
	mi := &file_htmlmessages_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSearchResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSearchResults) ProtoMessage() {}

func (x *CMsgSearchResults) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSearchResults.ProtoReflect.Descriptor instead.
func (*CMsgSearchResults) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{73}
}

func (x *CMsgSearchResults) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSearchResults) GetActiveMatch() int32 {
	if x != nil && x.ActiveMatch != nil {
		return *x.ActiveMatch
	}
	return 0
}

func (x *CMsgSearchResults) GetResults() int32 {
	if x != nil && x.Results != nil {
		return *x.Results
	}
	return 0
}

type CMsgClose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClose) Reset() {
	*x = CMsgClose{}
	mi := &file_htmlmessages_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClose) ProtoMessage() {}

func (x *CMsgClose) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClose.ProtoReflect.Descriptor instead.
func (*CMsgClose) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{74}
}

func (x *CMsgClose) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetSharedPaintBuffers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Wide          *uint32                `protobuf:"varint,2,opt,name=wide" json:"wide,omitempty"`
	Tall          *uint32                `protobuf:"varint,3,opt,name=tall" json:"tall,omitempty"`
	SourcePid     *uint64                `protobuf:"varint,4,opt,name=source_pid,json=sourcePid" json:"source_pid,omitempty"`
	SourceHandle  *uint64                `protobuf:"varint,5,opt,name=source_handle,json=sourceHandle" json:"source_handle,omitempty"`
	Handle        *uint64                `protobuf:"varint,6,opt,name=handle" json:"handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetSharedPaintBuffers) Reset() {
	*x = CMsgSetSharedPaintBuffers{}
	mi := &file_htmlmessages_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetSharedPaintBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetSharedPaintBuffers) ProtoMessage() {}

func (x *CMsgSetSharedPaintBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetSharedPaintBuffers.ProtoReflect.Descriptor instead.
func (*CMsgSetSharedPaintBuffers) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{75}
}

func (x *CMsgSetSharedPaintBuffers) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetWide() uint32 {
	if x != nil && x.Wide != nil {
		return *x.Wide
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetTall() uint32 {
	if x != nil && x.Tall != nil {
		return *x.Tall
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetSourcePid() uint64 {
	if x != nil && x.SourcePid != nil {
		return *x.SourcePid
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetSourceHandle() uint64 {
	if x != nil && x.SourceHandle != nil {
		return *x.SourceHandle
	}
	return 0
}

func (x *CMsgSetSharedPaintBuffers) GetHandle() uint64 {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return 0
}

type CMsgAckSharedPaintBuffers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgAckSharedPaintBuffers) Reset() {
	*x = CMsgAckSharedPaintBuffers{}
	mi := &file_htmlmessages_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAckSharedPaintBuffers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAckSharedPaintBuffers) ProtoMessage() {}

func (x *CMsgAckSharedPaintBuffers) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAckSharedPaintBuffers.ProtoReflect.Descriptor instead.
func (*CMsgAckSharedPaintBuffers) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{76}
}

func (x *CMsgAckSharedPaintBuffers) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgNeedsPaint struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle    *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scrollx          *uint32                `protobuf:"varint,10,opt,name=scrollx" json:"scrollx,omitempty"`
	Scrolly          *uint32                `protobuf:"varint,11,opt,name=scrolly" json:"scrolly,omitempty"`
	Pagescale        *float32               `protobuf:"fixed32,12,opt,name=pagescale" json:"pagescale,omitempty"`
	Pageserial       *uint32                `protobuf:"varint,15,opt,name=pageserial" json:"pageserial,omitempty"`
	AvgFrameMs       *uint32                `protobuf:"varint,20,opt,name=avg_frame_ms,json=avgFrameMs" json:"avg_frame_ms,omitempty"`
	StddevSumFrameMs *float32               `protobuf:"fixed32,21,opt,name=stddev_sum_frame_ms,json=stddevSumFrameMs" json:"stddev_sum_frame_ms,omitempty"`
	LongFrameMs      *uint32                `protobuf:"varint,22,opt,name=long_frame_ms,json=longFrameMs" json:"long_frame_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgNeedsPaint) Reset() {
	*x = CMsgNeedsPaint{}
	mi := &file_htmlmessages_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgNeedsPaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNeedsPaint) ProtoMessage() {}

func (x *CMsgNeedsPaint) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNeedsPaint.ProtoReflect.Descriptor instead.
func (*CMsgNeedsPaint) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{77}
}

func (x *CMsgNeedsPaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgNeedsPaint) GetScrollx() uint32 {
	if x != nil && x.Scrollx != nil {
		return *x.Scrollx
	}
	return 0
}

func (x *CMsgNeedsPaint) GetScrolly() uint32 {
	if x != nil && x.Scrolly != nil {
		return *x.Scrolly
	}
	return 0
}

func (x *CMsgNeedsPaint) GetPagescale() float32 {
	if x != nil && x.Pagescale != nil {
		return *x.Pagescale
	}
	return 0
}

func (x *CMsgNeedsPaint) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

func (x *CMsgNeedsPaint) GetAvgFrameMs() uint32 {
	if x != nil && x.AvgFrameMs != nil {
		return *x.AvgFrameMs
	}
	return 0
}

func (x *CMsgNeedsPaint) GetStddevSumFrameMs() float32 {
	if x != nil && x.StddevSumFrameMs != nil {
		return *x.StddevSumFrameMs
	}
	return 0
}

func (x *CMsgNeedsPaint) GetLongFrameMs() uint32 {
	if x != nil && x.LongFrameMs != nil {
		return *x.LongFrameMs
	}
	return 0
}

type CMsgComboNeedsPaint struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle      *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Rgba               *uint64                `protobuf:"varint,2,opt,name=rgba" json:"rgba,omitempty"`
	ComboboxWide       *uint32                `protobuf:"varint,3,opt,name=combobox_wide,json=comboboxWide,def=0" json:"combobox_wide,omitempty"`
	ComboboxTall       *uint32                `protobuf:"varint,4,opt,name=combobox_tall,json=comboboxTall,def=0" json:"combobox_tall,omitempty"`
	SharedMemoryHandle *uint64                `protobuf:"varint,5,opt,name=shared_memory_handle,json=sharedMemoryHandle,def=0" json:"shared_memory_handle,omitempty"`
	SharedMemorySize   *uint64                `protobuf:"varint,7,opt,name=shared_memory_size,json=sharedMemorySize,def=0" json:"shared_memory_size,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CMsgComboNeedsPaint fields.
const (
	Default_CMsgComboNeedsPaint_ComboboxWide       = uint32(0)
	Default_CMsgComboNeedsPaint_ComboboxTall       = uint32(0)
	Default_CMsgComboNeedsPaint_SharedMemoryHandle = uint64(0)
	Default_CMsgComboNeedsPaint_SharedMemorySize   = uint64(0)
)

func (x *CMsgComboNeedsPaint) Reset() {
	*x = CMsgComboNeedsPaint{}
	mi := &file_htmlmessages_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgComboNeedsPaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgComboNeedsPaint) ProtoMessage() {}

func (x *CMsgComboNeedsPaint) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgComboNeedsPaint.ProtoReflect.Descriptor instead.
func (*CMsgComboNeedsPaint) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{78}
}

func (x *CMsgComboNeedsPaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgComboNeedsPaint) GetRgba() uint64 {
	if x != nil && x.Rgba != nil {
		return *x.Rgba
	}
	return 0
}

func (x *CMsgComboNeedsPaint) GetComboboxWide() uint32 {
	if x != nil && x.ComboboxWide != nil {
		return *x.ComboboxWide
	}
	return Default_CMsgComboNeedsPaint_ComboboxWide
}

func (x *CMsgComboNeedsPaint) GetComboboxTall() uint32 {
	if x != nil && x.ComboboxTall != nil {
		return *x.ComboboxTall
	}
	return Default_CMsgComboNeedsPaint_ComboboxTall
}

func (x *CMsgComboNeedsPaint) GetSharedMemoryHandle() uint64 {
	if x != nil && x.SharedMemoryHandle != nil {
		return *x.SharedMemoryHandle
	}
	return Default_CMsgComboNeedsPaint_SharedMemoryHandle
}

func (x *CMsgComboNeedsPaint) GetSharedMemorySize() uint64 {
	if x != nil && x.SharedMemorySize != nil {
		return *x.SharedMemorySize
	}
	return Default_CMsgComboNeedsPaint_SharedMemorySize
}

type CMsgNeedsSharedTexturePaint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ShareHandle   *uint32                `protobuf:"varint,2,opt,name=share_handle,json=shareHandle" json:"share_handle,omitempty"`
	Width         *uint32                `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height        *uint32                `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Scrollx       *uint32                `protobuf:"varint,5,opt,name=scrollx" json:"scrollx,omitempty"`
	Scrolly       *uint32                `protobuf:"varint,6,opt,name=scrolly" json:"scrolly,omitempty"`
	Pagescale     *float32               `protobuf:"fixed32,7,opt,name=pagescale" json:"pagescale,omitempty"`
	Pageserial    *uint32                `protobuf:"varint,8,opt,name=pageserial" json:"pageserial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgNeedsSharedTexturePaint) Reset() {
	*x = CMsgNeedsSharedTexturePaint{}
	mi := &file_htmlmessages_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgNeedsSharedTexturePaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNeedsSharedTexturePaint) ProtoMessage() {}

func (x *CMsgNeedsSharedTexturePaint) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNeedsSharedTexturePaint.ProtoReflect.Descriptor instead.
func (*CMsgNeedsSharedTexturePaint) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{79}
}

func (x *CMsgNeedsSharedTexturePaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetShareHandle() uint32 {
	if x != nil && x.ShareHandle != nil {
		return *x.ShareHandle
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetScrollx() uint32 {
	if x != nil && x.Scrollx != nil {
		return *x.Scrollx
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetScrolly() uint32 {
	if x != nil && x.Scrolly != nil {
		return *x.Scrolly
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetPagescale() float32 {
	if x != nil && x.Pagescale != nil {
		return *x.Pagescale
	}
	return 0
}

func (x *CMsgNeedsSharedTexturePaint) GetPageserial() uint32 {
	if x != nil && x.Pageserial != nil {
		return *x.Pageserial
	}
	return 0
}

type CMsgGetZoom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGetZoom) Reset() {
	*x = CMsgGetZoom{}
	mi := &file_htmlmessages_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGetZoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetZoom) ProtoMessage() {}

func (x *CMsgGetZoom) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetZoom.ProtoReflect.Descriptor instead.
func (*CMsgGetZoom) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{80}
}

func (x *CMsgGetZoom) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGetZoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Zoom          *float32               `protobuf:"fixed32,2,opt,name=zoom" json:"zoom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGetZoomResponse) Reset() {
	*x = CMsgGetZoomResponse{}
	mi := &file_htmlmessages_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGetZoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetZoomResponse) ProtoMessage() {}

func (x *CMsgGetZoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetZoomResponse.ProtoReflect.Descriptor instead.
func (*CMsgGetZoomResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{81}
}

func (x *CMsgGetZoomResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGetZoomResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

type CMsgLinkAtPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32                `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32                `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgLinkAtPosition) Reset() {
	*x = CMsgLinkAtPosition{}
	mi := &file_htmlmessages_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLinkAtPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLinkAtPosition) ProtoMessage() {}

func (x *CMsgLinkAtPosition) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLinkAtPosition.ProtoReflect.Descriptor instead.
func (*CMsgLinkAtPosition) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{82}
}

func (x *CMsgLinkAtPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLinkAtPosition) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgLinkAtPosition) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgLinkAtPositionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32                `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32                `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	Url           *string                `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Blivelink     *bool                  `protobuf:"varint,5,opt,name=blivelink" json:"blivelink,omitempty"`
	Binput        *bool                  `protobuf:"varint,6,opt,name=binput" json:"binput,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgLinkAtPositionResponse) Reset() {
	*x = CMsgLinkAtPositionResponse{}
	mi := &file_htmlmessages_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLinkAtPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLinkAtPositionResponse) ProtoMessage() {}

func (x *CMsgLinkAtPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLinkAtPositionResponse.ProtoReflect.Descriptor instead.
func (*CMsgLinkAtPositionResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{83}
}

func (x *CMsgLinkAtPositionResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLinkAtPositionResponse) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgLinkAtPositionResponse) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgLinkAtPositionResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgLinkAtPositionResponse) GetBlivelink() bool {
	if x != nil && x.Blivelink != nil {
		return *x.Blivelink
	}
	return false
}

func (x *CMsgLinkAtPositionResponse) GetBinput() bool {
	if x != nil && x.Binput != nil {
		return *x.Binput
	}
	return false
}

type CMsgZoomToElementAtPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32                `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32                `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgZoomToElementAtPosition) Reset() {
	*x = CMsgZoomToElementAtPosition{}
	mi := &file_htmlmessages_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgZoomToElementAtPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgZoomToElementAtPosition) ProtoMessage() {}

func (x *CMsgZoomToElementAtPosition) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgZoomToElementAtPosition.ProtoReflect.Descriptor instead.
func (*CMsgZoomToElementAtPosition) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{84}
}

func (x *CMsgZoomToElementAtPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgZoomToElementAtPosition) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgZoomToElementAtPosition) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgZoomToElementAtPositionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scale         *float32               `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	Duration      *float32               `protobuf:"fixed32,3,opt,name=duration" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgZoomToElementAtPositionResponse) Reset() {
	*x = CMsgZoomToElementAtPositionResponse{}
	mi := &file_htmlmessages_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgZoomToElementAtPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgZoomToElementAtPositionResponse) ProtoMessage() {}

func (x *CMsgZoomToElementAtPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgZoomToElementAtPositionResponse.ProtoReflect.Descriptor instead.
func (*CMsgZoomToElementAtPositionResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{85}
}

func (x *CMsgZoomToElementAtPositionResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgZoomToElementAtPositionResponse) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *CMsgZoomToElementAtPositionResponse) GetDuration() float32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

type CMsgScalePageToValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Scale         *float32               `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	X             *float32               `protobuf:"fixed32,3,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,4,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgScalePageToValue) Reset() {
	*x = CMsgScalePageToValue{}
	mi := &file_htmlmessages_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgScalePageToValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScalePageToValue) ProtoMessage() {}

func (x *CMsgScalePageToValue) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScalePageToValue.ProtoReflect.Descriptor instead.
func (*CMsgScalePageToValue) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{86}
}

func (x *CMsgScalePageToValue) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScalePageToValue) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *CMsgScalePageToValue) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgScalePageToValue) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgForcePopupsToDirectHWND struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle         *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	ForceDirectHwndPopups *bool                  `protobuf:"varint,2,opt,name=force_direct_hwnd_popups,json=forceDirectHwndPopups" json:"force_direct_hwnd_popups,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CMsgForcePopupsToDirectHWND) Reset() {
	*x = CMsgForcePopupsToDirectHWND{}
	mi := &file_htmlmessages_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgForcePopupsToDirectHWND) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgForcePopupsToDirectHWND) ProtoMessage() {}

func (x *CMsgForcePopupsToDirectHWND) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgForcePopupsToDirectHWND.ProtoReflect.Descriptor instead.
func (*CMsgForcePopupsToDirectHWND) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{87}
}

func (x *CMsgForcePopupsToDirectHWND) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgForcePopupsToDirectHWND) GetForceDirectHwndPopups() bool {
	if x != nil && x.ForceDirectHwndPopups != nil {
		return *x.ForceDirectHwndPopups
	}
	return false
}

type CMsgScalePageToValueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Zoom          *float32               `protobuf:"fixed32,2,opt,name=zoom" json:"zoom,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgScalePageToValueResponse) Reset() {
	*x = CMsgScalePageToValueResponse{}
	mi := &file_htmlmessages_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgScalePageToValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScalePageToValueResponse) ProtoMessage() {}

func (x *CMsgScalePageToValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScalePageToValueResponse.ProtoReflect.Descriptor instead.
func (*CMsgScalePageToValueResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{88}
}

func (x *CMsgScalePageToValueResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScalePageToValueResponse) GetZoom() float32 {
	if x != nil && x.Zoom != nil {
		return *x.Zoom
	}
	return 0
}

type CMsgSavePageToJPEG struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Filename      *string                `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	Width         *uint32                `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	Height        *uint32                `protobuf:"varint,5,opt,name=height" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSavePageToJPEG) Reset() {
	*x = CMsgSavePageToJPEG{}
	mi := &file_htmlmessages_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSavePageToJPEG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSavePageToJPEG) ProtoMessage() {}

func (x *CMsgSavePageToJPEG) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSavePageToJPEG.ProtoReflect.Descriptor instead.
func (*CMsgSavePageToJPEG) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{89}
}

func (x *CMsgSavePageToJPEG) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSavePageToJPEG) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgSavePageToJPEG) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *CMsgSavePageToJPEG) GetWidth() uint32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgSavePageToJPEG) GetHeight() uint32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgSavePageToJPEGResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Filename      *string                `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSavePageToJPEGResponse) Reset() {
	*x = CMsgSavePageToJPEGResponse{}
	mi := &file_htmlmessages_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSavePageToJPEGResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSavePageToJPEGResponse) ProtoMessage() {}

func (x *CMsgSavePageToJPEGResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSavePageToJPEGResponse.ProtoReflect.Descriptor instead.
func (*CMsgSavePageToJPEGResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{90}
}

func (x *CMsgSavePageToJPEGResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSavePageToJPEGResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgSavePageToJPEGResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

type CMsgJSAlert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgJSAlert) Reset() {
	*x = CMsgJSAlert{}
	mi := &file_htmlmessages_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSAlert) ProtoMessage() {}

func (x *CMsgJSAlert) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSAlert.ProtoReflect.Descriptor instead.
func (*CMsgJSAlert) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{91}
}

func (x *CMsgJSAlert) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSAlert) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgJSConfirm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgJSConfirm) Reset() {
	*x = CMsgJSConfirm{}
	mi := &file_htmlmessages_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSConfirm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSConfirm) ProtoMessage() {}

func (x *CMsgJSConfirm) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSConfirm.ProtoReflect.Descriptor instead.
func (*CMsgJSConfirm) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{92}
}

func (x *CMsgJSConfirm) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSConfirm) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type CMsgJSDialogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Result        *bool                  `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgJSDialogResponse) Reset() {
	*x = CMsgJSDialogResponse{}
	mi := &file_htmlmessages_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSDialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSDialogResponse) ProtoMessage() {}

func (x *CMsgJSDialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSDialogResponse.ProtoReflect.Descriptor instead.
func (*CMsgJSDialogResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{93}
}

func (x *CMsgJSDialogResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSDialogResponse) GetResult() bool {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return false
}

type CMsgCanGoBackAndForward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Bgoback       *bool                  `protobuf:"varint,2,opt,name=bgoback" json:"bgoback,omitempty"`
	Bgoforward    *bool                  `protobuf:"varint,3,opt,name=bgoforward" json:"bgoforward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgCanGoBackAndForward) Reset() {
	*x = CMsgCanGoBackAndForward{}
	mi := &file_htmlmessages_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgCanGoBackAndForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCanGoBackAndForward) ProtoMessage() {}

func (x *CMsgCanGoBackAndForward) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCanGoBackAndForward.ProtoReflect.Descriptor instead.
func (*CMsgCanGoBackAndForward) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{94}
}

func (x *CMsgCanGoBackAndForward) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgCanGoBackAndForward) GetBgoback() bool {
	if x != nil && x.Bgoback != nil {
		return *x.Bgoback
	}
	return false
}

func (x *CMsgCanGoBackAndForward) GetBgoforward() bool {
	if x != nil && x.Bgoforward != nil {
		return *x.Bgoforward
	}
	return false
}

type CMsgOpenSteamURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Referrer      *string                `protobuf:"bytes,3,opt,name=referrer" json:"referrer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgOpenSteamURL) Reset() {
	*x = CMsgOpenSteamURL{}
	mi := &file_htmlmessages_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgOpenSteamURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpenSteamURL) ProtoMessage() {}

func (x *CMsgOpenSteamURL) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpenSteamURL.ProtoReflect.Descriptor instead.
func (*CMsgOpenSteamURL) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{95}
}

func (x *CMsgOpenSteamURL) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgOpenSteamURL) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgOpenSteamURL) GetReferrer() string {
	if x != nil && x.Referrer != nil {
		return *x.Referrer
	}
	return ""
}

type CMsgSetCookie struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Path          *string                `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	Host          *string                `protobuf:"bytes,4,opt,name=host" json:"host,omitempty"`
	Expires       *uint32                `protobuf:"varint,5,opt,name=expires" json:"expires,omitempty"`
	Secure        *bool                  `protobuf:"varint,6,opt,name=secure" json:"secure,omitempty"`
	Httponly      *bool                  `protobuf:"varint,7,opt,name=httponly" json:"httponly,omitempty"`
	Samesite      *int32                 `protobuf:"varint,8,opt,name=samesite" json:"samesite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetCookie) Reset() {
	*x = CMsgSetCookie{}
	mi := &file_htmlmessages_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetCookie) ProtoMessage() {}

func (x *CMsgSetCookie) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetCookie.ProtoReflect.Descriptor instead.
func (*CMsgSetCookie) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{96}
}

func (x *CMsgSetCookie) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CMsgSetCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CMsgSetCookie) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *CMsgSetCookie) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *CMsgSetCookie) GetExpires() uint32 {
	if x != nil && x.Expires != nil {
		return *x.Expires
	}
	return 0
}

func (x *CMsgSetCookie) GetSecure() bool {
	if x != nil && x.Secure != nil {
		return *x.Secure
	}
	return false
}

func (x *CMsgSetCookie) GetHttponly() bool {
	if x != nil && x.Httponly != nil {
		return *x.Httponly
	}
	return false
}

func (x *CMsgSetCookie) GetSamesite() int32 {
	if x != nil && x.Samesite != nil {
		return *x.Samesite
	}
	return 0
}

type CMsgSetTargetFrameRate struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle    *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	NTargetFrameRate *uint32                `protobuf:"varint,2,opt,name=nTargetFrameRate" json:"nTargetFrameRate,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgSetTargetFrameRate) Reset() {
	*x = CMsgSetTargetFrameRate{}
	mi := &file_htmlmessages_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetTargetFrameRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetTargetFrameRate) ProtoMessage() {}

func (x *CMsgSetTargetFrameRate) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetTargetFrameRate.ProtoReflect.Descriptor instead.
func (*CMsgSetTargetFrameRate) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{97}
}

func (x *CMsgSetTargetFrameRate) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetTargetFrameRate) GetNTargetFrameRate() uint32 {
	if x != nil && x.NTargetFrameRate != nil {
		return *x.NTargetFrameRate
	}
	return 0
}

type CMsgPauseRepaint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPauseRepaint) Reset() {
	*x = CMsgPauseRepaint{}
	mi := &file_htmlmessages_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPauseRepaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPauseRepaint) ProtoMessage() {}

func (x *CMsgPauseRepaint) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPauseRepaint.ProtoReflect.Descriptor instead.
func (*CMsgPauseRepaint) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{98}
}

func (x *CMsgPauseRepaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgFullRepaint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgFullRepaint) Reset() {
	*x = CMsgFullRepaint{}
	mi := &file_htmlmessages_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFullRepaint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFullRepaint) ProtoMessage() {}

func (x *CMsgFullRepaint) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFullRepaint.ProtoReflect.Descriptor instead.
func (*CMsgFullRepaint) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{99}
}

func (x *CMsgFullRepaint) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgRequestFullScreen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRequestFullScreen) Reset() {
	*x = CMsgRequestFullScreen{}
	mi := &file_htmlmessages_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRequestFullScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRequestFullScreen) ProtoMessage() {}

func (x *CMsgRequestFullScreen) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRequestFullScreen.ProtoReflect.Descriptor instead.
func (*CMsgRequestFullScreen) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{100}
}

func (x *CMsgRequestFullScreen) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgExitFullScreen struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgExitFullScreen) Reset() {
	*x = CMsgExitFullScreen{}
	mi := &file_htmlmessages_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgExitFullScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgExitFullScreen) ProtoMessage() {}

func (x *CMsgExitFullScreen) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgExitFullScreen.ProtoReflect.Descriptor instead.
func (*CMsgExitFullScreen) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{101}
}

func (x *CMsgExitFullScreen) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgToggleFindInPageDialog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgToggleFindInPageDialog) Reset() {
	*x = CMsgToggleFindInPageDialog{}
	mi := &file_htmlmessages_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgToggleFindInPageDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgToggleFindInPageDialog) ProtoMessage() {}

func (x *CMsgToggleFindInPageDialog) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgToggleFindInPageDialog.ProtoReflect.Descriptor instead.
func (*CMsgToggleFindInPageDialog) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{102}
}

func (x *CMsgToggleFindInPageDialog) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetPIDShuttingDown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetPIDShuttingDown) Reset() {
	*x = CMsgSetPIDShuttingDown{}
	mi := &file_htmlmessages_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetPIDShuttingDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetPIDShuttingDown) ProtoMessage() {}

func (x *CMsgSetPIDShuttingDown) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetPIDShuttingDown.ProtoReflect.Descriptor instead.
func (*CMsgSetPIDShuttingDown) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{103}
}

func (x *CMsgSetPIDShuttingDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgDisableBackgroundThrottling struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgDisableBackgroundThrottling) Reset() {
	*x = CMsgDisableBackgroundThrottling{}
	mi := &file_htmlmessages_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgDisableBackgroundThrottling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDisableBackgroundThrottling) ProtoMessage() {}

func (x *CMsgDisableBackgroundThrottling) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDisableBackgroundThrottling.ProtoReflect.Descriptor instead.
func (*CMsgDisableBackgroundThrottling) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{104}
}

func (x *CMsgDisableBackgroundThrottling) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgAckPIDShuttingDown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgAckPIDShuttingDown) Reset() {
	*x = CMsgAckPIDShuttingDown{}
	mi := &file_htmlmessages_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAckPIDShuttingDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAckPIDShuttingDown) ProtoMessage() {}

func (x *CMsgAckPIDShuttingDown) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAckPIDShuttingDown.ProtoReflect.Descriptor instead.
func (*CMsgAckPIDShuttingDown) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{105}
}

func (x *CMsgAckPIDShuttingDown) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgGetCookiesForURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGetCookiesForURL) Reset() {
	*x = CMsgGetCookiesForURL{}
	mi := &file_htmlmessages_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGetCookiesForURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetCookiesForURL) ProtoMessage() {}

func (x *CMsgGetCookiesForURL) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetCookiesForURL.ProtoReflect.Descriptor instead.
func (*CMsgGetCookiesForURL) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{106}
}

func (x *CMsgGetCookiesForURL) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGetCookiesForURL) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CCookie struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Domain        *string                `protobuf:"bytes,3,opt,name=domain" json:"domain,omitempty"`
	Path          *string                `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCookie) Reset() {
	*x = CCookie{}
	mi := &file_htmlmessages_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCookie) ProtoMessage() {}

func (x *CCookie) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCookie.ProtoReflect.Descriptor instead.
func (*CCookie) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{107}
}

func (x *CCookie) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CCookie) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

func (x *CCookie) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type CMsgGetCookiesForURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Cookies       []*CCookie             `protobuf:"bytes,3,rep,name=cookies" json:"cookies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgGetCookiesForURLResponse) Reset() {
	*x = CMsgGetCookiesForURLResponse{}
	mi := &file_htmlmessages_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgGetCookiesForURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgGetCookiesForURLResponse) ProtoMessage() {}

func (x *CMsgGetCookiesForURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgGetCookiesForURLResponse.ProtoReflect.Descriptor instead.
func (*CMsgGetCookiesForURLResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{108}
}

func (x *CMsgGetCookiesForURLResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgGetCookiesForURLResponse) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *CMsgGetCookiesForURLResponse) GetCookies() []*CCookie {
	if x != nil {
		return x.Cookies
	}
	return nil
}

type CMsgNodeHasFocus struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle      *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	BInput             *bool                  `protobuf:"varint,2,opt,name=bInput" json:"bInput,omitempty"`
	Name               *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Elementtagname     *string                `protobuf:"bytes,4,opt,name=elementtagname" json:"elementtagname,omitempty"`
	Searchbuttontext   *string                `protobuf:"bytes,5,opt,name=searchbuttontext" json:"searchbuttontext,omitempty"`
	BHasMultipleInputs *bool                  `protobuf:"varint,6,opt,name=bHasMultipleInputs" json:"bHasMultipleInputs,omitempty"`
	InputType          *string                `protobuf:"bytes,7,opt,name=input_type,json=inputType" json:"input_type,omitempty"`
	BIsMainFrame       *bool                  `protobuf:"varint,8,opt,name=bIsMainFrame" json:"bIsMainFrame,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CMsgNodeHasFocus) Reset() {
	*x = CMsgNodeHasFocus{}
	mi := &file_htmlmessages_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgNodeHasFocus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNodeHasFocus) ProtoMessage() {}

func (x *CMsgNodeHasFocus) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNodeHasFocus.ProtoReflect.Descriptor instead.
func (*CMsgNodeHasFocus) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{109}
}

func (x *CMsgNodeHasFocus) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgNodeHasFocus) GetBInput() bool {
	if x != nil && x.BInput != nil {
		return *x.BInput
	}
	return false
}

func (x *CMsgNodeHasFocus) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetElementtagname() string {
	if x != nil && x.Elementtagname != nil {
		return *x.Elementtagname
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetSearchbuttontext() string {
	if x != nil && x.Searchbuttontext != nil {
		return *x.Searchbuttontext
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetBHasMultipleInputs() bool {
	if x != nil && x.BHasMultipleInputs != nil {
		return *x.BHasMultipleInputs
	}
	return false
}

func (x *CMsgNodeHasFocus) GetInputType() string {
	if x != nil && x.InputType != nil {
		return *x.InputType
	}
	return ""
}

func (x *CMsgNodeHasFocus) GetBIsMainFrame() bool {
	if x != nil && x.BIsMainFrame != nil {
		return *x.BIsMainFrame
	}
	return false
}

type CMsgZoomToFocusedElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgZoomToFocusedElement) Reset() {
	*x = CMsgZoomToFocusedElement{}
	mi := &file_htmlmessages_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgZoomToFocusedElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgZoomToFocusedElement) ProtoMessage() {}

func (x *CMsgZoomToFocusedElement) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgZoomToFocusedElement.ProtoReflect.Descriptor instead.
func (*CMsgZoomToFocusedElement) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{110}
}

func (x *CMsgZoomToFocusedElement) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgFocusedNodeText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgFocusedNodeText) Reset() {
	*x = CMsgFocusedNodeText{}
	mi := &file_htmlmessages_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFocusedNodeText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFocusedNodeText) ProtoMessage() {}

func (x *CMsgFocusedNodeText) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFocusedNodeText.ProtoReflect.Descriptor instead.
func (*CMsgFocusedNodeText) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{111}
}

func (x *CMsgFocusedNodeText) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgFocusedNodeTextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgFocusedNodeTextResponse) Reset() {
	*x = CMsgFocusedNodeTextResponse{}
	mi := &file_htmlmessages_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFocusedNodeTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFocusedNodeTextResponse) ProtoMessage() {}

func (x *CMsgFocusedNodeTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFocusedNodeTextResponse.ProtoReflect.Descriptor instead.
func (*CMsgFocusedNodeTextResponse) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{112}
}

func (x *CMsgFocusedNodeTextResponse) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgFocusedNodeTextResponse) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CMsgBuildID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       *uint64                `protobuf:"varint,1,opt,name=build_id,json=buildId" json:"build_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBuildID) Reset() {
	*x = CMsgBuildID{}
	mi := &file_htmlmessages_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBuildID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBuildID) ProtoMessage() {}

func (x *CMsgBuildID) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBuildID.ProtoReflect.Descriptor instead.
func (*CMsgBuildID) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{113}
}

func (x *CMsgBuildID) GetBuildId() uint64 {
	if x != nil && x.BuildId != nil {
		return *x.BuildId
	}
	return 0
}

type CMsgOpenDevTools struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgOpenDevTools) Reset() {
	*x = CMsgOpenDevTools{}
	mi := &file_htmlmessages_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgOpenDevTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgOpenDevTools) ProtoMessage() {}

func (x *CMsgOpenDevTools) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgOpenDevTools.ProtoReflect.Descriptor instead.
func (*CMsgOpenDevTools) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{114}
}

func (x *CMsgOpenDevTools) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgCloseDevTools struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgCloseDevTools) Reset() {
	*x = CMsgCloseDevTools{}
	mi := &file_htmlmessages_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgCloseDevTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgCloseDevTools) ProtoMessage() {}

func (x *CMsgCloseDevTools) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgCloseDevTools.ProtoReflect.Descriptor instead.
func (*CMsgCloseDevTools) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{115}
}

func (x *CMsgCloseDevTools) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgUnlockH264 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	UnlockCode    *string                `protobuf:"bytes,2,opt,name=unlock_code,json=unlockCode" json:"unlock_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgUnlockH264) Reset() {
	*x = CMsgUnlockH264{}
	mi := &file_htmlmessages_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgUnlockH264) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgUnlockH264) ProtoMessage() {}

func (x *CMsgUnlockH264) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgUnlockH264.ProtoReflect.Descriptor instead.
func (*CMsgUnlockH264) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{116}
}

func (x *CMsgUnlockH264) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgUnlockH264) GetUnlockCode() string {
	if x != nil && x.UnlockCode != nil {
		return *x.UnlockCode
	}
	return ""
}

type CMsgScreenInformationChanged struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle  *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OverrideWidth  *float64               `protobuf:"fixed64,2,opt,name=override_width,json=overrideWidth" json:"override_width,omitempty"`
	OverrideHeight *float64               `protobuf:"fixed64,3,opt,name=override_height,json=overrideHeight" json:"override_height,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgScreenInformationChanged) Reset() {
	*x = CMsgScreenInformationChanged{}
	mi := &file_htmlmessages_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgScreenInformationChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScreenInformationChanged) ProtoMessage() {}

func (x *CMsgScreenInformationChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScreenInformationChanged.ProtoReflect.Descriptor instead.
func (*CMsgScreenInformationChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{117}
}

func (x *CMsgScreenInformationChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetOverrideWidth() float64 {
	if x != nil && x.OverrideWidth != nil {
		return *x.OverrideWidth
	}
	return 0
}

func (x *CMsgScreenInformationChanged) GetOverrideHeight() float64 {
	if x != nil && x.OverrideHeight != nil {
		return *x.OverrideHeight
	}
	return 0
}

type CMsgClearAllCookies struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClearAllCookies) Reset() {
	*x = CMsgClearAllCookies{}
	mi := &file_htmlmessages_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClearAllCookies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearAllCookies) ProtoMessage() {}

func (x *CMsgClearAllCookies) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearAllCookies.ProtoReflect.Descriptor instead.
func (*CMsgClearAllCookies) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{118}
}

func (x *CMsgClearAllCookies) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgScreenDPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	DpiScaling    *float32               `protobuf:"fixed32,2,opt,name=dpi_scaling,json=dpiScaling" json:"dpi_scaling,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgScreenDPI) Reset() {
	*x = CMsgScreenDPI{}
	mi := &file_htmlmessages_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgScreenDPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgScreenDPI) ProtoMessage() {}

func (x *CMsgScreenDPI) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgScreenDPI.ProtoReflect.Descriptor instead.
func (*CMsgScreenDPI) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{119}
}

func (x *CMsgScreenDPI) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgScreenDPI) GetDpiScaling() float32 {
	if x != nil && x.DpiScaling != nil {
		return *x.DpiScaling
	}
	return 0
}

type CMsgAckScreenDPI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgAckScreenDPI) Reset() {
	*x = CMsgAckScreenDPI{}
	mi := &file_htmlmessages_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAckScreenDPI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAckScreenDPI) ProtoMessage() {}

func (x *CMsgAckScreenDPI) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAckScreenDPI.ProtoReflect.Descriptor instead.
func (*CMsgAckScreenDPI) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{120}
}

func (x *CMsgAckScreenDPI) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgAuthedSteamDomains struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domains       []string               `protobuf:"bytes,1,rep,name=domains" json:"domains,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgAuthedSteamDomains) Reset() {
	*x = CMsgAuthedSteamDomains{}
	mi := &file_htmlmessages_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAuthedSteamDomains) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAuthedSteamDomains) ProtoMessage() {}

func (x *CMsgAuthedSteamDomains) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAuthedSteamDomains.ProtoReflect.Descriptor instead.
func (*CMsgAuthedSteamDomains) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{121}
}

func (x *CMsgAuthedSteamDomains) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

type CMsgSteamAuthNeeded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filler        *bool                  `protobuf:"varint,1,opt,name=filler" json:"filler,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamAuthNeeded) Reset() {
	*x = CMsgSteamAuthNeeded{}
	mi := &file_htmlmessages_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamAuthNeeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamAuthNeeded) ProtoMessage() {}

func (x *CMsgSteamAuthNeeded) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamAuthNeeded.ProtoReflect.Descriptor instead.
func (*CMsgSteamAuthNeeded) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{122}
}

func (x *CMsgSteamAuthNeeded) GetFiller() bool {
	if x != nil && x.Filler != nil {
		return *x.Filler
	}
	return false
}

type CMsgSteamAuthCookiesSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       *bool                  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamAuthCookiesSet) Reset() {
	*x = CMsgSteamAuthCookiesSet{}
	mi := &file_htmlmessages_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamAuthCookiesSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamAuthCookiesSet) ProtoMessage() {}

func (x *CMsgSteamAuthCookiesSet) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamAuthCookiesSet.ProtoReflect.Descriptor instead.
func (*CMsgSteamAuthCookiesSet) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{123}
}

func (x *CMsgSteamAuthCookiesSet) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

type CMsgJSRegisterMethod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	MethodType    *EJSRegisterMethodType `protobuf:"varint,3,opt,name=method_type,json=methodType,enum=EJSRegisterMethodType,def=0" json:"method_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgJSRegisterMethod fields.
const (
	Default_CMsgJSRegisterMethod_MethodType = EJSRegisterMethodType_k_EJSRegisterMethodType_Invalid
)

func (x *CMsgJSRegisterMethod) Reset() {
	*x = CMsgJSRegisterMethod{}
	mi := &file_htmlmessages_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSRegisterMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSRegisterMethod) ProtoMessage() {}

func (x *CMsgJSRegisterMethod) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSRegisterMethod.ProtoReflect.Descriptor instead.
func (*CMsgJSRegisterMethod) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{124}
}

func (x *CMsgJSRegisterMethod) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSRegisterMethod) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgJSRegisterMethod) GetMethodType() EJSRegisterMethodType {
	if x != nil && x.MethodType != nil {
		return *x.MethodType
	}
	return Default_CMsgJSRegisterMethod_MethodType
}

type CMsgJSValue struct {
	state            protoimpl.MessageState          `protogen:"open.v1"`
	BoolValue        *bool                           `protobuf:"varint,1,opt,name=bool_value,json=boolValue" json:"bool_value,omitempty"`
	IntValue         *int32                          `protobuf:"varint,2,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	UintValue        *uint32                         `protobuf:"varint,3,opt,name=uint_value,json=uintValue" json:"uint_value,omitempty"`
	DoubleValue      *float64                        `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue" json:"double_value,omitempty"`
	StringValue      *string                         `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	FunctionHandle   *uint64                         `protobuf:"varint,6,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
	BytesValue       []byte                          `protobuf:"bytes,12,opt,name=bytes_value,json=bytesValue" json:"bytes_value,omitempty"`
	IsArray          *bool                           `protobuf:"varint,8,opt,name=is_array,json=isArray" json:"is_array,omitempty"`
	ArrayValues      []*CMsgJSValue                  `protobuf:"bytes,9,rep,name=array_values,json=arrayValues" json:"array_values,omitempty"`
	IsObject         *bool                           `protobuf:"varint,10,opt,name=is_object,json=isObject" json:"is_object,omitempty"`
	ObjectProperties []*CMsgJSValue_JSObjectProperty `protobuf:"bytes,11,rep,name=object_properties,json=objectProperties" json:"object_properties,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgJSValue) Reset() {
	*x = CMsgJSValue{}
	mi := &file_htmlmessages_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSValue) ProtoMessage() {}

func (x *CMsgJSValue) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSValue.ProtoReflect.Descriptor instead.
func (*CMsgJSValue) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{125}
}

func (x *CMsgJSValue) GetBoolValue() bool {
	if x != nil && x.BoolValue != nil {
		return *x.BoolValue
	}
	return false
}

func (x *CMsgJSValue) GetIntValue() int32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

func (x *CMsgJSValue) GetUintValue() uint32 {
	if x != nil && x.UintValue != nil {
		return *x.UintValue
	}
	return 0
}

func (x *CMsgJSValue) GetDoubleValue() float64 {
	if x != nil && x.DoubleValue != nil {
		return *x.DoubleValue
	}
	return 0
}

func (x *CMsgJSValue) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *CMsgJSValue) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

func (x *CMsgJSValue) GetBytesValue() []byte {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

func (x *CMsgJSValue) GetIsArray() bool {
	if x != nil && x.IsArray != nil {
		return *x.IsArray
	}
	return false
}

func (x *CMsgJSValue) GetArrayValues() []*CMsgJSValue {
	if x != nil {
		return x.ArrayValues
	}
	return nil
}

func (x *CMsgJSValue) GetIsObject() bool {
	if x != nil && x.IsObject != nil {
		return *x.IsObject
	}
	return false
}

func (x *CMsgJSValue) GetObjectProperties() []*CMsgJSValue_JSObjectProperty {
	if x != nil {
		return x.ObjectProperties
	}
	return nil
}

type CMsgJSMethodCall struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle       *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	Name                *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Arguments           []*CMsgJSValue         `protobuf:"bytes,4,rep,name=arguments" json:"arguments,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgJSMethodCall) Reset() {
	*x = CMsgJSMethodCall{}
	mi := &file_htmlmessages_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSMethodCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSMethodCall) ProtoMessage() {}

func (x *CMsgJSMethodCall) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSMethodCall.ProtoReflect.Descriptor instead.
func (*CMsgJSMethodCall) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{126}
}

func (x *CMsgJSMethodCall) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSMethodCall) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgJSMethodCall) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgJSMethodCall) GetArguments() []*CMsgJSValue {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type CMsgJSExecuteCallback struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle       *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	FunctionHandle      *uint64                `protobuf:"varint,3,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
	Arguments           []*CMsgJSValue         `protobuf:"bytes,4,rep,name=arguments" json:"arguments,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgJSExecuteCallback) Reset() {
	*x = CMsgJSExecuteCallback{}
	mi := &file_htmlmessages_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSExecuteCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSExecuteCallback) ProtoMessage() {}

func (x *CMsgJSExecuteCallback) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSExecuteCallback.ProtoReflect.Descriptor instead.
func (*CMsgJSExecuteCallback) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{127}
}

func (x *CMsgJSExecuteCallback) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSExecuteCallback) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgJSExecuteCallback) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

func (x *CMsgJSExecuteCallback) GetArguments() []*CMsgJSValue {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type CMsgJSExecutePromise struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle       *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	PromiseHandle       *uint64                `protobuf:"varint,3,opt,name=promise_handle,json=promiseHandle" json:"promise_handle,omitempty"`
	RejectReason        *string                `protobuf:"bytes,4,opt,name=reject_reason,json=rejectReason" json:"reject_reason,omitempty"`
	Argument            *CMsgJSValue           `protobuf:"bytes,5,opt,name=argument" json:"argument,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgJSExecutePromise) Reset() {
	*x = CMsgJSExecutePromise{}
	mi := &file_htmlmessages_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSExecutePromise) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSExecutePromise) ProtoMessage() {}

func (x *CMsgJSExecutePromise) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSExecutePromise.ProtoReflect.Descriptor instead.
func (*CMsgJSExecutePromise) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{128}
}

func (x *CMsgJSExecutePromise) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSExecutePromise) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgJSExecutePromise) GetPromiseHandle() uint64 {
	if x != nil && x.PromiseHandle != nil {
		return *x.PromiseHandle
	}
	return 0
}

func (x *CMsgJSExecutePromise) GetRejectReason() string {
	if x != nil && x.RejectReason != nil {
		return *x.RejectReason
	}
	return ""
}

func (x *CMsgJSExecutePromise) GetArgument() *CMsgJSValue {
	if x != nil {
		return x.Argument
	}
	return nil
}

type CMsgJSReleaseCallback struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle       *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	FunctionHandle      *uint64                `protobuf:"varint,3,opt,name=function_handle,json=functionHandle" json:"function_handle,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgJSReleaseCallback) Reset() {
	*x = CMsgJSReleaseCallback{}
	mi := &file_htmlmessages_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSReleaseCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSReleaseCallback) ProtoMessage() {}

func (x *CMsgJSReleaseCallback) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSReleaseCallback.ProtoReflect.Descriptor instead.
func (*CMsgJSReleaseCallback) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{129}
}

func (x *CMsgJSReleaseCallback) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSReleaseCallback) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgJSReleaseCallback) GetFunctionHandle() uint64 {
	if x != nil && x.FunctionHandle != nil {
		return *x.FunctionHandle
	}
	return 0
}

type CMsgJSRaiseException struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle       *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	OwningBrowserHandle *uint32                `protobuf:"varint,2,opt,name=owning_browser_handle,json=owningBrowserHandle" json:"owning_browser_handle,omitempty"`
	Exception           *string                `protobuf:"bytes,3,opt,name=exception" json:"exception,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgJSRaiseException) Reset() {
	*x = CMsgJSRaiseException{}
	mi := &file_htmlmessages_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSRaiseException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSRaiseException) ProtoMessage() {}

func (x *CMsgJSRaiseException) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSRaiseException.ProtoReflect.Descriptor instead.
func (*CMsgJSRaiseException) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{130}
}

func (x *CMsgJSRaiseException) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgJSRaiseException) GetOwningBrowserHandle() uint32 {
	if x != nil && x.OwningBrowserHandle != nil {
		return *x.OwningBrowserHandle
	}
	return 0
}

func (x *CMsgJSRaiseException) GetException() string {
	if x != nil && x.Exception != nil {
		return *x.Exception
	}
	return ""
}

type CMsgLoadLocalization struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle    *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	LocalizationPath *string                `protobuf:"bytes,2,opt,name=localization_path,json=localizationPath" json:"localization_path,omitempty"`
	Language         *string                `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgLoadLocalization) Reset() {
	*x = CMsgLoadLocalization{}
	mi := &file_htmlmessages_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLoadLocalization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLoadLocalization) ProtoMessage() {}

func (x *CMsgLoadLocalization) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLoadLocalization.ProtoReflect.Descriptor instead.
func (*CMsgLoadLocalization) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{131}
}

func (x *CMsgLoadLocalization) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgLoadLocalization) GetLocalizationPath() string {
	if x != nil && x.LocalizationPath != nil {
		return *x.LocalizationPath
	}
	return ""
}

func (x *CMsgLoadLocalization) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CMsgNotifyUserActivation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgNotifyUserActivation) Reset() {
	*x = CMsgNotifyUserActivation{}
	mi := &file_htmlmessages_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgNotifyUserActivation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgNotifyUserActivation) ProtoMessage() {}

func (x *CMsgNotifyUserActivation) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgNotifyUserActivation.ProtoReflect.Descriptor instead.
func (*CMsgNotifyUserActivation) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{132}
}

func (x *CMsgNotifyUserActivation) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetNetFakeLocalSystemState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *uint32                `protobuf:"varint,1,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetNetFakeLocalSystemState) Reset() {
	*x = CMsgSetNetFakeLocalSystemState{}
	mi := &file_htmlmessages_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetNetFakeLocalSystemState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetNetFakeLocalSystemState) ProtoMessage() {}

func (x *CMsgSetNetFakeLocalSystemState) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetNetFakeLocalSystemState.ProtoReflect.Descriptor instead.
func (*CMsgSetNetFakeLocalSystemState) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{133}
}

func (x *CMsgSetNetFakeLocalSystemState) GetState() uint32 {
	if x != nil && x.State != nil {
		return *x.State
	}
	return 0
}

type CMsgDraggableRegionsChanged struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	BrowserHandle *uint32                                       `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Rects         []*CMsgDraggableRegionsChanged_DraggableRects `protobuf:"bytes,2,rep,name=rects" json:"rects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgDraggableRegionsChanged) Reset() {
	*x = CMsgDraggableRegionsChanged{}
	mi := &file_htmlmessages_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgDraggableRegionsChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDraggableRegionsChanged) ProtoMessage() {}

func (x *CMsgDraggableRegionsChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDraggableRegionsChanged.ProtoReflect.Descriptor instead.
func (*CMsgDraggableRegionsChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{134}
}

func (x *CMsgDraggableRegionsChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged) GetRects() []*CMsgDraggableRegionsChanged_DraggableRects {
	if x != nil {
		return x.Rects
	}
	return nil
}

type CMsgResizeGripChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Width         *int32                 `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height        *int32                 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgResizeGripChanged) Reset() {
	*x = CMsgResizeGripChanged{}
	mi := &file_htmlmessages_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgResizeGripChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgResizeGripChanged) ProtoMessage() {}

func (x *CMsgResizeGripChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgResizeGripChanged.ProtoReflect.Descriptor instead.
func (*CMsgResizeGripChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{135}
}

func (x *CMsgResizeGripChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgResizeGripChanged) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgResizeGripChanged) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type CMsgSetWindowPosition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *float64               `protobuf:"fixed64,2,opt,name=x" json:"x,omitempty"`
	Y             *float64               `protobuf:"fixed64,3,opt,name=y" json:"y,omitempty"`
	Width         *float64               `protobuf:"fixed64,4,opt,name=width" json:"width,omitempty"`
	Height        *float64               `protobuf:"fixed64,5,opt,name=height" json:"height,omitempty"`
	MinWidth      *float64               `protobuf:"fixed64,6,opt,name=min_width,json=minWidth" json:"min_width,omitempty"`
	MinHeight     *float64               `protobuf:"fixed64,7,opt,name=min_height,json=minHeight" json:"min_height,omitempty"`
	MaxWidth      *float64               `protobuf:"fixed64,8,opt,name=max_width,json=maxWidth" json:"max_width,omitempty"`
	MaxHeight     *float64               `protobuf:"fixed64,9,opt,name=max_height,json=maxHeight" json:"max_height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetWindowPosition) Reset() {
	*x = CMsgSetWindowPosition{}
	mi := &file_htmlmessages_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetWindowPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetWindowPosition) ProtoMessage() {}

func (x *CMsgSetWindowPosition) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetWindowPosition.ProtoReflect.Descriptor instead.
func (*CMsgSetWindowPosition) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{136}
}

func (x *CMsgSetWindowPosition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetMinWidth() float64 {
	if x != nil && x.MinWidth != nil {
		return *x.MinWidth
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetMinHeight() float64 {
	if x != nil && x.MinHeight != nil {
		return *x.MinHeight
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetMaxWidth() float64 {
	if x != nil && x.MaxWidth != nil {
		return *x.MaxWidth
	}
	return 0
}

func (x *CMsgSetWindowPosition) GetMaxHeight() float64 {
	if x != nil && x.MaxHeight != nil {
		return *x.MaxHeight
	}
	return 0
}

type CMsgShowWindow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgShowWindow) Reset() {
	*x = CMsgShowWindow{}
	mi := &file_htmlmessages_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgShowWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowWindow) ProtoMessage() {}

func (x *CMsgShowWindow) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowWindow.ProtoReflect.Descriptor instead.
func (*CMsgShowWindow) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{137}
}

func (x *CMsgShowWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgHideWindow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHideWindow) Reset() {
	*x = CMsgHideWindow{}
	mi := &file_htmlmessages_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHideWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHideWindow) ProtoMessage() {}

func (x *CMsgHideWindow) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHideWindow.ProtoReflect.Descriptor instead.
func (*CMsgHideWindow) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{138}
}

func (x *CMsgHideWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgBringWindowToFront struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBringWindowToFront) Reset() {
	*x = CMsgBringWindowToFront{}
	mi := &file_htmlmessages_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBringWindowToFront) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBringWindowToFront) ProtoMessage() {}

func (x *CMsgBringWindowToFront) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBringWindowToFront.ProtoReflect.Descriptor instead.
func (*CMsgBringWindowToFront) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{139}
}

func (x *CMsgBringWindowToFront) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetForegroundWindow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetForegroundWindow) Reset() {
	*x = CMsgSetForegroundWindow{}
	mi := &file_htmlmessages_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetForegroundWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetForegroundWindow) ProtoMessage() {}

func (x *CMsgSetForegroundWindow) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetForegroundWindow.ProtoReflect.Descriptor instead.
func (*CMsgSetForegroundWindow) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{140}
}

func (x *CMsgSetForegroundWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgMaximizeRestoreWindow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMaximizeRestoreWindow) Reset() {
	*x = CMsgMaximizeRestoreWindow{}
	mi := &file_htmlmessages_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMaximizeRestoreWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMaximizeRestoreWindow) ProtoMessage() {}

func (x *CMsgMaximizeRestoreWindow) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMaximizeRestoreWindow.ProtoReflect.Descriptor instead.
func (*CMsgMaximizeRestoreWindow) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{141}
}

func (x *CMsgMaximizeRestoreWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgMinimizeWindow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgMinimizeWindow) Reset() {
	*x = CMsgMinimizeWindow{}
	mi := &file_htmlmessages_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgMinimizeWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgMinimizeWindow) ProtoMessage() {}

func (x *CMsgMinimizeWindow) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgMinimizeWindow.ProtoReflect.Descriptor instead.
func (*CMsgMinimizeWindow) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{142}
}

func (x *CMsgMinimizeWindow) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgShowBrowserContextMenu struct {
	state             protoimpl.MessageState                       `protogen:"open.v1"`
	BrowserHandle     *uint32                                      `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	CustomCommands    []*CMsgShowBrowserContextMenu_ContextCommand `protobuf:"bytes,2,rep,name=custom_commands,json=customCommands" json:"custom_commands,omitempty"`
	TypeFlags         *uint32                                      `protobuf:"varint,3,opt,name=type_flags,json=typeFlags" json:"type_flags,omitempty"`
	PageUrl           *string                                      `protobuf:"bytes,4,opt,name=page_url,json=pageUrl" json:"page_url,omitempty"`
	CoordX            *int32                                       `protobuf:"varint,5,opt,name=coord_x,json=coordX" json:"coord_x,omitempty"`
	CoordY            *int32                                       `protobuf:"varint,6,opt,name=coord_y,json=coordY" json:"coord_y,omitempty"`
	LinkUrl           *string                                      `protobuf:"bytes,7,opt,name=link_url,json=linkUrl" json:"link_url,omitempty"`
	UnfilteredLinkUrl *string                                      `protobuf:"bytes,8,opt,name=unfiltered_link_url,json=unfilteredLinkUrl" json:"unfiltered_link_url,omitempty"`
	SelectionText     *string                                      `protobuf:"bytes,9,opt,name=selection_text,json=selectionText" json:"selection_text,omitempty"`
	MisspelledWord    *string                                      `protobuf:"bytes,10,opt,name=misspelled_word,json=misspelledWord" json:"misspelled_word,omitempty"`
	EditStateFlags    *uint32                                      `protobuf:"varint,11,opt,name=edit_state_flags,json=editStateFlags" json:"edit_state_flags,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgShowBrowserContextMenu) Reset() {
	*x = CMsgShowBrowserContextMenu{}
	mi := &file_htmlmessages_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgShowBrowserContextMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowBrowserContextMenu) ProtoMessage() {}

func (x *CMsgShowBrowserContextMenu) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowBrowserContextMenu.ProtoReflect.Descriptor instead.
func (*CMsgShowBrowserContextMenu) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{143}
}

func (x *CMsgShowBrowserContextMenu) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgShowBrowserContextMenu) GetCustomCommands() []*CMsgShowBrowserContextMenu_ContextCommand {
	if x != nil {
		return x.CustomCommands
	}
	return nil
}

func (x *CMsgShowBrowserContextMenu) GetTypeFlags() uint32 {
	if x != nil && x.TypeFlags != nil {
		return *x.TypeFlags
	}
	return 0
}

func (x *CMsgShowBrowserContextMenu) GetPageUrl() string {
	if x != nil && x.PageUrl != nil {
		return *x.PageUrl
	}
	return ""
}

func (x *CMsgShowBrowserContextMenu) GetCoordX() int32 {
	if x != nil && x.CoordX != nil {
		return *x.CoordX
	}
	return 0
}

func (x *CMsgShowBrowserContextMenu) GetCoordY() int32 {
	if x != nil && x.CoordY != nil {
		return *x.CoordY
	}
	return 0
}

func (x *CMsgShowBrowserContextMenu) GetLinkUrl() string {
	if x != nil && x.LinkUrl != nil {
		return *x.LinkUrl
	}
	return ""
}

func (x *CMsgShowBrowserContextMenu) GetUnfilteredLinkUrl() string {
	if x != nil && x.UnfilteredLinkUrl != nil {
		return *x.UnfilteredLinkUrl
	}
	return ""
}

func (x *CMsgShowBrowserContextMenu) GetSelectionText() string {
	if x != nil && x.SelectionText != nil {
		return *x.SelectionText
	}
	return ""
}

func (x *CMsgShowBrowserContextMenu) GetMisspelledWord() string {
	if x != nil && x.MisspelledWord != nil {
		return *x.MisspelledWord
	}
	return ""
}

func (x *CMsgShowBrowserContextMenu) GetEditStateFlags() uint32 {
	if x != nil && x.EditStateFlags != nil {
		return *x.EditStateFlags
	}
	return 0
}

type CMsgHandleContextMenuCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	CommandId     *int32                 `protobuf:"varint,2,opt,name=command_id,json=commandId" json:"command_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgHandleContextMenuCommand) Reset() {
	*x = CMsgHandleContextMenuCommand{}
	mi := &file_htmlmessages_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgHandleContextMenuCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgHandleContextMenuCommand) ProtoMessage() {}

func (x *CMsgHandleContextMenuCommand) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgHandleContextMenuCommand.ProtoReflect.Descriptor instead.
func (*CMsgHandleContextMenuCommand) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{144}
}

func (x *CMsgHandleContextMenuCommand) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgHandleContextMenuCommand) GetCommandId() int32 {
	if x != nil && x.CommandId != nil {
		return *x.CommandId
	}
	return 0
}

type CMsgTouchGesture struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Id            *int32                 `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Gesture       *uint32                `protobuf:"varint,3,opt,name=gesture" json:"gesture,omitempty"`
	X             *float64               `protobuf:"fixed64,4,opt,name=x" json:"x,omitempty"`
	Y             *float64               `protobuf:"fixed64,5,opt,name=y" json:"y,omitempty"`
	Width         *float64               `protobuf:"fixed64,6,opt,name=width" json:"width,omitempty"`
	Height        *float64               `protobuf:"fixed64,7,opt,name=height" json:"height,omitempty"`
	TapCount      *uint32                `protobuf:"varint,8,opt,name=tap_count,json=tapCount" json:"tap_count,omitempty"`
	PinchScale    *float64               `protobuf:"fixed64,9,opt,name=pinch_scale,json=pinchScale" json:"pinch_scale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgTouchGesture) Reset() {
	*x = CMsgTouchGesture{}
	mi := &file_htmlmessages_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgTouchGesture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTouchGesture) ProtoMessage() {}

func (x *CMsgTouchGesture) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTouchGesture.ProtoReflect.Descriptor instead.
func (*CMsgTouchGesture) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{145}
}

func (x *CMsgTouchGesture) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgTouchGesture) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgTouchGesture) GetGesture() uint32 {
	if x != nil && x.Gesture != nil {
		return *x.Gesture
	}
	return 0
}

func (x *CMsgTouchGesture) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgTouchGesture) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgTouchGesture) GetWidth() float64 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgTouchGesture) GetHeight() float64 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgTouchGesture) GetTapCount() uint32 {
	if x != nil && x.TapCount != nil {
		return *x.TapCount
	}
	return 0
}

func (x *CMsgTouchGesture) GetPinchScale() float64 {
	if x != nil && x.PinchScale != nil {
		return *x.PinchScale
	}
	return 0
}

type CMsgSetTouchGesturesToCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Gestures      []uint32               `protobuf:"varint,2,rep,name=gestures" json:"gestures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetTouchGesturesToCancel) Reset() {
	*x = CMsgSetTouchGesturesToCancel{}
	mi := &file_htmlmessages_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetTouchGesturesToCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetTouchGesturesToCancel) ProtoMessage() {}

func (x *CMsgSetTouchGesturesToCancel) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetTouchGesturesToCancel.ProtoReflect.Descriptor instead.
func (*CMsgSetTouchGesturesToCancel) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{146}
}

func (x *CMsgSetTouchGesturesToCancel) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetTouchGesturesToCancel) GetGestures() []uint32 {
	if x != nil {
		return x.Gestures
	}
	return nil
}

type CMsgImeSetComposition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgImeSetComposition) Reset() {
	*x = CMsgImeSetComposition{}
	mi := &file_htmlmessages_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgImeSetComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeSetComposition) ProtoMessage() {}

func (x *CMsgImeSetComposition) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeSetComposition.ProtoReflect.Descriptor instead.
func (*CMsgImeSetComposition) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{147}
}

func (x *CMsgImeSetComposition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgImeSetComposition) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgImeCommitText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Text          *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgImeCommitText) Reset() {
	*x = CMsgImeCommitText{}
	mi := &file_htmlmessages_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgImeCommitText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeCommitText) ProtoMessage() {}

func (x *CMsgImeCommitText) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeCommitText.ProtoReflect.Descriptor instead.
func (*CMsgImeCommitText) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{148}
}

func (x *CMsgImeCommitText) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgImeCommitText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CMsgImeCancelComposition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgImeCancelComposition) Reset() {
	*x = CMsgImeCancelComposition{}
	mi := &file_htmlmessages_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgImeCancelComposition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeCancelComposition) ProtoMessage() {}

func (x *CMsgImeCancelComposition) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeCancelComposition.ProtoReflect.Descriptor instead.
func (*CMsgImeCancelComposition) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{149}
}

func (x *CMsgImeCancelComposition) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgImeCompositionRangeChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *float64               `protobuf:"fixed64,2,opt,name=x" json:"x,omitempty"`
	Y             *float64               `protobuf:"fixed64,3,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgImeCompositionRangeChanged) Reset() {
	*x = CMsgImeCompositionRangeChanged{}
	mi := &file_htmlmessages_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgImeCompositionRangeChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgImeCompositionRangeChanged) ProtoMessage() {}

func (x *CMsgImeCompositionRangeChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgImeCompositionRangeChanged.ProtoReflect.Descriptor instead.
func (*CMsgImeCompositionRangeChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{150}
}

func (x *CMsgImeCompositionRangeChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgImeCompositionRangeChanged) GetX() float64 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgImeCompositionRangeChanged) GetY() float64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgInspectElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	X             *uint32                `protobuf:"varint,2,opt,name=x" json:"x,omitempty"`
	Y             *uint32                `protobuf:"varint,3,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgInspectElement) Reset() {
	*x = CMsgInspectElement{}
	mi := &file_htmlmessages_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgInspectElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgInspectElement) ProtoMessage() {}

func (x *CMsgInspectElement) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgInspectElement.ProtoReflect.Descriptor instead.
func (*CMsgInspectElement) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{151}
}

func (x *CMsgInspectElement) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgInspectElement) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgInspectElement) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgDisableF5 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Disable       *bool                  `protobuf:"varint,2,opt,name=disable" json:"disable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgDisableF5) Reset() {
	*x = CMsgDisableF5{}
	mi := &file_htmlmessages_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgDisableF5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDisableF5) ProtoMessage() {}

func (x *CMsgDisableF5) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDisableF5.ProtoReflect.Descriptor instead.
func (*CMsgDisableF5) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{152}
}

func (x *CMsgDisableF5) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgDisableF5) GetDisable() bool {
	if x != nil && x.Disable != nil {
		return *x.Disable
	}
	return false
}

type CMsgStartDownload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgStartDownload) Reset() {
	*x = CMsgStartDownload{}
	mi := &file_htmlmessages_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgStartDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgStartDownload) ProtoMessage() {}

func (x *CMsgStartDownload) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgStartDownload.ProtoReflect.Descriptor instead.
func (*CMsgStartDownload) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{153}
}

func (x *CMsgStartDownload) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgStartDownload) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgSetWindowStackingOrder struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle  *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Estackingorder *uint32                `protobuf:"varint,2,opt,name=estackingorder" json:"estackingorder,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgSetWindowStackingOrder) Reset() {
	*x = CMsgSetWindowStackingOrder{}
	mi := &file_htmlmessages_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetWindowStackingOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetWindowStackingOrder) ProtoMessage() {}

func (x *CMsgSetWindowStackingOrder) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetWindowStackingOrder.ProtoReflect.Descriptor instead.
func (*CMsgSetWindowStackingOrder) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{154}
}

func (x *CMsgSetWindowStackingOrder) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetWindowStackingOrder) GetEstackingorder() uint32 {
	if x != nil && x.Estackingorder != nil {
		return *x.Estackingorder
	}
	return 0
}

type CMsgBrowserViewPostMessageToParentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Message       *string                `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Args          *string                `protobuf:"bytes,3,opt,name=args" json:"args,omitempty"`
	RequestingUrl *string                `protobuf:"bytes,4,opt,name=requesting_url,json=requestingUrl" json:"requesting_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserViewPostMessageToParentRequest) Reset() {
	*x = CMsgBrowserViewPostMessageToParentRequest{}
	mi := &file_htmlmessages_proto_msgTypes[155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserViewPostMessageToParentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserViewPostMessageToParentRequest) ProtoMessage() {}

func (x *CMsgBrowserViewPostMessageToParentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserViewPostMessageToParentRequest.ProtoReflect.Descriptor instead.
func (*CMsgBrowserViewPostMessageToParentRequest) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{155}
}

func (x *CMsgBrowserViewPostMessageToParentRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserViewPostMessageToParentRequest) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *CMsgBrowserViewPostMessageToParentRequest) GetArgs() string {
	if x != nil && x.Args != nil {
		return *x.Args
	}
	return ""
}

func (x *CMsgBrowserViewPostMessageToParentRequest) GetRequestingUrl() string {
	if x != nil && x.RequestingUrl != nil {
		return *x.RequestingUrl
	}
	return ""
}

type CMsgBlockedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBlockedRequest) Reset() {
	*x = CMsgBlockedRequest{}
	mi := &file_htmlmessages_proto_msgTypes[156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBlockedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBlockedRequest) ProtoMessage() {}

func (x *CMsgBlockedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBlockedRequest.ProtoReflect.Descriptor instead.
func (*CMsgBlockedRequest) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{156}
}

func (x *CMsgBlockedRequest) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBlockedRequest) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

type CMsgBrowserFocusChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Focused       *bool                  `protobuf:"varint,2,opt,name=focused" json:"focused,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgBrowserFocusChanged) Reset() {
	*x = CMsgBrowserFocusChanged{}
	mi := &file_htmlmessages_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgBrowserFocusChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgBrowserFocusChanged) ProtoMessage() {}

func (x *CMsgBrowserFocusChanged) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgBrowserFocusChanged.ProtoReflect.Descriptor instead.
func (*CMsgBrowserFocusChanged) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{157}
}

func (x *CMsgBrowserFocusChanged) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgBrowserFocusChanged) GetFocused() bool {
	if x != nil && x.Focused != nil {
		return *x.Focused
	}
	return false
}

type CMsgRenderProcessTerminated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRenderProcessTerminated) Reset() {
	*x = CMsgRenderProcessTerminated{}
	mi := &file_htmlmessages_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRenderProcessTerminated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRenderProcessTerminated) ProtoMessage() {}

func (x *CMsgRenderProcessTerminated) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRenderProcessTerminated.ProtoReflect.Descriptor instead.
func (*CMsgRenderProcessTerminated) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{158}
}

func (x *CMsgRenderProcessTerminated) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetProtocolBlockList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	List          *string                `protobuf:"bytes,2,opt,name=list" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetProtocolBlockList) Reset() {
	*x = CMsgSetProtocolBlockList{}
	mi := &file_htmlmessages_proto_msgTypes[159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetProtocolBlockList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetProtocolBlockList) ProtoMessage() {}

func (x *CMsgSetProtocolBlockList) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetProtocolBlockList.ProtoReflect.Descriptor instead.
func (*CMsgSetProtocolBlockList) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{159}
}

func (x *CMsgSetProtocolBlockList) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetProtocolBlockList) GetList() string {
	if x != nil && x.List != nil {
		return *x.List
	}
	return ""
}

type CMsgSetForceDeviceScaleFactors struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DpiScale      *float64               `protobuf:"fixed64,1,opt,name=dpi_scale,json=dpiScale" json:"dpi_scale,omitempty"`
	BrowserScale  *float64               `protobuf:"fixed64,2,opt,name=browser_scale,json=browserScale" json:"browser_scale,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetForceDeviceScaleFactors) Reset() {
	*x = CMsgSetForceDeviceScaleFactors{}
	mi := &file_htmlmessages_proto_msgTypes[160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetForceDeviceScaleFactors) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetForceDeviceScaleFactors) ProtoMessage() {}

func (x *CMsgSetForceDeviceScaleFactors) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetForceDeviceScaleFactors.ProtoReflect.Descriptor instead.
func (*CMsgSetForceDeviceScaleFactors) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{160}
}

func (x *CMsgSetForceDeviceScaleFactors) GetDpiScale() float64 {
	if x != nil && x.DpiScale != nil {
		return *x.DpiScale
	}
	return 0
}

func (x *CMsgSetForceDeviceScaleFactors) GetBrowserScale() float64 {
	if x != nil && x.BrowserScale != nil {
		return *x.BrowserScale
	}
	return 0
}

type CMsgSetUIMode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UiMode        *int32                 `protobuf:"varint,1,opt,name=ui_mode,json=uiMode" json:"ui_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetUIMode) Reset() {
	*x = CMsgSetUIMode{}
	mi := &file_htmlmessages_proto_msgTypes[161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetUIMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetUIMode) ProtoMessage() {}

func (x *CMsgSetUIMode) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetUIMode.ProtoReflect.Descriptor instead.
func (*CMsgSetUIMode) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{161}
}

func (x *CMsgSetUIMode) GetUiMode() int32 {
	if x != nil && x.UiMode != nil {
		return *x.UiMode
	}
	return 0
}

type CMsgSetSteamBetaName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SteamBetaName *string                `protobuf:"bytes,1,opt,name=steam_beta_name,json=steamBetaName" json:"steam_beta_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetSteamBetaName) Reset() {
	*x = CMsgSetSteamBetaName{}
	mi := &file_htmlmessages_proto_msgTypes[162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetSteamBetaName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetSteamBetaName) ProtoMessage() {}

func (x *CMsgSetSteamBetaName) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetSteamBetaName.ProtoReflect.Descriptor instead.
func (*CMsgSetSteamBetaName) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{162}
}

func (x *CMsgSetSteamBetaName) GetSteamBetaName() string {
	if x != nil && x.SteamBetaName != nil {
		return *x.SteamBetaName
	}
	return ""
}

type CMsgSetSteamID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SteamId       *uint64                `protobuf:"varint,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetSteamID) Reset() {
	*x = CMsgSetSteamID{}
	mi := &file_htmlmessages_proto_msgTypes[163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetSteamID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetSteamID) ProtoMessage() {}

func (x *CMsgSetSteamID) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetSteamID.ProtoReflect.Descriptor instead.
func (*CMsgSetSteamID) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{163}
}

func (x *CMsgSetSteamID) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CMsgPopupCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPopupCreated) Reset() {
	*x = CMsgPopupCreated{}
	mi := &file_htmlmessages_proto_msgTypes[164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPopupCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPopupCreated) ProtoMessage() {}

func (x *CMsgPopupCreated) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPopupCreated.ProtoReflect.Descriptor instead.
func (*CMsgPopupCreated) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{164}
}

func (x *CMsgPopupCreated) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

type CMsgSetVRKeyboardVisibility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrowserHandle *uint32                `protobuf:"varint,1,opt,name=browser_handle,json=browserHandle" json:"browser_handle,omitempty"`
	Visible       *bool                  `protobuf:"varint,2,opt,name=visible" json:"visible,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSetVRKeyboardVisibility) Reset() {
	*x = CMsgSetVRKeyboardVisibility{}
	mi := &file_htmlmessages_proto_msgTypes[165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetVRKeyboardVisibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetVRKeyboardVisibility) ProtoMessage() {}

func (x *CMsgSetVRKeyboardVisibility) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetVRKeyboardVisibility.ProtoReflect.Descriptor instead.
func (*CMsgSetVRKeyboardVisibility) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{165}
}

func (x *CMsgSetVRKeyboardVisibility) GetBrowserHandle() uint32 {
	if x != nil && x.BrowserHandle != nil {
		return *x.BrowserHandle
	}
	return 0
}

func (x *CMsgSetVRKeyboardVisibility) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

type CMsgRestartJSContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRestartJSContext) Reset() {
	*x = CMsgRestartJSContext{}
	mi := &file_htmlmessages_proto_msgTypes[166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRestartJSContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRestartJSContext) ProtoMessage() {}

func (x *CMsgRestartJSContext) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRestartJSContext.ProtoReflect.Descriptor instead.
func (*CMsgRestartJSContext) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{166}
}

type CMsgSetAccessibilitySettings struct {
	state                protoimpl.MessageState      `protogen:"open.v1"`
	ReducedMotionEnabled *bool                       `protobuf:"varint,1,opt,name=reduced_motion_enabled,json=reducedMotionEnabled" json:"reduced_motion_enabled,omitempty"`
	PreferredContrast    *EAccessibilityContrastMode `protobuf:"varint,2,opt,name=preferred_contrast,json=preferredContrast,enum=EAccessibilityContrastMode,def=0" json:"preferred_contrast,omitempty"`
	MinimumFontSize      *uint32                     `protobuf:"varint,3,opt,name=minimum_font_size,json=minimumFontSize" json:"minimum_font_size,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

// Default values for CMsgSetAccessibilitySettings fields.
const (
	Default_CMsgSetAccessibilitySettings_PreferredContrast = EAccessibilityContrastMode_k_EBrowserContrastMode_NoPreference
)

func (x *CMsgSetAccessibilitySettings) Reset() {
	*x = CMsgSetAccessibilitySettings{}
	mi := &file_htmlmessages_proto_msgTypes[167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetAccessibilitySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetAccessibilitySettings) ProtoMessage() {}

func (x *CMsgSetAccessibilitySettings) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetAccessibilitySettings.ProtoReflect.Descriptor instead.
func (*CMsgSetAccessibilitySettings) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{167}
}

func (x *CMsgSetAccessibilitySettings) GetReducedMotionEnabled() bool {
	if x != nil && x.ReducedMotionEnabled != nil {
		return *x.ReducedMotionEnabled
	}
	return false
}

func (x *CMsgSetAccessibilitySettings) GetPreferredContrast() EAccessibilityContrastMode {
	if x != nil && x.PreferredContrast != nil {
		return *x.PreferredContrast
	}
	return Default_CMsgSetAccessibilitySettings_PreferredContrast
}

func (x *CMsgSetAccessibilitySettings) GetMinimumFontSize() uint32 {
	if x != nil && x.MinimumFontSize != nil {
		return *x.MinimumFontSize
	}
	return 0
}

type CMsgSetLocalFileRequestMapping_AdditionalRoute struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	RelativeUrl       *string                `protobuf:"bytes,1,opt,name=relative_url,json=relativeUrl" json:"relative_url,omitempty"`
	LocalPath         *string                `protobuf:"bytes,2,opt,name=local_path,json=localPath" json:"local_path,omitempty"`
	AllowedExtensions *string                `protobuf:"bytes,3,opt,name=allowed_extensions,json=allowedExtensions" json:"allowed_extensions,omitempty"`
	UrlRewrite        *bool                  `protobuf:"varint,4,opt,name=url_rewrite,json=urlRewrite" json:"url_rewrite,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) Reset() {
	*x = CMsgSetLocalFileRequestMapping_AdditionalRoute{}
	mi := &file_htmlmessages_proto_msgTypes[168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSetLocalFileRequestMapping_AdditionalRoute) ProtoMessage() {}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSetLocalFileRequestMapping_AdditionalRoute.ProtoReflect.Descriptor instead.
func (*CMsgSetLocalFileRequestMapping_AdditionalRoute) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{12, 0}
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetRelativeUrl() string {
	if x != nil && x.RelativeUrl != nil {
		return *x.RelativeUrl
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetLocalPath() string {
	if x != nil && x.LocalPath != nil {
		return *x.LocalPath
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetAllowedExtensions() string {
	if x != nil && x.AllowedExtensions != nil {
		return *x.AllowedExtensions
	}
	return ""
}

func (x *CMsgSetLocalFileRequestMapping_AdditionalRoute) GetUrlRewrite() bool {
	if x != nil && x.UrlRewrite != nil {
		return *x.UrlRewrite
	}
	return false
}

type CMsgFileLoadDialog_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Patterns      []string               `protobuf:"bytes,2,rep,name=patterns" json:"patterns,omitempty"`
	IsDefault     *bool                  `protobuf:"varint,3,opt,name=is_default,json=isDefault" json:"is_default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgFileLoadDialog_Filter) Reset() {
	*x = CMsgFileLoadDialog_Filter{}
	mi := &file_htmlmessages_proto_msgTypes[169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFileLoadDialog_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFileLoadDialog_Filter) ProtoMessage() {}

func (x *CMsgFileLoadDialog_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFileLoadDialog_Filter.ProtoReflect.Descriptor instead.
func (*CMsgFileLoadDialog_Filter) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{66, 0}
}

func (x *CMsgFileLoadDialog_Filter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgFileLoadDialog_Filter) GetPatterns() []string {
	if x != nil {
		return x.Patterns
	}
	return nil
}

func (x *CMsgFileLoadDialog_Filter) GetIsDefault() bool {
	if x != nil && x.IsDefault != nil {
		return *x.IsDefault
	}
	return false
}

type CMsgJSValue_JSObjectProperty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value         *CMsgJSValue           `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgJSValue_JSObjectProperty) Reset() {
	*x = CMsgJSValue_JSObjectProperty{}
	mi := &file_htmlmessages_proto_msgTypes[170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgJSValue_JSObjectProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgJSValue_JSObjectProperty) ProtoMessage() {}

func (x *CMsgJSValue_JSObjectProperty) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgJSValue_JSObjectProperty.ProtoReflect.Descriptor instead.
func (*CMsgJSValue_JSObjectProperty) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{125, 0}
}

func (x *CMsgJSValue_JSObjectProperty) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgJSValue_JSObjectProperty) GetValue() *CMsgJSValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type CMsgDraggableRegionsChanged_DraggableRects struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *int32                 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y             *int32                 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
	Width         *int32                 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height        *int32                 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	Draggable     *bool                  `protobuf:"varint,5,opt,name=draggable" json:"draggable,omitempty"`
	Transparent   *bool                  `protobuf:"varint,6,opt,name=transparent" json:"transparent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) Reset() {
	*x = CMsgDraggableRegionsChanged_DraggableRects{}
	mi := &file_htmlmessages_proto_msgTypes[171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgDraggableRegionsChanged_DraggableRects) ProtoMessage() {}

func (x *CMsgDraggableRegionsChanged_DraggableRects) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgDraggableRegionsChanged_DraggableRects.ProtoReflect.Descriptor instead.
func (*CMsgDraggableRegionsChanged_DraggableRects) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{134, 0}
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetDraggable() bool {
	if x != nil && x.Draggable != nil {
		return *x.Draggable
	}
	return false
}

func (x *CMsgDraggableRegionsChanged_DraggableRects) GetTransparent() bool {
	if x != nil && x.Transparent != nil {
		return *x.Transparent
	}
	return false
}

type CMsgShowBrowserContextMenu_ContextCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *int32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Label         *string                `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgShowBrowserContextMenu_ContextCommand) Reset() {
	*x = CMsgShowBrowserContextMenu_ContextCommand{}
	mi := &file_htmlmessages_proto_msgTypes[172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgShowBrowserContextMenu_ContextCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgShowBrowserContextMenu_ContextCommand) ProtoMessage() {}

func (x *CMsgShowBrowserContextMenu_ContextCommand) ProtoReflect() protoreflect.Message {
	mi := &file_htmlmessages_proto_msgTypes[172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgShowBrowserContextMenu_ContextCommand.ProtoReflect.Descriptor instead.
func (*CMsgShowBrowserContextMenu_ContextCommand) Descriptor() ([]byte, []int) {
	return file_htmlmessages_proto_rawDescGZIP(), []int{143, 0}
}

func (x *CMsgShowBrowserContextMenu_ContextCommand) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgShowBrowserContextMenu_ContextCommand) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

var File_htmlmessages_proto protoreflect.FileDescriptor

const file_htmlmessages_proto_rawDesc = "" +
	"\n" +
	"\x12htmlmessages.proto\x1a\venums.proto\"\x90\x01\n" +
	"\tCMsgKeyUp\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\akeyCode\x18\x02 \x01(\rR\akeyCode\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\x12$\n" +
	"\rnativeKeyCode\x18\x04 \x01(\rR\rnativeKeyCode\"\xb6\x01\n" +
	"\vCMsgKeyDown\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\akeyCode\x18\x02 \x01(\rR\akeyCode\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\x12\"\n" +
	"\ris_system_key\x18\x04 \x01(\bR\visSystemKey\x12$\n" +
	"\rnativeKeyCode\x18\x05 \x01(\rR\rnativeKeyCode\"\xac\x01\n" +
	"\vCMsgKeyChar\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\aunichar\x18\x02 \x01(\rR\aunichar\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\x12\x18\n" +
	"\akeyCode\x18\x04 \x01(\rR\akeyCode\x12$\n" +
	"\rnativeKeyCode\x18\x05 \x01(\rR\rnativeKeyCode\"w\n" +
	"\rCMsgMouseDown\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12!\n" +
	"\fmouse_button\x18\x02 \x01(\rR\vmouseButton\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\"\xb3\x01\n" +
	"\vCMsgMouseUp\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12!\n" +
	"\fmouse_button\x18\x02 \x01(\rR\vmouseButton\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\x12 \n" +
	"\fis_off_panel\x18\x04 \x01(\bR\n" +
	"isOffPanel\x12\f\n" +
	"\x01x\x18\x05 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x06 \x01(\x05R\x01y\"{\n" +
	"\x11CMsgMouseDblClick\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12!\n" +
	"\fmouse_button\x18\x02 \x01(\rR\vmouseButton\x12\x1c\n" +
	"\tmodifiers\x18\x03 \x01(\rR\tmodifiers\"\x85\x01\n" +
	"\x0eCMsgMouseWheel\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06deltax\x18\x02 \x01(\x05R\x06deltax\x12\x16\n" +
	"\x06deltay\x18\x03 \x01(\x05R\x06deltay\x12\x1c\n" +
	"\tmodifiers\x18\x04 \x01(\rR\tmodifiers\"p\n" +
	"\rCMsgMouseMove\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\x12\x1c\n" +
	"\tmodifiers\x18\x04 \x01(\rR\tmodifiers\"7\n" +
	"\x0eCMsgMouseLeave\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\xcc\x05\n" +
	"\x11CMsgBrowserCreate\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\rR\trequestId\x12\x1c\n" +
	"\tuseragent\x18\x03 \x01(\tR\tuseragent\x12\x19\n" +
	"\buser_css\x18\x05 \x01(\tR\auserCss\x12)\n" +
	"\x10native_dropdowns\x18\x06 \x01(\bR\x0fnativeDropdowns\x12\x1f\n" +
	"\vdpi_scaling\x18\a \x01(\x02R\n" +
	"dpiScaling\x12\"\n" +
	"\toffscreen\x18\b \x01(\b:\x04trueR\toffscreen\x12&\n" +
	"\rinitial_width\x18\t \x01(\r:\x010R\finitialWidth\x12(\n" +
	"\x0einitial_height\x18\n" +
	" \x01(\r:\x010R\rinitialHeight\x12\x1f\n" +
	"\vwindow_icon\x18\v \x01(\tR\n" +
	"windowIcon\x12%\n" +
	"\n" +
	"borderless\x18\f \x01(\b:\x05falseR\n" +
	"borderless\x12#\n" +
	"\rvroverlay_key\x18\r \x01(\tR\fvroverlayKey\x12$\n" +
	"\fbrowser_type\x18\x0e \x01(\r:\x010R\vbrowserType\x12,\n" +
	"\vinitial_top\x18\x0f \x01(\x05:\v-2147483648R\n" +
	"initialTop\x12.\n" +
	"\finitial_left\x18\x10 \x01(\x05:\v-2147483648R\vinitialLeft\x12@\n" +
	"\x19only_allow_trusted_popups\x18\x11 \x01(\b:\x05falseR\x16onlyAllowTrustedPopups\x12\x1f\n" +
	"\vinitial_url\x18\x12 \x01(\tR\n" +
	"initialUrl\x12\x1f\n" +
	"\vhwnd_parent\x18\x13 \x01(\x06R\n" +
	"hwndParent\x12(\n" +
	"\x0ecreation_flags\x18\x14 \x01(\r:\x010R\rcreationFlags\"a\n" +
	"\x19CMsgBrowserCreateResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\rR\trequestId\":\n" +
	"\x11CMsgBrowserRemove\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\x85\x03\n" +
	"\x1eCMsgSetLocalFileRequestMapping\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1f\n" +
	"\vrequest_url\x18\x02 \x01(\tR\n" +
	"requestUrl\x12,\n" +
	"\x12default_local_path\x18\x03 \x01(\tR\x10defaultLocalPath\x12G\n" +
	"\x06routes\x18\x04 \x03(\v2/.CMsgSetLocalFileRequestMapping.AdditionalRouteR\x06routes\x1a\xa3\x01\n" +
	"\x0fAdditionalRoute\x12!\n" +
	"\frelative_url\x18\x01 \x01(\tR\vrelativeUrl\x12\x1d\n" +
	"\n" +
	"local_path\x18\x02 \x01(\tR\tlocalPath\x12-\n" +
	"\x12allowed_extensions\x18\x03 \x01(\tR\x11allowedExtensions\x12\x1f\n" +
	"\vurl_rewrite\x18\x04 \x01(\bR\n" +
	"urlRewrite\"\x94\x02\n" +
	"\x17CMsgBrowserErrorStrings\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06header\x18\x03 \x01(\tR\x06header\x12\x1d\n" +
	"\n" +
	"cache_miss\x18\x04 \x01(\tR\tcacheMiss\x12\x17\n" +
	"\abad_url\x18\x05 \x01(\tR\x06badUrl\x12-\n" +
	"\x12connection_problem\x18\x06 \x01(\tR\x11connectionProblem\x12#\n" +
	"\rproxy_problem\x18\a \x01(\tR\fproxyProblem\x12\x18\n" +
	"\aunknown\x18\b \x01(\tR\aunknown\"O\n" +
	"\x12CMsgBrowserSetName\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"f\n" +
	"\x0fCMsgBrowserSize\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05width\x18\x02 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x01R\x06height\"l\n" +
	"\x15CMsgBrowserSetMinSize\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05width\x18\x02 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x01R\x06height\"\x8a\x01\n" +
	"\x13CMsgBrowserPosition\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12\x17\n" +
	"\ax_local\x18\x04 \x01(\x01R\x06xLocal\x12\x17\n" +
	"\ay_local\x18\x05 \x01(\x01R\x06yLocal\"\xde\x02\n" +
	"\x12CMsgBrowserResized\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12\x14\n" +
	"\x05width\x18\x04 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x01R\x06height\x12\x1e\n" +
	"\n" +
	"fullscreen\x18\x06 \x01(\bR\n" +
	"fullscreen\x12%\n" +
	"\x0edpi_horizontal\x18\a \x01(\x01R\rdpiHorizontal\x12!\n" +
	"\fdpi_vertical\x18\b \x01(\x01R\vdpiVertical\x12!\n" +
	"\fdisplay_name\x18\t \x01(\tR\vdisplayName\x12#\n" +
	"\rdisplay_width\x18\n" +
	" \x01(\rR\fdisplayWidth\x12%\n" +
	"\x0edisplay_height\x18\v \x01(\rR\rdisplayHeight\"\x9f\x01\n" +
	"\vCMsgPostURL\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04post\x18\x03 \x01(\tR\x04post\x12\x1e\n" +
	"\n" +
	"pageserial\x18\x04 \x01(\rR\n" +
	"pageserial\x12#\n" +
	"\rreplace_entry\x18\x05 \x01(\bR\freplaceEntry\"\xab\x01\n" +
	"\rCMsgAddHeader\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12+\n" +
	"\x12only_send_to_steam\x18\x04 \x01(\bR\x0fonlySendToSteam\x12\x1e\n" +
	"\vsend_in_xhr\x18\x05 \x01(\bR\tsendInXhr\"5\n" +
	"\fCMsgStopLoad\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"3\n" +
	"\n" +
	"CMsgReload\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"6\n" +
	"\rCMsgGoForward\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"3\n" +
	"\n" +
	"CMsgGoBack\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"N\n" +
	"\rCMsgWasHidden\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06hidden\x18\x02 \x01(\bR\x06hidden\"Z\n" +
	"\x17CMsgSetWindowVisibility\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\avisible\x18\x02 \x01(\bR\avisible\"9\n" +
	"\x10CMsgClearHistory\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"A\n" +
	"\x18CMsgClearAllBrowsingData\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"1\n" +
	"\bCMsgCopy\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"2\n" +
	"\tCMsgPaste\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"V\n" +
	"\x15CMsgExecuteJavaScript\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06script\x18\x02 \x01(\tR\x06script\"K\n" +
	"\fCMsgSetFocus\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05focus\x18\x02 \x01(\bR\x05focus\"D\n" +
	"\x1bCMsgHorizontalScrollBarSize\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\xce\x01\n" +
	"#CMsgHorizontalScrollBarSizeResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1d\n" +
	"\n" +
	"scroll_max\x18\x06 \x01(\rR\tscrollMax\x12\x16\n" +
	"\x06scroll\x18\a \x01(\rR\x06scroll\x12\x12\n" +
	"\x04zoom\x18\b \x01(\x02R\x04zoom\x12\x18\n" +
	"\avisible\x18\t \x01(\bR\avisible\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\rR\bpageSize\"B\n" +
	"\x19CMsgVerticalScrollBarSize\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\xcc\x01\n" +
	"!CMsgVerticalScrollBarSizeResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1d\n" +
	"\n" +
	"scroll_max\x18\x06 \x01(\rR\tscrollMax\x12\x16\n" +
	"\x06scroll\x18\a \x01(\rR\x06scroll\x12\x12\n" +
	"\x04zoom\x18\b \x01(\x02R\x04zoom\x12\x18\n" +
	"\avisible\x18\t \x01(\bR\avisible\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\rR\bpageSize\"~\n" +
	"\bCMsgFind\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04find\x18\x02 \x01(\tR\x04find\x12\x16\n" +
	"\x06infind\x18\x03 \x01(\bR\x06infind\x12\x1f\n" +
	"\areverse\x18\x04 \x01(\b:\x05falseR\areverse\"5\n" +
	"\fCMsgStopFind\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"X\n" +
	"\x17CMsgSetHorizontalScroll\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06scroll\x18\x02 \x01(\rR\x06scroll\"V\n" +
	"\x15CMsgSetVerticalScroll\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06scroll\x18\x02 \x01(\rR\x06scroll\"M\n" +
	"\x10CMsgSetZoomLevel\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04zoom\x18\x02 \x01(\x01R\x04zoom\"7\n" +
	"\x0eCMsgViewSource\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\x82\x01\n" +
	"\x10CMsgBrowserReady\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12$\n" +
	"\x0evr_overlay_key\x18\x02 \x01(\tR\fvrOverlayKey\x12!\n" +
	"\fhwnd_browser\x18\x03 \x01(\x06R\vhwndBrowser\"\xcd\x01\n" +
	"\x0eCMsgURLChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\bpostData\x18\x03 \x01(\tR\bpostData\x12 \n" +
	"\vbIsRedirect\x18\x04 \x01(\bR\vbIsRedirect\x12\x1c\n" +
	"\tpagetitle\x18\x05 \x01(\tR\tpagetitle\x12&\n" +
	"\x0ebNewNavigation\x18\x06 \x01(\bR\x0ebNewNavigation\"!\n" +
	"\rCHistoryEntry\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"{\n" +
	"\x12CMsgHistoryChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12(\n" +
	"\aentries\x18\x03 \x03(\v2\x0e.CHistoryEntryR\aentries\"\x94\x01\n" +
	"\rCMsgLoadError\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1d\n" +
	"\n" +
	"error_code\x18\x02 \x01(\x05R\terrorCode\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x12+\n" +
	"\x11error_description\x18\x04 \x01(\tR\x10errorDescription\"5\n" +
	"\vCHTMLHeader\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x8e\x02\n" +
	"\x15CHTMLPageSecurityInfo\x12#\n" +
	"\tbIsSecure\x18\x01 \x01(\b:\x05falseR\tbIsSecure\x12+\n" +
	"\rbHasCertError\x18\x02 \x01(\b:\x05falseR\rbHasCertError\x12\x1e\n" +
	"\n" +
	"issuerName\x18\x03 \x01(\tR\n" +
	"issuerName\x12\x1a\n" +
	"\bcertName\x18\x04 \x01(\tR\bcertName\x12!\n" +
	"\n" +
	"certExpiry\x18\x05 \x01(\x05:\x010R\n" +
	"certExpiry\x12\x1f\n" +
	"\tnCertBits\x18\x06 \x01(\x05:\x010R\tnCertBits\x12#\n" +
	"\tbIsEVCert\x18\a \x01(\b:\x05falseR\tbIsEVCert\"l\n" +
	"\x13CMsgFinishedRequest\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1c\n" +
	"\tpageTitle\x18\x03 \x01(\tR\tpageTitle\"\x92\x01\n" +
	"\x11CMsgLoadedRequest\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1c\n" +
	"\tpageTitle\x18\x03 \x01(\tR\tpageTitle\x12&\n" +
	"\aheaders\x18\x05 \x03(\v2\f.CHTMLHeaderR\aheaders\"R\n" +
	"\x15CMsgFavIconURLChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04urls\x18\x02 \x03(\tR\x04urls\"\x88\x01\n" +
	"\x10CMsgPageSecurity\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12;\n" +
	"\rsecurity_info\x18\x03 \x01(\v2\x16.CHTMLPageSecurityInfoR\fsecurityInfo\"\xa1\x01\n" +
	"\x10CMsgStartRequest\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x16\n" +
	"\x06target\x18\x03 \x01(\tR\x06target\x12\x1a\n" +
	"\bpostData\x18\x04 \x01(\tR\bpostData\x12 \n" +
	"\vbIsRedirect\x18\x05 \x01(\bR\vbIsRedirect\"Y\n" +
	"\x18CMsgStartRequestResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06bAllow\x18\x02 \x01(\bR\x06bAllow\"6\n" +
	"\rCMsgShowPopup\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"6\n" +
	"\rCMsgHidePopup\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"z\n" +
	"\rCMsgSizePopup\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\x12\x12\n" +
	"\x04wide\x18\x04 \x01(\rR\x04wide\x12\x12\n" +
	"\x04tall\x18\x05 \x01(\rR\x04tall\"k\n" +
	"\x0eCMsgOpenNewTab\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12 \n" +
	"\vbForeground\x18\x03 \x01(\bR\vbForeground\"\xf3\x02\n" +
	"\x13CMsgPopupHTMLWindow\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x19\n" +
	"\x01x\x18\x03 \x01(\x05:\v-2147483648R\x01x\x12\x19\n" +
	"\x01y\x18\x04 \x01(\x05:\v-2147483648R\x01y\x12\x12\n" +
	"\x04wide\x18\x05 \x01(\rR\x04wide\x12\x12\n" +
	"\x04tall\x18\x06 \x01(\rR\x04tall\x12\x1f\n" +
	"\vpopup_index\x18\a \x01(\rR\n" +
	"popupIndex\x12'\n" +
	"\x0ftrusted_creator\x18\b \x01(\bR\x0etrustedCreator\x12\x12\n" +
	"\x04name\x18\t \x01(\tR\x04name\x12\x12\n" +
	"\x04hwnd\x18\n" +
	" \x01(\x04R\x04hwnd\x12,\n" +
	"\x12parent_popup_index\x18\v \x01(\rR\x10parentPopupIndex\x12%\n" +
	"\x0ecreation_flags\x18\f \x01(\rR\rcreationFlags\"\\\n" +
	"\x1bCMsgPopupHTMLWindowResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06bAllow\x18\x02 \x01(\bR\x06bAllow\"O\n" +
	"\x10CMsgSetHTMLTitle\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\"N\n" +
	"\x13CMsgLoadingResource\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"K\n" +
	"\x0eCMsgStatusText\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\xcf\x01\n" +
	"\rCMsgSetCursor\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\rR\x06cursor\x12\x1f\n" +
	"\vcustom_data\x18\x03 \x01(\fR\n" +
	"customData\x12\x12\n" +
	"\x04wide\x18\x04 \x01(\rR\x04wide\x12\x12\n" +
	"\x04tall\x18\x05 \x01(\rR\x04tall\x12\x1a\n" +
	"\bxhotspot\x18\x06 \x01(\rR\bxhotspot\x12\x1a\n" +
	"\byhotspot\x18\a \x01(\rR\byhotspot\"\x9d\x03\n" +
	"\x12CMsgFileLoadDialog\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vinitialFile\x18\x04 \x01(\tR\vinitialFile\x12!\n" +
	"\faccept_types\x18\x05 \x03(\tR\vacceptTypes\x12\x17\n" +
	"\ais_save\x18\x06 \x01(\bR\x06isSave\x12)\n" +
	"\x10choose_directory\x18\a \x01(\bR\x0fchooseDirectory\x124\n" +
	"\afilters\x18\b \x03(\v2\x1a.CMsgFileLoadDialog.FilterR\afilters\x1aW\n" +
	"\x06Filter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bpatterns\x18\x02 \x03(\tR\bpatterns\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\"\xa9\x01\n" +
	"\x1aCMsgFileLoadDialogResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12\x1a\n" +
	"\bbsuccess\x18\x03 \x01(\bR\bbsuccess\x12\x14\n" +
	"\x05files\x18\x04 \x03(\tR\x05files\"6\n" +
	"\x16CMsgRequestProcessInfo\x12\x1c\n" +
	"\trequestid\x18\x01 \x01(\x04R\trequestid\"\xdb\f\n" +
	"\x1bCMsgProcessInfoNotification\x12\x1c\n" +
	"\trequestid\x18\x01 \x01(\x04R\trequestid\x12N\n" +
	"\n" +
	"gpu_status\x18\x02 \x01(\x0e2\x12.EBrowserGPUStatus:\x1bk_EBrowserGPUStatus_InvalidR\tgpuStatus\x12T\n" +
	"\tcanvas_2d\x18\x03 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\bcanvas2d\x12q\n" +
	"\x18canvas_oop_rasterization\x18\x04 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x16canvasOopRasterization\x12\x86\x01\n" +
	"#direct_rendering_display_compositor\x18\x05 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR directRenderingDisplayCompositor\x12`\n" +
	"\x0fgpu_compositing\x18\x06 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x0egpuCompositing\x12o\n" +
	"\x17multiple_raster_threads\x18\a \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x15multipleRasterThreads\x12O\n" +
	"\x06opengl\x18\b \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x06opengl\x12]\n" +
	"\rrasterization\x18\t \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\rrasterization\x12R\n" +
	"\braw_draw\x18\n" +
	" \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\arawDraw\x12\\\n" +
	"\rskia_graphite\x18\v \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\fskiaGraphite\x12Z\n" +
	"\fvideo_decode\x18\r \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\vvideoDecode\x12Z\n" +
	"\fvideo_encode\x18\x0e \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\vvideoEncode\x12O\n" +
	"\x06vulkan\x18\x0f \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x06vulkan\x12M\n" +
	"\x05webgl\x18\x10 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x05webgl\x12O\n" +
	"\x06webgl2\x18\x11 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x06webgl2\x12O\n" +
	"\x06webgpu\x18\x12 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x06webgpu\x12M\n" +
	"\x05webnn\x18\x13 \x01(\x0e2\x16.EBrowserFeatureStatus:\x1fk_EBrowserFeatureStatus_InvalidR\x05webnn\"L\n" +
	"\x0fCMsgShowToolTip\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"N\n" +
	"\x11CMsgUpdateToolTip\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"8\n" +
	"\x0fCMsgHideToolTip\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"v\n" +
	"\x11CMsgSearchResults\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12 \n" +
	"\vactiveMatch\x18\x02 \x01(\x05R\vactiveMatch\x12\x18\n" +
	"\aresults\x18\x03 \x01(\x05R\aresults\"2\n" +
	"\tCMsgClose\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\xc6\x01\n" +
	"\x19CMsgSetSharedPaintBuffers\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04wide\x18\x02 \x01(\rR\x04wide\x12\x12\n" +
	"\x04tall\x18\x03 \x01(\rR\x04tall\x12\x1d\n" +
	"\n" +
	"source_pid\x18\x04 \x01(\x04R\tsourcePid\x12#\n" +
	"\rsource_handle\x18\x05 \x01(\x04R\fsourceHandle\x12\x16\n" +
	"\x06handle\x18\x06 \x01(\x04R\x06handle\"B\n" +
	"\x19CMsgAckSharedPaintBuffers\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\x9e\x02\n" +
	"\x0eCMsgNeedsPaint\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\ascrollx\x18\n" +
	" \x01(\rR\ascrollx\x12\x18\n" +
	"\ascrolly\x18\v \x01(\rR\ascrolly\x12\x1c\n" +
	"\tpagescale\x18\f \x01(\x02R\tpagescale\x12\x1e\n" +
	"\n" +
	"pageserial\x18\x0f \x01(\rR\n" +
	"pageserial\x12 \n" +
	"\favg_frame_ms\x18\x14 \x01(\rR\n" +
	"avgFrameMs\x12-\n" +
	"\x13stddev_sum_frame_ms\x18\x15 \x01(\x02R\x10stddevSumFrameMs\x12\"\n" +
	"\rlong_frame_ms\x18\x16 \x01(\rR\vlongFrameMs\"\x86\x02\n" +
	"\x13CMsgComboNeedsPaint\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04rgba\x18\x02 \x01(\x04R\x04rgba\x12&\n" +
	"\rcombobox_wide\x18\x03 \x01(\r:\x010R\fcomboboxWide\x12&\n" +
	"\rcombobox_tall\x18\x04 \x01(\r:\x010R\fcomboboxTall\x123\n" +
	"\x14shared_memory_handle\x18\x05 \x01(\x04:\x010R\x12sharedMemoryHandle\x12/\n" +
	"\x12shared_memory_size\x18\a \x01(\x04:\x010R\x10sharedMemorySize\"\x87\x02\n" +
	"\x1bCMsgNeedsSharedTexturePaint\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12!\n" +
	"\fshare_handle\x18\x02 \x01(\rR\vshareHandle\x12\x14\n" +
	"\x05width\x18\x03 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\rR\x06height\x12\x18\n" +
	"\ascrollx\x18\x05 \x01(\rR\ascrollx\x12\x18\n" +
	"\ascrolly\x18\x06 \x01(\rR\ascrolly\x12\x1c\n" +
	"\tpagescale\x18\a \x01(\x02R\tpagescale\x12\x1e\n" +
	"\n" +
	"pageserial\x18\b \x01(\rR\n" +
	"pageserial\"4\n" +
	"\vCMsgGetZoom\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"P\n" +
	"\x13CMsgGetZoomResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04zoom\x18\x02 \x01(\x02R\x04zoom\"W\n" +
	"\x12CMsgLinkAtPosition\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\rR\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\rR\x01y\"\xa7\x01\n" +
	"\x1aCMsgLinkAtPositionResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\rR\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\rR\x01y\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x1c\n" +
	"\tblivelink\x18\x05 \x01(\bR\tblivelink\x12\x16\n" +
	"\x06binput\x18\x06 \x01(\bR\x06binput\"`\n" +
	"\x1bCMsgZoomToElementAtPosition\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\rR\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\rR\x01y\"~\n" +
	"#CMsgZoomToElementAtPositionResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05scale\x18\x02 \x01(\x02R\x05scale\x12\x1a\n" +
	"\bduration\x18\x03 \x01(\x02R\bduration\"o\n" +
	"\x14CMsgScalePageToValue\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05scale\x18\x02 \x01(\x02R\x05scale\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x04 \x01(\x02R\x01y\"}\n" +
	"\x1bCMsgForcePopupsToDirectHWND\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x127\n" +
	"\x18force_direct_hwnd_popups\x18\x02 \x01(\bR\x15forceDirectHwndPopups\"Y\n" +
	"\x1cCMsgScalePageToValueResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04zoom\x18\x02 \x01(\x02R\x04zoom\"\x97\x01\n" +
	"\x12CMsgSavePageToJPEG\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x14\n" +
	"\x05width\x18\x04 \x01(\rR\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\rR\x06height\"q\n" +
	"\x1aCMsgSavePageToJPEGResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\"N\n" +
	"\vCMsgJSAlert\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"P\n" +
	"\rCMsgJSConfirm\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"U\n" +
	"\x14CMsgJSDialogResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06result\x18\x02 \x01(\bR\x06result\"z\n" +
	"\x17CMsgCanGoBackAndForward\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\abgoback\x18\x02 \x01(\bR\abgoback\x12\x1e\n" +
	"\n" +
	"bgoforward\x18\x03 \x01(\bR\n" +
	"bgoforward\"g\n" +
	"\x10CMsgOpenSteamURL\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1a\n" +
	"\breferrer\x18\x03 \x01(\tR\breferrer\"\xc9\x01\n" +
	"\rCMsgSetCookie\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04host\x18\x04 \x01(\tR\x04host\x12\x18\n" +
	"\aexpires\x18\x05 \x01(\rR\aexpires\x12\x16\n" +
	"\x06secure\x18\x06 \x01(\bR\x06secure\x12\x1a\n" +
	"\bhttponly\x18\a \x01(\bR\bhttponly\x12\x1a\n" +
	"\bsamesite\x18\b \x01(\x05R\bsamesite\"k\n" +
	"\x16CMsgSetTargetFrameRate\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12*\n" +
	"\x10nTargetFrameRate\x18\x02 \x01(\rR\x10nTargetFrameRate\"9\n" +
	"\x10CMsgPauseRepaint\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"8\n" +
	"\x0fCMsgFullRepaint\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\">\n" +
	"\x15CMsgRequestFullScreen\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\";\n" +
	"\x12CMsgExitFullScreen\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"C\n" +
	"\x1aCMsgToggleFindInPageDialog\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"?\n" +
	"\x16CMsgSetPIDShuttingDown\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"H\n" +
	"\x1fCMsgDisableBackgroundThrottling\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"?\n" +
	"\x16CMsgAckPIDShuttingDown\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"O\n" +
	"\x14CMsgGetCookiesForURL\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"_\n" +
	"\aCCookie\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\"{\n" +
	"\x1cCMsgGetCookiesForURLResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\"\n" +
	"\acookies\x18\x03 \x03(\v2\b.CCookieR\acookies\"\xac\x02\n" +
	"\x10CMsgNodeHasFocus\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x16\n" +
	"\x06bInput\x18\x02 \x01(\bR\x06bInput\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12&\n" +
	"\x0eelementtagname\x18\x04 \x01(\tR\x0eelementtagname\x12*\n" +
	"\x10searchbuttontext\x18\x05 \x01(\tR\x10searchbuttontext\x12.\n" +
	"\x12bHasMultipleInputs\x18\x06 \x01(\bR\x12bHasMultipleInputs\x12\x1d\n" +
	"\n" +
	"input_type\x18\a \x01(\tR\tinputType\x12\"\n" +
	"\fbIsMainFrame\x18\b \x01(\bR\fbIsMainFrame\"A\n" +
	"\x18CMsgZoomToFocusedElement\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"<\n" +
	"\x13CMsgFocusedNodeText\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"Z\n" +
	"\x1bCMsgFocusedNodeTextResponse\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"(\n" +
	"\vCMsgBuildID\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\x04R\abuildId\"9\n" +
	"\x10CMsgOpenDevTools\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\":\n" +
	"\x11CMsgCloseDevTools\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"X\n" +
	"\x0eCMsgUnlockH264\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1f\n" +
	"\vunlock_code\x18\x02 \x01(\tR\n" +
	"unlockCode\"\x95\x01\n" +
	"\x1cCMsgScreenInformationChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12%\n" +
	"\x0eoverride_width\x18\x02 \x01(\x01R\roverrideWidth\x12'\n" +
	"\x0foverride_height\x18\x03 \x01(\x01R\x0eoverrideHeight\"<\n" +
	"\x13CMsgClearAllCookies\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"W\n" +
	"\rCMsgScreenDPI\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1f\n" +
	"\vdpi_scaling\x18\x02 \x01(\x02R\n" +
	"dpiScaling\"9\n" +
	"\x10CMsgAckScreenDPI\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"2\n" +
	"\x16CMsgAuthedSteamDomains\x12\x18\n" +
	"\adomains\x18\x01 \x03(\tR\adomains\"-\n" +
	"\x13CMsgSteamAuthNeeded\x12\x16\n" +
	"\x06filler\x18\x01 \x01(\bR\x06filler\"3\n" +
	"\x17CMsgSteamAuthCookiesSet\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xab\x01\n" +
	"\x14CMsgJSRegisterMethod\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12X\n" +
	"\vmethod_type\x18\x03 \x01(\x0e2\x16.EJSRegisterMethodType:\x1fk_EJSRegisterMethodType_InvalidR\n" +
	"methodType\"\xf9\x03\n" +
	"\vCMsgJSValue\x12\x1d\n" +
	"\n" +
	"bool_value\x18\x01 \x01(\bR\tboolValue\x12\x1b\n" +
	"\tint_value\x18\x02 \x01(\x05R\bintValue\x12\x1d\n" +
	"\n" +
	"uint_value\x18\x03 \x01(\rR\tuintValue\x12!\n" +
	"\fdouble_value\x18\x04 \x01(\x01R\vdoubleValue\x12!\n" +
	"\fstring_value\x18\x05 \x01(\tR\vstringValue\x12'\n" +
	"\x0ffunction_handle\x18\x06 \x01(\x04R\x0efunctionHandle\x12\x1f\n" +
	"\vbytes_value\x18\f \x01(\fR\n" +
	"bytesValue\x12\x19\n" +
	"\bis_array\x18\b \x01(\bR\aisArray\x12/\n" +
	"\farray_values\x18\t \x03(\v2\f.CMsgJSValueR\varrayValues\x12\x1b\n" +
	"\tis_object\x18\n" +
	" \x01(\bR\bisObject\x12J\n" +
	"\x11object_properties\x18\v \x03(\v2\x1d.CMsgJSValue.JSObjectPropertyR\x10objectProperties\x1aJ\n" +
	"\x10JSObjectProperty\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\x05value\x18\x02 \x01(\v2\f.CMsgJSValueR\x05value\"\xad\x01\n" +
	"\x10CMsgJSMethodCall\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12*\n" +
	"\targuments\x18\x04 \x03(\v2\f.CMsgJSValueR\targuments\"\xc7\x01\n" +
	"\x15CMsgJSExecuteCallback\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12'\n" +
	"\x0ffunction_handle\x18\x03 \x01(\x04R\x0efunctionHandle\x12*\n" +
	"\targuments\x18\x04 \x03(\v2\f.CMsgJSValueR\targuments\"\xe7\x01\n" +
	"\x14CMsgJSExecutePromise\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12%\n" +
	"\x0epromise_handle\x18\x03 \x01(\x04R\rpromiseHandle\x12#\n" +
	"\rreject_reason\x18\x04 \x01(\tR\frejectReason\x12(\n" +
	"\bargument\x18\x05 \x01(\v2\f.CMsgJSValueR\bargument\"\x9b\x01\n" +
	"\x15CMsgJSReleaseCallback\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12'\n" +
	"\x0ffunction_handle\x18\x03 \x01(\x04R\x0efunctionHandle\"\x8f\x01\n" +
	"\x14CMsgJSRaiseException\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x122\n" +
	"\x15owning_browser_handle\x18\x02 \x01(\rR\x13owningBrowserHandle\x12\x1c\n" +
	"\texception\x18\x03 \x01(\tR\texception\"\x86\x01\n" +
	"\x14CMsgLoadLocalization\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12+\n" +
	"\x11localization_path\x18\x02 \x01(\tR\x10localizationPath\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\"A\n" +
	"\x18CMsgNotifyUserActivation\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"6\n" +
	"\x1eCMsgSetNetFakeLocalSystemState\x12\x14\n" +
	"\x05state\x18\x01 \x01(\rR\x05state\"\xa4\x02\n" +
	"\x1bCMsgDraggableRegionsChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12A\n" +
	"\x05rects\x18\x02 \x03(\v2+.CMsgDraggableRegionsChanged.DraggableRectsR\x05rects\x1a\x9a\x01\n" +
	"\x0eDraggableRects\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\x12\x1c\n" +
	"\tdraggable\x18\x05 \x01(\bR\tdraggable\x12 \n" +
	"\vtransparent\x18\x06 \x01(\bR\vtransparent\"l\n" +
	"\x15CMsgResizeGripChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x14\n" +
	"\x05width\x18\x02 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x05R\x06height\"\x80\x02\n" +
	"\x15CMsgSetWindowPosition\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\x12\x14\n" +
	"\x05width\x18\x04 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\x05 \x01(\x01R\x06height\x12\x1b\n" +
	"\tmin_width\x18\x06 \x01(\x01R\bminWidth\x12\x1d\n" +
	"\n" +
	"min_height\x18\a \x01(\x01R\tminHeight\x12\x1b\n" +
	"\tmax_width\x18\b \x01(\x01R\bmaxWidth\x12\x1d\n" +
	"\n" +
	"max_height\x18\t \x01(\x01R\tmaxHeight\"7\n" +
	"\x0eCMsgShowWindow\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"7\n" +
	"\x0eCMsgHideWindow\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"?\n" +
	"\x16CMsgBringWindowToFront\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"@\n" +
	"\x17CMsgSetForegroundWindow\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"B\n" +
	"\x19CMsgMaximizeRestoreWindow\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\";\n" +
	"\x12CMsgMinimizeWindow\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"\x81\x04\n" +
	"\x1aCMsgShowBrowserContextMenu\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12S\n" +
	"\x0fcustom_commands\x18\x02 \x03(\v2*.CMsgShowBrowserContextMenu.ContextCommandR\x0ecustomCommands\x12\x1d\n" +
	"\n" +
	"type_flags\x18\x03 \x01(\rR\ttypeFlags\x12\x19\n" +
	"\bpage_url\x18\x04 \x01(\tR\apageUrl\x12\x17\n" +
	"\acoord_x\x18\x05 \x01(\x05R\x06coordX\x12\x17\n" +
	"\acoord_y\x18\x06 \x01(\x05R\x06coordY\x12\x19\n" +
	"\blink_url\x18\a \x01(\tR\alinkUrl\x12.\n" +
	"\x13unfiltered_link_url\x18\b \x01(\tR\x11unfilteredLinkUrl\x12%\n" +
	"\x0eselection_text\x18\t \x01(\tR\rselectionText\x12'\n" +
	"\x0fmisspelled_word\x18\n" +
	" \x01(\tR\x0emisspelledWord\x12(\n" +
	"\x10edit_state_flags\x18\v \x01(\rR\x0eeditStateFlags\x1a6\n" +
	"\x0eContextCommand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\"d\n" +
	"\x1cCMsgHandleContextMenuCommand\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1d\n" +
	"\n" +
	"command_id\x18\x02 \x01(\x05R\tcommandId\"\xeb\x01\n" +
	"\x10CMsgTouchGesture\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x18\n" +
	"\agesture\x18\x03 \x01(\rR\agesture\x12\f\n" +
	"\x01x\x18\x04 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x05 \x01(\x01R\x01y\x12\x14\n" +
	"\x05width\x18\x06 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\a \x01(\x01R\x06height\x12\x1b\n" +
	"\ttap_count\x18\b \x01(\rR\btapCount\x12\x1f\n" +
	"\vpinch_scale\x18\t \x01(\x01R\n" +
	"pinchScale\"a\n" +
	"\x1cCMsgSetTouchGesturesToCancel\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x1a\n" +
	"\bgestures\x18\x02 \x03(\rR\bgestures\"R\n" +
	"\x15CMsgImeSetComposition\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"N\n" +
	"\x11CMsgImeCommitText\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"A\n" +
	"\x18CMsgImeCancelComposition\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"c\n" +
	"\x1eCMsgImeCompositionRangeChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\x01R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x01R\x01y\"W\n" +
	"\x12CMsgInspectElement\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\f\n" +
	"\x01x\x18\x02 \x01(\rR\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\rR\x01y\"P\n" +
	"\rCMsgDisableF5\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\adisable\x18\x02 \x01(\bR\adisable\"L\n" +
	"\x11CMsgStartDownload\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"k\n" +
	"\x1aCMsgSetWindowStackingOrder\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12&\n" +
	"\x0eestackingorder\x18\x02 \x01(\rR\x0eestackingorder\"\xa7\x01\n" +
	")CMsgBrowserViewPostMessageToParentRequest\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04args\x18\x03 \x01(\tR\x04args\x12%\n" +
	"\x0erequesting_url\x18\x04 \x01(\tR\rrequestingUrl\"M\n" +
	"\x12CMsgBlockedRequest\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\"Z\n" +
	"\x17CMsgBrowserFocusChanged\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\afocused\x18\x02 \x01(\bR\afocused\"D\n" +
	"\x1bCMsgRenderProcessTerminated\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"U\n" +
	"\x18CMsgSetProtocolBlockList\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x12\n" +
	"\x04list\x18\x02 \x01(\tR\x04list\"b\n" +
	"\x1eCMsgSetForceDeviceScaleFactors\x12\x1b\n" +
	"\tdpi_scale\x18\x01 \x01(\x01R\bdpiScale\x12#\n" +
	"\rbrowser_scale\x18\x02 \x01(\x01R\fbrowserScale\"(\n" +
	"\rCMsgSetUIMode\x12\x17\n" +
	"\aui_mode\x18\x01 \x01(\x05R\x06uiMode\">\n" +
	"\x14CMsgSetSteamBetaName\x12&\n" +
	"\x0fsteam_beta_name\x18\x01 \x01(\tR\rsteamBetaName\"+\n" +
	"\x0eCMsgSetSteamID\x12\x19\n" +
	"\bsteam_id\x18\x01 \x01(\x04R\asteamId\"9\n" +
	"\x10CMsgPopupCreated\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\"^\n" +
	"\x1bCMsgSetVRKeyboardVisibility\x12%\n" +
	"\x0ebrowser_handle\x18\x01 \x01(\rR\rbrowserHandle\x12\x18\n" +
	"\avisible\x18\x02 \x01(\bR\avisible\"\x16\n" +
	"\x14CMsgRestartJSContext\"\xf1\x01\n" +
	"\x1cCMsgSetAccessibilitySettings\x124\n" +
	"\x16reduced_motion_enabled\x18\x01 \x01(\bR\x14reducedMotionEnabled\x12o\n" +
	"\x12preferred_contrast\x18\x02 \x01(\x0e2\x1b.EAccessibilityContrastMode:#k_EBrowserContrastMode_NoPreferenceR\x11preferredContrast\x12*\n" +
	"\x11minimum_font_size\x18\x03 \x01(\rR\x0fminimumFontSize*\xad\x01\n" +
	"\x15EJSRegisterMethodType\x12#\n" +
	"\x1fk_EJSRegisterMethodType_Invalid\x10\x00\x12$\n" +
	" k_EJSRegisterMethodType_Function\x10\x01\x12$\n" +
	" k_EJSRegisterMethodType_Callback\x10\x02\x12#\n" +
	"\x1fk_EJSRegisterMethodType_Promise\x10\x03*\x87\x01\n" +
	"\x1aEAccessibilityContrastMode\x12'\n" +
	"#k_EBrowserContrastMode_NoPreference\x10\x00\x12\x1f\n" +
	"\x1bk_EBrowserContrastMode_More\x10\x01\x12\x1f\n" +
	"\x1bk_EBrowserContrastMode_Less\x10\x02B\x05H\x01\x80\x01\x00"

var (
	file_htmlmessages_proto_rawDescOnce sync.Once
	file_htmlmessages_proto_rawDescData []byte
)

func file_htmlmessages_proto_rawDescGZIP() []byte {
	file_htmlmessages_proto_rawDescOnce.Do(func() {
		file_htmlmessages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_htmlmessages_proto_rawDesc), len(file_htmlmessages_proto_rawDesc)))
	})
	return file_htmlmessages_proto_rawDescData
}

var file_htmlmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_htmlmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 173)
var file_htmlmessages_proto_goTypes = []any{
	(EJSRegisterMethodType)(0),                             // 0: EJSRegisterMethodType
	(EAccessibilityContrastMode)(0),                        // 1: EAccessibilityContrastMode
	(*CMsgKeyUp)(nil),                                      // 2: CMsgKeyUp
	(*CMsgKeyDown)(nil),                                    // 3: CMsgKeyDown
	(*CMsgKeyChar)(nil),                                    // 4: CMsgKeyChar
	(*CMsgMouseDown)(nil),                                  // 5: CMsgMouseDown
	(*CMsgMouseUp)(nil),                                    // 6: CMsgMouseUp
	(*CMsgMouseDblClick)(nil),                              // 7: CMsgMouseDblClick
	(*CMsgMouseWheel)(nil),                                 // 8: CMsgMouseWheel
	(*CMsgMouseMove)(nil),                                  // 9: CMsgMouseMove
	(*CMsgMouseLeave)(nil),                                 // 10: CMsgMouseLeave
	(*CMsgBrowserCreate)(nil),                              // 11: CMsgBrowserCreate
	(*CMsgBrowserCreateResponse)(nil),                      // 12: CMsgBrowserCreateResponse
	(*CMsgBrowserRemove)(nil),                              // 13: CMsgBrowserRemove
	(*CMsgSetLocalFileRequestMapping)(nil),                 // 14: CMsgSetLocalFileRequestMapping
	(*CMsgBrowserErrorStrings)(nil),                        // 15: CMsgBrowserErrorStrings
	(*CMsgBrowserSetName)(nil),                             // 16: CMsgBrowserSetName
	(*CMsgBrowserSize)(nil),                                // 17: CMsgBrowserSize
	(*CMsgBrowserSetMinSize)(nil),                          // 18: CMsgBrowserSetMinSize
	(*CMsgBrowserPosition)(nil),                            // 19: CMsgBrowserPosition
	(*CMsgBrowserResized)(nil),                             // 20: CMsgBrowserResized
	(*CMsgPostURL)(nil),                                    // 21: CMsgPostURL
	(*CMsgAddHeader)(nil),                                  // 22: CMsgAddHeader
	(*CMsgStopLoad)(nil),                                   // 23: CMsgStopLoad
	(*CMsgReload)(nil),                                     // 24: CMsgReload
	(*CMsgGoForward)(nil),                                  // 25: CMsgGoForward
	(*CMsgGoBack)(nil),                                     // 26: CMsgGoBack
	(*CMsgWasHidden)(nil),                                  // 27: CMsgWasHidden
	(*CMsgSetWindowVisibility)(nil),                        // 28: CMsgSetWindowVisibility
	(*CMsgClearHistory)(nil),                               // 29: CMsgClearHistory
	(*CMsgClearAllBrowsingData)(nil),                       // 30: CMsgClearAllBrowsingData
	(*CMsgCopy)(nil),                                       // 31: CMsgCopy
	(*CMsgPaste)(nil),                                      // 32: CMsgPaste
	(*CMsgExecuteJavaScript)(nil),                          // 33: CMsgExecuteJavaScript
	(*CMsgSetFocus)(nil),                                   // 34: CMsgSetFocus
	(*CMsgHorizontalScrollBarSize)(nil),                    // 35: CMsgHorizontalScrollBarSize
	(*CMsgHorizontalScrollBarSizeResponse)(nil),            // 36: CMsgHorizontalScrollBarSizeResponse
	(*CMsgVerticalScrollBarSize)(nil),                      // 37: CMsgVerticalScrollBarSize
	(*CMsgVerticalScrollBarSizeResponse)(nil),              // 38: CMsgVerticalScrollBarSizeResponse
	(*CMsgFind)(nil),                                       // 39: CMsgFind
	(*CMsgStopFind)(nil),                                   // 40: CMsgStopFind
	(*CMsgSetHorizontalScroll)(nil),                        // 41: CMsgSetHorizontalScroll
	(*CMsgSetVerticalScroll)(nil),                          // 42: CMsgSetVerticalScroll
	(*CMsgSetZoomLevel)(nil),                               // 43: CMsgSetZoomLevel
	(*CMsgViewSource)(nil),                                 // 44: CMsgViewSource
	(*CMsgBrowserReady)(nil),                               // 45: CMsgBrowserReady
	(*CMsgURLChanged)(nil),                                 // 46: CMsgURLChanged
	(*CHistoryEntry)(nil),                                  // 47: CHistoryEntry
	(*CMsgHistoryChanged)(nil),                             // 48: CMsgHistoryChanged
	(*CMsgLoadError)(nil),                                  // 49: CMsgLoadError
	(*CHTMLHeader)(nil),                                    // 50: CHTMLHeader
	(*CHTMLPageSecurityInfo)(nil),                          // 51: CHTMLPageSecurityInfo
	(*CMsgFinishedRequest)(nil),                            // 52: CMsgFinishedRequest
	(*CMsgLoadedRequest)(nil),                              // 53: CMsgLoadedRequest
	(*CMsgFavIconURLChanged)(nil),                          // 54: CMsgFavIconURLChanged
	(*CMsgPageSecurity)(nil),                               // 55: CMsgPageSecurity
	(*CMsgStartRequest)(nil),                               // 56: CMsgStartRequest
	(*CMsgStartRequestResponse)(nil),                       // 57: CMsgStartRequestResponse
	(*CMsgShowPopup)(nil),                                  // 58: CMsgShowPopup
	(*CMsgHidePopup)(nil),                                  // 59: CMsgHidePopup
	(*CMsgSizePopup)(nil),                                  // 60: CMsgSizePopup
	(*CMsgOpenNewTab)(nil),                                 // 61: CMsgOpenNewTab
	(*CMsgPopupHTMLWindow)(nil),                            // 62: CMsgPopupHTMLWindow
	(*CMsgPopupHTMLWindowResponse)(nil),                    // 63: CMsgPopupHTMLWindowResponse
	(*CMsgSetHTMLTitle)(nil),                               // 64: CMsgSetHTMLTitle
	(*CMsgLoadingResource)(nil),                            // 65: CMsgLoadingResource
	(*CMsgStatusText)(nil),                                 // 66: CMsgStatusText
	(*CMsgSetCursor)(nil),                                  // 67: CMsgSetCursor
	(*CMsgFileLoadDialog)(nil),                             // 68: CMsgFileLoadDialog
	(*CMsgFileLoadDialogResponse)(nil),                     // 69: CMsgFileLoadDialogResponse
	(*CMsgRequestProcessInfo)(nil),                         // 70: CMsgRequestProcessInfo
	(*CMsgProcessInfoNotification)(nil),                    // 71: CMsgProcessInfoNotification
	(*CMsgShowToolTip)(nil),                                // 72: CMsgShowToolTip
	(*CMsgUpdateToolTip)(nil),                              // 73: CMsgUpdateToolTip
	(*CMsgHideToolTip)(nil),                                // 74: CMsgHideToolTip
	(*CMsgSearchResults)(nil),                              // 75: CMsgSearchResults
	(*CMsgClose)(nil),                                      // 76: CMsgClose
	(*CMsgSetSharedPaintBuffers)(nil),                      // 77: CMsgSetSharedPaintBuffers
	(*CMsgAckSharedPaintBuffers)(nil),                      // 78: CMsgAckSharedPaintBuffers
	(*CMsgNeedsPaint)(nil),                                 // 79: CMsgNeedsPaint
	(*CMsgComboNeedsPaint)(nil),                            // 80: CMsgComboNeedsPaint
	(*CMsgNeedsSharedTexturePaint)(nil),                    // 81: CMsgNeedsSharedTexturePaint
	(*CMsgGetZoom)(nil),                                    // 82: CMsgGetZoom
	(*CMsgGetZoomResponse)(nil),                            // 83: CMsgGetZoomResponse
	(*CMsgLinkAtPosition)(nil),                             // 84: CMsgLinkAtPosition
	(*CMsgLinkAtPositionResponse)(nil),                     // 85: CMsgLinkAtPositionResponse
	(*CMsgZoomToElementAtPosition)(nil),                    // 86: CMsgZoomToElementAtPosition
	(*CMsgZoomToElementAtPositionResponse)(nil),            // 87: CMsgZoomToElementAtPositionResponse
	(*CMsgScalePageToValue)(nil),                           // 88: CMsgScalePageToValue
	(*CMsgForcePopupsToDirectHWND)(nil),                    // 89: CMsgForcePopupsToDirectHWND
	(*CMsgScalePageToValueResponse)(nil),                   // 90: CMsgScalePageToValueResponse
	(*CMsgSavePageToJPEG)(nil),                             // 91: CMsgSavePageToJPEG
	(*CMsgSavePageToJPEGResponse)(nil),                     // 92: CMsgSavePageToJPEGResponse
	(*CMsgJSAlert)(nil),                                    // 93: CMsgJSAlert
	(*CMsgJSConfirm)(nil),                                  // 94: CMsgJSConfirm
	(*CMsgJSDialogResponse)(nil),                           // 95: CMsgJSDialogResponse
	(*CMsgCanGoBackAndForward)(nil),                        // 96: CMsgCanGoBackAndForward
	(*CMsgOpenSteamURL)(nil),                               // 97: CMsgOpenSteamURL
	(*CMsgSetCookie)(nil),                                  // 98: CMsgSetCookie
	(*CMsgSetTargetFrameRate)(nil),                         // 99: CMsgSetTargetFrameRate
	(*CMsgPauseRepaint)(nil),                               // 100: CMsgPauseRepaint
	(*CMsgFullRepaint)(nil),                                // 101: CMsgFullRepaint
	(*CMsgRequestFullScreen)(nil),                          // 102: CMsgRequestFullScreen
	(*CMsgExitFullScreen)(nil),                             // 103: CMsgExitFullScreen
	(*CMsgToggleFindInPageDialog)(nil),                     // 104: CMsgToggleFindInPageDialog
	(*CMsgSetPIDShuttingDown)(nil),                         // 105: CMsgSetPIDShuttingDown
	(*CMsgDisableBackgroundThrottling)(nil),                // 106: CMsgDisableBackgroundThrottling
	(*CMsgAckPIDShuttingDown)(nil),                         // 107: CMsgAckPIDShuttingDown
	(*CMsgGetCookiesForURL)(nil),                           // 108: CMsgGetCookiesForURL
	(*CCookie)(nil),                                        // 109: CCookie
	(*CMsgGetCookiesForURLResponse)(nil),                   // 110: CMsgGetCookiesForURLResponse
	(*CMsgNodeHasFocus)(nil),                               // 111: CMsgNodeHasFocus
	(*CMsgZoomToFocusedElement)(nil),                       // 112: CMsgZoomToFocusedElement
	(*CMsgFocusedNodeText)(nil),                            // 113: CMsgFocusedNodeText
	(*CMsgFocusedNodeTextResponse)(nil),                    // 114: CMsgFocusedNodeTextResponse
	(*CMsgBuildID)(nil),                                    // 115: CMsgBuildID
	(*CMsgOpenDevTools)(nil),                               // 116: CMsgOpenDevTools
	(*CMsgCloseDevTools)(nil),                              // 117: CMsgCloseDevTools
	(*CMsgUnlockH264)(nil),                                 // 118: CMsgUnlockH264
	(*CMsgScreenInformationChanged)(nil),                   // 119: CMsgScreenInformationChanged
	(*CMsgClearAllCookies)(nil),                            // 120: CMsgClearAllCookies
	(*CMsgScreenDPI)(nil),                                  // 121: CMsgScreenDPI
	(*CMsgAckScreenDPI)(nil),                               // 122: CMsgAckScreenDPI
	(*CMsgAuthedSteamDomains)(nil),                         // 123: CMsgAuthedSteamDomains
	(*CMsgSteamAuthNeeded)(nil),                            // 124: CMsgSteamAuthNeeded
	(*CMsgSteamAuthCookiesSet)(nil),                        // 125: CMsgSteamAuthCookiesSet
	(*CMsgJSRegisterMethod)(nil),                           // 126: CMsgJSRegisterMethod
	(*CMsgJSValue)(nil),                                    // 127: CMsgJSValue
	(*CMsgJSMethodCall)(nil),                               // 128: CMsgJSMethodCall
	(*CMsgJSExecuteCallback)(nil),                          // 129: CMsgJSExecuteCallback
	(*CMsgJSExecutePromise)(nil),                           // 130: CMsgJSExecutePromise
	(*CMsgJSReleaseCallback)(nil),                          // 131: CMsgJSReleaseCallback
	(*CMsgJSRaiseException)(nil),                           // 132: CMsgJSRaiseException
	(*CMsgLoadLocalization)(nil),                           // 133: CMsgLoadLocalization
	(*CMsgNotifyUserActivation)(nil),                       // 134: CMsgNotifyUserActivation
	(*CMsgSetNetFakeLocalSystemState)(nil),                 // 135: CMsgSetNetFakeLocalSystemState
	(*CMsgDraggableRegionsChanged)(nil),                    // 136: CMsgDraggableRegionsChanged
	(*CMsgResizeGripChanged)(nil),                          // 137: CMsgResizeGripChanged
	(*CMsgSetWindowPosition)(nil),                          // 138: CMsgSetWindowPosition
	(*CMsgShowWindow)(nil),                                 // 139: CMsgShowWindow
	(*CMsgHideWindow)(nil),                                 // 140: CMsgHideWindow
	(*CMsgBringWindowToFront)(nil),                         // 141: CMsgBringWindowToFront
	(*CMsgSetForegroundWindow)(nil),                        // 142: CMsgSetForegroundWindow
	(*CMsgMaximizeRestoreWindow)(nil),                      // 143: CMsgMaximizeRestoreWindow
	(*CMsgMinimizeWindow)(nil),                             // 144: CMsgMinimizeWindow
	(*CMsgShowBrowserContextMenu)(nil),                     // 145: CMsgShowBrowserContextMenu
	(*CMsgHandleContextMenuCommand)(nil),                   // 146: CMsgHandleContextMenuCommand
	(*CMsgTouchGesture)(nil),                               // 147: CMsgTouchGesture
	(*CMsgSetTouchGesturesToCancel)(nil),                   // 148: CMsgSetTouchGesturesToCancel
	(*CMsgImeSetComposition)(nil),                          // 149: CMsgImeSetComposition
	(*CMsgImeCommitText)(nil),                              // 150: CMsgImeCommitText
	(*CMsgImeCancelComposition)(nil),                       // 151: CMsgImeCancelComposition
	(*CMsgImeCompositionRangeChanged)(nil),                 // 152: CMsgImeCompositionRangeChanged
	(*CMsgInspectElement)(nil),                             // 153: CMsgInspectElement
	(*CMsgDisableF5)(nil),                                  // 154: CMsgDisableF5
	(*CMsgStartDownload)(nil),                              // 155: CMsgStartDownload
	(*CMsgSetWindowStackingOrder)(nil),                     // 156: CMsgSetWindowStackingOrder
	(*CMsgBrowserViewPostMessageToParentRequest)(nil),      // 157: CMsgBrowserViewPostMessageToParentRequest
	(*CMsgBlockedRequest)(nil),                             // 158: CMsgBlockedRequest
	(*CMsgBrowserFocusChanged)(nil),                        // 159: CMsgBrowserFocusChanged
	(*CMsgRenderProcessTerminated)(nil),                    // 160: CMsgRenderProcessTerminated
	(*CMsgSetProtocolBlockList)(nil),                       // 161: CMsgSetProtocolBlockList
	(*CMsgSetForceDeviceScaleFactors)(nil),                 // 162: CMsgSetForceDeviceScaleFactors
	(*CMsgSetUIMode)(nil),                                  // 163: CMsgSetUIMode
	(*CMsgSetSteamBetaName)(nil),                           // 164: CMsgSetSteamBetaName
	(*CMsgSetSteamID)(nil),                                 // 165: CMsgSetSteamID
	(*CMsgPopupCreated)(nil),                               // 166: CMsgPopupCreated
	(*CMsgSetVRKeyboardVisibility)(nil),                    // 167: CMsgSetVRKeyboardVisibility
	(*CMsgRestartJSContext)(nil),                           // 168: CMsgRestartJSContext
	(*CMsgSetAccessibilitySettings)(nil),                   // 169: CMsgSetAccessibilitySettings
	(*CMsgSetLocalFileRequestMapping_AdditionalRoute)(nil), // 170: CMsgSetLocalFileRequestMapping.AdditionalRoute
	(*CMsgFileLoadDialog_Filter)(nil),                      // 171: CMsgFileLoadDialog.Filter
	(*CMsgJSValue_JSObjectProperty)(nil),                   // 172: CMsgJSValue.JSObjectProperty
	(*CMsgDraggableRegionsChanged_DraggableRects)(nil),     // 173: CMsgDraggableRegionsChanged.DraggableRects
	(*CMsgShowBrowserContextMenu_ContextCommand)(nil),      // 174: CMsgShowBrowserContextMenu.ContextCommand
	(EBrowserGPUStatus)(0),                                 // 175: EBrowserGPUStatus
	(EBrowserFeatureStatus)(0),                             // 176: EBrowserFeatureStatus
}
var file_htmlmessages_proto_depIdxs = []int32{
	170, // 0: CMsgSetLocalFileRequestMapping.routes:type_name -> CMsgSetLocalFileRequestMapping.AdditionalRoute
	47,  // 1: CMsgHistoryChanged.entries:type_name -> CHistoryEntry
	50,  // 2: CMsgLoadedRequest.headers:type_name -> CHTMLHeader
	51,  // 3: CMsgPageSecurity.security_info:type_name -> CHTMLPageSecurityInfo
	171, // 4: CMsgFileLoadDialog.filters:type_name -> CMsgFileLoadDialog.Filter
	175, // 5: CMsgProcessInfoNotification.gpu_status:type_name -> EBrowserGPUStatus
	176, // 6: CMsgProcessInfoNotification.canvas_2d:type_name -> EBrowserFeatureStatus
	176, // 7: CMsgProcessInfoNotification.canvas_oop_rasterization:type_name -> EBrowserFeatureStatus
	176, // 8: CMsgProcessInfoNotification.direct_rendering_display_compositor:type_name -> EBrowserFeatureStatus
	176, // 9: CMsgProcessInfoNotification.gpu_compositing:type_name -> EBrowserFeatureStatus
	176, // 10: CMsgProcessInfoNotification.multiple_raster_threads:type_name -> EBrowserFeatureStatus
	176, // 11: CMsgProcessInfoNotification.opengl:type_name -> EBrowserFeatureStatus
	176, // 12: CMsgProcessInfoNotification.rasterization:type_name -> EBrowserFeatureStatus
	176, // 13: CMsgProcessInfoNotification.raw_draw:type_name -> EBrowserFeatureStatus
	176, // 14: CMsgProcessInfoNotification.skia_graphite:type_name -> EBrowserFeatureStatus
	176, // 15: CMsgProcessInfoNotification.video_decode:type_name -> EBrowserFeatureStatus
	176, // 16: CMsgProcessInfoNotification.video_encode:type_name -> EBrowserFeatureStatus
	176, // 17: CMsgProcessInfoNotification.vulkan:type_name -> EBrowserFeatureStatus
	176, // 18: CMsgProcessInfoNotification.webgl:type_name -> EBrowserFeatureStatus
	176, // 19: CMsgProcessInfoNotification.webgl2:type_name -> EBrowserFeatureStatus
	176, // 20: CMsgProcessInfoNotification.webgpu:type_name -> EBrowserFeatureStatus
	176, // 21: CMsgProcessInfoNotification.webnn:type_name -> EBrowserFeatureStatus
	109, // 22: CMsgGetCookiesForURLResponse.cookies:type_name -> CCookie
	0,   // 23: CMsgJSRegisterMethod.method_type:type_name -> EJSRegisterMethodType
	127, // 24: CMsgJSValue.array_values:type_name -> CMsgJSValue
	172, // 25: CMsgJSValue.object_properties:type_name -> CMsgJSValue.JSObjectProperty
	127, // 26: CMsgJSMethodCall.arguments:type_name -> CMsgJSValue
	127, // 27: CMsgJSExecuteCallback.arguments:type_name -> CMsgJSValue
	127, // 28: CMsgJSExecutePromise.argument:type_name -> CMsgJSValue
	173, // 29: CMsgDraggableRegionsChanged.rects:type_name -> CMsgDraggableRegionsChanged.DraggableRects
	174, // 30: CMsgShowBrowserContextMenu.custom_commands:type_name -> CMsgShowBrowserContextMenu.ContextCommand
	1,   // 31: CMsgSetAccessibilitySettings.preferred_contrast:type_name -> EAccessibilityContrastMode
	127, // 32: CMsgJSValue.JSObjectProperty.value:type_name -> CMsgJSValue
	33,  // [33:33] is the sub-list for method output_type
	33,  // [33:33] is the sub-list for method input_type
	33,  // [33:33] is the sub-list for extension type_name
	33,  // [33:33] is the sub-list for extension extendee
	0,   // [0:33] is the sub-list for field type_name
}

func init() { file_htmlmessages_proto_init() }
func file_htmlmessages_proto_init() {
	if File_htmlmessages_proto != nil {
		return
	}
	file_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_htmlmessages_proto_rawDesc), len(file_htmlmessages_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   173,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_htmlmessages_proto_goTypes,
		DependencyIndexes: file_htmlmessages_proto_depIdxs,
		EnumInfos:         file_htmlmessages_proto_enumTypes,
		MessageInfos:      file_htmlmessages_proto_msgTypes,
	}.Build()
	File_htmlmessages_proto = out.File
	file_htmlmessages_proto_goTypes = nil
	file_htmlmessages_proto_depIdxs = nil
}
