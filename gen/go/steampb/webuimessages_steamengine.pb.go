// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: webuimessages_steamengine.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CSteamEngine_UpdateTextFilterDictionary_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,req,name=language" json:"language,omitempty"`
	Type          *string                `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_UpdateTextFilterDictionary_Notification) Reset() {
	*x = CSteamEngine_UpdateTextFilterDictionary_Notification{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_UpdateTextFilterDictionary_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_UpdateTextFilterDictionary_Notification) ProtoMessage() {}

func (x *CSteamEngine_UpdateTextFilterDictionary_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_UpdateTextFilterDictionary_Notification.ProtoReflect.Descriptor instead.
func (*CSteamEngine_UpdateTextFilterDictionary_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{0}
}

func (x *CSteamEngine_UpdateTextFilterDictionary_Notification) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CSteamEngine_UpdateTextFilterDictionary_Notification) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type CSteamEngine_GetTextFilterDictionary_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,req,name=language" json:"language,omitempty"`
	Type          *string                `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_GetTextFilterDictionary_Request) Reset() {
	*x = CSteamEngine_GetTextFilterDictionary_Request{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_GetTextFilterDictionary_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_GetTextFilterDictionary_Request) ProtoMessage() {}

func (x *CSteamEngine_GetTextFilterDictionary_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_GetTextFilterDictionary_Request.ProtoReflect.Descriptor instead.
func (*CSteamEngine_GetTextFilterDictionary_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{1}
}

func (x *CSteamEngine_GetTextFilterDictionary_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CSteamEngine_GetTextFilterDictionary_Request) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type CSteamEngine_GetTextFilterDictionary_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dictionary    *string                `protobuf:"bytes,1,opt,name=dictionary" json:"dictionary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_GetTextFilterDictionary_Response) Reset() {
	*x = CSteamEngine_GetTextFilterDictionary_Response{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_GetTextFilterDictionary_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_GetTextFilterDictionary_Response) ProtoMessage() {}

func (x *CSteamEngine_GetTextFilterDictionary_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_GetTextFilterDictionary_Response.ProtoReflect.Descriptor instead.
func (*CSteamEngine_GetTextFilterDictionary_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{2}
}

func (x *CSteamEngine_GetTextFilterDictionary_Response) GetDictionary() string {
	if x != nil && x.Dictionary != nil {
		return *x.Dictionary
	}
	return ""
}

type CSteamEngine_TextFilterDictionaryChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,req,name=language" json:"language,omitempty"`
	Type          *string                `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_TextFilterDictionaryChanged_Notification) Reset() {
	*x = CSteamEngine_TextFilterDictionaryChanged_Notification{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_TextFilterDictionaryChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_TextFilterDictionaryChanged_Notification) ProtoMessage() {}

func (x *CSteamEngine_TextFilterDictionaryChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_TextFilterDictionaryChanged_Notification.ProtoReflect.Descriptor instead.
func (*CSteamEngine_TextFilterDictionaryChanged_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{3}
}

func (x *CSteamEngine_TextFilterDictionaryChanged_Notification) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CSteamEngine_TextFilterDictionaryChanged_Notification) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type CSteamEngine_GetGameIDForPID_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pid           *uint32                `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_GetGameIDForPID_Request) Reset() {
	*x = CSteamEngine_GetGameIDForPID_Request{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_GetGameIDForPID_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_GetGameIDForPID_Request) ProtoMessage() {}

func (x *CSteamEngine_GetGameIDForPID_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_GetGameIDForPID_Request.ProtoReflect.Descriptor instead.
func (*CSteamEngine_GetGameIDForPID_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{4}
}

func (x *CSteamEngine_GetGameIDForPID_Request) GetPid() uint32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

type CSteamEngine_GetGameIDForPID_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gameid        *uint64                `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_GetGameIDForPID_Response) Reset() {
	*x = CSteamEngine_GetGameIDForPID_Response{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_GetGameIDForPID_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_GetGameIDForPID_Response) ProtoMessage() {}

func (x *CSteamEngine_GetGameIDForPID_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_GetGameIDForPID_Response.ProtoReflect.Descriptor instead.
func (*CSteamEngine_GetGameIDForPID_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{5}
}

func (x *CSteamEngine_GetGameIDForPID_Response) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

type CSteamEngine_SetOverlayEscapeKeyHandling_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gameid        *uint64                `protobuf:"varint,1,req,name=gameid" json:"gameid,omitempty"`
	ShouldHandle  *bool                  `protobuf:"varint,2,req,name=should_handle,json=shouldHandle" json:"should_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_SetOverlayEscapeKeyHandling_Notification) Reset() {
	*x = CSteamEngine_SetOverlayEscapeKeyHandling_Notification{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_SetOverlayEscapeKeyHandling_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_SetOverlayEscapeKeyHandling_Notification) ProtoMessage() {}

func (x *CSteamEngine_SetOverlayEscapeKeyHandling_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_SetOverlayEscapeKeyHandling_Notification.ProtoReflect.Descriptor instead.
func (*CSteamEngine_SetOverlayEscapeKeyHandling_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{6}
}

func (x *CSteamEngine_SetOverlayEscapeKeyHandling_Notification) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CSteamEngine_SetOverlayEscapeKeyHandling_Notification) GetShouldHandle() bool {
	if x != nil && x.ShouldHandle != nil {
		return *x.ShouldHandle
	}
	return false
}

type CSteamEngine_SearchAppDataCacheByStoreKeywords_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SearchTerm    *string                `protobuf:"bytes,1,opt,name=search_term,json=searchTerm" json:"search_term,omitempty"`
	MaxResults    *uint32                `protobuf:"varint,2,opt,name=max_results,json=maxResults" json:"max_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) Reset() {
	*x = CSteamEngine_SearchAppDataCacheByStoreKeywords_Request{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) ProtoMessage() {}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_SearchAppDataCacheByStoreKeywords_Request.ProtoReflect.Descriptor instead.
func (*CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{7}
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) GetSearchTerm() string {
	if x != nil && x.SearchTerm != nil {
		return *x.SearchTerm
	}
	return ""
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Request) GetMaxResults() uint32 {
	if x != nil && x.MaxResults != nil {
		return *x.MaxResults
	}
	return 0
}

type CSteamEngine_SearchAppDataCacheByStoreKeywords_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appids        []uint32               `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Response) Reset() {
	*x = CSteamEngine_SearchAppDataCacheByStoreKeywords_Response{}
	mi := &file_webuimessages_steamengine_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamEngine_SearchAppDataCacheByStoreKeywords_Response) ProtoMessage() {}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamengine_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamEngine_SearchAppDataCacheByStoreKeywords_Response.ProtoReflect.Descriptor instead.
func (*CSteamEngine_SearchAppDataCacheByStoreKeywords_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamengine_proto_rawDescGZIP(), []int{8}
}

func (x *CSteamEngine_SearchAppDataCacheByStoreKeywords_Response) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

var File_webuimessages_steamengine_proto protoreflect.FileDescriptor

const file_webuimessages_steamengine_proto_rawDesc = "" +
	"\n" +
	"\x1fwebuimessages_steamengine.proto\x1a\x18steammessages_base.proto\x1a\x18webuimessages_base.proto\"f\n" +
	"4CSteamEngine_UpdateTextFilterDictionary_Notification\x12\x1a\n" +
	"\blanguage\x18\x01 \x02(\tR\blanguage\x12\x12\n" +
	"\x04type\x18\x02 \x02(\tR\x04type\"^\n" +
	",CSteamEngine_GetTextFilterDictionary_Request\x12\x1a\n" +
	"\blanguage\x18\x01 \x02(\tR\blanguage\x12\x12\n" +
	"\x04type\x18\x02 \x02(\tR\x04type\"O\n" +
	"-CSteamEngine_GetTextFilterDictionary_Response\x12\x1e\n" +
	"\n" +
	"dictionary\x18\x01 \x01(\tR\n" +
	"dictionary\"g\n" +
	"5CSteamEngine_TextFilterDictionaryChanged_Notification\x12\x1a\n" +
	"\blanguage\x18\x01 \x02(\tR\blanguage\x12\x12\n" +
	"\x04type\x18\x02 \x02(\tR\x04type\"8\n" +
	"$CSteamEngine_GetGameIDForPID_Request\x12\x10\n" +
	"\x03pid\x18\x01 \x01(\rR\x03pid\"?\n" +
	"%CSteamEngine_GetGameIDForPID_Response\x12\x16\n" +
	"\x06gameid\x18\x01 \x01(\x04R\x06gameid\"t\n" +
	"5CSteamEngine_SetOverlayEscapeKeyHandling_Notification\x12\x16\n" +
	"\x06gameid\x18\x01 \x02(\x04R\x06gameid\x12#\n" +
	"\rshould_handle\x18\x02 \x02(\bR\fshouldHandle\"z\n" +
	"6CSteamEngine_SearchAppDataCacheByStoreKeywords_Request\x12\x1f\n" +
	"\vsearch_term\x18\x01 \x01(\tR\n" +
	"searchTerm\x12\x1f\n" +
	"\vmax_results\x18\x02 \x01(\rR\n" +
	"maxResults\"Q\n" +
	"7CSteamEngine_SearchAppDataCacheByStoreKeywords_Response\x12\x16\n" +
	"\x06appids\x18\x01 \x03(\rR\x06appids2\xc7\x05\n" +
	"\vSteamEngine\x12e\n" +
	"\x1aUpdateTextFilterDictionary\x125.CSteamEngine_UpdateTextFilterDictionary_Notification\x1a\x10.WebUINoResponse\x12x\n" +
	"\x17GetTextFilterDictionary\x12-.CSteamEngine_GetTextFilterDictionary_Request\x1a..CSteamEngine_GetTextFilterDictionary_Response\x12m\n" +
	"!NotifyTextFilterDictionaryChanged\x126.CSteamEngine_TextFilterDictionaryChanged_Notification\x1a\x10.WebUINoResponse\x12`\n" +
	"\x0fGetGameIDForPID\x12%.CSteamEngine_GetGameIDForPID_Request\x1a&.CSteamEngine_GetGameIDForPID_Response\x12g\n" +
	"\x1bSetOverlayEscapeKeyHandling\x126.CSteamEngine_SetOverlayEscapeKeyHandling_Notification\x1a\x10.WebUINoResponse\x12\x96\x01\n" +
	"!SearchAppDataCacheByStoreKeywords\x127.CSteamEngine_SearchAppDataCacheByStoreKeywords_Request\x1a8.CSteamEngine_SearchAppDataCacheByStoreKeywords_Response\x1a\x04\x80\x97\"\x02B\x05H\x01\x80\x01\x01"

var (
	file_webuimessages_steamengine_proto_rawDescOnce sync.Once
	file_webuimessages_steamengine_proto_rawDescData []byte
)

func file_webuimessages_steamengine_proto_rawDescGZIP() []byte {
	file_webuimessages_steamengine_proto_rawDescOnce.Do(func() {
		file_webuimessages_steamengine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_webuimessages_steamengine_proto_rawDesc), len(file_webuimessages_steamengine_proto_rawDesc)))
	})
	return file_webuimessages_steamengine_proto_rawDescData
}

var file_webuimessages_steamengine_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_webuimessages_steamengine_proto_goTypes = []any{
	(*CSteamEngine_UpdateTextFilterDictionary_Notification)(nil),    // 0: CSteamEngine_UpdateTextFilterDictionary_Notification
	(*CSteamEngine_GetTextFilterDictionary_Request)(nil),            // 1: CSteamEngine_GetTextFilterDictionary_Request
	(*CSteamEngine_GetTextFilterDictionary_Response)(nil),           // 2: CSteamEngine_GetTextFilterDictionary_Response
	(*CSteamEngine_TextFilterDictionaryChanged_Notification)(nil),   // 3: CSteamEngine_TextFilterDictionaryChanged_Notification
	(*CSteamEngine_GetGameIDForPID_Request)(nil),                    // 4: CSteamEngine_GetGameIDForPID_Request
	(*CSteamEngine_GetGameIDForPID_Response)(nil),                   // 5: CSteamEngine_GetGameIDForPID_Response
	(*CSteamEngine_SetOverlayEscapeKeyHandling_Notification)(nil),   // 6: CSteamEngine_SetOverlayEscapeKeyHandling_Notification
	(*CSteamEngine_SearchAppDataCacheByStoreKeywords_Request)(nil),  // 7: CSteamEngine_SearchAppDataCacheByStoreKeywords_Request
	(*CSteamEngine_SearchAppDataCacheByStoreKeywords_Response)(nil), // 8: CSteamEngine_SearchAppDataCacheByStoreKeywords_Response
	(*WebUINoResponse)(nil),                                         // 9: WebUINoResponse
}
var file_webuimessages_steamengine_proto_depIdxs = []int32{
	0, // 0: SteamEngine.UpdateTextFilterDictionary:input_type -> CSteamEngine_UpdateTextFilterDictionary_Notification
	1, // 1: SteamEngine.GetTextFilterDictionary:input_type -> CSteamEngine_GetTextFilterDictionary_Request
	3, // 2: SteamEngine.NotifyTextFilterDictionaryChanged:input_type -> CSteamEngine_TextFilterDictionaryChanged_Notification
	4, // 3: SteamEngine.GetGameIDForPID:input_type -> CSteamEngine_GetGameIDForPID_Request
	6, // 4: SteamEngine.SetOverlayEscapeKeyHandling:input_type -> CSteamEngine_SetOverlayEscapeKeyHandling_Notification
	7, // 5: SteamEngine.SearchAppDataCacheByStoreKeywords:input_type -> CSteamEngine_SearchAppDataCacheByStoreKeywords_Request
	9, // 6: SteamEngine.UpdateTextFilterDictionary:output_type -> WebUINoResponse
	2, // 7: SteamEngine.GetTextFilterDictionary:output_type -> CSteamEngine_GetTextFilterDictionary_Response
	9, // 8: SteamEngine.NotifyTextFilterDictionaryChanged:output_type -> WebUINoResponse
	5, // 9: SteamEngine.GetGameIDForPID:output_type -> CSteamEngine_GetGameIDForPID_Response
	9, // 10: SteamEngine.SetOverlayEscapeKeyHandling:output_type -> WebUINoResponse
	8, // 11: SteamEngine.SearchAppDataCacheByStoreKeywords:output_type -> CSteamEngine_SearchAppDataCacheByStoreKeywords_Response
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_webuimessages_steamengine_proto_init() }
func file_webuimessages_steamengine_proto_init() {
	if File_webuimessages_steamengine_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_webuimessages_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_webuimessages_steamengine_proto_rawDesc), len(file_webuimessages_steamengine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webuimessages_steamengine_proto_goTypes,
		DependencyIndexes: file_webuimessages_steamengine_proto_depIdxs,
		MessageInfos:      file_webuimessages_steamengine_proto_msgTypes,
	}.Build()
	File_webuimessages_steamengine_proto = out.File
	file_webuimessages_steamengine_proto_goTypes = nil
	file_webuimessages_steamengine_proto_depIdxs = nil
}
