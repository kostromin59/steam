// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_market.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CEconMarket_IsMarketplaceAllowed_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Webcookie     *string                `protobuf:"bytes,1,opt,name=webcookie" json:"webcookie,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CEconMarket_IsMarketplaceAllowed_Request) Reset() {
	*x = CEconMarket_IsMarketplaceAllowed_Request{}
	mi := &file_steammessages_market_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CEconMarket_IsMarketplaceAllowed_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEconMarket_IsMarketplaceAllowed_Request) ProtoMessage() {}

func (x *CEconMarket_IsMarketplaceAllowed_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_market_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEconMarket_IsMarketplaceAllowed_Request.ProtoReflect.Descriptor instead.
func (*CEconMarket_IsMarketplaceAllowed_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_market_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CEconMarket_IsMarketplaceAllowed_Request) GetWebcookie() string {
	if x != nil && x.Webcookie != nil {
		return *x.Webcookie
	}
	return ""
}

type CEconMarket_IsMarketplaceAllowed_Response struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Allowed                  *bool                  `protobuf:"varint,1,opt,name=allowed" json:"allowed,omitempty"`
	Reason                   *uint32                `protobuf:"varint,2,opt,name=reason" json:"reason,omitempty"`
	AllowedAtTime            *uint32                `protobuf:"varint,3,opt,name=allowed_at_time,json=allowedAtTime" json:"allowed_at_time,omitempty"`
	SteamguardRequiredDays   *uint32                `protobuf:"varint,4,opt,name=steamguard_required_days,json=steamguardRequiredDays" json:"steamguard_required_days,omitempty"`
	FormsRequested           *bool                  `protobuf:"varint,7,opt,name=forms_requested,json=formsRequested" json:"forms_requested,omitempty"`
	FormsRequireVerification *bool                  `protobuf:"varint,8,opt,name=forms_require_verification,json=formsRequireVerification" json:"forms_require_verification,omitempty"`
	NewDeviceCooldownDays    *uint32                `protobuf:"varint,9,opt,name=new_device_cooldown_days,json=newDeviceCooldownDays" json:"new_device_cooldown_days,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) Reset() {
	*x = CEconMarket_IsMarketplaceAllowed_Response{}
	mi := &file_steammessages_market_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEconMarket_IsMarketplaceAllowed_Response) ProtoMessage() {}

func (x *CEconMarket_IsMarketplaceAllowed_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_market_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEconMarket_IsMarketplaceAllowed_Response.ProtoReflect.Descriptor instead.
func (*CEconMarket_IsMarketplaceAllowed_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_market_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetAllowed() bool {
	if x != nil && x.Allowed != nil {
		return *x.Allowed
	}
	return false
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetReason() uint32 {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return 0
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetAllowedAtTime() uint32 {
	if x != nil && x.AllowedAtTime != nil {
		return *x.AllowedAtTime
	}
	return 0
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetSteamguardRequiredDays() uint32 {
	if x != nil && x.SteamguardRequiredDays != nil {
		return *x.SteamguardRequiredDays
	}
	return 0
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetFormsRequested() bool {
	if x != nil && x.FormsRequested != nil {
		return *x.FormsRequested
	}
	return false
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetFormsRequireVerification() bool {
	if x != nil && x.FormsRequireVerification != nil {
		return *x.FormsRequireVerification
	}
	return false
}

func (x *CEconMarket_IsMarketplaceAllowed_Response) GetNewDeviceCooldownDays() uint32 {
	if x != nil && x.NewDeviceCooldownDays != nil {
		return *x.NewDeviceCooldownDays
	}
	return 0
}

var File_steammessages_market_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_market_steamclient_proto_rawDesc = "" +
	"\n" +
	"&steammessages_market.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\"H\n" +
	"(CEconMarket_IsMarketplaceAllowed_Request\x12\x1c\n" +
	"\twebcookie\x18\x01 \x01(\tR\twebcookie\"\xdf\x02\n" +
	")CEconMarket_IsMarketplaceAllowed_Response\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\rR\x06reason\x12&\n" +
	"\x0fallowed_at_time\x18\x03 \x01(\rR\rallowedAtTime\x128\n" +
	"\x18steamguard_required_days\x18\x04 \x01(\rR\x16steamguardRequiredDays\x12'\n" +
	"\x0fforms_requested\x18\a \x01(\bR\x0eformsRequested\x12<\n" +
	"\x1aforms_require_verification\x18\b \x01(\bR\x18formsRequireVerification\x127\n" +
	"\x18new_device_cooldown_days\x18\t \x01(\rR\x15newDeviceCooldownDays2{\n" +
	"\n" +
	"EconMarket\x12m\n" +
	"\x14IsMarketplaceAllowed\x12).CEconMarket_IsMarketplaceAllowed_Request\x1a*.CEconMarket_IsMarketplaceAllowed_ResponseB\x03\x80\x01\x01"

var (
	file_steammessages_market_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_market_steamclient_proto_rawDescData []byte
)

func file_steammessages_market_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_market_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_market_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_market_steamclient_proto_rawDesc), len(file_steammessages_market_steamclient_proto_rawDesc)))
	})
	return file_steammessages_market_steamclient_proto_rawDescData
}

var file_steammessages_market_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_steammessages_market_steamclient_proto_goTypes = []any{
	(*CEconMarket_IsMarketplaceAllowed_Request)(nil),  // 0: CEconMarket_IsMarketplaceAllowed_Request
	(*CEconMarket_IsMarketplaceAllowed_Response)(nil), // 1: CEconMarket_IsMarketplaceAllowed_Response
}
var file_steammessages_market_steamclient_proto_depIdxs = []int32{
	0, // 0: EconMarket.IsMarketplaceAllowed:input_type -> CEconMarket_IsMarketplaceAllowed_Request
	1, // 1: EconMarket.IsMarketplaceAllowed:output_type -> CEconMarket_IsMarketplaceAllowed_Response
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_steammessages_market_steamclient_proto_init() }
func file_steammessages_market_steamclient_proto_init() {
	if File_steammessages_market_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_market_steamclient_proto_rawDesc), len(file_steammessages_market_steamclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_market_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_market_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_market_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_market_steamclient_proto = out.File
	file_steammessages_market_steamclient_proto_goTypes = nil
	file_steammessages_market_steamclient_proto_depIdxs = nil
}
