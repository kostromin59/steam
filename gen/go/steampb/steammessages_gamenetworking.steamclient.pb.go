// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_gamenetworking.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CGameNetworking_AllocateFakeIP_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         *uint32                `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	NumFakePorts  *uint32                `protobuf:"varint,2,opt,name=num_fake_ports,json=numFakePorts" json:"num_fake_ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameNetworking_AllocateFakeIP_Request) Reset() {
	*x = CGameNetworking_AllocateFakeIP_Request{}
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameNetworking_AllocateFakeIP_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameNetworking_AllocateFakeIP_Request) ProtoMessage() {}

func (x *CGameNetworking_AllocateFakeIP_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameNetworking_AllocateFakeIP_Request.ProtoReflect.Descriptor instead.
func (*CGameNetworking_AllocateFakeIP_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CGameNetworking_AllocateFakeIP_Request) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CGameNetworking_AllocateFakeIP_Request) GetNumFakePorts() uint32 {
	if x != nil && x.NumFakePorts != nil {
		return *x.NumFakePorts
	}
	return 0
}

type CGameNetworking_AllocateFakeIP_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FakeIp        *uint32                `protobuf:"fixed32,1,opt,name=fake_ip,json=fakeIp" json:"fake_ip,omitempty"`
	FakePorts     []uint32               `protobuf:"varint,2,rep,name=fake_ports,json=fakePorts" json:"fake_ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameNetworking_AllocateFakeIP_Response) Reset() {
	*x = CGameNetworking_AllocateFakeIP_Response{}
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameNetworking_AllocateFakeIP_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameNetworking_AllocateFakeIP_Response) ProtoMessage() {}

func (x *CGameNetworking_AllocateFakeIP_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameNetworking_AllocateFakeIP_Response.ProtoReflect.Descriptor instead.
func (*CGameNetworking_AllocateFakeIP_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CGameNetworking_AllocateFakeIP_Response) GetFakeIp() uint32 {
	if x != nil && x.FakeIp != nil {
		return *x.FakeIp
	}
	return 0
}

func (x *CGameNetworking_AllocateFakeIP_Response) GetFakePorts() []uint32 {
	if x != nil {
		return x.FakePorts
	}
	return nil
}

type CGameNetworking_ReleaseFakeIP_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         *uint32                `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	FakeIp        *uint32                `protobuf:"fixed32,2,opt,name=fake_ip,json=fakeIp" json:"fake_ip,omitempty"`
	FakePorts     []uint32               `protobuf:"varint,3,rep,name=fake_ports,json=fakePorts" json:"fake_ports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) Reset() {
	*x = CGameNetworking_ReleaseFakeIP_Notification{}
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameNetworking_ReleaseFakeIP_Notification) ProtoMessage() {}

func (x *CGameNetworking_ReleaseFakeIP_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_gamenetworking_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameNetworking_ReleaseFakeIP_Notification.ProtoReflect.Descriptor instead.
func (*CGameNetworking_ReleaseFakeIP_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) GetFakeIp() uint32 {
	if x != nil && x.FakeIp != nil {
		return *x.FakeIp
	}
	return 0
}

func (x *CGameNetworking_ReleaseFakeIP_Notification) GetFakePorts() []uint32 {
	if x != nil {
		return x.FakePorts
	}
	return nil
}

var File_steammessages_gamenetworking_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_gamenetworking_steamclient_proto_rawDesc = "" +
	"\n" +
	".steammessages_gamenetworking.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\"e\n" +
	"&CGameNetworking_AllocateFakeIP_Request\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\rR\x05appId\x12$\n" +
	"\x0enum_fake_ports\x18\x02 \x01(\rR\fnumFakePorts\"a\n" +
	"'CGameNetworking_AllocateFakeIP_Response\x12\x17\n" +
	"\afake_ip\x18\x01 \x01(\aR\x06fakeIp\x12\x1d\n" +
	"\n" +
	"fake_ports\x18\x02 \x03(\rR\tfakePorts\"{\n" +
	"*CGameNetworking_ReleaseFakeIP_Notification\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\rR\x05appId\x12\x17\n" +
	"\afake_ip\x18\x02 \x01(\aR\x06fakeIp\x12\x1d\n" +
	"\n" +
	"fake_ports\x18\x03 \x03(\rR\tfakePorts2\xc6\x01\n" +
	"\x0eGameNetworking\x12c\n" +
	"\x0eAllocateFakeIP\x12'.CGameNetworking_AllocateFakeIP_Request\x1a(.CGameNetworking_AllocateFakeIP_Response\x12O\n" +
	"\x13NotifyReleaseFakeIP\x12+.CGameNetworking_ReleaseFakeIP_Notification\x1a\v.NoResponseB\x03\x80\x01\x01"

var (
	file_steammessages_gamenetworking_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_gamenetworking_steamclient_proto_rawDescData []byte
)

func file_steammessages_gamenetworking_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_gamenetworking_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_gamenetworking_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_gamenetworking_steamclient_proto_rawDesc), len(file_steammessages_gamenetworking_steamclient_proto_rawDesc)))
	})
	return file_steammessages_gamenetworking_steamclient_proto_rawDescData
}

var file_steammessages_gamenetworking_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_steammessages_gamenetworking_steamclient_proto_goTypes = []any{
	(*CGameNetworking_AllocateFakeIP_Request)(nil),     // 0: CGameNetworking_AllocateFakeIP_Request
	(*CGameNetworking_AllocateFakeIP_Response)(nil),    // 1: CGameNetworking_AllocateFakeIP_Response
	(*CGameNetworking_ReleaseFakeIP_Notification)(nil), // 2: CGameNetworking_ReleaseFakeIP_Notification
	(*NoResponse)(nil), // 3: NoResponse
}
var file_steammessages_gamenetworking_steamclient_proto_depIdxs = []int32{
	0, // 0: GameNetworking.AllocateFakeIP:input_type -> CGameNetworking_AllocateFakeIP_Request
	2, // 1: GameNetworking.NotifyReleaseFakeIP:input_type -> CGameNetworking_ReleaseFakeIP_Notification
	1, // 2: GameNetworking.AllocateFakeIP:output_type -> CGameNetworking_AllocateFakeIP_Response
	3, // 3: GameNetworking.NotifyReleaseFakeIP:output_type -> NoResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_steammessages_gamenetworking_steamclient_proto_init() }
func file_steammessages_gamenetworking_steamclient_proto_init() {
	if File_steammessages_gamenetworking_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_gamenetworking_steamclient_proto_rawDesc), len(file_steammessages_gamenetworking_steamclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_gamenetworking_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_gamenetworking_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_gamenetworking_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_gamenetworking_steamclient_proto = out.File
	file_steammessages_gamenetworking_steamclient_proto_goTypes = nil
	file_steammessages_gamenetworking_steamclient_proto_depIdxs = nil
}
