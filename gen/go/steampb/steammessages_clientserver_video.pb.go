// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_clientserver_video.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgVideoGameRecordingRepresentation struct {
	state                protoimpl.MessageState             `protogen:"open.v1"`
	RepresentationName   *string                            `protobuf:"bytes,2,opt,name=representation_name,json=representationName" json:"representation_name,omitempty"`
	HorizontalResolution *uint32                            `protobuf:"varint,3,opt,name=horizontal_resolution,json=horizontalResolution" json:"horizontal_resolution,omitempty"`
	VerticalResolution   *uint32                            `protobuf:"varint,4,opt,name=vertical_resolution,json=verticalResolution" json:"vertical_resolution,omitempty"`
	FrameRate            *float64                           `protobuf:"fixed64,5,opt,name=frame_rate,json=frameRate" json:"frame_rate,omitempty"`
	Bandwidth            *uint32                            `protobuf:"varint,6,opt,name=bandwidth" json:"bandwidth,omitempty"`
	AudioSampleRate      *uint32                            `protobuf:"varint,7,opt,name=audio_sample_rate,json=audioSampleRate" json:"audio_sample_rate,omitempty"`
	FrameRateString      *string                            `protobuf:"bytes,8,opt,name=frame_rate_string,json=frameRateString" json:"frame_rate_string,omitempty"`
	Codec                *string                            `protobuf:"bytes,9,opt,name=codec" json:"codec,omitempty"`
	AudioChannelConfig   *uint32                            `protobuf:"varint,10,opt,name=audio_channel_config,json=audioChannelConfig" json:"audio_channel_config,omitempty"`
	SegmentInfo          []*CVideo_GameRecordingSegmentInfo `protobuf:"bytes,11,rep,name=segment_info,json=segmentInfo" json:"segment_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CMsgVideoGameRecordingRepresentation) Reset() {
	*x = CMsgVideoGameRecordingRepresentation{}
	mi := &file_steammessages_clientserver_video_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVideoGameRecordingRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVideoGameRecordingRepresentation) ProtoMessage() {}

func (x *CMsgVideoGameRecordingRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_video_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVideoGameRecordingRepresentation.ProtoReflect.Descriptor instead.
func (*CMsgVideoGameRecordingRepresentation) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_video_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgVideoGameRecordingRepresentation) GetRepresentationName() string {
	if x != nil && x.RepresentationName != nil {
		return *x.RepresentationName
	}
	return ""
}

func (x *CMsgVideoGameRecordingRepresentation) GetHorizontalResolution() uint32 {
	if x != nil && x.HorizontalResolution != nil {
		return *x.HorizontalResolution
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetVerticalResolution() uint32 {
	if x != nil && x.VerticalResolution != nil {
		return *x.VerticalResolution
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetFrameRate() float64 {
	if x != nil && x.FrameRate != nil {
		return *x.FrameRate
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetBandwidth() uint32 {
	if x != nil && x.Bandwidth != nil {
		return *x.Bandwidth
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetAudioSampleRate() uint32 {
	if x != nil && x.AudioSampleRate != nil {
		return *x.AudioSampleRate
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetFrameRateString() string {
	if x != nil && x.FrameRateString != nil {
		return *x.FrameRateString
	}
	return ""
}

func (x *CMsgVideoGameRecordingRepresentation) GetCodec() string {
	if x != nil && x.Codec != nil {
		return *x.Codec
	}
	return ""
}

func (x *CMsgVideoGameRecordingRepresentation) GetAudioChannelConfig() uint32 {
	if x != nil && x.AudioChannelConfig != nil {
		return *x.AudioChannelConfig
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetSegmentInfo() []*CVideo_GameRecordingSegmentInfo {
	if x != nil {
		return x.SegmentInfo
	}
	return nil
}

type CMsgVideoGameRecordingComponent struct {
	state           protoimpl.MessageState                  `protogen:"open.v1"`
	ComponentName   *string                                 `protobuf:"bytes,1,opt,name=component_name,json=componentName" json:"component_name,omitempty"`
	Contents        *uint32                                 `protobuf:"varint,2,opt,name=contents" json:"contents,omitempty"`
	SegmentSize     *uint32                                 `protobuf:"varint,3,opt,name=segment_size,json=segmentSize" json:"segment_size,omitempty"`
	FileType        *string                                 `protobuf:"bytes,4,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	Representations []*CMsgVideoGameRecordingRepresentation `protobuf:"bytes,5,rep,name=representations" json:"representations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgVideoGameRecordingComponent) Reset() {
	*x = CMsgVideoGameRecordingComponent{}
	mi := &file_steammessages_clientserver_video_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVideoGameRecordingComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVideoGameRecordingComponent) ProtoMessage() {}

func (x *CMsgVideoGameRecordingComponent) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_video_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVideoGameRecordingComponent.ProtoReflect.Descriptor instead.
func (*CMsgVideoGameRecordingComponent) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_video_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgVideoGameRecordingComponent) GetComponentName() string {
	if x != nil && x.ComponentName != nil {
		return *x.ComponentName
	}
	return ""
}

func (x *CMsgVideoGameRecordingComponent) GetContents() uint32 {
	if x != nil && x.Contents != nil {
		return *x.Contents
	}
	return 0
}

func (x *CMsgVideoGameRecordingComponent) GetSegmentSize() uint32 {
	if x != nil && x.SegmentSize != nil {
		return *x.SegmentSize
	}
	return 0
}

func (x *CMsgVideoGameRecordingComponent) GetFileType() string {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return ""
}

func (x *CMsgVideoGameRecordingComponent) GetRepresentations() []*CMsgVideoGameRecordingRepresentation {
	if x != nil {
		return x.Representations
	}
	return nil
}

type CMsgVideoGameRecordingDef struct {
	state                    protoimpl.MessageState             `protogen:"open.v1"`
	Steamid                  *uint64                            `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	AppId                    *uint32                            `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	NumSegments              *uint32                            `protobuf:"varint,3,opt,name=num_segments,json=numSegments" json:"num_segments,omitempty"`
	LengthMilliseconds       *uint32                            `protobuf:"varint,4,opt,name=length_milliseconds,json=lengthMilliseconds" json:"length_milliseconds,omitempty"`
	SegmentDurationTimescale *uint32                            `protobuf:"varint,5,opt,name=segment_duration_timescale,json=segmentDurationTimescale" json:"segment_duration_timescale,omitempty"`
	SegmentDuration          *uint32                            `protobuf:"varint,6,opt,name=segment_duration,json=segmentDuration" json:"segment_duration,omitempty"`
	Components               []*CMsgVideoGameRecordingComponent `protobuf:"bytes,7,rep,name=components" json:"components,omitempty"`
	StartTimeMs              *uint32                            `protobuf:"varint,8,opt,name=start_time_ms,json=startTimeMs" json:"start_time_ms,omitempty"`
	StartOffsetInTimelineMs  *uint32                            `protobuf:"varint,9,opt,name=start_offset_in_timeline_ms,json=startOffsetInTimelineMs" json:"start_offset_in_timeline_ms,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CMsgVideoGameRecordingDef) Reset() {
	*x = CMsgVideoGameRecordingDef{}
	mi := &file_steammessages_clientserver_video_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVideoGameRecordingDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVideoGameRecordingDef) ProtoMessage() {}

func (x *CMsgVideoGameRecordingDef) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_video_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVideoGameRecordingDef.ProtoReflect.Descriptor instead.
func (*CMsgVideoGameRecordingDef) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_video_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgVideoGameRecordingDef) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetNumSegments() uint32 {
	if x != nil && x.NumSegments != nil {
		return *x.NumSegments
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetLengthMilliseconds() uint32 {
	if x != nil && x.LengthMilliseconds != nil {
		return *x.LengthMilliseconds
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetSegmentDurationTimescale() uint32 {
	if x != nil && x.SegmentDurationTimescale != nil {
		return *x.SegmentDurationTimescale
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetSegmentDuration() uint32 {
	if x != nil && x.SegmentDuration != nil {
		return *x.SegmentDuration
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetComponents() []*CMsgVideoGameRecordingComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *CMsgVideoGameRecordingDef) GetStartTimeMs() uint32 {
	if x != nil && x.StartTimeMs != nil {
		return *x.StartTimeMs
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetStartOffsetInTimelineMs() uint32 {
	if x != nil && x.StartOffsetInTimelineMs != nil {
		return *x.StartOffsetInTimelineMs
	}
	return 0
}

type CVideo_GameRecordingSegmentInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SegmentNumber      *uint32                `protobuf:"varint,1,opt,name=segment_number,json=segmentNumber" json:"segment_number,omitempty"`
	SegmentSizeBytes   *uint64                `protobuf:"varint,2,opt,name=segment_size_bytes,json=segmentSizeBytes" json:"segment_size_bytes,omitempty"`
	ComponentName      *string                `protobuf:"bytes,3,opt,name=component_name,json=componentName" json:"component_name,omitempty"`
	RepresentationName *string                `protobuf:"bytes,4,opt,name=representation_name,json=representationName" json:"representation_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CVideo_GameRecordingSegmentInfo) Reset() {
	*x = CVideo_GameRecordingSegmentInfo{}
	mi := &file_steammessages_clientserver_video_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CVideo_GameRecordingSegmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVideo_GameRecordingSegmentInfo) ProtoMessage() {}

func (x *CVideo_GameRecordingSegmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_video_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVideo_GameRecordingSegmentInfo.ProtoReflect.Descriptor instead.
func (*CVideo_GameRecordingSegmentInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_video_proto_rawDescGZIP(), []int{3}
}

func (x *CVideo_GameRecordingSegmentInfo) GetSegmentNumber() uint32 {
	if x != nil && x.SegmentNumber != nil {
		return *x.SegmentNumber
	}
	return 0
}

func (x *CVideo_GameRecordingSegmentInfo) GetSegmentSizeBytes() uint64 {
	if x != nil && x.SegmentSizeBytes != nil {
		return *x.SegmentSizeBytes
	}
	return 0
}

func (x *CVideo_GameRecordingSegmentInfo) GetComponentName() string {
	if x != nil && x.ComponentName != nil {
		return *x.ComponentName
	}
	return ""
}

func (x *CVideo_GameRecordingSegmentInfo) GetRepresentationName() string {
	if x != nil && x.RepresentationName != nil {
		return *x.RepresentationName
	}
	return ""
}

type CVideo_GameRecordingSegmentUploadInfo struct {
	state          protoimpl.MessageState                               `protogen:"open.v1"`
	SegmentInfo    *CVideo_GameRecordingSegmentInfo                     `protobuf:"bytes,1,opt,name=segment_info,json=segmentInfo" json:"segment_info,omitempty"`
	UrlHost        *string                                              `protobuf:"bytes,2,opt,name=url_host,json=urlHost" json:"url_host,omitempty"`
	UrlPath        *string                                              `protobuf:"bytes,3,opt,name=url_path,json=urlPath" json:"url_path,omitempty"`
	UseHttps       *bool                                                `protobuf:"varint,4,opt,name=use_https,json=useHttps" json:"use_https,omitempty"`
	RequestHeaders []*CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders `protobuf:"bytes,5,rep,name=request_headers,json=requestHeaders" json:"request_headers,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CVideo_GameRecordingSegmentUploadInfo) Reset() {
	*x = CVideo_GameRecordingSegmentUploadInfo{}
	mi := &file_steammessages_clientserver_video_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CVideo_GameRecordingSegmentUploadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVideo_GameRecordingSegmentUploadInfo) ProtoMessage() {}

func (x *CVideo_GameRecordingSegmentUploadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_video_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVideo_GameRecordingSegmentUploadInfo.ProtoReflect.Descriptor instead.
func (*CVideo_GameRecordingSegmentUploadInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_video_proto_rawDescGZIP(), []int{4}
}

func (x *CVideo_GameRecordingSegmentUploadInfo) GetSegmentInfo() *CVideo_GameRecordingSegmentInfo {
	if x != nil {
		return x.SegmentInfo
	}
	return nil
}

func (x *CVideo_GameRecordingSegmentUploadInfo) GetUrlHost() string {
	if x != nil && x.UrlHost != nil {
		return *x.UrlHost
	}
	return ""
}

func (x *CVideo_GameRecordingSegmentUploadInfo) GetUrlPath() string {
	if x != nil && x.UrlPath != nil {
		return *x.UrlPath
	}
	return ""
}

func (x *CVideo_GameRecordingSegmentUploadInfo) GetUseHttps() bool {
	if x != nil && x.UseHttps != nil {
		return *x.UseHttps
	}
	return false
}

func (x *CVideo_GameRecordingSegmentUploadInfo) GetRequestHeaders() []*CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders {
	if x != nil {
		return x.RequestHeaders
	}
	return nil
}

type CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) Reset() {
	*x = CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders{}
	mi := &file_steammessages_clientserver_video_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) ProtoMessage() {}

func (x *CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_video_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders.ProtoReflect.Descriptor instead.
func (*CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_video_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_steammessages_clientserver_video_proto protoreflect.FileDescriptor

const file_steammessages_clientserver_video_proto_rawDesc = "" +
	"\n" +
	"&steammessages_clientserver_video.proto\x1a\x18steammessages_base.proto\"\xdf\x03\n" +
	"$CMsgVideoGameRecordingRepresentation\x12/\n" +
	"\x13representation_name\x18\x02 \x01(\tR\x12representationName\x123\n" +
	"\x15horizontal_resolution\x18\x03 \x01(\rR\x14horizontalResolution\x12/\n" +
	"\x13vertical_resolution\x18\x04 \x01(\rR\x12verticalResolution\x12\x1d\n" +
	"\n" +
	"frame_rate\x18\x05 \x01(\x01R\tframeRate\x12\x1c\n" +
	"\tbandwidth\x18\x06 \x01(\rR\tbandwidth\x12*\n" +
	"\x11audio_sample_rate\x18\a \x01(\rR\x0faudioSampleRate\x12*\n" +
	"\x11frame_rate_string\x18\b \x01(\tR\x0fframeRateString\x12\x14\n" +
	"\x05codec\x18\t \x01(\tR\x05codec\x120\n" +
	"\x14audio_channel_config\x18\n" +
	" \x01(\rR\x12audioChannelConfig\x12C\n" +
	"\fsegment_info\x18\v \x03(\v2 .CVideo_GameRecordingSegmentInfoR\vsegmentInfo\"\xf5\x01\n" +
	"\x1fCMsgVideoGameRecordingComponent\x12%\n" +
	"\x0ecomponent_name\x18\x01 \x01(\tR\rcomponentName\x12\x1a\n" +
	"\bcontents\x18\x02 \x01(\rR\bcontents\x12!\n" +
	"\fsegment_size\x18\x03 \x01(\rR\vsegmentSize\x12\x1b\n" +
	"\tfile_type\x18\x04 \x01(\tR\bfileType\x12O\n" +
	"\x0frepresentations\x18\x05 \x03(\v2%.CMsgVideoGameRecordingRepresentationR\x0frepresentations\"\xad\x03\n" +
	"\x19CMsgVideoGameRecordingDef\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x04R\asteamid\x12\x15\n" +
	"\x06app_id\x18\x02 \x01(\rR\x05appId\x12!\n" +
	"\fnum_segments\x18\x03 \x01(\rR\vnumSegments\x12/\n" +
	"\x13length_milliseconds\x18\x04 \x01(\rR\x12lengthMilliseconds\x12<\n" +
	"\x1asegment_duration_timescale\x18\x05 \x01(\rR\x18segmentDurationTimescale\x12)\n" +
	"\x10segment_duration\x18\x06 \x01(\rR\x0fsegmentDuration\x12@\n" +
	"\n" +
	"components\x18\a \x03(\v2 .CMsgVideoGameRecordingComponentR\n" +
	"components\x12\"\n" +
	"\rstart_time_ms\x18\b \x01(\rR\vstartTimeMs\x12<\n" +
	"\x1bstart_offset_in_timeline_ms\x18\t \x01(\rR\x17startOffsetInTimelineMs\"\xce\x01\n" +
	"\x1fCVideo_GameRecordingSegmentInfo\x12%\n" +
	"\x0esegment_number\x18\x01 \x01(\rR\rsegmentNumber\x12,\n" +
	"\x12segment_size_bytes\x18\x02 \x01(\x04R\x10segmentSizeBytes\x12%\n" +
	"\x0ecomponent_name\x18\x03 \x01(\tR\rcomponentName\x12/\n" +
	"\x13representation_name\x18\x04 \x01(\tR\x12representationName\"\xd5\x02\n" +
	"%CVideo_GameRecordingSegmentUploadInfo\x12C\n" +
	"\fsegment_info\x18\x01 \x01(\v2 .CVideo_GameRecordingSegmentInfoR\vsegmentInfo\x12\x19\n" +
	"\burl_host\x18\x02 \x01(\tR\aurlHost\x12\x19\n" +
	"\burl_path\x18\x03 \x01(\tR\aurlPath\x12\x1b\n" +
	"\tuse_https\x18\x04 \x01(\bR\buseHttps\x12[\n" +
	"\x0frequest_headers\x18\x05 \x03(\v22.CVideo_GameRecordingSegmentUploadInfo.HTTPHeadersR\x0erequestHeaders\x1a7\n" +
	"\vHTTPHeaders\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05valueB\x05H\x01\x80\x01\x00"

var (
	file_steammessages_clientserver_video_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_video_proto_rawDescData []byte
)

func file_steammessages_clientserver_video_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_video_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_video_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_clientserver_video_proto_rawDesc), len(file_steammessages_clientserver_video_proto_rawDesc)))
	})
	return file_steammessages_clientserver_video_proto_rawDescData
}

var file_steammessages_clientserver_video_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_steammessages_clientserver_video_proto_goTypes = []any{
	(*CMsgVideoGameRecordingRepresentation)(nil),              // 0: CMsgVideoGameRecordingRepresentation
	(*CMsgVideoGameRecordingComponent)(nil),                   // 1: CMsgVideoGameRecordingComponent
	(*CMsgVideoGameRecordingDef)(nil),                         // 2: CMsgVideoGameRecordingDef
	(*CVideo_GameRecordingSegmentInfo)(nil),                   // 3: CVideo_GameRecordingSegmentInfo
	(*CVideo_GameRecordingSegmentUploadInfo)(nil),             // 4: CVideo_GameRecordingSegmentUploadInfo
	(*CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders)(nil), // 5: CVideo_GameRecordingSegmentUploadInfo.HTTPHeaders
}
var file_steammessages_clientserver_video_proto_depIdxs = []int32{
	3, // 0: CMsgVideoGameRecordingRepresentation.segment_info:type_name -> CVideo_GameRecordingSegmentInfo
	0, // 1: CMsgVideoGameRecordingComponent.representations:type_name -> CMsgVideoGameRecordingRepresentation
	1, // 2: CMsgVideoGameRecordingDef.components:type_name -> CMsgVideoGameRecordingComponent
	3, // 3: CVideo_GameRecordingSegmentUploadInfo.segment_info:type_name -> CVideo_GameRecordingSegmentInfo
	5, // 4: CVideo_GameRecordingSegmentUploadInfo.request_headers:type_name -> CVideo_GameRecordingSegmentUploadInfo.HTTPHeaders
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_video_proto_init() }
func file_steammessages_clientserver_video_proto_init() {
	if File_steammessages_clientserver_video_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_clientserver_video_proto_rawDesc), len(file_steammessages_clientserver_video_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_video_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_video_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_video_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_video_proto = out.File
	file_steammessages_clientserver_video_proto_goTypes = nil
	file_steammessages_clientserver_video_proto_depIdxs = nil
}
