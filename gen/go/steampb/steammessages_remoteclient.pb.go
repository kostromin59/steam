// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_remoteclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgRemoteClientStatus struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	ClientId      *uint64                          `protobuf:"varint,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	InstanceId    *uint64                          `protobuf:"varint,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Status        *CMsgRemoteClientBroadcastStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientStatus) Reset() {
	*x = CMsgRemoteClientStatus{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientStatus) ProtoMessage() {}

func (x *CMsgRemoteClientStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientStatus.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgRemoteClientStatus) GetClientId() uint64 {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return 0
}

func (x *CMsgRemoteClientStatus) GetInstanceId() uint64 {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return 0
}

func (x *CMsgRemoteClientStatus) GetStatus() *CMsgRemoteClientBroadcastStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type CMsgRemoteClientAppStatus struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	StatusUpdates []*CMsgRemoteClientAppStatus_AppStatus `protobuf:"bytes,1,rep,name=status_updates,json=statusUpdates" json:"status_updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientAppStatus) Reset() {
	*x = CMsgRemoteClientAppStatus{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientAppStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientAppStatus) ProtoMessage() {}

func (x *CMsgRemoteClientAppStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientAppStatus.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientAppStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgRemoteClientAppStatus) GetStatusUpdates() []*CMsgRemoteClientAppStatus_AppStatus {
	if x != nil {
		return x.StatusUpdates
	}
	return nil
}

type CMsgRemoteClientStartStream struct {
	state              protoimpl.MessageState                         `protogen:"open.v1"`
	AppId              *uint32                                        `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	Environment        *int32                                         `protobuf:"varint,2,opt,name=environment" json:"environment,omitempty"`
	GamepadCount       *int32                                         `protobuf:"varint,3,opt,name=gamepad_count,json=gamepadCount" json:"gamepad_count,omitempty"`
	LaunchOption       *int32                                         `protobuf:"varint,4,opt,name=launch_option,json=launchOption,def=-1" json:"launch_option,omitempty"`
	LockParentalLock   *bool                                          `protobuf:"varint,5,opt,name=lock_parental_lock,json=lockParentalLock,def=0" json:"lock_parental_lock,omitempty"`
	UnlockParentalLock *string                                        `protobuf:"bytes,6,opt,name=unlock_parental_lock,json=unlockParentalLock" json:"unlock_parental_lock,omitempty"`
	MaximumResolutionX *int32                                         `protobuf:"varint,7,opt,name=maximum_resolution_x,json=maximumResolutionX" json:"maximum_resolution_x,omitempty"`
	MaximumResolutionY *int32                                         `protobuf:"varint,8,opt,name=maximum_resolution_y,json=maximumResolutionY" json:"maximum_resolution_y,omitempty"`
	Gamepads           []*CMsgRemoteClientStartStream_ReservedGamepad `protobuf:"bytes,9,rep,name=gamepads" json:"gamepads,omitempty"`
	AudioChannelCount  *int32                                         `protobuf:"varint,10,opt,name=audio_channel_count,json=audioChannelCount,def=2" json:"audio_channel_count,omitempty"`
	SupportedTransport []EStreamTransport                             `protobuf:"varint,11,rep,name=supported_transport,json=supportedTransport,enum=EStreamTransport" json:"supported_transport,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CMsgRemoteClientStartStream fields.
const (
	Default_CMsgRemoteClientStartStream_LaunchOption      = int32(-1)
	Default_CMsgRemoteClientStartStream_LockParentalLock  = bool(false)
	Default_CMsgRemoteClientStartStream_AudioChannelCount = int32(2)
)

func (x *CMsgRemoteClientStartStream) Reset() {
	*x = CMsgRemoteClientStartStream{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientStartStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientStartStream) ProtoMessage() {}

func (x *CMsgRemoteClientStartStream) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientStartStream.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientStartStream) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgRemoteClientStartStream) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgRemoteClientStartStream) GetEnvironment() int32 {
	if x != nil && x.Environment != nil {
		return *x.Environment
	}
	return 0
}

func (x *CMsgRemoteClientStartStream) GetGamepadCount() int32 {
	if x != nil && x.GamepadCount != nil {
		return *x.GamepadCount
	}
	return 0
}

func (x *CMsgRemoteClientStartStream) GetLaunchOption() int32 {
	if x != nil && x.LaunchOption != nil {
		return *x.LaunchOption
	}
	return Default_CMsgRemoteClientStartStream_LaunchOption
}

func (x *CMsgRemoteClientStartStream) GetLockParentalLock() bool {
	if x != nil && x.LockParentalLock != nil {
		return *x.LockParentalLock
	}
	return Default_CMsgRemoteClientStartStream_LockParentalLock
}

func (x *CMsgRemoteClientStartStream) GetUnlockParentalLock() string {
	if x != nil && x.UnlockParentalLock != nil {
		return *x.UnlockParentalLock
	}
	return ""
}

func (x *CMsgRemoteClientStartStream) GetMaximumResolutionX() int32 {
	if x != nil && x.MaximumResolutionX != nil {
		return *x.MaximumResolutionX
	}
	return 0
}

func (x *CMsgRemoteClientStartStream) GetMaximumResolutionY() int32 {
	if x != nil && x.MaximumResolutionY != nil {
		return *x.MaximumResolutionY
	}
	return 0
}

func (x *CMsgRemoteClientStartStream) GetGamepads() []*CMsgRemoteClientStartStream_ReservedGamepad {
	if x != nil {
		return x.Gamepads
	}
	return nil
}

func (x *CMsgRemoteClientStartStream) GetAudioChannelCount() int32 {
	if x != nil && x.AudioChannelCount != nil {
		return *x.AudioChannelCount
	}
	return Default_CMsgRemoteClientStartStream_AudioChannelCount
}

func (x *CMsgRemoteClientStartStream) GetSupportedTransport() []EStreamTransport {
	if x != nil {
		return x.SupportedTransport
	}
	return nil
}

type CMsgRemoteClientStartStreamResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ELaunchResult      *int32                 `protobuf:"varint,1,opt,name=e_launch_result,json=eLaunchResult,def=2" json:"e_launch_result,omitempty"`
	StreamPort         *uint32                `protobuf:"varint,2,opt,name=stream_port,json=streamPort" json:"stream_port,omitempty"`
	LaunchOptions      []int32                `protobuf:"varint,3,rep,name=launch_options,json=launchOptions" json:"launch_options,omitempty"`
	AuthToken          []byte                 `protobuf:"bytes,4,opt,name=auth_token,json=authToken" json:"auth_token,omitempty"`
	Transport          *EStreamTransport      `protobuf:"varint,5,opt,name=transport,enum=EStreamTransport,def=1" json:"transport,omitempty"`
	RelayServer        *string                `protobuf:"bytes,6,opt,name=relay_server,json=relayServer" json:"relay_server,omitempty"`
	LaunchTask         *string                `protobuf:"bytes,7,opt,name=launch_task,json=launchTask" json:"launch_task,omitempty"`
	LaunchTaskDetail   *string                `protobuf:"bytes,8,opt,name=launch_task_detail,json=launchTaskDetail" json:"launch_task_detail,omitempty"`
	LaunchTasksDone    *int32                 `protobuf:"varint,9,opt,name=launch_tasks_done,json=launchTasksDone" json:"launch_tasks_done,omitempty"`
	LaunchTasksTotal   *int32                 `protobuf:"varint,10,opt,name=launch_tasks_total,json=launchTasksTotal" json:"launch_tasks_total,omitempty"`
	VrConnectionParams *string                `protobuf:"bytes,11,opt,name=vr_connection_params,json=vrConnectionParams" json:"vr_connection_params,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CMsgRemoteClientStartStreamResponse fields.
const (
	Default_CMsgRemoteClientStartStreamResponse_ELaunchResult = int32(2)
	Default_CMsgRemoteClientStartStreamResponse_Transport     = EStreamTransport_k_EStreamTransportUDP
)

func (x *CMsgRemoteClientStartStreamResponse) Reset() {
	*x = CMsgRemoteClientStartStreamResponse{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientStartStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientStartStreamResponse) ProtoMessage() {}

func (x *CMsgRemoteClientStartStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientStartStreamResponse.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientStartStreamResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgRemoteClientStartStreamResponse) GetELaunchResult() int32 {
	if x != nil && x.ELaunchResult != nil {
		return *x.ELaunchResult
	}
	return Default_CMsgRemoteClientStartStreamResponse_ELaunchResult
}

func (x *CMsgRemoteClientStartStreamResponse) GetStreamPort() uint32 {
	if x != nil && x.StreamPort != nil {
		return *x.StreamPort
	}
	return 0
}

func (x *CMsgRemoteClientStartStreamResponse) GetLaunchOptions() []int32 {
	if x != nil {
		return x.LaunchOptions
	}
	return nil
}

func (x *CMsgRemoteClientStartStreamResponse) GetAuthToken() []byte {
	if x != nil {
		return x.AuthToken
	}
	return nil
}

func (x *CMsgRemoteClientStartStreamResponse) GetTransport() EStreamTransport {
	if x != nil && x.Transport != nil {
		return *x.Transport
	}
	return Default_CMsgRemoteClientStartStreamResponse_Transport
}

func (x *CMsgRemoteClientStartStreamResponse) GetRelayServer() string {
	if x != nil && x.RelayServer != nil {
		return *x.RelayServer
	}
	return ""
}

func (x *CMsgRemoteClientStartStreamResponse) GetLaunchTask() string {
	if x != nil && x.LaunchTask != nil {
		return *x.LaunchTask
	}
	return ""
}

func (x *CMsgRemoteClientStartStreamResponse) GetLaunchTaskDetail() string {
	if x != nil && x.LaunchTaskDetail != nil {
		return *x.LaunchTaskDetail
	}
	return ""
}

func (x *CMsgRemoteClientStartStreamResponse) GetLaunchTasksDone() int32 {
	if x != nil && x.LaunchTasksDone != nil {
		return *x.LaunchTasksDone
	}
	return 0
}

func (x *CMsgRemoteClientStartStreamResponse) GetLaunchTasksTotal() int32 {
	if x != nil && x.LaunchTasksTotal != nil {
		return *x.LaunchTasksTotal
	}
	return 0
}

func (x *CMsgRemoteClientStartStreamResponse) GetVrConnectionParams() string {
	if x != nil && x.VrConnectionParams != nil {
		return *x.VrConnectionParams
	}
	return ""
}

type CMsgRemoteClientPing struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientPing) Reset() {
	*x = CMsgRemoteClientPing{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientPing) ProtoMessage() {}

func (x *CMsgRemoteClientPing) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientPing.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientPing) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{4}
}

type CMsgRemoteClientPingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientPingResponse) Reset() {
	*x = CMsgRemoteClientPingResponse{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientPingResponse) ProtoMessage() {}

func (x *CMsgRemoteClientPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientPingResponse.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientPingResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{5}
}

type CMsgRemoteClientAcceptEULA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         []uint32               `protobuf:"varint,1,rep,name=app_id,json=appId" json:"app_id,omitempty"`
	EulaId        []string               `protobuf:"bytes,2,rep,name=eula_id,json=eulaId" json:"eula_id,omitempty"`
	EulaVersion   []uint32               `protobuf:"varint,3,rep,name=eula_version,json=eulaVersion" json:"eula_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientAcceptEULA) Reset() {
	*x = CMsgRemoteClientAcceptEULA{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientAcceptEULA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientAcceptEULA) ProtoMessage() {}

func (x *CMsgRemoteClientAcceptEULA) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientAcceptEULA.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientAcceptEULA) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgRemoteClientAcceptEULA) GetAppId() []uint32 {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *CMsgRemoteClientAcceptEULA) GetEulaId() []string {
	if x != nil {
		return x.EulaId
	}
	return nil
}

func (x *CMsgRemoteClientAcceptEULA) GetEulaVersion() []uint32 {
	if x != nil {
		return x.EulaVersion
	}
	return nil
}

type CMsgRemoteClientGetControllerConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AppId           *uint32                `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	ControllerIndex *uint32                `protobuf:"varint,3,opt,name=controller_index,json=controllerIndex" json:"controller_index,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgRemoteClientGetControllerConfig) Reset() {
	*x = CMsgRemoteClientGetControllerConfig{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientGetControllerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientGetControllerConfig) ProtoMessage() {}

func (x *CMsgRemoteClientGetControllerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientGetControllerConfig.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientGetControllerConfig) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgRemoteClientGetControllerConfig) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgRemoteClientGetControllerConfig) GetControllerIndex() uint32 {
	if x != nil && x.ControllerIndex != nil {
		return *x.ControllerIndex
	}
	return 0
}

type CMsgRemoteClientGetControllerConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eresult       *int32                 `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	ConfigVdf     []byte                 `protobuf:"bytes,2,opt,name=config_vdf,json=configVdf" json:"config_vdf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgRemoteClientGetControllerConfigResponse fields.
const (
	Default_CMsgRemoteClientGetControllerConfigResponse_Eresult = int32(2)
)

func (x *CMsgRemoteClientGetControllerConfigResponse) Reset() {
	*x = CMsgRemoteClientGetControllerConfigResponse{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientGetControllerConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientGetControllerConfigResponse) ProtoMessage() {}

func (x *CMsgRemoteClientGetControllerConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientGetControllerConfigResponse.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientGetControllerConfigResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgRemoteClientGetControllerConfigResponse) GetEresult() int32 {
	if x != nil && x.Eresult != nil {
		return *x.Eresult
	}
	return Default_CMsgRemoteClientGetControllerConfigResponse_Eresult
}

func (x *CMsgRemoteClientGetControllerConfigResponse) GetConfigVdf() []byte {
	if x != nil {
		return x.ConfigVdf
	}
	return nil
}

type CMsgRemoteClientStreamingEnabled struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       *bool                  `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientStreamingEnabled) Reset() {
	*x = CMsgRemoteClientStreamingEnabled{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientStreamingEnabled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientStreamingEnabled) ProtoMessage() {}

func (x *CMsgRemoteClientStreamingEnabled) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientStreamingEnabled.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientStreamingEnabled) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgRemoteClientStreamingEnabled) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CMsgRemoteClientWifiAPStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ssid          *string                `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Password      *string                `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Wpa2          *bool                  `protobuf:"varint,3,opt,name=wpa2" json:"wpa2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientWifiAPStatus) Reset() {
	*x = CMsgRemoteClientWifiAPStatus{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientWifiAPStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientWifiAPStatus) ProtoMessage() {}

func (x *CMsgRemoteClientWifiAPStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientWifiAPStatus.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientWifiAPStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgRemoteClientWifiAPStatus) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *CMsgRemoteClientWifiAPStatus) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *CMsgRemoteClientWifiAPStatus) GetWpa2() bool {
	if x != nil && x.Wpa2 != nil {
		return *x.Wpa2
	}
	return false
}

type CMsgRemoteClientAppStatus_AppUpdateInfo struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	TimeUpdateStart           *uint32                `protobuf:"fixed32,1,opt,name=time_update_start,json=timeUpdateStart" json:"time_update_start,omitempty"`
	BytesToDownload           *uint64                `protobuf:"varint,2,opt,name=bytes_to_download,json=bytesToDownload" json:"bytes_to_download,omitempty"`
	BytesDownloaded           *uint64                `protobuf:"varint,3,opt,name=bytes_downloaded,json=bytesDownloaded" json:"bytes_downloaded,omitempty"`
	BytesToProcess            *uint64                `protobuf:"varint,4,opt,name=bytes_to_process,json=bytesToProcess" json:"bytes_to_process,omitempty"`
	BytesProcessed            *uint64                `protobuf:"varint,5,opt,name=bytes_processed,json=bytesProcessed" json:"bytes_processed,omitempty"`
	EstimatedSecondsRemaining *int32                 `protobuf:"varint,6,opt,name=estimated_seconds_remaining,json=estimatedSecondsRemaining,def=-1" json:"estimated_seconds_remaining,omitempty"`
	UpdateResult              *int32                 `protobuf:"varint,7,opt,name=update_result,json=updateResult" json:"update_result,omitempty"`
	UpdateState               *uint32                `protobuf:"varint,8,opt,name=update_state,json=updateState" json:"update_state,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

// Default values for CMsgRemoteClientAppStatus_AppUpdateInfo fields.
const (
	Default_CMsgRemoteClientAppStatus_AppUpdateInfo_EstimatedSecondsRemaining = int32(-1)
)

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) Reset() {
	*x = CMsgRemoteClientAppStatus_AppUpdateInfo{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientAppStatus_AppUpdateInfo) ProtoMessage() {}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientAppStatus_AppUpdateInfo.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientAppStatus_AppUpdateInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetTimeUpdateStart() uint32 {
	if x != nil && x.TimeUpdateStart != nil {
		return *x.TimeUpdateStart
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetBytesToDownload() uint64 {
	if x != nil && x.BytesToDownload != nil {
		return *x.BytesToDownload
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetBytesDownloaded() uint64 {
	if x != nil && x.BytesDownloaded != nil {
		return *x.BytesDownloaded
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetBytesToProcess() uint64 {
	if x != nil && x.BytesToProcess != nil {
		return *x.BytesToProcess
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetBytesProcessed() uint64 {
	if x != nil && x.BytesProcessed != nil {
		return *x.BytesProcessed
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetEstimatedSecondsRemaining() int32 {
	if x != nil && x.EstimatedSecondsRemaining != nil {
		return *x.EstimatedSecondsRemaining
	}
	return Default_CMsgRemoteClientAppStatus_AppUpdateInfo_EstimatedSecondsRemaining
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetUpdateResult() int32 {
	if x != nil && x.UpdateResult != nil {
		return *x.UpdateResult
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppUpdateInfo) GetUpdateState() uint32 {
	if x != nil && x.UpdateState != nil {
		return *x.UpdateState
	}
	return 0
}

type CMsgRemoteClientAppStatus_ShortcutInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Icon          *string                `protobuf:"bytes,2,opt,name=icon" json:"icon,omitempty"`
	Categories    []string               `protobuf:"bytes,3,rep,name=categories" json:"categories,omitempty"`
	Exepath       *string                `protobuf:"bytes,4,opt,name=exepath" json:"exepath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) Reset() {
	*x = CMsgRemoteClientAppStatus_ShortcutInfo{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientAppStatus_ShortcutInfo) ProtoMessage() {}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientAppStatus_ShortcutInfo.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientAppStatus_ShortcutInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *CMsgRemoteClientAppStatus_ShortcutInfo) GetExepath() string {
	if x != nil && x.Exepath != nil {
		return *x.Exepath
	}
	return ""
}

type CMsgRemoteClientAppStatus_AppStatus struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	AppId         *uint32                                  `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	AppState      *uint32                                  `protobuf:"varint,2,opt,name=app_state,json=appState" json:"app_state,omitempty"`
	UpdateInfo    *CMsgRemoteClientAppStatus_AppUpdateInfo `protobuf:"bytes,3,opt,name=update_info,json=updateInfo" json:"update_info,omitempty"`
	ShortcutInfo  *CMsgRemoteClientAppStatus_ShortcutInfo  `protobuf:"bytes,4,opt,name=shortcut_info,json=shortcutInfo" json:"shortcut_info,omitempty"`
	VrNotRequired *bool                                    `protobuf:"varint,5,opt,name=vr_not_required,json=vrNotRequired,def=1" json:"vr_not_required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgRemoteClientAppStatus_AppStatus fields.
const (
	Default_CMsgRemoteClientAppStatus_AppStatus_VrNotRequired = bool(true)
)

func (x *CMsgRemoteClientAppStatus_AppStatus) Reset() {
	*x = CMsgRemoteClientAppStatus_AppStatus{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientAppStatus_AppStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientAppStatus_AppStatus) ProtoMessage() {}

func (x *CMsgRemoteClientAppStatus_AppStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientAppStatus_AppStatus.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientAppStatus_AppStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{1, 2}
}

func (x *CMsgRemoteClientAppStatus_AppStatus) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppStatus) GetAppState() uint32 {
	if x != nil && x.AppState != nil {
		return *x.AppState
	}
	return 0
}

func (x *CMsgRemoteClientAppStatus_AppStatus) GetUpdateInfo() *CMsgRemoteClientAppStatus_AppUpdateInfo {
	if x != nil {
		return x.UpdateInfo
	}
	return nil
}

func (x *CMsgRemoteClientAppStatus_AppStatus) GetShortcutInfo() *CMsgRemoteClientAppStatus_ShortcutInfo {
	if x != nil {
		return x.ShortcutInfo
	}
	return nil
}

func (x *CMsgRemoteClientAppStatus_AppStatus) GetVrNotRequired() bool {
	if x != nil && x.VrNotRequired != nil {
		return *x.VrNotRequired
	}
	return Default_CMsgRemoteClientAppStatus_AppStatus_VrNotRequired
}

type CMsgRemoteClientStartStream_ReservedGamepad struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ControllerType    *uint32                `protobuf:"varint,1,opt,name=controller_type,json=controllerType" json:"controller_type,omitempty"`
	ControllerSubtype *uint32                `protobuf:"varint,2,opt,name=controller_subtype,json=controllerSubtype" json:"controller_subtype,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgRemoteClientStartStream_ReservedGamepad) Reset() {
	*x = CMsgRemoteClientStartStream_ReservedGamepad{}
	mi := &file_steammessages_remoteclient_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientStartStream_ReservedGamepad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientStartStream_ReservedGamepad) ProtoMessage() {}

func (x *CMsgRemoteClientStartStream_ReservedGamepad) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientStartStream_ReservedGamepad.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientStartStream_ReservedGamepad) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CMsgRemoteClientStartStream_ReservedGamepad) GetControllerType() uint32 {
	if x != nil && x.ControllerType != nil {
		return *x.ControllerType
	}
	return 0
}

func (x *CMsgRemoteClientStartStream_ReservedGamepad) GetControllerSubtype() uint32 {
	if x != nil && x.ControllerSubtype != nil {
		return *x.ControllerSubtype
	}
	return 0
}

var File_steammessages_remoteclient_proto protoreflect.FileDescriptor

const file_steammessages_remoteclient_proto_rawDesc = "" +
	"\n" +
	" steammessages_remoteclient.proto\x1a\x18steammessages_base.proto\x1a*steammessages_remoteclient_discovery.proto\"\x90\x01\n" +
	"\x16CMsgRemoteClientStatus\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x04R\bclientId\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\x04R\n" +
	"instanceId\x128\n" +
	"\x06status\x18\x03 \x01(\v2 .CMsgRemoteClientBroadcastStatusR\x06status\"\xd7\x06\n" +
	"\x19CMsgRemoteClientAppStatus\x12K\n" +
	"\x0estatus_updates\x18\x01 \x03(\v2$.CMsgRemoteClientAppStatus.AppStatusR\rstatusUpdates\x1a\xf1\x02\n" +
	"\rAppUpdateInfo\x12*\n" +
	"\x11time_update_start\x18\x01 \x01(\aR\x0ftimeUpdateStart\x12*\n" +
	"\x11bytes_to_download\x18\x02 \x01(\x04R\x0fbytesToDownload\x12)\n" +
	"\x10bytes_downloaded\x18\x03 \x01(\x04R\x0fbytesDownloaded\x12(\n" +
	"\x10bytes_to_process\x18\x04 \x01(\x04R\x0ebytesToProcess\x12'\n" +
	"\x0fbytes_processed\x18\x05 \x01(\x04R\x0ebytesProcessed\x12B\n" +
	"\x1bestimated_seconds_remaining\x18\x06 \x01(\x05:\x02-1R\x19estimatedSecondsRemaining\x12#\n" +
	"\rupdate_result\x18\a \x01(\x05R\fupdateResult\x12!\n" +
	"\fupdate_state\x18\b \x01(\rR\vupdateState\x1ap\n" +
	"\fShortcutInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04icon\x18\x02 \x01(\tR\x04icon\x12\x1e\n" +
	"\n" +
	"categories\x18\x03 \x03(\tR\n" +
	"categories\x12\x18\n" +
	"\aexepath\x18\x04 \x01(\tR\aexepath\x1a\x86\x02\n" +
	"\tAppStatus\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\rR\x05appId\x12\x1b\n" +
	"\tapp_state\x18\x02 \x01(\rR\bappState\x12I\n" +
	"\vupdate_info\x18\x03 \x01(\v2(.CMsgRemoteClientAppStatus.AppUpdateInfoR\n" +
	"updateInfo\x12L\n" +
	"\rshortcut_info\x18\x04 \x01(\v2'.CMsgRemoteClientAppStatus.ShortcutInfoR\fshortcutInfo\x12,\n" +
	"\x0fvr_not_required\x18\x05 \x01(\b:\x04trueR\rvrNotRequired\"\x9b\x05\n" +
	"\x1bCMsgRemoteClientStartStream\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\rR\x05appId\x12 \n" +
	"\venvironment\x18\x02 \x01(\x05R\venvironment\x12#\n" +
	"\rgamepad_count\x18\x03 \x01(\x05R\fgamepadCount\x12'\n" +
	"\rlaunch_option\x18\x04 \x01(\x05:\x02-1R\flaunchOption\x123\n" +
	"\x12lock_parental_lock\x18\x05 \x01(\b:\x05falseR\x10lockParentalLock\x120\n" +
	"\x14unlock_parental_lock\x18\x06 \x01(\tR\x12unlockParentalLock\x120\n" +
	"\x14maximum_resolution_x\x18\a \x01(\x05R\x12maximumResolutionX\x120\n" +
	"\x14maximum_resolution_y\x18\b \x01(\x05R\x12maximumResolutionY\x12H\n" +
	"\bgamepads\x18\t \x03(\v2,.CMsgRemoteClientStartStream.ReservedGamepadR\bgamepads\x121\n" +
	"\x13audio_channel_count\x18\n" +
	" \x01(\x05:\x012R\x11audioChannelCount\x12B\n" +
	"\x13supported_transport\x18\v \x03(\x0e2\x11.EStreamTransportR\x12supportedTransport\x1ai\n" +
	"\x0fReservedGamepad\x12'\n" +
	"\x0fcontroller_type\x18\x01 \x01(\rR\x0econtrollerType\x12-\n" +
	"\x12controller_subtype\x18\x02 \x01(\rR\x11controllerSubtype\"\xfd\x03\n" +
	"#CMsgRemoteClientStartStreamResponse\x12)\n" +
	"\x0fe_launch_result\x18\x01 \x01(\x05:\x012R\reLaunchResult\x12\x1f\n" +
	"\vstream_port\x18\x02 \x01(\rR\n" +
	"streamPort\x12%\n" +
	"\x0elaunch_options\x18\x03 \x03(\x05R\rlaunchOptions\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x04 \x01(\fR\tauthToken\x12F\n" +
	"\ttransport\x18\x05 \x01(\x0e2\x11.EStreamTransport:\x15k_EStreamTransportUDPR\ttransport\x12!\n" +
	"\frelay_server\x18\x06 \x01(\tR\vrelayServer\x12\x1f\n" +
	"\vlaunch_task\x18\a \x01(\tR\n" +
	"launchTask\x12,\n" +
	"\x12launch_task_detail\x18\b \x01(\tR\x10launchTaskDetail\x12*\n" +
	"\x11launch_tasks_done\x18\t \x01(\x05R\x0flaunchTasksDone\x12,\n" +
	"\x12launch_tasks_total\x18\n" +
	" \x01(\x05R\x10launchTasksTotal\x120\n" +
	"\x14vr_connection_params\x18\v \x01(\tR\x12vrConnectionParams\"\x16\n" +
	"\x14CMsgRemoteClientPing\"\x1e\n" +
	"\x1cCMsgRemoteClientPingResponse\"o\n" +
	"\x1aCMsgRemoteClientAcceptEULA\x12\x15\n" +
	"\x06app_id\x18\x01 \x03(\rR\x05appId\x12\x17\n" +
	"\aeula_id\x18\x02 \x03(\tR\x06eulaId\x12!\n" +
	"\feula_version\x18\x03 \x03(\rR\veulaVersion\"g\n" +
	"#CMsgRemoteClientGetControllerConfig\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\rR\x05appId\x12)\n" +
	"\x10controller_index\x18\x03 \x01(\rR\x0fcontrollerIndex\"i\n" +
	"+CMsgRemoteClientGetControllerConfigResponse\x12\x1b\n" +
	"\aeresult\x18\x01 \x01(\x05:\x012R\aeresult\x12\x1d\n" +
	"\n" +
	"config_vdf\x18\x02 \x01(\fR\tconfigVdf\"<\n" +
	" CMsgRemoteClientStreamingEnabled\x12\x18\n" +
	"\aenabled\x18\x01 \x02(\bR\aenabled\"b\n" +
	"\x1cCMsgRemoteClientWifiAPStatus\x12\x12\n" +
	"\x04ssid\x18\x01 \x01(\tR\x04ssid\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x12\n" +
	"\x04wpa2\x18\x03 \x01(\bR\x04wpa2B\x05H\x01\x80\x01\x00"

var (
	file_steammessages_remoteclient_proto_rawDescOnce sync.Once
	file_steammessages_remoteclient_proto_rawDescData []byte
)

func file_steammessages_remoteclient_proto_rawDescGZIP() []byte {
	file_steammessages_remoteclient_proto_rawDescOnce.Do(func() {
		file_steammessages_remoteclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_remoteclient_proto_rawDesc), len(file_steammessages_remoteclient_proto_rawDesc)))
	})
	return file_steammessages_remoteclient_proto_rawDescData
}

var file_steammessages_remoteclient_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_steammessages_remoteclient_proto_goTypes = []any{
	(*CMsgRemoteClientStatus)(nil),                      // 0: CMsgRemoteClientStatus
	(*CMsgRemoteClientAppStatus)(nil),                   // 1: CMsgRemoteClientAppStatus
	(*CMsgRemoteClientStartStream)(nil),                 // 2: CMsgRemoteClientStartStream
	(*CMsgRemoteClientStartStreamResponse)(nil),         // 3: CMsgRemoteClientStartStreamResponse
	(*CMsgRemoteClientPing)(nil),                        // 4: CMsgRemoteClientPing
	(*CMsgRemoteClientPingResponse)(nil),                // 5: CMsgRemoteClientPingResponse
	(*CMsgRemoteClientAcceptEULA)(nil),                  // 6: CMsgRemoteClientAcceptEULA
	(*CMsgRemoteClientGetControllerConfig)(nil),         // 7: CMsgRemoteClientGetControllerConfig
	(*CMsgRemoteClientGetControllerConfigResponse)(nil), // 8: CMsgRemoteClientGetControllerConfigResponse
	(*CMsgRemoteClientStreamingEnabled)(nil),            // 9: CMsgRemoteClientStreamingEnabled
	(*CMsgRemoteClientWifiAPStatus)(nil),                // 10: CMsgRemoteClientWifiAPStatus
	(*CMsgRemoteClientAppStatus_AppUpdateInfo)(nil),     // 11: CMsgRemoteClientAppStatus.AppUpdateInfo
	(*CMsgRemoteClientAppStatus_ShortcutInfo)(nil),      // 12: CMsgRemoteClientAppStatus.ShortcutInfo
	(*CMsgRemoteClientAppStatus_AppStatus)(nil),         // 13: CMsgRemoteClientAppStatus.AppStatus
	(*CMsgRemoteClientStartStream_ReservedGamepad)(nil), // 14: CMsgRemoteClientStartStream.ReservedGamepad
	(*CMsgRemoteClientBroadcastStatus)(nil),             // 15: CMsgRemoteClientBroadcastStatus
	(EStreamTransport)(0),                               // 16: EStreamTransport
}
var file_steammessages_remoteclient_proto_depIdxs = []int32{
	15, // 0: CMsgRemoteClientStatus.status:type_name -> CMsgRemoteClientBroadcastStatus
	13, // 1: CMsgRemoteClientAppStatus.status_updates:type_name -> CMsgRemoteClientAppStatus.AppStatus
	14, // 2: CMsgRemoteClientStartStream.gamepads:type_name -> CMsgRemoteClientStartStream.ReservedGamepad
	16, // 3: CMsgRemoteClientStartStream.supported_transport:type_name -> EStreamTransport
	16, // 4: CMsgRemoteClientStartStreamResponse.transport:type_name -> EStreamTransport
	11, // 5: CMsgRemoteClientAppStatus.AppStatus.update_info:type_name -> CMsgRemoteClientAppStatus.AppUpdateInfo
	12, // 6: CMsgRemoteClientAppStatus.AppStatus.shortcut_info:type_name -> CMsgRemoteClientAppStatus.ShortcutInfo
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_steammessages_remoteclient_proto_init() }
func file_steammessages_remoteclient_proto_init() {
	if File_steammessages_remoteclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_remoteclient_discovery_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_remoteclient_proto_rawDesc), len(file_steammessages_remoteclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_remoteclient_proto_goTypes,
		DependencyIndexes: file_steammessages_remoteclient_proto_depIdxs,
		MessageInfos:      file_steammessages_remoteclient_proto_msgTypes,
	}.Build()
	File_steammessages_remoteclient_proto = out.File
	file_steammessages_remoteclient_proto_goTypes = nil
	file_steammessages_remoteclient_proto_depIdxs = nil
}
