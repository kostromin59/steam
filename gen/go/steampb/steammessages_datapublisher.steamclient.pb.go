// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_datapublisher.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CDataPublisher_ClientContentCorruptionReport_Notification struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Appid           *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Depotid         *uint32                `protobuf:"varint,2,opt,name=depotid" json:"depotid,omitempty"`
	DownloadSource  *string                `protobuf:"bytes,3,opt,name=download_source,json=downloadSource" json:"download_source,omitempty"`
	Objectid        *string                `protobuf:"bytes,4,opt,name=objectid" json:"objectid,omitempty"`
	Cellid          *uint32                `protobuf:"varint,5,opt,name=cellid" json:"cellid,omitempty"`
	IsManifest      *bool                  `protobuf:"varint,6,opt,name=is_manifest,json=isManifest" json:"is_manifest,omitempty"`
	ObjectSize      *uint64                `protobuf:"varint,7,opt,name=object_size,json=objectSize" json:"object_size,omitempty"`
	CorruptionType  *uint32                `protobuf:"varint,8,opt,name=corruption_type,json=corruptionType" json:"corruption_type,omitempty"`
	UsedHttps       *bool                  `protobuf:"varint,9,opt,name=used_https,json=usedHttps" json:"used_https,omitempty"`
	OcProxyDetected *bool                  `protobuf:"varint,10,opt,name=oc_proxy_detected,json=ocProxyDetected" json:"oc_proxy_detected,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) Reset() {
	*x = CDataPublisher_ClientContentCorruptionReport_Notification{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_ClientContentCorruptionReport_Notification) ProtoMessage() {}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_ClientContentCorruptionReport_Notification.ProtoReflect.Descriptor instead.
func (*CDataPublisher_ClientContentCorruptionReport_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetDepotid() uint32 {
	if x != nil && x.Depotid != nil {
		return *x.Depotid
	}
	return 0
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetDownloadSource() string {
	if x != nil && x.DownloadSource != nil {
		return *x.DownloadSource
	}
	return ""
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetObjectid() string {
	if x != nil && x.Objectid != nil {
		return *x.Objectid
	}
	return ""
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetCellid() uint32 {
	if x != nil && x.Cellid != nil {
		return *x.Cellid
	}
	return 0
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetIsManifest() bool {
	if x != nil && x.IsManifest != nil {
		return *x.IsManifest
	}
	return false
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetObjectSize() uint64 {
	if x != nil && x.ObjectSize != nil {
		return *x.ObjectSize
	}
	return 0
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetCorruptionType() uint32 {
	if x != nil && x.CorruptionType != nil {
		return *x.CorruptionType
	}
	return 0
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetUsedHttps() bool {
	if x != nil && x.UsedHttps != nil {
		return *x.UsedHttps
	}
	return false
}

func (x *CDataPublisher_ClientContentCorruptionReport_Notification) GetOcProxyDetected() bool {
	if x != nil && x.OcProxyDetected != nil {
		return *x.OcProxyDetected
	}
	return false
}

type CDataPublisher_ClientUpdateAppJob_Notification struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	AppId                 *uint32                `protobuf:"varint,1,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	DepotIds              []uint32               `protobuf:"varint,2,rep,name=depot_ids,json=depotIds" json:"depot_ids,omitempty"`
	AppState              *uint32                `protobuf:"varint,3,opt,name=app_state,json=appState" json:"app_state,omitempty"`
	JobAppError           *uint32                `protobuf:"varint,4,opt,name=job_app_error,json=jobAppError" json:"job_app_error,omitempty"`
	ErrorDetails          *string                `protobuf:"bytes,5,opt,name=error_details,json=errorDetails" json:"error_details,omitempty"`
	JobDuration           *uint32                `protobuf:"varint,6,opt,name=job_duration,json=jobDuration" json:"job_duration,omitempty"`
	FilesValidationFailed *uint32                `protobuf:"varint,7,opt,name=files_validation_failed,json=filesValidationFailed" json:"files_validation_failed,omitempty"`
	JobBytesDownloaded    *uint64                `protobuf:"varint,8,opt,name=job_bytes_downloaded,json=jobBytesDownloaded" json:"job_bytes_downloaded,omitempty"`
	JobBytesStaged        *uint64                `protobuf:"varint,9,opt,name=job_bytes_staged,json=jobBytesStaged" json:"job_bytes_staged,omitempty"`
	BytesComitted         *uint64                `protobuf:"varint,10,opt,name=bytes_comitted,json=bytesComitted" json:"bytes_comitted,omitempty"`
	StartAppState         *uint32                `protobuf:"varint,11,opt,name=start_app_state,json=startAppState" json:"start_app_state,omitempty"`
	StatsMachineId        *uint64                `protobuf:"fixed64,12,opt,name=stats_machine_id,json=statsMachineId" json:"stats_machine_id,omitempty"`
	BranchName            *string                `protobuf:"bytes,13,opt,name=branch_name,json=branchName" json:"branch_name,omitempty"`
	TotalBytesDownloaded  *uint64                `protobuf:"varint,14,opt,name=total_bytes_downloaded,json=totalBytesDownloaded" json:"total_bytes_downloaded,omitempty"`
	TotalBytesStaged      *uint64                `protobuf:"varint,15,opt,name=total_bytes_staged,json=totalBytesStaged" json:"total_bytes_staged,omitempty"`
	TotalBytesRestored    *uint64                `protobuf:"varint,16,opt,name=total_bytes_restored,json=totalBytesRestored" json:"total_bytes_restored,omitempty"`
	IsBorrowed            *bool                  `protobuf:"varint,17,opt,name=is_borrowed,json=isBorrowed" json:"is_borrowed,omitempty"`
	IsFreeWeekend         *bool                  `protobuf:"varint,18,opt,name=is_free_weekend,json=isFreeWeekend" json:"is_free_weekend,omitempty"`
	TotalBytesPatched     *uint64                `protobuf:"varint,20,opt,name=total_bytes_patched,json=totalBytesPatched" json:"total_bytes_patched,omitempty"`
	TotalBytesSaved       *uint64                `protobuf:"varint,21,opt,name=total_bytes_saved,json=totalBytesSaved" json:"total_bytes_saved,omitempty"`
	CellId                *uint32                `protobuf:"varint,22,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	IsWorkshop            *bool                  `protobuf:"varint,23,opt,name=is_workshop,json=isWorkshop" json:"is_workshop,omitempty"`
	IsShader              *bool                  `protobuf:"varint,24,opt,name=is_shader,json=isShader" json:"is_shader,omitempty"`
	SecondsNotPlayed      *uint32                `protobuf:"varint,25,opt,name=seconds_not_played,json=secondsNotPlayed" json:"seconds_not_played,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) Reset() {
	*x = CDataPublisher_ClientUpdateAppJob_Notification{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_ClientUpdateAppJob_Notification) ProtoMessage() {}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_ClientUpdateAppJob_Notification.ProtoReflect.Descriptor instead.
func (*CDataPublisher_ClientUpdateAppJob_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetDepotIds() []uint32 {
	if x != nil {
		return x.DepotIds
	}
	return nil
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetAppState() uint32 {
	if x != nil && x.AppState != nil {
		return *x.AppState
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetJobAppError() uint32 {
	if x != nil && x.JobAppError != nil {
		return *x.JobAppError
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetErrorDetails() string {
	if x != nil && x.ErrorDetails != nil {
		return *x.ErrorDetails
	}
	return ""
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetJobDuration() uint32 {
	if x != nil && x.JobDuration != nil {
		return *x.JobDuration
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetFilesValidationFailed() uint32 {
	if x != nil && x.FilesValidationFailed != nil {
		return *x.FilesValidationFailed
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetJobBytesDownloaded() uint64 {
	if x != nil && x.JobBytesDownloaded != nil {
		return *x.JobBytesDownloaded
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetJobBytesStaged() uint64 {
	if x != nil && x.JobBytesStaged != nil {
		return *x.JobBytesStaged
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetBytesComitted() uint64 {
	if x != nil && x.BytesComitted != nil {
		return *x.BytesComitted
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetStartAppState() uint32 {
	if x != nil && x.StartAppState != nil {
		return *x.StartAppState
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetStatsMachineId() uint64 {
	if x != nil && x.StatsMachineId != nil {
		return *x.StatsMachineId
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetBranchName() string {
	if x != nil && x.BranchName != nil {
		return *x.BranchName
	}
	return ""
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetTotalBytesDownloaded() uint64 {
	if x != nil && x.TotalBytesDownloaded != nil {
		return *x.TotalBytesDownloaded
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetTotalBytesStaged() uint64 {
	if x != nil && x.TotalBytesStaged != nil {
		return *x.TotalBytesStaged
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetTotalBytesRestored() uint64 {
	if x != nil && x.TotalBytesRestored != nil {
		return *x.TotalBytesRestored
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetIsBorrowed() bool {
	if x != nil && x.IsBorrowed != nil {
		return *x.IsBorrowed
	}
	return false
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetIsFreeWeekend() bool {
	if x != nil && x.IsFreeWeekend != nil {
		return *x.IsFreeWeekend
	}
	return false
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetTotalBytesPatched() uint64 {
	if x != nil && x.TotalBytesPatched != nil {
		return *x.TotalBytesPatched
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetTotalBytesSaved() uint64 {
	if x != nil && x.TotalBytesSaved != nil {
		return *x.TotalBytesSaved
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetCellId() uint32 {
	if x != nil && x.CellId != nil {
		return *x.CellId
	}
	return 0
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetIsWorkshop() bool {
	if x != nil && x.IsWorkshop != nil {
		return *x.IsWorkshop
	}
	return false
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetIsShader() bool {
	if x != nil && x.IsShader != nil {
		return *x.IsShader
	}
	return false
}

func (x *CDataPublisher_ClientUpdateAppJob_Notification) GetSecondsNotPlayed() uint32 {
	if x != nil && x.SecondsNotPlayed != nil {
		return *x.SecondsNotPlayed
	}
	return 0
}

type CDataPublisher_GetVRDeviceInfo_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MonthCount    *uint32                `protobuf:"varint,1,opt,name=month_count,json=monthCount" json:"month_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDataPublisher_GetVRDeviceInfo_Request) Reset() {
	*x = CDataPublisher_GetVRDeviceInfo_Request{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_GetVRDeviceInfo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_GetVRDeviceInfo_Request) ProtoMessage() {}

func (x *CDataPublisher_GetVRDeviceInfo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_GetVRDeviceInfo_Request.ProtoReflect.Descriptor instead.
func (*CDataPublisher_GetVRDeviceInfo_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CDataPublisher_GetVRDeviceInfo_Request) GetMonthCount() uint32 {
	if x != nil && x.MonthCount != nil {
		return *x.MonthCount
	}
	return 0
}

type CDataPublisher_GetVRDeviceInfo_Response struct {
	state         protoimpl.MessageState                            `protogen:"open.v1"`
	Device        []*CDataPublisher_GetVRDeviceInfo_Response_Device `protobuf:"bytes,1,rep,name=device" json:"device,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDataPublisher_GetVRDeviceInfo_Response) Reset() {
	*x = CDataPublisher_GetVRDeviceInfo_Response{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_GetVRDeviceInfo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_GetVRDeviceInfo_Response) ProtoMessage() {}

func (x *CDataPublisher_GetVRDeviceInfo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_GetVRDeviceInfo_Response.ProtoReflect.Descriptor instead.
func (*CDataPublisher_GetVRDeviceInfo_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CDataPublisher_GetVRDeviceInfo_Response) GetDevice() []*CDataPublisher_GetVRDeviceInfo_Response_Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type CDataPublisher_SetVRDeviceInfoAggregationReference_Request struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Ref            *uint32                `protobuf:"varint,1,opt,name=ref" json:"ref,omitempty"`
	AggregationRef *uint32                `protobuf:"varint,2,opt,name=aggregation_ref,json=aggregationRef" json:"aggregation_ref,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Request) Reset() {
	*x = CDataPublisher_SetVRDeviceInfoAggregationReference_Request{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_SetVRDeviceInfoAggregationReference_Request) ProtoMessage() {}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_SetVRDeviceInfoAggregationReference_Request.ProtoReflect.Descriptor instead.
func (*CDataPublisher_SetVRDeviceInfoAggregationReference_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Request) GetRef() uint32 {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return 0
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Request) GetAggregationRef() uint32 {
	if x != nil && x.AggregationRef != nil {
		return *x.AggregationRef
	}
	return 0
}

type CDataPublisher_SetVRDeviceInfoAggregationReference_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Response) Reset() {
	*x = CDataPublisher_SetVRDeviceInfoAggregationReference_Response{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_SetVRDeviceInfoAggregationReference_Response) ProtoMessage() {}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_SetVRDeviceInfoAggregationReference_Response.ProtoReflect.Descriptor instead.
func (*CDataPublisher_SetVRDeviceInfoAggregationReference_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *CDataPublisher_SetVRDeviceInfoAggregationReference_Response) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CDataPublisher_AddVRDeviceInfo_Request struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Manufacturer   *string                `protobuf:"bytes,1,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Model          *string                `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Driver         *string                `protobuf:"bytes,3,opt,name=driver" json:"driver,omitempty"`
	ControllerType *string                `protobuf:"bytes,4,opt,name=controller_type,json=controllerType" json:"controller_type,omitempty"`
	DeviceClass    *int32                 `protobuf:"varint,5,opt,name=device_class,json=deviceClass" json:"device_class,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) Reset() {
	*x = CDataPublisher_AddVRDeviceInfo_Request{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_AddVRDeviceInfo_Request) ProtoMessage() {}

func (x *CDataPublisher_AddVRDeviceInfo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_AddVRDeviceInfo_Request.ProtoReflect.Descriptor instead.
func (*CDataPublisher_AddVRDeviceInfo_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{6}
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) GetDriver() string {
	if x != nil && x.Driver != nil {
		return *x.Driver
	}
	return ""
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) GetControllerType() string {
	if x != nil && x.ControllerType != nil {
		return *x.ControllerType
	}
	return ""
}

func (x *CDataPublisher_AddVRDeviceInfo_Request) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

type CDataPublisher_AddVRDeviceInfo_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Ref           *uint32                `protobuf:"varint,2,opt,name=ref" json:"ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CDataPublisher_AddVRDeviceInfo_Response) Reset() {
	*x = CDataPublisher_AddVRDeviceInfo_Response{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_AddVRDeviceInfo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_AddVRDeviceInfo_Response) ProtoMessage() {}

func (x *CDataPublisher_AddVRDeviceInfo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_AddVRDeviceInfo_Response.ProtoReflect.Descriptor instead.
func (*CDataPublisher_AddVRDeviceInfo_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CDataPublisher_AddVRDeviceInfo_Response) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CDataPublisher_AddVRDeviceInfo_Response) GetRef() uint32 {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return 0
}

type CValveHWSurvey_GetSurveySchedule_Request struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Surveydatetoken        *string                `protobuf:"bytes,1,opt,name=surveydatetoken" json:"surveydatetoken,omitempty"`
	Surveydatetokenversion *uint64                `protobuf:"fixed64,2,opt,name=surveydatetokenversion" json:"surveydatetokenversion,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CValveHWSurvey_GetSurveySchedule_Request) Reset() {
	*x = CValveHWSurvey_GetSurveySchedule_Request{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CValveHWSurvey_GetSurveySchedule_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CValveHWSurvey_GetSurveySchedule_Request) ProtoMessage() {}

func (x *CValveHWSurvey_GetSurveySchedule_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CValveHWSurvey_GetSurveySchedule_Request.ProtoReflect.Descriptor instead.
func (*CValveHWSurvey_GetSurveySchedule_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{8}
}

func (x *CValveHWSurvey_GetSurveySchedule_Request) GetSurveydatetoken() string {
	if x != nil && x.Surveydatetoken != nil {
		return *x.Surveydatetoken
	}
	return ""
}

func (x *CValveHWSurvey_GetSurveySchedule_Request) GetSurveydatetokenversion() uint64 {
	if x != nil && x.Surveydatetokenversion != nil {
		return *x.Surveydatetokenversion
	}
	return 0
}

type CValveHWSurvey_GetSurveySchedule_Response struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Surveydatetoken        *uint32                `protobuf:"varint,1,opt,name=surveydatetoken" json:"surveydatetoken,omitempty"`
	Surveydatetokenversion *uint64                `protobuf:"fixed64,2,opt,name=surveydatetokenversion" json:"surveydatetokenversion,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CValveHWSurvey_GetSurveySchedule_Response) Reset() {
	*x = CValveHWSurvey_GetSurveySchedule_Response{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CValveHWSurvey_GetSurveySchedule_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CValveHWSurvey_GetSurveySchedule_Response) ProtoMessage() {}

func (x *CValveHWSurvey_GetSurveySchedule_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CValveHWSurvey_GetSurveySchedule_Response.ProtoReflect.Descriptor instead.
func (*CValveHWSurvey_GetSurveySchedule_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CValveHWSurvey_GetSurveySchedule_Response) GetSurveydatetoken() uint32 {
	if x != nil && x.Surveydatetoken != nil {
		return *x.Surveydatetoken
	}
	return 0
}

func (x *CValveHWSurvey_GetSurveySchedule_Response) GetSurveydatetokenversion() uint64 {
	if x != nil && x.Surveydatetokenversion != nil {
		return *x.Surveydatetokenversion
	}
	return 0
}

type CDataPublisher_GetVRDeviceInfo_Response_Device struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ref            *uint32                `protobuf:"varint,2,opt,name=ref" json:"ref,omitempty"`
	AggregationRef *uint32                `protobuf:"varint,3,opt,name=aggregation_ref,json=aggregationRef" json:"aggregation_ref,omitempty"`
	Total          *uint32                `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Driver         *string                `protobuf:"bytes,5,opt,name=driver" json:"driver,omitempty"`
	DeviceClass    *int32                 `protobuf:"varint,6,opt,name=device_class,json=deviceClass" json:"device_class,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) Reset() {
	*x = CDataPublisher_GetVRDeviceInfo_Response_Device{}
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CDataPublisher_GetVRDeviceInfo_Response_Device) ProtoMessage() {}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_datapublisher_steamclient_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CDataPublisher_GetVRDeviceInfo_Response_Device.ProtoReflect.Descriptor instead.
func (*CDataPublisher_GetVRDeviceInfo_Response_Device) Descriptor() ([]byte, []int) {
	return file_steammessages_datapublisher_steamclient_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) GetRef() uint32 {
	if x != nil && x.Ref != nil {
		return *x.Ref
	}
	return 0
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) GetAggregationRef() uint32 {
	if x != nil && x.AggregationRef != nil {
		return *x.AggregationRef
	}
	return 0
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) GetTotal() uint32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) GetDriver() string {
	if x != nil && x.Driver != nil {
		return *x.Driver
	}
	return ""
}

func (x *CDataPublisher_GetVRDeviceInfo_Response_Device) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

var File_steammessages_datapublisher_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_datapublisher_steamclient_proto_rawDesc = "" +
	"\n" +
	"-steammessages_datapublisher.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\"\xfe\x02\n" +
	"9CDataPublisher_ClientContentCorruptionReport_Notification\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x18\n" +
	"\adepotid\x18\x02 \x01(\rR\adepotid\x12'\n" +
	"\x0fdownload_source\x18\x03 \x01(\tR\x0edownloadSource\x12\x1a\n" +
	"\bobjectid\x18\x04 \x01(\tR\bobjectid\x12\x16\n" +
	"\x06cellid\x18\x05 \x01(\rR\x06cellid\x12\x1f\n" +
	"\vis_manifest\x18\x06 \x01(\bR\n" +
	"isManifest\x12\x1f\n" +
	"\vobject_size\x18\a \x01(\x04R\n" +
	"objectSize\x12'\n" +
	"\x0fcorruption_type\x18\b \x01(\rR\x0ecorruptionType\x12\x1d\n" +
	"\n" +
	"used_https\x18\t \x01(\bR\tusedHttps\x12*\n" +
	"\x11oc_proxy_detected\x18\n" +
	" \x01(\bR\x0focProxyDetected\"\xdb\a\n" +
	".CDataPublisher_ClientUpdateAppJob_Notification\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\rR\x05appId\x12\x1b\n" +
	"\tdepot_ids\x18\x02 \x03(\rR\bdepotIds\x12\x1b\n" +
	"\tapp_state\x18\x03 \x01(\rR\bappState\x12\"\n" +
	"\rjob_app_error\x18\x04 \x01(\rR\vjobAppError\x12#\n" +
	"\rerror_details\x18\x05 \x01(\tR\ferrorDetails\x12!\n" +
	"\fjob_duration\x18\x06 \x01(\rR\vjobDuration\x126\n" +
	"\x17files_validation_failed\x18\a \x01(\rR\x15filesValidationFailed\x120\n" +
	"\x14job_bytes_downloaded\x18\b \x01(\x04R\x12jobBytesDownloaded\x12(\n" +
	"\x10job_bytes_staged\x18\t \x01(\x04R\x0ejobBytesStaged\x12%\n" +
	"\x0ebytes_comitted\x18\n" +
	" \x01(\x04R\rbytesComitted\x12&\n" +
	"\x0fstart_app_state\x18\v \x01(\rR\rstartAppState\x12(\n" +
	"\x10stats_machine_id\x18\f \x01(\x06R\x0estatsMachineId\x12\x1f\n" +
	"\vbranch_name\x18\r \x01(\tR\n" +
	"branchName\x124\n" +
	"\x16total_bytes_downloaded\x18\x0e \x01(\x04R\x14totalBytesDownloaded\x12,\n" +
	"\x12total_bytes_staged\x18\x0f \x01(\x04R\x10totalBytesStaged\x120\n" +
	"\x14total_bytes_restored\x18\x10 \x01(\x04R\x12totalBytesRestored\x12\x1f\n" +
	"\vis_borrowed\x18\x11 \x01(\bR\n" +
	"isBorrowed\x12&\n" +
	"\x0fis_free_weekend\x18\x12 \x01(\bR\risFreeWeekend\x12.\n" +
	"\x13total_bytes_patched\x18\x14 \x01(\x04R\x11totalBytesPatched\x12*\n" +
	"\x11total_bytes_saved\x18\x15 \x01(\x04R\x0ftotalBytesSaved\x12\x17\n" +
	"\acell_id\x18\x16 \x01(\rR\x06cellId\x12\x1f\n" +
	"\vis_workshop\x18\x17 \x01(\bR\n" +
	"isWorkshop\x12\x1b\n" +
	"\tis_shader\x18\x18 \x01(\bR\bisShader\x12,\n" +
	"\x12seconds_not_played\x18\x19 \x01(\rR\x10secondsNotPlayed\"I\n" +
	"&CDataPublisher_GetVRDeviceInfo_Request\x12\x1f\n" +
	"\vmonth_count\x18\x01 \x01(\rR\n" +
	"monthCount\"\x9d\x02\n" +
	"'CDataPublisher_GetVRDeviceInfo_Response\x12G\n" +
	"\x06device\x18\x01 \x03(\v2/.CDataPublisher_GetVRDeviceInfo_Response.DeviceR\x06device\x1a\xa8\x01\n" +
	"\x06Device\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03ref\x18\x02 \x01(\rR\x03ref\x12'\n" +
	"\x0faggregation_ref\x18\x03 \x01(\rR\x0eaggregationRef\x12\x14\n" +
	"\x05total\x18\x04 \x01(\rR\x05total\x12\x16\n" +
	"\x06driver\x18\x05 \x01(\tR\x06driver\x12!\n" +
	"\fdevice_class\x18\x06 \x01(\x05R\vdeviceClass\"w\n" +
	":CDataPublisher_SetVRDeviceInfoAggregationReference_Request\x12\x10\n" +
	"\x03ref\x18\x01 \x01(\rR\x03ref\x12'\n" +
	"\x0faggregation_ref\x18\x02 \x01(\rR\x0eaggregationRef\"U\n" +
	";CDataPublisher_SetVRDeviceInfoAggregationReference_Response\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\"\xc6\x01\n" +
	"&CDataPublisher_AddVRDeviceInfo_Request\x12\"\n" +
	"\fmanufacturer\x18\x01 \x01(\tR\fmanufacturer\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x16\n" +
	"\x06driver\x18\x03 \x01(\tR\x06driver\x12'\n" +
	"\x0fcontroller_type\x18\x04 \x01(\tR\x0econtrollerType\x12!\n" +
	"\fdevice_class\x18\x05 \x01(\x05R\vdeviceClass\"S\n" +
	"'CDataPublisher_AddVRDeviceInfo_Response\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\x12\x10\n" +
	"\x03ref\x18\x02 \x01(\rR\x03ref\"\x8c\x01\n" +
	"(CValveHWSurvey_GetSurveySchedule_Request\x12(\n" +
	"\x0fsurveydatetoken\x18\x01 \x01(\tR\x0fsurveydatetoken\x126\n" +
	"\x16surveydatetokenversion\x18\x02 \x01(\x06R\x16surveydatetokenversion\"\x8d\x01\n" +
	")CValveHWSurvey_GetSurveySchedule_Response\x12(\n" +
	"\x0fsurveydatetoken\x18\x01 \x01(\rR\x0fsurveydatetoken\x126\n" +
	"\x16surveydatetokenversion\x18\x02 \x01(\x06R\x16surveydatetokenversion2\xc2\x04\n" +
	"\rDataPublisher\x12h\n" +
	"\x1dClientContentCorruptionReport\x12:.CDataPublisher_ClientContentCorruptionReport_Notification\x1a\v.NoResponse\x12X\n" +
	"\x18ClientUpdateAppJobReport\x12/.CDataPublisher_ClientUpdateAppJob_Notification\x1a\v.NoResponse\x12d\n" +
	"\x0fGetVRDeviceInfo\x12'.CDataPublisher_GetVRDeviceInfo_Request\x1a(.CDataPublisher_GetVRDeviceInfo_Response\x12\xa0\x01\n" +
	"#SetVRDeviceInfoAggregationReference\x12;.CDataPublisher_SetVRDeviceInfoAggregationReference_Request\x1a<.CDataPublisher_SetVRDeviceInfoAggregationReference_Response\x12d\n" +
	"\x0fAddVRDeviceInfo\x12'.CDataPublisher_AddVRDeviceInfo_Request\x1a(.CDataPublisher_AddVRDeviceInfo_Response2{\n" +
	"\rValveHWSurvey\x12j\n" +
	"\x11GetSurveySchedule\x12).CValveHWSurvey_GetSurveySchedule_Request\x1a*.CValveHWSurvey_GetSurveySchedule_ResponseB\x03\x80\x01\x01"

var (
	file_steammessages_datapublisher_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_datapublisher_steamclient_proto_rawDescData []byte
)

func file_steammessages_datapublisher_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_datapublisher_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_datapublisher_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_datapublisher_steamclient_proto_rawDesc), len(file_steammessages_datapublisher_steamclient_proto_rawDesc)))
	})
	return file_steammessages_datapublisher_steamclient_proto_rawDescData
}

var file_steammessages_datapublisher_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_steammessages_datapublisher_steamclient_proto_goTypes = []any{
	(*CDataPublisher_ClientContentCorruptionReport_Notification)(nil),   // 0: CDataPublisher_ClientContentCorruptionReport_Notification
	(*CDataPublisher_ClientUpdateAppJob_Notification)(nil),              // 1: CDataPublisher_ClientUpdateAppJob_Notification
	(*CDataPublisher_GetVRDeviceInfo_Request)(nil),                      // 2: CDataPublisher_GetVRDeviceInfo_Request
	(*CDataPublisher_GetVRDeviceInfo_Response)(nil),                     // 3: CDataPublisher_GetVRDeviceInfo_Response
	(*CDataPublisher_SetVRDeviceInfoAggregationReference_Request)(nil),  // 4: CDataPublisher_SetVRDeviceInfoAggregationReference_Request
	(*CDataPublisher_SetVRDeviceInfoAggregationReference_Response)(nil), // 5: CDataPublisher_SetVRDeviceInfoAggregationReference_Response
	(*CDataPublisher_AddVRDeviceInfo_Request)(nil),                      // 6: CDataPublisher_AddVRDeviceInfo_Request
	(*CDataPublisher_AddVRDeviceInfo_Response)(nil),                     // 7: CDataPublisher_AddVRDeviceInfo_Response
	(*CValveHWSurvey_GetSurveySchedule_Request)(nil),                    // 8: CValveHWSurvey_GetSurveySchedule_Request
	(*CValveHWSurvey_GetSurveySchedule_Response)(nil),                   // 9: CValveHWSurvey_GetSurveySchedule_Response
	(*CDataPublisher_GetVRDeviceInfo_Response_Device)(nil),              // 10: CDataPublisher_GetVRDeviceInfo_Response.Device
	(*NoResponse)(nil), // 11: NoResponse
}
var file_steammessages_datapublisher_steamclient_proto_depIdxs = []int32{
	10, // 0: CDataPublisher_GetVRDeviceInfo_Response.device:type_name -> CDataPublisher_GetVRDeviceInfo_Response.Device
	0,  // 1: DataPublisher.ClientContentCorruptionReport:input_type -> CDataPublisher_ClientContentCorruptionReport_Notification
	1,  // 2: DataPublisher.ClientUpdateAppJobReport:input_type -> CDataPublisher_ClientUpdateAppJob_Notification
	2,  // 3: DataPublisher.GetVRDeviceInfo:input_type -> CDataPublisher_GetVRDeviceInfo_Request
	4,  // 4: DataPublisher.SetVRDeviceInfoAggregationReference:input_type -> CDataPublisher_SetVRDeviceInfoAggregationReference_Request
	6,  // 5: DataPublisher.AddVRDeviceInfo:input_type -> CDataPublisher_AddVRDeviceInfo_Request
	8,  // 6: ValveHWSurvey.GetSurveySchedule:input_type -> CValveHWSurvey_GetSurveySchedule_Request
	11, // 7: DataPublisher.ClientContentCorruptionReport:output_type -> NoResponse
	11, // 8: DataPublisher.ClientUpdateAppJobReport:output_type -> NoResponse
	3,  // 9: DataPublisher.GetVRDeviceInfo:output_type -> CDataPublisher_GetVRDeviceInfo_Response
	5,  // 10: DataPublisher.SetVRDeviceInfoAggregationReference:output_type -> CDataPublisher_SetVRDeviceInfoAggregationReference_Response
	7,  // 11: DataPublisher.AddVRDeviceInfo:output_type -> CDataPublisher_AddVRDeviceInfo_Response
	9,  // 12: ValveHWSurvey.GetSurveySchedule:output_type -> CValveHWSurvey_GetSurveySchedule_Response
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_steammessages_datapublisher_steamclient_proto_init() }
func file_steammessages_datapublisher_steamclient_proto_init() {
	if File_steammessages_datapublisher_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_datapublisher_steamclient_proto_rawDesc), len(file_steammessages_datapublisher_steamclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_steammessages_datapublisher_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_datapublisher_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_datapublisher_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_datapublisher_steamclient_proto = out.File
	file_steammessages_datapublisher_steamclient_proto_goTypes = nil
	file_steammessages_datapublisher_steamclient_proto_depIdxs = nil
}
