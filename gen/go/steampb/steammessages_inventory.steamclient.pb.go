// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_inventory.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CInventory_GetInventory_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid       *uint64                `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetInventory_Request) Reset() {
	*x = CInventory_GetInventory_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetInventory_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetInventory_Request) ProtoMessage() {}

func (x *CInventory_GetInventory_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetInventory_Request.ProtoReflect.Descriptor instead.
func (*CInventory_GetInventory_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CInventory_GetInventory_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_GetInventory_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CInventory_Response struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Etag           *string                `protobuf:"bytes,1,opt,name=etag" json:"etag,omitempty"`
	Removeditemids []uint64               `protobuf:"varint,2,rep,name=removeditemids" json:"removeditemids,omitempty"`
	ItemJson       *string                `protobuf:"bytes,3,opt,name=item_json,json=itemJson" json:"item_json,omitempty"`
	ItemdefJson    *string                `protobuf:"bytes,4,opt,name=itemdef_json,json=itemdefJson" json:"itemdef_json,omitempty"`
	Ticket         []byte                 `protobuf:"bytes,5,opt,name=ticket" json:"ticket,omitempty"`
	Replayed       *bool                  `protobuf:"varint,6,opt,name=replayed" json:"replayed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CInventory_Response) Reset() {
	*x = CInventory_Response{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_Response) ProtoMessage() {}

func (x *CInventory_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_Response.ProtoReflect.Descriptor instead.
func (*CInventory_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CInventory_Response) GetEtag() string {
	if x != nil && x.Etag != nil {
		return *x.Etag
	}
	return ""
}

func (x *CInventory_Response) GetRemoveditemids() []uint64 {
	if x != nil {
		return x.Removeditemids
	}
	return nil
}

func (x *CInventory_Response) GetItemJson() string {
	if x != nil && x.ItemJson != nil {
		return *x.ItemJson
	}
	return ""
}

func (x *CInventory_Response) GetItemdefJson() string {
	if x != nil && x.ItemdefJson != nil {
		return *x.ItemdefJson
	}
	return ""
}

func (x *CInventory_Response) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CInventory_Response) GetReplayed() bool {
	if x != nil && x.Replayed != nil {
		return *x.Replayed
	}
	return false
}

type CInventory_ExchangeItem_Request struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Appid             *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid           *uint64                `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	Materialsitemid   []uint64               `protobuf:"varint,3,rep,name=materialsitemid" json:"materialsitemid,omitempty"`
	Materialsquantity []uint32               `protobuf:"varint,4,rep,name=materialsquantity" json:"materialsquantity,omitempty"`
	Outputitemdefid   *uint64                `protobuf:"varint,5,opt,name=outputitemdefid" json:"outputitemdefid,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CInventory_ExchangeItem_Request) Reset() {
	*x = CInventory_ExchangeItem_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_ExchangeItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_ExchangeItem_Request) ProtoMessage() {}

func (x *CInventory_ExchangeItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_ExchangeItem_Request.ProtoReflect.Descriptor instead.
func (*CInventory_ExchangeItem_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CInventory_ExchangeItem_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_ExchangeItem_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CInventory_ExchangeItem_Request) GetMaterialsitemid() []uint64 {
	if x != nil {
		return x.Materialsitemid
	}
	return nil
}

func (x *CInventory_ExchangeItem_Request) GetMaterialsquantity() []uint32 {
	if x != nil {
		return x.Materialsquantity
	}
	return nil
}

func (x *CInventory_ExchangeItem_Request) GetOutputitemdefid() uint64 {
	if x != nil && x.Outputitemdefid != nil {
		return *x.Outputitemdefid
	}
	return 0
}

type CInventory_GetEligiblePromoItemDefIDs_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid       *uint64                `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Request) Reset() {
	*x = CInventory_GetEligiblePromoItemDefIDs_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetEligiblePromoItemDefIDs_Request) ProtoMessage() {}

func (x *CInventory_GetEligiblePromoItemDefIDs_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetEligiblePromoItemDefIDs_Request.ProtoReflect.Descriptor instead.
func (*CInventory_GetEligiblePromoItemDefIDs_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CInventory_GetEligiblePromoItemDefIDs_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Itemdefids    []uint64               `protobuf:"varint,1,rep,name=itemdefids" json:"itemdefids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Response) Reset() {
	*x = CInventory_GetEligiblePromoItemDefIDs_Response{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetEligiblePromoItemDefIDs_Response) ProtoMessage() {}

func (x *CInventory_GetEligiblePromoItemDefIDs_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetEligiblePromoItemDefIDs_Response.ProtoReflect.Descriptor instead.
func (*CInventory_GetEligiblePromoItemDefIDs_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CInventory_GetEligiblePromoItemDefIDs_Response) GetItemdefids() []uint64 {
	if x != nil {
		return x.Itemdefids
	}
	return nil
}

type CInventory_AddItem_Request struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Appid            *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Itemdefid        []uint64               `protobuf:"varint,2,rep,name=itemdefid" json:"itemdefid,omitempty"`
	Itempropsjson    []string               `protobuf:"bytes,3,rep,name=itempropsjson" json:"itempropsjson,omitempty"`
	Itemquantity     []uint32               `protobuf:"varint,9,rep,name=itemquantity" json:"itemquantity,omitempty"`
	Steamid          *uint64                `protobuf:"varint,4,opt,name=steamid" json:"steamid,omitempty"`
	Notify           *bool                  `protobuf:"varint,5,opt,name=notify" json:"notify,omitempty"`
	Requestid        *uint64                `protobuf:"varint,6,opt,name=requestid" json:"requestid,omitempty"`
	TradeRestriction *bool                  `protobuf:"varint,7,opt,name=trade_restriction,json=tradeRestriction" json:"trade_restriction,omitempty"`
	IsPurchase       *bool                  `protobuf:"varint,8,opt,name=is_purchase,json=isPurchase,def=0" json:"is_purchase,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for CInventory_AddItem_Request fields.
const (
	Default_CInventory_AddItem_Request_IsPurchase = bool(false)
)

func (x *CInventory_AddItem_Request) Reset() {
	*x = CInventory_AddItem_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_AddItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_AddItem_Request) ProtoMessage() {}

func (x *CInventory_AddItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_AddItem_Request.ProtoReflect.Descriptor instead.
func (*CInventory_AddItem_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *CInventory_AddItem_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_AddItem_Request) GetItemdefid() []uint64 {
	if x != nil {
		return x.Itemdefid
	}
	return nil
}

func (x *CInventory_AddItem_Request) GetItempropsjson() []string {
	if x != nil {
		return x.Itempropsjson
	}
	return nil
}

func (x *CInventory_AddItem_Request) GetItemquantity() []uint32 {
	if x != nil {
		return x.Itemquantity
	}
	return nil
}

func (x *CInventory_AddItem_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CInventory_AddItem_Request) GetNotify() bool {
	if x != nil && x.Notify != nil {
		return *x.Notify
	}
	return false
}

func (x *CInventory_AddItem_Request) GetRequestid() uint64 {
	if x != nil && x.Requestid != nil {
		return *x.Requestid
	}
	return 0
}

func (x *CInventory_AddItem_Request) GetTradeRestriction() bool {
	if x != nil && x.TradeRestriction != nil {
		return *x.TradeRestriction
	}
	return false
}

func (x *CInventory_AddItem_Request) GetIsPurchase() bool {
	if x != nil && x.IsPurchase != nil {
		return *x.IsPurchase
	}
	return Default_CInventory_AddItem_Request_IsPurchase
}

type CInventory_ModifyItems_Request struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Appid         *uint32                                              `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Steamid       *uint64                                              `protobuf:"varint,2,opt,name=steamid" json:"steamid,omitempty"`
	Updates       []*CInventory_ModifyItems_Request_ItemPropertyUpdate `protobuf:"bytes,3,rep,name=updates" json:"updates,omitempty"`
	Timestamp     *uint32                                              `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_ModifyItems_Request) Reset() {
	*x = CInventory_ModifyItems_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_ModifyItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_ModifyItems_Request) ProtoMessage() {}

func (x *CInventory_ModifyItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_ModifyItems_Request.ProtoReflect.Descriptor instead.
func (*CInventory_ModifyItems_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{6}
}

func (x *CInventory_ModifyItems_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_ModifyItems_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CInventory_ModifyItems_Request) GetUpdates() []*CInventory_ModifyItems_Request_ItemPropertyUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *CInventory_ModifyItems_Request) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type CInventory_ConsumePlaytime_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Itemdefid     *uint64                `protobuf:"varint,2,opt,name=itemdefid" json:"itemdefid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_ConsumePlaytime_Request) Reset() {
	*x = CInventory_ConsumePlaytime_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_ConsumePlaytime_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_ConsumePlaytime_Request) ProtoMessage() {}

func (x *CInventory_ConsumePlaytime_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_ConsumePlaytime_Request.ProtoReflect.Descriptor instead.
func (*CInventory_ConsumePlaytime_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CInventory_ConsumePlaytime_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_ConsumePlaytime_Request) GetItemdefid() uint64 {
	if x != nil && x.Itemdefid != nil {
		return *x.Itemdefid
	}
	return 0
}

type CInventory_ConsumeItem_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Itemid        *uint64                `protobuf:"varint,2,opt,name=itemid" json:"itemid,omitempty"`
	Quantity      *uint32                `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
	Timestamp     *string                `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Steamid       *uint64                `protobuf:"varint,5,opt,name=steamid" json:"steamid,omitempty"`
	Requestid     *uint64                `protobuf:"varint,6,opt,name=requestid" json:"requestid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_ConsumeItem_Request) Reset() {
	*x = CInventory_ConsumeItem_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_ConsumeItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_ConsumeItem_Request) ProtoMessage() {}

func (x *CInventory_ConsumeItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_ConsumeItem_Request.ProtoReflect.Descriptor instead.
func (*CInventory_ConsumeItem_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{8}
}

func (x *CInventory_ConsumeItem_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_ConsumeItem_Request) GetItemid() uint64 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *CInventory_ConsumeItem_Request) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *CInventory_ConsumeItem_Request) GetTimestamp() string {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return ""
}

func (x *CInventory_ConsumeItem_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CInventory_ConsumeItem_Request) GetRequestid() uint64 {
	if x != nil && x.Requestid != nil {
		return *x.Requestid
	}
	return 0
}

type CInventory_DevSetNextDrop_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Itemdefid     *uint64                `protobuf:"varint,2,opt,name=itemdefid" json:"itemdefid,omitempty"`
	Droptime      *string                `protobuf:"bytes,3,opt,name=droptime" json:"droptime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_DevSetNextDrop_Request) Reset() {
	*x = CInventory_DevSetNextDrop_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_DevSetNextDrop_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_DevSetNextDrop_Request) ProtoMessage() {}

func (x *CInventory_DevSetNextDrop_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_DevSetNextDrop_Request.ProtoReflect.Descriptor instead.
func (*CInventory_DevSetNextDrop_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CInventory_DevSetNextDrop_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_DevSetNextDrop_Request) GetItemdefid() uint64 {
	if x != nil && x.Itemdefid != nil {
		return *x.Itemdefid
	}
	return 0
}

func (x *CInventory_DevSetNextDrop_Request) GetDroptime() string {
	if x != nil && x.Droptime != nil {
		return *x.Droptime
	}
	return ""
}

type CInventory_SplitItemStack_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Itemid        *uint64                `protobuf:"varint,2,opt,name=itemid" json:"itemid,omitempty"`
	Quantity      *uint32                `protobuf:"varint,3,opt,name=quantity" json:"quantity,omitempty"`
	Steamid       *uint64                `protobuf:"varint,5,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_SplitItemStack_Request) Reset() {
	*x = CInventory_SplitItemStack_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_SplitItemStack_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_SplitItemStack_Request) ProtoMessage() {}

func (x *CInventory_SplitItemStack_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_SplitItemStack_Request.ProtoReflect.Descriptor instead.
func (*CInventory_SplitItemStack_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{10}
}

func (x *CInventory_SplitItemStack_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_SplitItemStack_Request) GetItemid() uint64 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *CInventory_SplitItemStack_Request) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *CInventory_SplitItemStack_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CInventory_CombineItemStacks_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Fromitemid    *uint64                `protobuf:"varint,2,opt,name=fromitemid" json:"fromitemid,omitempty"`
	Destitemid    *uint64                `protobuf:"varint,3,opt,name=destitemid" json:"destitemid,omitempty"`
	Quantity      *uint32                `protobuf:"varint,4,opt,name=quantity" json:"quantity,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,7,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_CombineItemStacks_Request) Reset() {
	*x = CInventory_CombineItemStacks_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_CombineItemStacks_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_CombineItemStacks_Request) ProtoMessage() {}

func (x *CInventory_CombineItemStacks_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_CombineItemStacks_Request.ProtoReflect.Descriptor instead.
func (*CInventory_CombineItemStacks_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{11}
}

func (x *CInventory_CombineItemStacks_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_CombineItemStacks_Request) GetFromitemid() uint64 {
	if x != nil && x.Fromitemid != nil {
		return *x.Fromitemid
	}
	return 0
}

func (x *CInventory_CombineItemStacks_Request) GetDestitemid() uint64 {
	if x != nil && x.Destitemid != nil {
		return *x.Destitemid
	}
	return 0
}

func (x *CInventory_CombineItemStacks_Request) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *CInventory_CombineItemStacks_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CInventory_GetItemDefMeta_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetItemDefMeta_Request) Reset() {
	*x = CInventory_GetItemDefMeta_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetItemDefMeta_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetItemDefMeta_Request) ProtoMessage() {}

func (x *CInventory_GetItemDefMeta_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetItemDefMeta_Request.ProtoReflect.Descriptor instead.
func (*CInventory_GetItemDefMeta_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{12}
}

func (x *CInventory_GetItemDefMeta_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CInventory_GetItemDefMeta_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Modified      *uint32                `protobuf:"varint,1,opt,name=modified" json:"modified,omitempty"`
	Digest        *string                `protobuf:"bytes,2,opt,name=digest" json:"digest,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetItemDefMeta_Response) Reset() {
	*x = CInventory_GetItemDefMeta_Response{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetItemDefMeta_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetItemDefMeta_Response) ProtoMessage() {}

func (x *CInventory_GetItemDefMeta_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetItemDefMeta_Response.ProtoReflect.Descriptor instead.
func (*CInventory_GetItemDefMeta_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{13}
}

func (x *CInventory_GetItemDefMeta_Response) GetModified() uint32 {
	if x != nil && x.Modified != nil {
		return *x.Modified
	}
	return 0
}

func (x *CInventory_GetItemDefMeta_Response) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

type CInventory_GetUserPurchaseInfo_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetUserPurchaseInfo_Request) Reset() {
	*x = CInventory_GetUserPurchaseInfo_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetUserPurchaseInfo_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetUserPurchaseInfo_Request) ProtoMessage() {}

func (x *CInventory_GetUserPurchaseInfo_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetUserPurchaseInfo_Request.ProtoReflect.Descriptor instead.
func (*CInventory_GetUserPurchaseInfo_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{14}
}

type CInventory_GetUserPurchaseInfo_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ecurrency     *int32                 `protobuf:"varint,1,opt,name=ecurrency" json:"ecurrency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_GetUserPurchaseInfo_Response) Reset() {
	*x = CInventory_GetUserPurchaseInfo_Response{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_GetUserPurchaseInfo_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_GetUserPurchaseInfo_Response) ProtoMessage() {}

func (x *CInventory_GetUserPurchaseInfo_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_GetUserPurchaseInfo_Response.ProtoReflect.Descriptor instead.
func (*CInventory_GetUserPurchaseInfo_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{15}
}

func (x *CInventory_GetUserPurchaseInfo_Response) GetEcurrency() int32 {
	if x != nil && x.Ecurrency != nil {
		return *x.Ecurrency
	}
	return 0
}

type CInventory_PurchaseInit_Request struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Appid         *uint32                                     `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Language      *int32                                      `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	LineItems     []*CInventory_PurchaseInit_Request_LineItem `protobuf:"bytes,3,rep,name=line_items,json=lineItems" json:"line_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_PurchaseInit_Request) Reset() {
	*x = CInventory_PurchaseInit_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_PurchaseInit_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_PurchaseInit_Request) ProtoMessage() {}

func (x *CInventory_PurchaseInit_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_PurchaseInit_Request.ProtoReflect.Descriptor instead.
func (*CInventory_PurchaseInit_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{16}
}

func (x *CInventory_PurchaseInit_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_PurchaseInit_Request) GetLanguage() int32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *CInventory_PurchaseInit_Request) GetLineItems() []*CInventory_PurchaseInit_Request_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type CInventory_PurchaseInit_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Orderid       *uint64                `protobuf:"varint,1,opt,name=orderid" json:"orderid,omitempty"`
	Transid       *uint64                `protobuf:"varint,2,opt,name=transid" json:"transid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_PurchaseInit_Response) Reset() {
	*x = CInventory_PurchaseInit_Response{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_PurchaseInit_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_PurchaseInit_Response) ProtoMessage() {}

func (x *CInventory_PurchaseInit_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_PurchaseInit_Response.ProtoReflect.Descriptor instead.
func (*CInventory_PurchaseInit_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{17}
}

func (x *CInventory_PurchaseInit_Response) GetOrderid() uint64 {
	if x != nil && x.Orderid != nil {
		return *x.Orderid
	}
	return 0
}

func (x *CInventory_PurchaseInit_Response) GetTransid() uint64 {
	if x != nil && x.Transid != nil {
		return *x.Transid
	}
	return 0
}

type CInventory_PurchaseFinalize_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Language      *int32                 `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	Orderid       *uint64                `protobuf:"varint,3,opt,name=orderid" json:"orderid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_PurchaseFinalize_Request) Reset() {
	*x = CInventory_PurchaseFinalize_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_PurchaseFinalize_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_PurchaseFinalize_Request) ProtoMessage() {}

func (x *CInventory_PurchaseFinalize_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_PurchaseFinalize_Request.ProtoReflect.Descriptor instead.
func (*CInventory_PurchaseFinalize_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{18}
}

func (x *CInventory_PurchaseFinalize_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventory_PurchaseFinalize_Request) GetLanguage() int32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *CInventory_PurchaseFinalize_Request) GetOrderid() uint64 {
	if x != nil && x.Orderid != nil {
		return *x.Orderid
	}
	return 0
}

type CInventory_InspectItem_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Itemdefid     *uint64                `protobuf:"varint,1,opt,name=itemdefid" json:"itemdefid,omitempty"`
	Itemid        *uint64                `protobuf:"fixed64,2,opt,name=itemid" json:"itemid,omitempty"`
	Tags          *string                `protobuf:"bytes,3,opt,name=tags" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_InspectItem_Request) Reset() {
	*x = CInventory_InspectItem_Request{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_InspectItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_InspectItem_Request) ProtoMessage() {}

func (x *CInventory_InspectItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_InspectItem_Request.ProtoReflect.Descriptor instead.
func (*CInventory_InspectItem_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{19}
}

func (x *CInventory_InspectItem_Request) GetItemdefid() uint64 {
	if x != nil && x.Itemdefid != nil {
		return *x.Itemdefid
	}
	return 0
}

func (x *CInventory_InspectItem_Request) GetItemid() uint64 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *CInventory_InspectItem_Request) GetTags() string {
	if x != nil && x.Tags != nil {
		return *x.Tags
	}
	return ""
}

type CInventoryClient_NewItems_Notification struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Appid             *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	InventoryResponse *CInventory_Response   `protobuf:"bytes,2,opt,name=inventory_response,json=inventoryResponse" json:"inventory_response,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CInventoryClient_NewItems_Notification) Reset() {
	*x = CInventoryClient_NewItems_Notification{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventoryClient_NewItems_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventoryClient_NewItems_Notification) ProtoMessage() {}

func (x *CInventoryClient_NewItems_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventoryClient_NewItems_Notification.ProtoReflect.Descriptor instead.
func (*CInventoryClient_NewItems_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{20}
}

func (x *CInventoryClient_NewItems_Notification) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CInventoryClient_NewItems_Notification) GetInventoryResponse() *CInventory_Response {
	if x != nil {
		return x.InventoryResponse
	}
	return nil
}

type CInventory_ModifyItems_Request_ItemPropertyUpdate struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Itemid              *uint64                `protobuf:"varint,1,opt,name=itemid" json:"itemid,omitempty"`
	RemoveProperty      *bool                  `protobuf:"varint,2,opt,name=remove_property,json=removeProperty" json:"remove_property,omitempty"`
	PropertyName        *string                `protobuf:"bytes,3,opt,name=property_name,json=propertyName" json:"property_name,omitempty"`
	PropertyValueBool   *bool                  `protobuf:"varint,4,opt,name=property_value_bool,json=propertyValueBool" json:"property_value_bool,omitempty"`
	PropertyValueInt    *int64                 `protobuf:"varint,5,opt,name=property_value_int,json=propertyValueInt" json:"property_value_int,omitempty"`
	PropertyValueString *string                `protobuf:"bytes,6,opt,name=property_value_string,json=propertyValueString" json:"property_value_string,omitempty"`
	PropertyValueFloat  *float32               `protobuf:"fixed32,7,opt,name=property_value_float,json=propertyValueFloat" json:"property_value_float,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) Reset() {
	*x = CInventory_ModifyItems_Request_ItemPropertyUpdate{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_ModifyItems_Request_ItemPropertyUpdate) ProtoMessage() {}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_ModifyItems_Request_ItemPropertyUpdate.ProtoReflect.Descriptor instead.
func (*CInventory_ModifyItems_Request_ItemPropertyUpdate) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetItemid() uint64 {
	if x != nil && x.Itemid != nil {
		return *x.Itemid
	}
	return 0
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetRemoveProperty() bool {
	if x != nil && x.RemoveProperty != nil {
		return *x.RemoveProperty
	}
	return false
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetPropertyName() string {
	if x != nil && x.PropertyName != nil {
		return *x.PropertyName
	}
	return ""
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetPropertyValueBool() bool {
	if x != nil && x.PropertyValueBool != nil {
		return *x.PropertyValueBool
	}
	return false
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetPropertyValueInt() int64 {
	if x != nil && x.PropertyValueInt != nil {
		return *x.PropertyValueInt
	}
	return 0
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetPropertyValueString() string {
	if x != nil && x.PropertyValueString != nil {
		return *x.PropertyValueString
	}
	return ""
}

func (x *CInventory_ModifyItems_Request_ItemPropertyUpdate) GetPropertyValueFloat() float32 {
	if x != nil && x.PropertyValueFloat != nil {
		return *x.PropertyValueFloat
	}
	return 0
}

type CInventory_PurchaseInit_Request_LineItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Itemdefid     *uint64                `protobuf:"varint,1,opt,name=itemdefid" json:"itemdefid,omitempty"`
	Quantity      *uint32                `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CInventory_PurchaseInit_Request_LineItem) Reset() {
	*x = CInventory_PurchaseInit_Request_LineItem{}
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CInventory_PurchaseInit_Request_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CInventory_PurchaseInit_Request_LineItem) ProtoMessage() {}

func (x *CInventory_PurchaseInit_Request_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_inventory_steamclient_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CInventory_PurchaseInit_Request_LineItem.ProtoReflect.Descriptor instead.
func (*CInventory_PurchaseInit_Request_LineItem) Descriptor() ([]byte, []int) {
	return file_steammessages_inventory_steamclient_proto_rawDescGZIP(), []int{16, 0}
}

func (x *CInventory_PurchaseInit_Request_LineItem) GetItemdefid() uint64 {
	if x != nil && x.Itemdefid != nil {
		return *x.Itemdefid
	}
	return 0
}

func (x *CInventory_PurchaseInit_Request_LineItem) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

var File_steammessages_inventory_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_inventory_steamclient_proto_rawDesc = "" +
	"\n" +
	")steammessages_inventory.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\"Q\n" +
	"\x1fCInventory_GetInventory_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x04R\asteamid\"\xc5\x01\n" +
	"\x13CInventory_Response\x12\x12\n" +
	"\x04etag\x18\x01 \x01(\tR\x04etag\x12&\n" +
	"\x0eremoveditemids\x18\x02 \x03(\x04R\x0eremoveditemids\x12\x1b\n" +
	"\titem_json\x18\x03 \x01(\tR\bitemJson\x12!\n" +
	"\fitemdef_json\x18\x04 \x01(\tR\vitemdefJson\x12\x16\n" +
	"\x06ticket\x18\x05 \x01(\fR\x06ticket\x12\x1a\n" +
	"\breplayed\x18\x06 \x01(\bR\breplayed\"\xd3\x01\n" +
	"\x1fCInventory_ExchangeItem_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x04R\asteamid\x12(\n" +
	"\x0fmaterialsitemid\x18\x03 \x03(\x04R\x0fmaterialsitemid\x12,\n" +
	"\x11materialsquantity\x18\x04 \x03(\rR\x11materialsquantity\x12(\n" +
	"\x0foutputitemdefid\x18\x05 \x01(\x04R\x0foutputitemdefid\"_\n" +
	"-CInventory_GetEligiblePromoItemDefIDs_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x04R\asteamid\"P\n" +
	".CInventory_GetEligiblePromoItemDefIDs_Response\x12\x1e\n" +
	"\n" +
	"itemdefids\x18\x01 \x03(\x04R\n" +
	"itemdefids\"\xbf\x02\n" +
	"\x1aCInventory_AddItem_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1c\n" +
	"\titemdefid\x18\x02 \x03(\x04R\titemdefid\x12$\n" +
	"\ritempropsjson\x18\x03 \x03(\tR\ritempropsjson\x12\"\n" +
	"\fitemquantity\x18\t \x03(\rR\fitemquantity\x12\x18\n" +
	"\asteamid\x18\x04 \x01(\x04R\asteamid\x12\x16\n" +
	"\x06notify\x18\x05 \x01(\bR\x06notify\x12\x1c\n" +
	"\trequestid\x18\x06 \x01(\x04R\trequestid\x12+\n" +
	"\x11trade_restriction\x18\a \x01(\bR\x10tradeRestriction\x12&\n" +
	"\vis_purchase\x18\b \x01(\b:\x05falseR\n" +
	"isPurchase\"\xfd\x03\n" +
	"\x1eCInventory_ModifyItems_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x04R\asteamid\x12L\n" +
	"\aupdates\x18\x03 \x03(\v22.CInventory_ModifyItems_Request.ItemPropertyUpdateR\aupdates\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\rR\ttimestamp\x1a\xbe\x02\n" +
	"\x12ItemPropertyUpdate\x12\x16\n" +
	"\x06itemid\x18\x01 \x01(\x04R\x06itemid\x12'\n" +
	"\x0fremove_property\x18\x02 \x01(\bR\x0eremoveProperty\x12#\n" +
	"\rproperty_name\x18\x03 \x01(\tR\fpropertyName\x12.\n" +
	"\x13property_value_bool\x18\x04 \x01(\bR\x11propertyValueBool\x12,\n" +
	"\x12property_value_int\x18\x05 \x01(\x03R\x10propertyValueInt\x122\n" +
	"\x15property_value_string\x18\x06 \x01(\tR\x13propertyValueString\x120\n" +
	"\x14property_value_float\x18\a \x01(\x02R\x12propertyValueFloat\"X\n" +
	"\"CInventory_ConsumePlaytime_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1c\n" +
	"\titemdefid\x18\x02 \x01(\x04R\titemdefid\"\xc0\x01\n" +
	"\x1eCInventory_ConsumeItem_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x16\n" +
	"\x06itemid\x18\x02 \x01(\x04R\x06itemid\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\rR\bquantity\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\tR\ttimestamp\x12\x18\n" +
	"\asteamid\x18\x05 \x01(\x04R\asteamid\x12\x1c\n" +
	"\trequestid\x18\x06 \x01(\x04R\trequestid\"s\n" +
	"!CInventory_DevSetNextDrop_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1c\n" +
	"\titemdefid\x18\x02 \x01(\x04R\titemdefid\x12\x1a\n" +
	"\bdroptime\x18\x03 \x01(\tR\bdroptime\"\x87\x01\n" +
	"!CInventory_SplitItemStack_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x16\n" +
	"\x06itemid\x18\x02 \x01(\x04R\x06itemid\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\rR\bquantity\x12\x18\n" +
	"\asteamid\x18\x05 \x01(\x04R\asteamid\"\xb2\x01\n" +
	"$CInventory_CombineItemStacks_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1e\n" +
	"\n" +
	"fromitemid\x18\x02 \x01(\x04R\n" +
	"fromitemid\x12\x1e\n" +
	"\n" +
	"destitemid\x18\x03 \x01(\x04R\n" +
	"destitemid\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\rR\bquantity\x12\x18\n" +
	"\asteamid\x18\a \x01(\x06R\asteamid\"9\n" +
	"!CInventory_GetItemDefMeta_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"X\n" +
	"\"CInventory_GetItemDefMeta_Response\x12\x1a\n" +
	"\bmodified\x18\x01 \x01(\rR\bmodified\x12\x16\n" +
	"\x06digest\x18\x02 \x01(\tR\x06digest\"(\n" +
	"&CInventory_GetUserPurchaseInfo_Request\"G\n" +
	"'CInventory_GetUserPurchaseInfo_Response\x12\x1c\n" +
	"\tecurrency\x18\x01 \x01(\x05R\tecurrency\"\xe3\x01\n" +
	"\x1fCInventory_PurchaseInit_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\x05R\blanguage\x12H\n" +
	"\n" +
	"line_items\x18\x03 \x03(\v2).CInventory_PurchaseInit_Request.LineItemR\tlineItems\x1aD\n" +
	"\bLineItem\x12\x1c\n" +
	"\titemdefid\x18\x01 \x01(\x04R\titemdefid\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"V\n" +
	" CInventory_PurchaseInit_Response\x12\x18\n" +
	"\aorderid\x18\x01 \x01(\x04R\aorderid\x12\x18\n" +
	"\atransid\x18\x02 \x01(\x04R\atransid\"q\n" +
	"#CInventory_PurchaseFinalize_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\x05R\blanguage\x12\x18\n" +
	"\aorderid\x18\x03 \x01(\x04R\aorderid\"j\n" +
	"\x1eCInventory_InspectItem_Request\x12\x1c\n" +
	"\titemdefid\x18\x01 \x01(\x04R\titemdefid\x12\x16\n" +
	"\x06itemid\x18\x02 \x01(\x06R\x06itemid\x12\x12\n" +
	"\x04tags\x18\x03 \x01(\tR\x04tags\"\x83\x01\n" +
	"&CInventoryClient_NewItems_Notification\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12C\n" +
	"\x12inventory_response\x18\x02 \x01(\v2\x14.CInventory_ResponseR\x11inventoryResponse2\x9b\n" +
	"\n" +
	"\tInventory\x12F\n" +
	"\fGetInventory\x12 .CInventory_GetInventory_Request\x1a\x14.CInventory_Response\x12F\n" +
	"\fExchangeItem\x12 .CInventory_ExchangeItem_Request\x1a\x14.CInventory_Response\x12}\n" +
	"\x1aGetEligiblePromoItemDefIDs\x12..CInventory_GetEligiblePromoItemDefIDs_Request\x1a/.CInventory_GetEligiblePromoItemDefIDs_Response\x12A\n" +
	"\fAddPromoItem\x12\x1b.CInventory_AddItem_Request\x1a\x14.CInventory_Response\x12H\n" +
	"\x0fSafeModifyItems\x12\x1f.CInventory_ModifyItems_Request\x1a\x14.CInventory_Response\x12L\n" +
	"\x0fConsumePlaytime\x12#.CInventory_ConsumePlaytime_Request\x1a\x14.CInventory_Response\x12D\n" +
	"\vConsumeItem\x12\x1f.CInventory_ConsumeItem_Request\x1a\x14.CInventory_Response\x12D\n" +
	"\x0fDevGenerateItem\x12\x1b.CInventory_AddItem_Request\x1a\x14.CInventory_Response\x12J\n" +
	"\x0eDevSetNextDrop\x12\".CInventory_DevSetNextDrop_Request\x1a\x14.CInventory_Response\x12J\n" +
	"\x0eSplitItemStack\x12\".CInventory_SplitItemStack_Request\x1a\x14.CInventory_Response\x12P\n" +
	"\x11CombineItemStacks\x12%.CInventory_CombineItemStacks_Request\x1a\x14.CInventory_Response\x12Y\n" +
	"\x0eGetItemDefMeta\x12\".CInventory_GetItemDefMeta_Request\x1a#.CInventory_GetItemDefMeta_Response\x12h\n" +
	"\x13GetUserPurchaseInfo\x12'.CInventory_GetUserPurchaseInfo_Request\x1a(.CInventory_GetUserPurchaseInfo_Response\x12S\n" +
	"\fPurchaseInit\x12 .CInventory_PurchaseInit_Request\x1a!.CInventory_PurchaseInit_Response\x12N\n" +
	"\x10PurchaseFinalize\x12$.CInventory_PurchaseFinalize_Request\x1a\x14.CInventory_Response\x12D\n" +
	"\vInspectItem\x12\x1f.CInventory_InspectItem_Request\x1a\x14.CInventory_Response2_\n" +
	"\x0fInventoryClient\x12F\n" +
	"\x0eNotifyNewItems\x12'.CInventoryClient_NewItems_Notification\x1a\v.NoResponse\x1a\x04\xc0\xb5\x18\x02B\x03\x80\x01\x01"

var (
	file_steammessages_inventory_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_inventory_steamclient_proto_rawDescData []byte
)

func file_steammessages_inventory_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_inventory_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_inventory_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_inventory_steamclient_proto_rawDesc), len(file_steammessages_inventory_steamclient_proto_rawDesc)))
	})
	return file_steammessages_inventory_steamclient_proto_rawDescData
}

var file_steammessages_inventory_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_steammessages_inventory_steamclient_proto_goTypes = []any{
	(*CInventory_GetInventory_Request)(nil),                   // 0: CInventory_GetInventory_Request
	(*CInventory_Response)(nil),                               // 1: CInventory_Response
	(*CInventory_ExchangeItem_Request)(nil),                   // 2: CInventory_ExchangeItem_Request
	(*CInventory_GetEligiblePromoItemDefIDs_Request)(nil),     // 3: CInventory_GetEligiblePromoItemDefIDs_Request
	(*CInventory_GetEligiblePromoItemDefIDs_Response)(nil),    // 4: CInventory_GetEligiblePromoItemDefIDs_Response
	(*CInventory_AddItem_Request)(nil),                        // 5: CInventory_AddItem_Request
	(*CInventory_ModifyItems_Request)(nil),                    // 6: CInventory_ModifyItems_Request
	(*CInventory_ConsumePlaytime_Request)(nil),                // 7: CInventory_ConsumePlaytime_Request
	(*CInventory_ConsumeItem_Request)(nil),                    // 8: CInventory_ConsumeItem_Request
	(*CInventory_DevSetNextDrop_Request)(nil),                 // 9: CInventory_DevSetNextDrop_Request
	(*CInventory_SplitItemStack_Request)(nil),                 // 10: CInventory_SplitItemStack_Request
	(*CInventory_CombineItemStacks_Request)(nil),              // 11: CInventory_CombineItemStacks_Request
	(*CInventory_GetItemDefMeta_Request)(nil),                 // 12: CInventory_GetItemDefMeta_Request
	(*CInventory_GetItemDefMeta_Response)(nil),                // 13: CInventory_GetItemDefMeta_Response
	(*CInventory_GetUserPurchaseInfo_Request)(nil),            // 14: CInventory_GetUserPurchaseInfo_Request
	(*CInventory_GetUserPurchaseInfo_Response)(nil),           // 15: CInventory_GetUserPurchaseInfo_Response
	(*CInventory_PurchaseInit_Request)(nil),                   // 16: CInventory_PurchaseInit_Request
	(*CInventory_PurchaseInit_Response)(nil),                  // 17: CInventory_PurchaseInit_Response
	(*CInventory_PurchaseFinalize_Request)(nil),               // 18: CInventory_PurchaseFinalize_Request
	(*CInventory_InspectItem_Request)(nil),                    // 19: CInventory_InspectItem_Request
	(*CInventoryClient_NewItems_Notification)(nil),            // 20: CInventoryClient_NewItems_Notification
	(*CInventory_ModifyItems_Request_ItemPropertyUpdate)(nil), // 21: CInventory_ModifyItems_Request.ItemPropertyUpdate
	(*CInventory_PurchaseInit_Request_LineItem)(nil),          // 22: CInventory_PurchaseInit_Request.LineItem
	(*NoResponse)(nil),                                        // 23: NoResponse
}
var file_steammessages_inventory_steamclient_proto_depIdxs = []int32{
	21, // 0: CInventory_ModifyItems_Request.updates:type_name -> CInventory_ModifyItems_Request.ItemPropertyUpdate
	22, // 1: CInventory_PurchaseInit_Request.line_items:type_name -> CInventory_PurchaseInit_Request.LineItem
	1,  // 2: CInventoryClient_NewItems_Notification.inventory_response:type_name -> CInventory_Response
	0,  // 3: Inventory.GetInventory:input_type -> CInventory_GetInventory_Request
	2,  // 4: Inventory.ExchangeItem:input_type -> CInventory_ExchangeItem_Request
	3,  // 5: Inventory.GetEligiblePromoItemDefIDs:input_type -> CInventory_GetEligiblePromoItemDefIDs_Request
	5,  // 6: Inventory.AddPromoItem:input_type -> CInventory_AddItem_Request
	6,  // 7: Inventory.SafeModifyItems:input_type -> CInventory_ModifyItems_Request
	7,  // 8: Inventory.ConsumePlaytime:input_type -> CInventory_ConsumePlaytime_Request
	8,  // 9: Inventory.ConsumeItem:input_type -> CInventory_ConsumeItem_Request
	5,  // 10: Inventory.DevGenerateItem:input_type -> CInventory_AddItem_Request
	9,  // 11: Inventory.DevSetNextDrop:input_type -> CInventory_DevSetNextDrop_Request
	10, // 12: Inventory.SplitItemStack:input_type -> CInventory_SplitItemStack_Request
	11, // 13: Inventory.CombineItemStacks:input_type -> CInventory_CombineItemStacks_Request
	12, // 14: Inventory.GetItemDefMeta:input_type -> CInventory_GetItemDefMeta_Request
	14, // 15: Inventory.GetUserPurchaseInfo:input_type -> CInventory_GetUserPurchaseInfo_Request
	16, // 16: Inventory.PurchaseInit:input_type -> CInventory_PurchaseInit_Request
	18, // 17: Inventory.PurchaseFinalize:input_type -> CInventory_PurchaseFinalize_Request
	19, // 18: Inventory.InspectItem:input_type -> CInventory_InspectItem_Request
	20, // 19: InventoryClient.NotifyNewItems:input_type -> CInventoryClient_NewItems_Notification
	1,  // 20: Inventory.GetInventory:output_type -> CInventory_Response
	1,  // 21: Inventory.ExchangeItem:output_type -> CInventory_Response
	4,  // 22: Inventory.GetEligiblePromoItemDefIDs:output_type -> CInventory_GetEligiblePromoItemDefIDs_Response
	1,  // 23: Inventory.AddPromoItem:output_type -> CInventory_Response
	1,  // 24: Inventory.SafeModifyItems:output_type -> CInventory_Response
	1,  // 25: Inventory.ConsumePlaytime:output_type -> CInventory_Response
	1,  // 26: Inventory.ConsumeItem:output_type -> CInventory_Response
	1,  // 27: Inventory.DevGenerateItem:output_type -> CInventory_Response
	1,  // 28: Inventory.DevSetNextDrop:output_type -> CInventory_Response
	1,  // 29: Inventory.SplitItemStack:output_type -> CInventory_Response
	1,  // 30: Inventory.CombineItemStacks:output_type -> CInventory_Response
	13, // 31: Inventory.GetItemDefMeta:output_type -> CInventory_GetItemDefMeta_Response
	15, // 32: Inventory.GetUserPurchaseInfo:output_type -> CInventory_GetUserPurchaseInfo_Response
	17, // 33: Inventory.PurchaseInit:output_type -> CInventory_PurchaseInit_Response
	1,  // 34: Inventory.PurchaseFinalize:output_type -> CInventory_Response
	1,  // 35: Inventory.InspectItem:output_type -> CInventory_Response
	23, // 36: InventoryClient.NotifyNewItems:output_type -> NoResponse
	20, // [20:37] is the sub-list for method output_type
	3,  // [3:20] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_steammessages_inventory_steamclient_proto_init() }
func file_steammessages_inventory_steamclient_proto_init() {
	if File_steammessages_inventory_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_inventory_steamclient_proto_rawDesc), len(file_steammessages_inventory_steamclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_steammessages_inventory_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_inventory_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_inventory_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_inventory_steamclient_proto = out.File
	file_steammessages_inventory_steamclient_proto_goTypes = nil
	file_steammessages_inventory_steamclient_proto_depIdxs = nil
}
