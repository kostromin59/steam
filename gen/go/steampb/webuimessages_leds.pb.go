// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: webuimessages_leds.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgLEDColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R             *float32               `protobuf:"fixed32,1,opt,name=r" json:"r,omitempty"`
	G             *float32               `protobuf:"fixed32,2,opt,name=g" json:"g,omitempty"`
	B             *float32               `protobuf:"fixed32,3,opt,name=b" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgLEDColor) Reset() {
	*x = CMsgLEDColor{}
	mi := &file_webuimessages_leds_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLEDColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLEDColor) ProtoMessage() {}

func (x *CMsgLEDColor) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLEDColor.ProtoReflect.Descriptor instead.
func (*CMsgLEDColor) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgLEDColor) GetR() float32 {
	if x != nil && x.R != nil {
		return *x.R
	}
	return 0
}

func (x *CMsgLEDColor) GetG() float32 {
	if x != nil && x.G != nil {
		return *x.G
	}
	return 0
}

func (x *CMsgLEDColor) GetB() float32 {
	if x != nil && x.B != nil {
		return *x.B
	}
	return 0
}

type CMsgLEDManagerDevice struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 *int32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Enabled            *bool                  `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	Name               *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	EffectsAvailable   []string               `protobuf:"bytes,4,rep,name=effects_available,json=effectsAvailable" json:"effects_available,omitempty"`
	Effect             *string                `protobuf:"bytes,5,opt,name=effect" json:"effect,omitempty"`
	SupportsColor      *bool                  `protobuf:"varint,9,opt,name=supports_color,json=supportsColor" json:"supports_color,omitempty"`
	Color              *CMsgLEDColor          `protobuf:"bytes,10,opt,name=color" json:"color,omitempty"`
	SupportsSpeed      *bool                  `protobuf:"varint,11,opt,name=supports_speed,json=supportsSpeed" json:"supports_speed,omitempty"`
	Speed              *float32               `protobuf:"fixed32,12,opt,name=speed" json:"speed,omitempty"`
	SupportsBrightness *bool                  `protobuf:"varint,13,opt,name=supports_brightness,json=supportsBrightness" json:"supports_brightness,omitempty"`
	Brightness         *float32               `protobuf:"fixed32,14,opt,name=brightness" json:"brightness,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CMsgLEDManagerDevice) Reset() {
	*x = CMsgLEDManagerDevice{}
	mi := &file_webuimessages_leds_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLEDManagerDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLEDManagerDevice) ProtoMessage() {}

func (x *CMsgLEDManagerDevice) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLEDManagerDevice.ProtoReflect.Descriptor instead.
func (*CMsgLEDManagerDevice) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgLEDManagerDevice) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgLEDManagerDevice) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *CMsgLEDManagerDevice) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgLEDManagerDevice) GetEffectsAvailable() []string {
	if x != nil {
		return x.EffectsAvailable
	}
	return nil
}

func (x *CMsgLEDManagerDevice) GetEffect() string {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return ""
}

func (x *CMsgLEDManagerDevice) GetSupportsColor() bool {
	if x != nil && x.SupportsColor != nil {
		return *x.SupportsColor
	}
	return false
}

func (x *CMsgLEDManagerDevice) GetColor() *CMsgLEDColor {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *CMsgLEDManagerDevice) GetSupportsSpeed() bool {
	if x != nil && x.SupportsSpeed != nil {
		return *x.SupportsSpeed
	}
	return false
}

func (x *CMsgLEDManagerDevice) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *CMsgLEDManagerDevice) GetSupportsBrightness() bool {
	if x != nil && x.SupportsBrightness != nil {
		return *x.SupportsBrightness
	}
	return false
}

func (x *CMsgLEDManagerDevice) GetBrightness() float32 {
	if x != nil && x.Brightness != nil {
		return *x.Brightness
	}
	return 0
}

type CMsgLEDManagerState struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	IsServiceAvailable *bool                   `protobuf:"varint,1,opt,name=is_service_available,json=isServiceAvailable" json:"is_service_available,omitempty"`
	Devices            []*CMsgLEDManagerDevice `protobuf:"bytes,2,rep,name=devices" json:"devices,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CMsgLEDManagerState) Reset() {
	*x = CMsgLEDManagerState{}
	mi := &file_webuimessages_leds_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgLEDManagerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgLEDManagerState) ProtoMessage() {}

func (x *CMsgLEDManagerState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgLEDManagerState.ProtoReflect.Descriptor instead.
func (*CMsgLEDManagerState) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgLEDManagerState) GetIsServiceAvailable() bool {
	if x != nil && x.IsServiceAvailable != nil {
		return *x.IsServiceAvailable
	}
	return false
}

func (x *CMsgLEDManagerState) GetDevices() []*CMsgLEDManagerDevice {
	if x != nil {
		return x.Devices
	}
	return nil
}

type CLEDManager_GetState_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_GetState_Request) Reset() {
	*x = CLEDManager_GetState_Request{}
	mi := &file_webuimessages_leds_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_GetState_Request) ProtoMessage() {}

func (x *CLEDManager_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_GetState_Request.ProtoReflect.Descriptor instead.
func (*CLEDManager_GetState_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{3}
}

type CLEDManager_GetState_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *CMsgLEDManagerState   `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_GetState_Response) Reset() {
	*x = CLEDManager_GetState_Response{}
	mi := &file_webuimessages_leds_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_GetState_Response) ProtoMessage() {}

func (x *CLEDManager_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_GetState_Response.ProtoReflect.Descriptor instead.
func (*CLEDManager_GetState_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{4}
}

func (x *CLEDManager_GetState_Response) GetState() *CMsgLEDManagerState {
	if x != nil {
		return x.State
	}
	return nil
}

type CLEDManager_StateChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_StateChanged_Notification) Reset() {
	*x = CLEDManager_StateChanged_Notification{}
	mi := &file_webuimessages_leds_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_StateChanged_Notification) ProtoMessage() {}

func (x *CLEDManager_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CLEDManager_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{5}
}

type CLEDManager_SetColor_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *int32                 `protobuf:"varint,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Color         *CMsgLEDColor          `protobuf:"bytes,2,opt,name=color" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetColor_Request) Reset() {
	*x = CLEDManager_SetColor_Request{}
	mi := &file_webuimessages_leds_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetColor_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetColor_Request) ProtoMessage() {}

func (x *CLEDManager_SetColor_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetColor_Request.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetColor_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{6}
}

func (x *CLEDManager_SetColor_Request) GetDeviceId() int32 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

func (x *CLEDManager_SetColor_Request) GetColor() *CMsgLEDColor {
	if x != nil {
		return x.Color
	}
	return nil
}

type CLEDManager_SetColor_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetColor_Response) Reset() {
	*x = CLEDManager_SetColor_Response{}
	mi := &file_webuimessages_leds_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetColor_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetColor_Response) ProtoMessage() {}

func (x *CLEDManager_SetColor_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetColor_Response.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetColor_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{7}
}

type CLEDManager_SetEnabled_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *int32                 `protobuf:"varint,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Enabled       *bool                  `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetEnabled_Request) Reset() {
	*x = CLEDManager_SetEnabled_Request{}
	mi := &file_webuimessages_leds_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetEnabled_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetEnabled_Request) ProtoMessage() {}

func (x *CLEDManager_SetEnabled_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetEnabled_Request.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetEnabled_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{8}
}

func (x *CLEDManager_SetEnabled_Request) GetDeviceId() int32 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

func (x *CLEDManager_SetEnabled_Request) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CLEDManager_SetEnabled_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetEnabled_Response) Reset() {
	*x = CLEDManager_SetEnabled_Response{}
	mi := &file_webuimessages_leds_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetEnabled_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetEnabled_Response) ProtoMessage() {}

func (x *CLEDManager_SetEnabled_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetEnabled_Response.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetEnabled_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{9}
}

type CLEDManager_SetEffect_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *int32                 `protobuf:"varint,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Effect        *string                `protobuf:"bytes,2,opt,name=effect" json:"effect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetEffect_Request) Reset() {
	*x = CLEDManager_SetEffect_Request{}
	mi := &file_webuimessages_leds_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetEffect_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetEffect_Request) ProtoMessage() {}

func (x *CLEDManager_SetEffect_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetEffect_Request.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetEffect_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{10}
}

func (x *CLEDManager_SetEffect_Request) GetDeviceId() int32 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

func (x *CLEDManager_SetEffect_Request) GetEffect() string {
	if x != nil && x.Effect != nil {
		return *x.Effect
	}
	return ""
}

type CLEDManager_SetEffect_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetEffect_Response) Reset() {
	*x = CLEDManager_SetEffect_Response{}
	mi := &file_webuimessages_leds_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetEffect_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetEffect_Response) ProtoMessage() {}

func (x *CLEDManager_SetEffect_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetEffect_Response.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetEffect_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{11}
}

type CLEDManager_SetSpeed_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *int32                 `protobuf:"varint,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Speed         *float32               `protobuf:"fixed32,2,opt,name=speed" json:"speed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetSpeed_Request) Reset() {
	*x = CLEDManager_SetSpeed_Request{}
	mi := &file_webuimessages_leds_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetSpeed_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetSpeed_Request) ProtoMessage() {}

func (x *CLEDManager_SetSpeed_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetSpeed_Request.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetSpeed_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{12}
}

func (x *CLEDManager_SetSpeed_Request) GetDeviceId() int32 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

func (x *CLEDManager_SetSpeed_Request) GetSpeed() float32 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

type CLEDManager_SetSpeed_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetSpeed_Response) Reset() {
	*x = CLEDManager_SetSpeed_Response{}
	mi := &file_webuimessages_leds_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetSpeed_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetSpeed_Response) ProtoMessage() {}

func (x *CLEDManager_SetSpeed_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetSpeed_Response.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetSpeed_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{13}
}

type CLEDManager_SetBrightness_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *int32                 `protobuf:"varint,1,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	Brightness    *float32               `protobuf:"fixed32,2,opt,name=brightness" json:"brightness,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetBrightness_Request) Reset() {
	*x = CLEDManager_SetBrightness_Request{}
	mi := &file_webuimessages_leds_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetBrightness_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetBrightness_Request) ProtoMessage() {}

func (x *CLEDManager_SetBrightness_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetBrightness_Request.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetBrightness_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{14}
}

func (x *CLEDManager_SetBrightness_Request) GetDeviceId() int32 {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return 0
}

func (x *CLEDManager_SetBrightness_Request) GetBrightness() float32 {
	if x != nil && x.Brightness != nil {
		return *x.Brightness
	}
	return 0
}

type CLEDManager_SetBrightness_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLEDManager_SetBrightness_Response) Reset() {
	*x = CLEDManager_SetBrightness_Response{}
	mi := &file_webuimessages_leds_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLEDManager_SetBrightness_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLEDManager_SetBrightness_Response) ProtoMessage() {}

func (x *CLEDManager_SetBrightness_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_leds_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLEDManager_SetBrightness_Response.ProtoReflect.Descriptor instead.
func (*CLEDManager_SetBrightness_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_leds_proto_rawDescGZIP(), []int{15}
}

var File_webuimessages_leds_proto protoreflect.FileDescriptor

const file_webuimessages_leds_proto_rawDesc = "" +
	"\n" +
	"\x18webuimessages_leds.proto\x1a\venums.proto\x1a\x18steammessages_base.proto\x1a\x18webuimessages_base.proto\"8\n" +
	"\fCMsgLEDColor\x12\f\n" +
	"\x01r\x18\x01 \x01(\x02R\x01r\x12\f\n" +
	"\x01g\x18\x02 \x01(\x02R\x01g\x12\f\n" +
	"\x01b\x18\x03 \x01(\x02R\x01b\"\xf3\x02\n" +
	"\x14CMsgLEDManagerDevice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12+\n" +
	"\x11effects_available\x18\x04 \x03(\tR\x10effectsAvailable\x12\x16\n" +
	"\x06effect\x18\x05 \x01(\tR\x06effect\x12%\n" +
	"\x0esupports_color\x18\t \x01(\bR\rsupportsColor\x12#\n" +
	"\x05color\x18\n" +
	" \x01(\v2\r.CMsgLEDColorR\x05color\x12%\n" +
	"\x0esupports_speed\x18\v \x01(\bR\rsupportsSpeed\x12\x14\n" +
	"\x05speed\x18\f \x01(\x02R\x05speed\x12/\n" +
	"\x13supports_brightness\x18\r \x01(\bR\x12supportsBrightness\x12\x1e\n" +
	"\n" +
	"brightness\x18\x0e \x01(\x02R\n" +
	"brightness\"x\n" +
	"\x13CMsgLEDManagerState\x120\n" +
	"\x14is_service_available\x18\x01 \x01(\bR\x12isServiceAvailable\x12/\n" +
	"\adevices\x18\x02 \x03(\v2\x15.CMsgLEDManagerDeviceR\adevices\"\x1e\n" +
	"\x1cCLEDManager_GetState_Request\"K\n" +
	"\x1dCLEDManager_GetState_Response\x12*\n" +
	"\x05state\x18\x01 \x01(\v2\x14.CMsgLEDManagerStateR\x05state\"'\n" +
	"%CLEDManager_StateChanged_Notification\"`\n" +
	"\x1cCLEDManager_SetColor_Request\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\x05R\bdeviceId\x12#\n" +
	"\x05color\x18\x02 \x01(\v2\r.CMsgLEDColorR\x05color\"\x1f\n" +
	"\x1dCLEDManager_SetColor_Response\"W\n" +
	"\x1eCLEDManager_SetEnabled_Request\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\x05R\bdeviceId\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\"!\n" +
	"\x1fCLEDManager_SetEnabled_Response\"T\n" +
	"\x1dCLEDManager_SetEffect_Request\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\x05R\bdeviceId\x12\x16\n" +
	"\x06effect\x18\x02 \x01(\tR\x06effect\" \n" +
	"\x1eCLEDManager_SetEffect_Response\"Q\n" +
	"\x1cCLEDManager_SetSpeed_Request\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\x05R\bdeviceId\x12\x14\n" +
	"\x05speed\x18\x02 \x01(\x02R\x05speed\"\x1f\n" +
	"\x1dCLEDManager_SetSpeed_Response\"`\n" +
	"!CLEDManager_SetBrightness_Request\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\x05R\bdeviceId\x12\x1e\n" +
	"\n" +
	"brightness\x18\x02 \x01(\x02R\n" +
	"brightness\"$\n" +
	"\"CLEDManager_SetBrightness_Response2\xbc\x04\n" +
	"\n" +
	"LEDManager\x12I\n" +
	"\bGetState\x12\x1d.CLEDManager_GetState_Request\x1a\x1e.CLEDManager_GetState_Response\x12N\n" +
	"\x12NotifyStateChanged\x12&.CLEDManager_StateChanged_Notification\x1a\x10.WebUINoResponse\x12O\n" +
	"\n" +
	"SetEnabled\x12\x1f.CLEDManager_SetEnabled_Request\x1a .CLEDManager_SetEnabled_Response\x12I\n" +
	"\bSetColor\x12\x1d.CLEDManager_SetColor_Request\x1a\x1e.CLEDManager_SetColor_Response\x12L\n" +
	"\tSetEffect\x12\x1e.CLEDManager_SetEffect_Request\x1a\x1f.CLEDManager_SetEffect_Response\x12I\n" +
	"\bSetSpeed\x12\x1d.CLEDManager_SetSpeed_Request\x1a\x1e.CLEDManager_SetSpeed_Response\x12X\n" +
	"\rSetBrightness\x12\".CLEDManager_SetBrightness_Request\x1a#.CLEDManager_SetBrightness_Response\x1a\x04\x80\x97\"\x01B\x05H\x01\x80\x01\x01"

var (
	file_webuimessages_leds_proto_rawDescOnce sync.Once
	file_webuimessages_leds_proto_rawDescData []byte
)

func file_webuimessages_leds_proto_rawDescGZIP() []byte {
	file_webuimessages_leds_proto_rawDescOnce.Do(func() {
		file_webuimessages_leds_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_webuimessages_leds_proto_rawDesc), len(file_webuimessages_leds_proto_rawDesc)))
	})
	return file_webuimessages_leds_proto_rawDescData
}

var file_webuimessages_leds_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_webuimessages_leds_proto_goTypes = []any{
	(*CMsgLEDColor)(nil),                          // 0: CMsgLEDColor
	(*CMsgLEDManagerDevice)(nil),                  // 1: CMsgLEDManagerDevice
	(*CMsgLEDManagerState)(nil),                   // 2: CMsgLEDManagerState
	(*CLEDManager_GetState_Request)(nil),          // 3: CLEDManager_GetState_Request
	(*CLEDManager_GetState_Response)(nil),         // 4: CLEDManager_GetState_Response
	(*CLEDManager_StateChanged_Notification)(nil), // 5: CLEDManager_StateChanged_Notification
	(*CLEDManager_SetColor_Request)(nil),          // 6: CLEDManager_SetColor_Request
	(*CLEDManager_SetColor_Response)(nil),         // 7: CLEDManager_SetColor_Response
	(*CLEDManager_SetEnabled_Request)(nil),        // 8: CLEDManager_SetEnabled_Request
	(*CLEDManager_SetEnabled_Response)(nil),       // 9: CLEDManager_SetEnabled_Response
	(*CLEDManager_SetEffect_Request)(nil),         // 10: CLEDManager_SetEffect_Request
	(*CLEDManager_SetEffect_Response)(nil),        // 11: CLEDManager_SetEffect_Response
	(*CLEDManager_SetSpeed_Request)(nil),          // 12: CLEDManager_SetSpeed_Request
	(*CLEDManager_SetSpeed_Response)(nil),         // 13: CLEDManager_SetSpeed_Response
	(*CLEDManager_SetBrightness_Request)(nil),     // 14: CLEDManager_SetBrightness_Request
	(*CLEDManager_SetBrightness_Response)(nil),    // 15: CLEDManager_SetBrightness_Response
	(*WebUINoResponse)(nil),                       // 16: WebUINoResponse
}
var file_webuimessages_leds_proto_depIdxs = []int32{
	0,  // 0: CMsgLEDManagerDevice.color:type_name -> CMsgLEDColor
	1,  // 1: CMsgLEDManagerState.devices:type_name -> CMsgLEDManagerDevice
	2,  // 2: CLEDManager_GetState_Response.state:type_name -> CMsgLEDManagerState
	0,  // 3: CLEDManager_SetColor_Request.color:type_name -> CMsgLEDColor
	3,  // 4: LEDManager.GetState:input_type -> CLEDManager_GetState_Request
	5,  // 5: LEDManager.NotifyStateChanged:input_type -> CLEDManager_StateChanged_Notification
	8,  // 6: LEDManager.SetEnabled:input_type -> CLEDManager_SetEnabled_Request
	6,  // 7: LEDManager.SetColor:input_type -> CLEDManager_SetColor_Request
	10, // 8: LEDManager.SetEffect:input_type -> CLEDManager_SetEffect_Request
	12, // 9: LEDManager.SetSpeed:input_type -> CLEDManager_SetSpeed_Request
	14, // 10: LEDManager.SetBrightness:input_type -> CLEDManager_SetBrightness_Request
	4,  // 11: LEDManager.GetState:output_type -> CLEDManager_GetState_Response
	16, // 12: LEDManager.NotifyStateChanged:output_type -> WebUINoResponse
	9,  // 13: LEDManager.SetEnabled:output_type -> CLEDManager_SetEnabled_Response
	7,  // 14: LEDManager.SetColor:output_type -> CLEDManager_SetColor_Response
	11, // 15: LEDManager.SetEffect:output_type -> CLEDManager_SetEffect_Response
	13, // 16: LEDManager.SetSpeed:output_type -> CLEDManager_SetSpeed_Response
	15, // 17: LEDManager.SetBrightness:output_type -> CLEDManager_SetBrightness_Response
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_webuimessages_leds_proto_init() }
func file_webuimessages_leds_proto_init() {
	if File_webuimessages_leds_proto != nil {
		return
	}
	file_enums_proto_init()
	file_steammessages_base_proto_init()
	file_webuimessages_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_webuimessages_leds_proto_rawDesc), len(file_webuimessages_leds_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_webuimessages_leds_proto_goTypes,
		DependencyIndexes: file_webuimessages_leds_proto_depIdxs,
		MessageInfos:      file_webuimessages_leds_proto_msgTypes,
	}.Build()
	File_webuimessages_leds_proto = out.File
	file_webuimessages_leds_proto_goTypes = nil
	file_webuimessages_leds_proto_depIdxs = nil
}
