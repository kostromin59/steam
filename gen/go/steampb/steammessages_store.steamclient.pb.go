// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_store.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EStoreDiscoveryQueueType int32

const (
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeNew                   EStoreDiscoveryQueueType = 0
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeComingSoon            EStoreDiscoveryQueueType = 1
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeRecommended           EStoreDiscoveryQueueType = 2
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeEveryNewRelease       EStoreDiscoveryQueueType = 3
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeMLRecommender         EStoreDiscoveryQueueType = 5
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeWishlistOnSale        EStoreDiscoveryQueueType = 6
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeDLC                   EStoreDiscoveryQueueType = 7
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeDLCOnSale             EStoreDiscoveryQueueType = 8
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeRecommendedComingSoon EStoreDiscoveryQueueType = 9
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeRecommendedFree       EStoreDiscoveryQueueType = 10
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeRecommendedOnSale     EStoreDiscoveryQueueType = 11
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeRecommendedDemos      EStoreDiscoveryQueueType = 12
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeDLCNewReleases        EStoreDiscoveryQueueType = 13
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeDLCTopSellers         EStoreDiscoveryQueueType = 14
	EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeMAX                   EStoreDiscoveryQueueType = 15
)

// Enum value maps for EStoreDiscoveryQueueType.
var (
	EStoreDiscoveryQueueType_name = map[int32]string{
		0:  "k_EStoreDiscoveryQueueTypeNew",
		1:  "k_EStoreDiscoveryQueueTypeComingSoon",
		2:  "k_EStoreDiscoveryQueueTypeRecommended",
		3:  "k_EStoreDiscoveryQueueTypeEveryNewRelease",
		5:  "k_EStoreDiscoveryQueueTypeMLRecommender",
		6:  "k_EStoreDiscoveryQueueTypeWishlistOnSale",
		7:  "k_EStoreDiscoveryQueueTypeDLC",
		8:  "k_EStoreDiscoveryQueueTypeDLCOnSale",
		9:  "k_EStoreDiscoveryQueueTypeRecommendedComingSoon",
		10: "k_EStoreDiscoveryQueueTypeRecommendedFree",
		11: "k_EStoreDiscoveryQueueTypeRecommendedOnSale",
		12: "k_EStoreDiscoveryQueueTypeRecommendedDemos",
		13: "k_EStoreDiscoveryQueueTypeDLCNewReleases",
		14: "k_EStoreDiscoveryQueueTypeDLCTopSellers",
		15: "k_EStoreDiscoveryQueueTypeMAX",
	}
	EStoreDiscoveryQueueType_value = map[string]int32{
		"k_EStoreDiscoveryQueueTypeNew":                   0,
		"k_EStoreDiscoveryQueueTypeComingSoon":            1,
		"k_EStoreDiscoveryQueueTypeRecommended":           2,
		"k_EStoreDiscoveryQueueTypeEveryNewRelease":       3,
		"k_EStoreDiscoveryQueueTypeMLRecommender":         5,
		"k_EStoreDiscoveryQueueTypeWishlistOnSale":        6,
		"k_EStoreDiscoveryQueueTypeDLC":                   7,
		"k_EStoreDiscoveryQueueTypeDLCOnSale":             8,
		"k_EStoreDiscoveryQueueTypeRecommendedComingSoon": 9,
		"k_EStoreDiscoveryQueueTypeRecommendedFree":       10,
		"k_EStoreDiscoveryQueueTypeRecommendedOnSale":     11,
		"k_EStoreDiscoveryQueueTypeRecommendedDemos":      12,
		"k_EStoreDiscoveryQueueTypeDLCNewReleases":        13,
		"k_EStoreDiscoveryQueueTypeDLCTopSellers":         14,
		"k_EStoreDiscoveryQueueTypeMAX":                   15,
	}
)

func (x EStoreDiscoveryQueueType) Enum() *EStoreDiscoveryQueueType {
	p := new(EStoreDiscoveryQueueType)
	*p = x
	return p
}

func (x EStoreDiscoveryQueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStoreDiscoveryQueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_store_steamclient_proto_enumTypes[0].Descriptor()
}

func (EStoreDiscoveryQueueType) Type() protoreflect.EnumType {
	return &file_steammessages_store_steamclient_proto_enumTypes[0]
}

func (x EStoreDiscoveryQueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStoreDiscoveryQueueType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStoreDiscoveryQueueType(num)
	return nil
}

// Deprecated: Use EStoreDiscoveryQueueType.Descriptor instead.
func (EStoreDiscoveryQueueType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{0}
}

type EPlaytestStatus int32

const (
	EPlaytestStatus_k_ETesterStatusNone    EPlaytestStatus = 0
	EPlaytestStatus_k_ETesterStatusPending EPlaytestStatus = 1
	EPlaytestStatus_k_ETesterStatusInvited EPlaytestStatus = 2
	EPlaytestStatus_k_ETesterStatusGranted EPlaytestStatus = 3
	EPlaytestStatus_k_ETesterStatusExpired EPlaytestStatus = 4
)

// Enum value maps for EPlaytestStatus.
var (
	EPlaytestStatus_name = map[int32]string{
		0: "k_ETesterStatusNone",
		1: "k_ETesterStatusPending",
		2: "k_ETesterStatusInvited",
		3: "k_ETesterStatusGranted",
		4: "k_ETesterStatusExpired",
	}
	EPlaytestStatus_value = map[string]int32{
		"k_ETesterStatusNone":    0,
		"k_ETesterStatusPending": 1,
		"k_ETesterStatusInvited": 2,
		"k_ETesterStatusGranted": 3,
		"k_ETesterStatusExpired": 4,
	}
)

func (x EPlaytestStatus) Enum() *EPlaytestStatus {
	p := new(EPlaytestStatus)
	*p = x
	return p
}

func (x EPlaytestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPlaytestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_store_steamclient_proto_enumTypes[1].Descriptor()
}

func (EPlaytestStatus) Type() protoreflect.EnumType {
	return &file_steammessages_store_steamclient_proto_enumTypes[1]
}

func (x EPlaytestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPlaytestStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPlaytestStatus(num)
	return nil
}

// Deprecated: Use EPlaytestStatus.Descriptor instead.
func (EPlaytestStatus) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{1}
}

type EAppReportType int32

const (
	EAppReportType_k_EAppReportType_Invalid                             EAppReportType = 0
	EAppReportType_k_EAppReportType_Scam                                EAppReportType = 1
	EAppReportType_k_EAppReportType_Malware                             EAppReportType = 2
	EAppReportType_k_EAppReportType_HateSpeech                          EAppReportType = 3
	EAppReportType_k_EAppReportType_Pornography                         EAppReportType = 4
	EAppReportType_k_EAppReportType_NonLabeledAdultContent              EAppReportType = 5
	EAppReportType_k_EAppReportType_Libelous                            EAppReportType = 6
	EAppReportType_k_EAppReportType_Offensive                           EAppReportType = 7
	EAppReportType_k_EAppReportType_ExploitsChildren                    EAppReportType = 8
	EAppReportType_k_EAppReportType_MtxWithNonSteamWalletPaymentMethods EAppReportType = 9
	EAppReportType_k_EAppReportType_CopyrightViolation                  EAppReportType = 10
	EAppReportType_k_EAppReportType_ViolatesLaws                        EAppReportType = 11
	EAppReportType_k_EAppReportType_Other                               EAppReportType = 12
	EAppReportType_k_EAppReportType_Broken                              EAppReportType = 13
	EAppReportType_k_EAppReportType_AIContentReport                     EAppReportType = 14
)

// Enum value maps for EAppReportType.
var (
	EAppReportType_name = map[int32]string{
		0:  "k_EAppReportType_Invalid",
		1:  "k_EAppReportType_Scam",
		2:  "k_EAppReportType_Malware",
		3:  "k_EAppReportType_HateSpeech",
		4:  "k_EAppReportType_Pornography",
		5:  "k_EAppReportType_NonLabeledAdultContent",
		6:  "k_EAppReportType_Libelous",
		7:  "k_EAppReportType_Offensive",
		8:  "k_EAppReportType_ExploitsChildren",
		9:  "k_EAppReportType_MtxWithNonSteamWalletPaymentMethods",
		10: "k_EAppReportType_CopyrightViolation",
		11: "k_EAppReportType_ViolatesLaws",
		12: "k_EAppReportType_Other",
		13: "k_EAppReportType_Broken",
		14: "k_EAppReportType_AIContentReport",
	}
	EAppReportType_value = map[string]int32{
		"k_EAppReportType_Invalid":                             0,
		"k_EAppReportType_Scam":                                1,
		"k_EAppReportType_Malware":                             2,
		"k_EAppReportType_HateSpeech":                          3,
		"k_EAppReportType_Pornography":                         4,
		"k_EAppReportType_NonLabeledAdultContent":              5,
		"k_EAppReportType_Libelous":                            6,
		"k_EAppReportType_Offensive":                           7,
		"k_EAppReportType_ExploitsChildren":                    8,
		"k_EAppReportType_MtxWithNonSteamWalletPaymentMethods": 9,
		"k_EAppReportType_CopyrightViolation":                  10,
		"k_EAppReportType_ViolatesLaws":                        11,
		"k_EAppReportType_Other":                               12,
		"k_EAppReportType_Broken":                              13,
		"k_EAppReportType_AIContentReport":                     14,
	}
)

func (x EAppReportType) Enum() *EAppReportType {
	p := new(EAppReportType)
	*p = x
	return p
}

func (x EAppReportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAppReportType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_store_steamclient_proto_enumTypes[2].Descriptor()
}

func (EAppReportType) Type() protoreflect.EnumType {
	return &file_steammessages_store_steamclient_proto_enumTypes[2]
}

func (x EAppReportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EAppReportType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EAppReportType(num)
	return nil
}

// Deprecated: Use EAppReportType.Descriptor instead.
func (EAppReportType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{2}
}

type EUserReviewScorePreference int32

const (
	EUserReviewScorePreference_k_EUserReviewScorePreference_Unset        EUserReviewScorePreference = 0
	EUserReviewScorePreference_k_EUserReviewScorePreference_IncludeAll   EUserReviewScorePreference = 1
	EUserReviewScorePreference_k_EUserReviewScorePreference_ExcludeBombs EUserReviewScorePreference = 2
)

// Enum value maps for EUserReviewScorePreference.
var (
	EUserReviewScorePreference_name = map[int32]string{
		0: "k_EUserReviewScorePreference_Unset",
		1: "k_EUserReviewScorePreference_IncludeAll",
		2: "k_EUserReviewScorePreference_ExcludeBombs",
	}
	EUserReviewScorePreference_value = map[string]int32{
		"k_EUserReviewScorePreference_Unset":        0,
		"k_EUserReviewScorePreference_IncludeAll":   1,
		"k_EUserReviewScorePreference_ExcludeBombs": 2,
	}
)

func (x EUserReviewScorePreference) Enum() *EUserReviewScorePreference {
	p := new(EUserReviewScorePreference)
	*p = x
	return p
}

func (x EUserReviewScorePreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EUserReviewScorePreference) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_store_steamclient_proto_enumTypes[3].Descriptor()
}

func (EUserReviewScorePreference) Type() protoreflect.EnumType {
	return &file_steammessages_store_steamclient_proto_enumTypes[3]
}

func (x EUserReviewScorePreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EUserReviewScorePreference) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EUserReviewScorePreference(num)
	return nil
}

// Deprecated: Use EUserReviewScorePreference.Descriptor instead.
func (EUserReviewScorePreference) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{3}
}

type EPartnerLinkTrackingBackfillSource int32

const (
	EPartnerLinkTrackingBackfillSource_k_EPartnerLinkTrackingBackfillSource_None    EPartnerLinkTrackingBackfillSource = 0
	EPartnerLinkTrackingBackfillSource_k_EPartnerLinkTrackingBackfillSource_Web     EPartnerLinkTrackingBackfillSource = 1
	EPartnerLinkTrackingBackfillSource_k_EPartnerLinkTrackingBackfillSource_Mobile  EPartnerLinkTrackingBackfillSource = 2
	EPartnerLinkTrackingBackfillSource_k_EPartnerLinkTrackingBackfillSource_Desktop EPartnerLinkTrackingBackfillSource = 3
)

// Enum value maps for EPartnerLinkTrackingBackfillSource.
var (
	EPartnerLinkTrackingBackfillSource_name = map[int32]string{
		0: "k_EPartnerLinkTrackingBackfillSource_None",
		1: "k_EPartnerLinkTrackingBackfillSource_Web",
		2: "k_EPartnerLinkTrackingBackfillSource_Mobile",
		3: "k_EPartnerLinkTrackingBackfillSource_Desktop",
	}
	EPartnerLinkTrackingBackfillSource_value = map[string]int32{
		"k_EPartnerLinkTrackingBackfillSource_None":    0,
		"k_EPartnerLinkTrackingBackfillSource_Web":     1,
		"k_EPartnerLinkTrackingBackfillSource_Mobile":  2,
		"k_EPartnerLinkTrackingBackfillSource_Desktop": 3,
	}
)

func (x EPartnerLinkTrackingBackfillSource) Enum() *EPartnerLinkTrackingBackfillSource {
	p := new(EPartnerLinkTrackingBackfillSource)
	*p = x
	return p
}

func (x EPartnerLinkTrackingBackfillSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EPartnerLinkTrackingBackfillSource) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_store_steamclient_proto_enumTypes[4].Descriptor()
}

func (EPartnerLinkTrackingBackfillSource) Type() protoreflect.EnumType {
	return &file_steammessages_store_steamclient_proto_enumTypes[4]
}

func (x EPartnerLinkTrackingBackfillSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EPartnerLinkTrackingBackfillSource) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EPartnerLinkTrackingBackfillSource(num)
	return nil
}

// Deprecated: Use EPartnerLinkTrackingBackfillSource.Descriptor instead.
func (EPartnerLinkTrackingBackfillSource) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{4}
}

type CStore_RegisterCDKey_Request struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ActivationCode      *string                `protobuf:"bytes,1,opt,name=activation_code,json=activationCode" json:"activation_code,omitempty"`
	PurchasePlatform    *int32                 `protobuf:"varint,2,opt,name=purchase_platform,json=purchasePlatform" json:"purchase_platform,omitempty"`
	IsRequestFromClient *bool                  `protobuf:"varint,3,opt,name=is_request_from_client,json=isRequestFromClient" json:"is_request_from_client,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CStore_RegisterCDKey_Request) Reset() {
	*x = CStore_RegisterCDKey_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_RegisterCDKey_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_RegisterCDKey_Request) ProtoMessage() {}

func (x *CStore_RegisterCDKey_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_RegisterCDKey_Request.ProtoReflect.Descriptor instead.
func (*CStore_RegisterCDKey_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CStore_RegisterCDKey_Request) GetActivationCode() string {
	if x != nil && x.ActivationCode != nil {
		return *x.ActivationCode
	}
	return ""
}

func (x *CStore_RegisterCDKey_Request) GetPurchasePlatform() int32 {
	if x != nil && x.PurchasePlatform != nil {
		return *x.PurchasePlatform
	}
	return 0
}

func (x *CStore_RegisterCDKey_Request) GetIsRequestFromClient() bool {
	if x != nil && x.IsRequestFromClient != nil {
		return *x.IsRequestFromClient
	}
	return false
}

type CStore_PurchaseReceiptInfo struct {
	state           protoimpl.MessageState                 `protogen:"open.v1"`
	Transactionid   *uint64                                `protobuf:"varint,1,opt,name=transactionid" json:"transactionid,omitempty"`
	Packageid       *uint32                                `protobuf:"varint,2,opt,name=packageid" json:"packageid,omitempty"`
	PurchaseStatus  *uint32                                `protobuf:"varint,3,opt,name=purchase_status,json=purchaseStatus" json:"purchase_status,omitempty"`
	ResultDetail    *uint32                                `protobuf:"varint,4,opt,name=result_detail,json=resultDetail" json:"result_detail,omitempty"`
	TransactionTime *uint32                                `protobuf:"varint,5,opt,name=transaction_time,json=transactionTime" json:"transaction_time,omitempty"`
	PaymentMethod   *uint32                                `protobuf:"varint,6,opt,name=payment_method,json=paymentMethod" json:"payment_method,omitempty"`
	BasePrice       *uint64                                `protobuf:"varint,7,opt,name=base_price,json=basePrice" json:"base_price,omitempty"`
	TotalDiscount   *uint64                                `protobuf:"varint,8,opt,name=total_discount,json=totalDiscount" json:"total_discount,omitempty"`
	Tax             *uint64                                `protobuf:"varint,9,opt,name=tax" json:"tax,omitempty"`
	Shipping        *uint64                                `protobuf:"varint,10,opt,name=shipping" json:"shipping,omitempty"`
	CurrencyCode    *uint32                                `protobuf:"varint,11,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	CountryCode     *string                                `protobuf:"bytes,12,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	ErrorHeadline   *string                                `protobuf:"bytes,13,opt,name=error_headline,json=errorHeadline" json:"error_headline,omitempty"`
	ErrorString     *string                                `protobuf:"bytes,14,opt,name=error_string,json=errorString" json:"error_string,omitempty"`
	ErrorLinkText   *string                                `protobuf:"bytes,15,opt,name=error_link_text,json=errorLinkText" json:"error_link_text,omitempty"`
	ErrorLinkUrl    *string                                `protobuf:"bytes,16,opt,name=error_link_url,json=errorLinkUrl" json:"error_link_url,omitempty"`
	ErrorAppid      *uint32                                `protobuf:"varint,17,opt,name=error_appid,json=errorAppid" json:"error_appid,omitempty"`
	LineItems       []*CStore_PurchaseReceiptInfo_LineItem `protobuf:"bytes,18,rep,name=line_items,json=lineItems" json:"line_items,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStore_PurchaseReceiptInfo) Reset() {
	*x = CStore_PurchaseReceiptInfo{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_PurchaseReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_PurchaseReceiptInfo) ProtoMessage() {}

func (x *CStore_PurchaseReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_PurchaseReceiptInfo.ProtoReflect.Descriptor instead.
func (*CStore_PurchaseReceiptInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CStore_PurchaseReceiptInfo) GetTransactionid() uint64 {
	if x != nil && x.Transactionid != nil {
		return *x.Transactionid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetPurchaseStatus() uint32 {
	if x != nil && x.PurchaseStatus != nil {
		return *x.PurchaseStatus
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetResultDetail() uint32 {
	if x != nil && x.ResultDetail != nil {
		return *x.ResultDetail
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetTransactionTime() uint32 {
	if x != nil && x.TransactionTime != nil {
		return *x.TransactionTime
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetPaymentMethod() uint32 {
	if x != nil && x.PaymentMethod != nil {
		return *x.PaymentMethod
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetBasePrice() uint64 {
	if x != nil && x.BasePrice != nil {
		return *x.BasePrice
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetTotalDiscount() uint64 {
	if x != nil && x.TotalDiscount != nil {
		return *x.TotalDiscount
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetTax() uint64 {
	if x != nil && x.Tax != nil {
		return *x.Tax
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetShipping() uint64 {
	if x != nil && x.Shipping != nil {
		return *x.Shipping
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetCurrencyCode() uint32 {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorHeadline() string {
	if x != nil && x.ErrorHeadline != nil {
		return *x.ErrorHeadline
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorString() string {
	if x != nil && x.ErrorString != nil {
		return *x.ErrorString
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorLinkText() string {
	if x != nil && x.ErrorLinkText != nil {
		return *x.ErrorLinkText
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorLinkUrl() string {
	if x != nil && x.ErrorLinkUrl != nil {
		return *x.ErrorLinkUrl
	}
	return ""
}

func (x *CStore_PurchaseReceiptInfo) GetErrorAppid() uint32 {
	if x != nil && x.ErrorAppid != nil {
		return *x.ErrorAppid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo) GetLineItems() []*CStore_PurchaseReceiptInfo_LineItem {
	if x != nil {
		return x.LineItems
	}
	return nil
}

type CStore_RegisterCDKey_Response struct {
	state                 protoimpl.MessageState      `protogen:"open.v1"`
	PurchaseResultDetails *int32                      `protobuf:"varint,1,opt,name=purchase_result_details,json=purchaseResultDetails" json:"purchase_result_details,omitempty"`
	PurchaseReceiptInfo   *CStore_PurchaseReceiptInfo `protobuf:"bytes,2,opt,name=purchase_receipt_info,json=purchaseReceiptInfo" json:"purchase_receipt_info,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CStore_RegisterCDKey_Response) Reset() {
	*x = CStore_RegisterCDKey_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_RegisterCDKey_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_RegisterCDKey_Response) ProtoMessage() {}

func (x *CStore_RegisterCDKey_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_RegisterCDKey_Response.ProtoReflect.Descriptor instead.
func (*CStore_RegisterCDKey_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CStore_RegisterCDKey_Response) GetPurchaseResultDetails() int32 {
	if x != nil && x.PurchaseResultDetails != nil {
		return *x.PurchaseResultDetails
	}
	return 0
}

func (x *CStore_RegisterCDKey_Response) GetPurchaseReceiptInfo() *CStore_PurchaseReceiptInfo {
	if x != nil {
		return x.PurchaseReceiptInfo
	}
	return nil
}

type CStore_GetRecommendedTagsForUser_Request struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Language       *string                `protobuf:"bytes,2,opt,name=language" json:"language,omitempty"`
	CountryCode    *string                `protobuf:"bytes,3,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	FavorRarerTags *bool                  `protobuf:"varint,4,opt,name=favor_rarer_tags,json=favorRarerTags" json:"favor_rarer_tags,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CStore_GetRecommendedTagsForUser_Request) Reset() {
	*x = CStore_GetRecommendedTagsForUser_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetRecommendedTagsForUser_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetRecommendedTagsForUser_Request) ProtoMessage() {}

func (x *CStore_GetRecommendedTagsForUser_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetRecommendedTagsForUser_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetRecommendedTagsForUser_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CStore_GetRecommendedTagsForUser_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStore_GetRecommendedTagsForUser_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetRecommendedTagsForUser_Request) GetFavorRarerTags() bool {
	if x != nil && x.FavorRarerTags != nil {
		return *x.FavorRarerTags
	}
	return false
}

type CStore_GetRecommendedTagsForUser_Response struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	Tags          []*CStore_GetRecommendedTagsForUser_Response_Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetRecommendedTagsForUser_Response) Reset() {
	*x = CStore_GetRecommendedTagsForUser_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetRecommendedTagsForUser_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetRecommendedTagsForUser_Response) ProtoMessage() {}

func (x *CStore_GetRecommendedTagsForUser_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetRecommendedTagsForUser_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetRecommendedTagsForUser_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CStore_GetRecommendedTagsForUser_Response) GetTags() []*CStore_GetRecommendedTagsForUser_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStore_GetMostPopularTags_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetMostPopularTags_Request) Reset() {
	*x = CStore_GetMostPopularTags_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetMostPopularTags_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetMostPopularTags_Request) ProtoMessage() {}

func (x *CStore_GetMostPopularTags_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetMostPopularTags_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetMostPopularTags_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *CStore_GetMostPopularTags_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CStore_GetMostPopularTags_Response struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Tags          []*CStore_GetMostPopularTags_Response_Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetMostPopularTags_Response) Reset() {
	*x = CStore_GetMostPopularTags_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetMostPopularTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetMostPopularTags_Response) ProtoMessage() {}

func (x *CStore_GetMostPopularTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetMostPopularTags_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetMostPopularTags_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{6}
}

func (x *CStore_GetMostPopularTags_Response) GetTags() []*CStore_GetMostPopularTags_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStore_GetLocalizedNameForTags_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Tagids        []uint32               `protobuf:"varint,2,rep,name=tagids" json:"tagids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetLocalizedNameForTags_Request) Reset() {
	*x = CStore_GetLocalizedNameForTags_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetLocalizedNameForTags_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetLocalizedNameForTags_Request) ProtoMessage() {}

func (x *CStore_GetLocalizedNameForTags_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetLocalizedNameForTags_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetLocalizedNameForTags_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CStore_GetLocalizedNameForTags_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStore_GetLocalizedNameForTags_Request) GetTagids() []uint32 {
	if x != nil {
		return x.Tagids
	}
	return nil
}

type CStore_GetLocalizedNameForTags_Response struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Tags          []*CStore_GetLocalizedNameForTags_Response_Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetLocalizedNameForTags_Response) Reset() {
	*x = CStore_GetLocalizedNameForTags_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetLocalizedNameForTags_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetLocalizedNameForTags_Response) ProtoMessage() {}

func (x *CStore_GetLocalizedNameForTags_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetLocalizedNameForTags_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetLocalizedNameForTags_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{8}
}

func (x *CStore_GetLocalizedNameForTags_Response) GetTags() []*CStore_GetLocalizedNameForTags_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStore_GetTagList_Request struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Language        *string                `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	HaveVersionHash *string                `protobuf:"bytes,2,opt,name=have_version_hash,json=haveVersionHash" json:"have_version_hash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStore_GetTagList_Request) Reset() {
	*x = CStore_GetTagList_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetTagList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTagList_Request) ProtoMessage() {}

func (x *CStore_GetTagList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTagList_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetTagList_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CStore_GetTagList_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStore_GetTagList_Request) GetHaveVersionHash() string {
	if x != nil && x.HaveVersionHash != nil {
		return *x.HaveVersionHash
	}
	return ""
}

type CStore_GetTagList_Response struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	VersionHash   *string                           `protobuf:"bytes,1,opt,name=version_hash,json=versionHash" json:"version_hash,omitempty"`
	Tags          []*CStore_GetTagList_Response_Tag `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetTagList_Response) Reset() {
	*x = CStore_GetTagList_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetTagList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTagList_Response) ProtoMessage() {}

func (x *CStore_GetTagList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTagList_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetTagList_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{10}
}

func (x *CStore_GetTagList_Response) GetVersionHash() string {
	if x != nil && x.VersionHash != nil {
		return *x.VersionHash
	}
	return ""
}

func (x *CStore_GetTagList_Response) GetTags() []*CStore_GetTagList_Response_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CStoreDiscoveryQueueSettings struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	OsWin                 *bool                  `protobuf:"varint,4,opt,name=os_win,json=osWin" json:"os_win,omitempty"`
	OsMac                 *bool                  `protobuf:"varint,5,opt,name=os_mac,json=osMac" json:"os_mac,omitempty"`
	OsLinux               *bool                  `protobuf:"varint,6,opt,name=os_linux,json=osLinux" json:"os_linux,omitempty"`
	FullControllerSupport *bool                  `protobuf:"varint,7,opt,name=full_controller_support,json=fullControllerSupport" json:"full_controller_support,omitempty"`
	NativeSteamController *bool                  `protobuf:"varint,8,opt,name=native_steam_controller,json=nativeSteamController" json:"native_steam_controller,omitempty"`
	IncludeComingSoon     *bool                  `protobuf:"varint,9,opt,name=include_coming_soon,json=includeComingSoon" json:"include_coming_soon,omitempty"`
	ExcludedTagids        []uint32               `protobuf:"varint,10,rep,name=excluded_tagids,json=excludedTagids" json:"excluded_tagids,omitempty"`
	ExcludeEarlyAccess    *bool                  `protobuf:"varint,11,opt,name=exclude_early_access,json=excludeEarlyAccess" json:"exclude_early_access,omitempty"`
	ExcludeVideos         *bool                  `protobuf:"varint,12,opt,name=exclude_videos,json=excludeVideos" json:"exclude_videos,omitempty"`
	ExcludeSoftware       *bool                  `protobuf:"varint,13,opt,name=exclude_software,json=excludeSoftware" json:"exclude_software,omitempty"`
	ExcludeDlc            *bool                  `protobuf:"varint,14,opt,name=exclude_dlc,json=excludeDlc" json:"exclude_dlc,omitempty"`
	ExcludeSoundtracks    *bool                  `protobuf:"varint,15,opt,name=exclude_soundtracks,json=excludeSoundtracks" json:"exclude_soundtracks,omitempty"`
	FeaturedTagids        []uint32               `protobuf:"varint,16,rep,name=featured_tagids,json=featuredTagids" json:"featured_tagids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CStoreDiscoveryQueueSettings) Reset() {
	*x = CStoreDiscoveryQueueSettings{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreDiscoveryQueueSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreDiscoveryQueueSettings) ProtoMessage() {}

func (x *CStoreDiscoveryQueueSettings) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreDiscoveryQueueSettings.ProtoReflect.Descriptor instead.
func (*CStoreDiscoveryQueueSettings) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{11}
}

func (x *CStoreDiscoveryQueueSettings) GetOsWin() bool {
	if x != nil && x.OsWin != nil {
		return *x.OsWin
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetOsMac() bool {
	if x != nil && x.OsMac != nil {
		return *x.OsMac
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetOsLinux() bool {
	if x != nil && x.OsLinux != nil {
		return *x.OsLinux
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetFullControllerSupport() bool {
	if x != nil && x.FullControllerSupport != nil {
		return *x.FullControllerSupport
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetNativeSteamController() bool {
	if x != nil && x.NativeSteamController != nil {
		return *x.NativeSteamController
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetIncludeComingSoon() bool {
	if x != nil && x.IncludeComingSoon != nil {
		return *x.IncludeComingSoon
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludedTagids() []uint32 {
	if x != nil {
		return x.ExcludedTagids
	}
	return nil
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeEarlyAccess() bool {
	if x != nil && x.ExcludeEarlyAccess != nil {
		return *x.ExcludeEarlyAccess
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeVideos() bool {
	if x != nil && x.ExcludeVideos != nil {
		return *x.ExcludeVideos
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeSoftware() bool {
	if x != nil && x.ExcludeSoftware != nil {
		return *x.ExcludeSoftware
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeDlc() bool {
	if x != nil && x.ExcludeDlc != nil {
		return *x.ExcludeDlc
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetExcludeSoundtracks() bool {
	if x != nil && x.ExcludeSoundtracks != nil {
		return *x.ExcludeSoundtracks
	}
	return false
}

func (x *CStoreDiscoveryQueueSettings) GetFeaturedTagids() []uint32 {
	if x != nil {
		return x.FeaturedTagids
	}
	return nil
}

type CStore_GetDiscoveryQueue_Request struct {
	state                 protoimpl.MessageState        `protogen:"open.v1"`
	QueueType             *EStoreDiscoveryQueueType     `protobuf:"varint,1,opt,name=queue_type,json=queueType,enum=EStoreDiscoveryQueueType,def=0" json:"queue_type,omitempty"`
	CountryCode           *string                       `protobuf:"bytes,2,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	RebuildQueue          *bool                         `protobuf:"varint,3,opt,name=rebuild_queue,json=rebuildQueue" json:"rebuild_queue,omitempty"`
	SettingsChanged       *bool                         `protobuf:"varint,4,opt,name=settings_changed,json=settingsChanged" json:"settings_changed,omitempty"`
	Settings              *CStoreDiscoveryQueueSettings `protobuf:"bytes,5,opt,name=settings" json:"settings,omitempty"`
	RebuildQueueIfStale   *bool                         `protobuf:"varint,6,opt,name=rebuild_queue_if_stale,json=rebuildQueueIfStale" json:"rebuild_queue_if_stale,omitempty"`
	IgnoreUserPreferences *bool                         `protobuf:"varint,8,opt,name=ignore_user_preferences,json=ignoreUserPreferences" json:"ignore_user_preferences,omitempty"`
	NoExperimentalResults *bool                         `protobuf:"varint,9,opt,name=no_experimental_results,json=noExperimentalResults" json:"no_experimental_results,omitempty"`
	ExperimentalCohort    *uint32                       `protobuf:"varint,10,opt,name=experimental_cohort,json=experimentalCohort" json:"experimental_cohort,omitempty"`
	DebugGetSolrQuery     *bool                         `protobuf:"varint,11,opt,name=debug_get_solr_query,json=debugGetSolrQuery" json:"debug_get_solr_query,omitempty"`
	StorePageFilter       *CStorePageFilter             `protobuf:"bytes,12,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
	Context               *StoreBrowseContext           `protobuf:"bytes,13,opt,name=context" json:"context,omitempty"`
	DataRequest           *StoreBrowseItemDataRequest   `protobuf:"bytes,14,opt,name=data_request,json=dataRequest" json:"data_request,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

// Default values for CStore_GetDiscoveryQueue_Request fields.
const (
	Default_CStore_GetDiscoveryQueue_Request_QueueType = EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeNew
)

func (x *CStore_GetDiscoveryQueue_Request) Reset() {
	*x = CStore_GetDiscoveryQueue_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetDiscoveryQueue_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueue_Request) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueue_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueue_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueue_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{12}
}

func (x *CStore_GetDiscoveryQueue_Request) GetQueueType() EStoreDiscoveryQueueType {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return Default_CStore_GetDiscoveryQueue_Request_QueueType
}

func (x *CStore_GetDiscoveryQueue_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetDiscoveryQueue_Request) GetRebuildQueue() bool {
	if x != nil && x.RebuildQueue != nil {
		return *x.RebuildQueue
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetSettingsChanged() bool {
	if x != nil && x.SettingsChanged != nil {
		return *x.SettingsChanged
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetSettings() *CStoreDiscoveryQueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Request) GetRebuildQueueIfStale() bool {
	if x != nil && x.RebuildQueueIfStale != nil {
		return *x.RebuildQueueIfStale
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetIgnoreUserPreferences() bool {
	if x != nil && x.IgnoreUserPreferences != nil {
		return *x.IgnoreUserPreferences
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetNoExperimentalResults() bool {
	if x != nil && x.NoExperimentalResults != nil {
		return *x.NoExperimentalResults
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetExperimentalCohort() uint32 {
	if x != nil && x.ExperimentalCohort != nil {
		return *x.ExperimentalCohort
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Request) GetDebugGetSolrQuery() bool {
	if x != nil && x.DebugGetSolrQuery != nil {
		return *x.DebugGetSolrQuery
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Request) GetDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

type CStore_GetDiscoveryQueue_Response struct {
	state              protoimpl.MessageState        `protogen:"open.v1"`
	Appids             []uint32                      `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	CountryCode        *string                       `protobuf:"bytes,2,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Settings           *CStoreDiscoveryQueueSettings `protobuf:"bytes,3,opt,name=settings" json:"settings,omitempty"`
	Skipped            *int32                        `protobuf:"varint,4,opt,name=skipped" json:"skipped,omitempty"`
	Exhausted          *bool                         `protobuf:"varint,5,opt,name=exhausted" json:"exhausted,omitempty"`
	ExperimentalCohort *uint32                       `protobuf:"varint,6,opt,name=experimental_cohort,json=experimentalCohort" json:"experimental_cohort,omitempty"`
	DebugSolrQuery     *string                       `protobuf:"bytes,7,opt,name=debug_solr_query,json=debugSolrQuery" json:"debug_solr_query,omitempty"`
	StoreItems         []*StoreItem                  `protobuf:"bytes,8,rep,name=store_items,json=storeItems" json:"store_items,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CStore_GetDiscoveryQueue_Response) Reset() {
	*x = CStore_GetDiscoveryQueue_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetDiscoveryQueue_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueue_Response) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueue_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueue_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueue_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{13}
}

func (x *CStore_GetDiscoveryQueue_Response) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Response) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetDiscoveryQueue_Response) GetSettings() *CStoreDiscoveryQueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CStore_GetDiscoveryQueue_Response) GetSkipped() int32 {
	if x != nil && x.Skipped != nil {
		return *x.Skipped
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Response) GetExhausted() bool {
	if x != nil && x.Exhausted != nil {
		return *x.Exhausted
	}
	return false
}

func (x *CStore_GetDiscoveryQueue_Response) GetExperimentalCohort() uint32 {
	if x != nil && x.ExperimentalCohort != nil {
		return *x.ExperimentalCohort
	}
	return 0
}

func (x *CStore_GetDiscoveryQueue_Response) GetDebugSolrQuery() string {
	if x != nil && x.DebugSolrQuery != nil {
		return *x.DebugSolrQuery
	}
	return ""
}

func (x *CStore_GetDiscoveryQueue_Response) GetStoreItems() []*StoreItem {
	if x != nil {
		return x.StoreItems
	}
	return nil
}

type CStore_GetDiscoveryQueueSettings_Request struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	QueueType       *EStoreDiscoveryQueueType `protobuf:"varint,1,opt,name=queue_type,json=queueType,enum=EStoreDiscoveryQueueType,def=0" json:"queue_type,omitempty"`
	StorePageFilter *CStorePageFilter         `protobuf:"bytes,2,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CStore_GetDiscoveryQueueSettings_Request fields.
const (
	Default_CStore_GetDiscoveryQueueSettings_Request_QueueType = EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeNew
)

func (x *CStore_GetDiscoveryQueueSettings_Request) Reset() {
	*x = CStore_GetDiscoveryQueueSettings_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetDiscoveryQueueSettings_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSettings_Request) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSettings_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSettings_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSettings_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{14}
}

func (x *CStore_GetDiscoveryQueueSettings_Request) GetQueueType() EStoreDiscoveryQueueType {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return Default_CStore_GetDiscoveryQueueSettings_Request_QueueType
}

func (x *CStore_GetDiscoveryQueueSettings_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_GetDiscoveryQueueSettings_Response struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	CountryCode   *string                       `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	Settings      *CStoreDiscoveryQueueSettings `protobuf:"bytes,2,opt,name=settings" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetDiscoveryQueueSettings_Response) Reset() {
	*x = CStore_GetDiscoveryQueueSettings_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetDiscoveryQueueSettings_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSettings_Response) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSettings_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSettings_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSettings_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{15}
}

func (x *CStore_GetDiscoveryQueueSettings_Response) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStore_GetDiscoveryQueueSettings_Response) GetSettings() *CStoreDiscoveryQueueSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CStore_SkipDiscoveryQueueItem_Request struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	QueueType       *EStoreDiscoveryQueueType `protobuf:"varint,1,opt,name=queue_type,json=queueType,enum=EStoreDiscoveryQueueType,def=0" json:"queue_type,omitempty"`
	Appid           *uint32                   `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	StorePageFilter *CStorePageFilter         `protobuf:"bytes,3,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CStore_SkipDiscoveryQueueItem_Request fields.
const (
	Default_CStore_SkipDiscoveryQueueItem_Request_QueueType = EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeNew
)

func (x *CStore_SkipDiscoveryQueueItem_Request) Reset() {
	*x = CStore_SkipDiscoveryQueueItem_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_SkipDiscoveryQueueItem_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SkipDiscoveryQueueItem_Request) ProtoMessage() {}

func (x *CStore_SkipDiscoveryQueueItem_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SkipDiscoveryQueueItem_Request.ProtoReflect.Descriptor instead.
func (*CStore_SkipDiscoveryQueueItem_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{16}
}

func (x *CStore_SkipDiscoveryQueueItem_Request) GetQueueType() EStoreDiscoveryQueueType {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return Default_CStore_SkipDiscoveryQueueItem_Request_QueueType
}

func (x *CStore_SkipDiscoveryQueueItem_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_SkipDiscoveryQueueItem_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_SkipDiscoveryQueueItem_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_SkipDiscoveryQueueItem_Response) Reset() {
	*x = CStore_SkipDiscoveryQueueItem_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_SkipDiscoveryQueueItem_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SkipDiscoveryQueueItem_Response) ProtoMessage() {}

func (x *CStore_SkipDiscoveryQueueItem_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SkipDiscoveryQueueItem_Response.ProtoReflect.Descriptor instead.
func (*CStore_SkipDiscoveryQueueItem_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{17}
}

type CStore_GetUserGameInterestState_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	StoreAppid    *uint32                `protobuf:"varint,2,opt,name=store_appid,json=storeAppid" json:"store_appid,omitempty"`
	BetaAppid     *uint32                `protobuf:"varint,3,opt,name=beta_appid,json=betaAppid" json:"beta_appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetUserGameInterestState_Request) Reset() {
	*x = CStore_GetUserGameInterestState_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetUserGameInterestState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserGameInterestState_Request) ProtoMessage() {}

func (x *CStore_GetUserGameInterestState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserGameInterestState_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetUserGameInterestState_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{18}
}

func (x *CStore_GetUserGameInterestState_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Request) GetStoreAppid() uint32 {
	if x != nil && x.StoreAppid != nil {
		return *x.StoreAppid
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Request) GetBetaAppid() uint32 {
	if x != nil && x.BetaAppid != nil {
		return *x.BetaAppid
	}
	return 0
}

type CStore_GetUserGameInterestState_Response struct {
	state               protoimpl.MessageState                              `protogen:"open.v1"`
	Owned               *bool                                               `protobuf:"varint,1,opt,name=owned" json:"owned,omitempty"`
	Wishlist            *bool                                               `protobuf:"varint,2,opt,name=wishlist" json:"wishlist,omitempty"`
	Ignored             *bool                                               `protobuf:"varint,3,opt,name=ignored" json:"ignored,omitempty"`
	Following           *bool                                               `protobuf:"varint,4,opt,name=following" json:"following,omitempty"`
	InQueues            []EStoreDiscoveryQueueType                          `protobuf:"varint,5,rep,name=in_queues,json=inQueues,enum=EStoreDiscoveryQueueType" json:"in_queues,omitempty"`
	QueuesWithSkip      []EStoreDiscoveryQueueType                          `protobuf:"varint,6,rep,name=queues_with_skip,json=queuesWithSkip,enum=EStoreDiscoveryQueueType" json:"queues_with_skip,omitempty"`
	QueueItemsRemaining []int32                                             `protobuf:"varint,7,rep,name=queue_items_remaining,json=queueItemsRemaining" json:"queue_items_remaining,omitempty"`
	QueueItemsNextAppid []uint32                                            `protobuf:"varint,8,rep,name=queue_items_next_appid,json=queueItemsNextAppid" json:"queue_items_next_appid,omitempty"`
	TemporarilyOwned    *bool                                               `protobuf:"varint,9,opt,name=temporarily_owned,json=temporarilyOwned" json:"temporarily_owned,omitempty"`
	Queues              []*CStore_GetUserGameInterestState_Response_InQueue `protobuf:"bytes,10,rep,name=queues" json:"queues,omitempty"`
	IgnoredReason       *int32                                              `protobuf:"varint,11,opt,name=ignored_reason,json=ignoredReason" json:"ignored_reason,omitempty"`
	BetaStatus          *EPlaytestStatus                                    `protobuf:"varint,12,opt,name=beta_status,json=betaStatus,enum=EPlaytestStatus,def=0" json:"beta_status,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CStore_GetUserGameInterestState_Response fields.
const (
	Default_CStore_GetUserGameInterestState_Response_BetaStatus = EPlaytestStatus_k_ETesterStatusNone
)

func (x *CStore_GetUserGameInterestState_Response) Reset() {
	*x = CStore_GetUserGameInterestState_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetUserGameInterestState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserGameInterestState_Response) ProtoMessage() {}

func (x *CStore_GetUserGameInterestState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserGameInterestState_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetUserGameInterestState_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{19}
}

func (x *CStore_GetUserGameInterestState_Response) GetOwned() bool {
	if x != nil && x.Owned != nil {
		return *x.Owned
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetWishlist() bool {
	if x != nil && x.Wishlist != nil {
		return *x.Wishlist
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetIgnored() bool {
	if x != nil && x.Ignored != nil {
		return *x.Ignored
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetFollowing() bool {
	if x != nil && x.Following != nil {
		return *x.Following
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetInQueues() []EStoreDiscoveryQueueType {
	if x != nil {
		return x.InQueues
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetQueuesWithSkip() []EStoreDiscoveryQueueType {
	if x != nil {
		return x.QueuesWithSkip
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetQueueItemsRemaining() []int32 {
	if x != nil {
		return x.QueueItemsRemaining
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetQueueItemsNextAppid() []uint32 {
	if x != nil {
		return x.QueueItemsNextAppid
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetTemporarilyOwned() bool {
	if x != nil && x.TemporarilyOwned != nil {
		return *x.TemporarilyOwned
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response) GetQueues() []*CStore_GetUserGameInterestState_Response_InQueue {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *CStore_GetUserGameInterestState_Response) GetIgnoredReason() int32 {
	if x != nil && x.IgnoredReason != nil {
		return *x.IgnoredReason
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response) GetBetaStatus() EPlaytestStatus {
	if x != nil && x.BetaStatus != nil {
		return *x.BetaStatus
	}
	return Default_CStore_GetUserGameInterestState_Response_BetaStatus
}

type CStore_GetDiscoveryQueueSkippedApps_Request struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	Steamid         *uint64                   `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	QueueType       *EStoreDiscoveryQueueType `protobuf:"varint,2,opt,name=queue_type,json=queueType,enum=EStoreDiscoveryQueueType,def=0" json:"queue_type,omitempty"`
	StorePageFilter *CStorePageFilter         `protobuf:"bytes,3,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CStore_GetDiscoveryQueueSkippedApps_Request fields.
const (
	Default_CStore_GetDiscoveryQueueSkippedApps_Request_QueueType = EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeNew
)

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) Reset() {
	*x = CStore_GetDiscoveryQueueSkippedApps_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSkippedApps_Request) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSkippedApps_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSkippedApps_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{20}
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) GetQueueType() EStoreDiscoveryQueueType {
	if x != nil && x.QueueType != nil {
		return *x.QueueType
	}
	return Default_CStore_GetDiscoveryQueueSkippedApps_Request_QueueType
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStore_GetDiscoveryQueueSkippedApps_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appids        []uint32               `protobuf:"varint,1,rep,name=appids" json:"appids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) Reset() {
	*x = CStore_GetDiscoveryQueueSkippedApps_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetDiscoveryQueueSkippedApps_Response) ProtoMessage() {}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetDiscoveryQueueSkippedApps_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetDiscoveryQueueSkippedApps_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{21}
}

func (x *CStore_GetDiscoveryQueueSkippedApps_Response) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

type CStore_ReportApp_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ReportType    *EAppReportType        `protobuf:"varint,2,opt,name=report_type,json=reportType,enum=EAppReportType,def=0" json:"report_type,omitempty"`
	Report        *string                `protobuf:"bytes,3,opt,name=report" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CStore_ReportApp_Request fields.
const (
	Default_CStore_ReportApp_Request_ReportType = EAppReportType_k_EAppReportType_Invalid
)

func (x *CStore_ReportApp_Request) Reset() {
	*x = CStore_ReportApp_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_ReportApp_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_ReportApp_Request) ProtoMessage() {}

func (x *CStore_ReportApp_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_ReportApp_Request.ProtoReflect.Descriptor instead.
func (*CStore_ReportApp_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{22}
}

func (x *CStore_ReportApp_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_ReportApp_Request) GetReportType() EAppReportType {
	if x != nil && x.ReportType != nil {
		return *x.ReportType
	}
	return Default_CStore_ReportApp_Request_ReportType
}

func (x *CStore_ReportApp_Request) GetReport() string {
	if x != nil && x.Report != nil {
		return *x.Report
	}
	return ""
}

type CStore_ReportApp_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_ReportApp_Response) Reset() {
	*x = CStore_ReportApp_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_ReportApp_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_ReportApp_Response) ProtoMessage() {}

func (x *CStore_ReportApp_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_ReportApp_Response.ProtoReflect.Descriptor instead.
func (*CStore_ReportApp_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{23}
}

type CStore_GetStorePreferences_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetStorePreferences_Request) Reset() {
	*x = CStore_GetStorePreferences_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetStorePreferences_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetStorePreferences_Request) ProtoMessage() {}

func (x *CStore_GetStorePreferences_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetStorePreferences_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetStorePreferences_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{24}
}

type CStore_UserPreferences struct {
	state                                        protoimpl.MessageState          `protogen:"open.v1"`
	PrimaryLanguage                              *int32                          `protobuf:"varint,1,opt,name=primary_language,json=primaryLanguage" json:"primary_language,omitempty"`
	SecondaryLanguages                           *uint32                         `protobuf:"varint,2,opt,name=secondary_languages,json=secondaryLanguages" json:"secondary_languages,omitempty"`
	PlatformWindows                              *bool                           `protobuf:"varint,3,opt,name=platform_windows,json=platformWindows" json:"platform_windows,omitempty"`
	PlatformMac                                  *bool                           `protobuf:"varint,4,opt,name=platform_mac,json=platformMac" json:"platform_mac,omitempty"`
	PlatformLinux                                *bool                           `protobuf:"varint,5,opt,name=platform_linux,json=platformLinux" json:"platform_linux,omitempty"`
	TimestampUpdated                             *uint32                         `protobuf:"varint,8,opt,name=timestamp_updated,json=timestampUpdated" json:"timestamp_updated,omitempty"`
	HideStoreBroadcast                           *bool                           `protobuf:"varint,9,opt,name=hide_store_broadcast,json=hideStoreBroadcast" json:"hide_store_broadcast,omitempty"`
	ReviewScorePreference                        *EUserReviewScorePreference     `protobuf:"varint,10,opt,name=review_score_preference,json=reviewScorePreference,enum=EUserReviewScorePreference,def=0" json:"review_score_preference,omitempty"`
	TimestampContentDescriptorPreferencesUpdated *int32                          `protobuf:"varint,11,opt,name=timestamp_content_descriptor_preferences_updated,json=timestampContentDescriptorPreferencesUpdated" json:"timestamp_content_descriptor_preferences_updated,omitempty"`
	ProvideDeckFeedback                          *EProvideDeckFeedbackPreference `protobuf:"varint,12,opt,name=provide_deck_feedback,json=provideDeckFeedback,enum=EProvideDeckFeedbackPreference,def=0" json:"provide_deck_feedback,omitempty"`
	AdditionalLanguages                          *string                         `protobuf:"bytes,13,opt,name=additional_languages,json=additionalLanguages" json:"additional_languages,omitempty"`
	unknownFields                                protoimpl.UnknownFields
	sizeCache                                    protoimpl.SizeCache
}

// Default values for CStore_UserPreferences fields.
const (
	Default_CStore_UserPreferences_ReviewScorePreference = EUserReviewScorePreference_k_EUserReviewScorePreference_Unset
	Default_CStore_UserPreferences_ProvideDeckFeedback   = EProvideDeckFeedbackPreference_k_EProvideDeckFeedbackPreference_Unset
)

func (x *CStore_UserPreferences) Reset() {
	*x = CStore_UserPreferences{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_UserPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserPreferences) ProtoMessage() {}

func (x *CStore_UserPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserPreferences.ProtoReflect.Descriptor instead.
func (*CStore_UserPreferences) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{25}
}

func (x *CStore_UserPreferences) GetPrimaryLanguage() int32 {
	if x != nil && x.PrimaryLanguage != nil {
		return *x.PrimaryLanguage
	}
	return 0
}

func (x *CStore_UserPreferences) GetSecondaryLanguages() uint32 {
	if x != nil && x.SecondaryLanguages != nil {
		return *x.SecondaryLanguages
	}
	return 0
}

func (x *CStore_UserPreferences) GetPlatformWindows() bool {
	if x != nil && x.PlatformWindows != nil {
		return *x.PlatformWindows
	}
	return false
}

func (x *CStore_UserPreferences) GetPlatformMac() bool {
	if x != nil && x.PlatformMac != nil {
		return *x.PlatformMac
	}
	return false
}

func (x *CStore_UserPreferences) GetPlatformLinux() bool {
	if x != nil && x.PlatformLinux != nil {
		return *x.PlatformLinux
	}
	return false
}

func (x *CStore_UserPreferences) GetTimestampUpdated() uint32 {
	if x != nil && x.TimestampUpdated != nil {
		return *x.TimestampUpdated
	}
	return 0
}

func (x *CStore_UserPreferences) GetHideStoreBroadcast() bool {
	if x != nil && x.HideStoreBroadcast != nil {
		return *x.HideStoreBroadcast
	}
	return false
}

func (x *CStore_UserPreferences) GetReviewScorePreference() EUserReviewScorePreference {
	if x != nil && x.ReviewScorePreference != nil {
		return *x.ReviewScorePreference
	}
	return Default_CStore_UserPreferences_ReviewScorePreference
}

func (x *CStore_UserPreferences) GetTimestampContentDescriptorPreferencesUpdated() int32 {
	if x != nil && x.TimestampContentDescriptorPreferencesUpdated != nil {
		return *x.TimestampContentDescriptorPreferencesUpdated
	}
	return 0
}

func (x *CStore_UserPreferences) GetProvideDeckFeedback() EProvideDeckFeedbackPreference {
	if x != nil && x.ProvideDeckFeedback != nil {
		return *x.ProvideDeckFeedback
	}
	return Default_CStore_UserPreferences_ProvideDeckFeedback
}

func (x *CStore_UserPreferences) GetAdditionalLanguages() string {
	if x != nil && x.AdditionalLanguages != nil {
		return *x.AdditionalLanguages
	}
	return ""
}

type CStore_UserTagPreferences struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	TagsToExclude []*CStore_UserTagPreferences_Tag `protobuf:"bytes,1,rep,name=tags_to_exclude,json=tagsToExclude" json:"tags_to_exclude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_UserTagPreferences) Reset() {
	*x = CStore_UserTagPreferences{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_UserTagPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserTagPreferences) ProtoMessage() {}

func (x *CStore_UserTagPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserTagPreferences.ProtoReflect.Descriptor instead.
func (*CStore_UserTagPreferences) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{26}
}

func (x *CStore_UserTagPreferences) GetTagsToExclude() []*CStore_UserTagPreferences_Tag {
	if x != nil {
		return x.TagsToExclude
	}
	return nil
}

type CStore_GetStorePreferences_Response struct {
	state                        protoimpl.MessageState            `protogen:"open.v1"`
	Preferences                  *CStore_UserPreferences           `protobuf:"bytes,1,opt,name=preferences" json:"preferences,omitempty"`
	TagPreferences               *CStore_UserTagPreferences        `protobuf:"bytes,2,opt,name=tag_preferences,json=tagPreferences" json:"tag_preferences,omitempty"`
	ContentDescriptorPreferences *UserContentDescriptorPreferences `protobuf:"bytes,3,opt,name=content_descriptor_preferences,json=contentDescriptorPreferences" json:"content_descriptor_preferences,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CStore_GetStorePreferences_Response) Reset() {
	*x = CStore_GetStorePreferences_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetStorePreferences_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetStorePreferences_Response) ProtoMessage() {}

func (x *CStore_GetStorePreferences_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetStorePreferences_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetStorePreferences_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{27}
}

func (x *CStore_GetStorePreferences_Response) GetPreferences() *CStore_UserPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *CStore_GetStorePreferences_Response) GetTagPreferences() *CStore_UserTagPreferences {
	if x != nil {
		return x.TagPreferences
	}
	return nil
}

func (x *CStore_GetStorePreferences_Response) GetContentDescriptorPreferences() *UserContentDescriptorPreferences {
	if x != nil {
		return x.ContentDescriptorPreferences
	}
	return nil
}

type CStore_GetTrendingAppsAmongFriends_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumApps       *uint32                `protobuf:"varint,1,opt,name=num_apps,json=numApps" json:"num_apps,omitempty"`
	NumTopFriends *uint32                `protobuf:"varint,2,opt,name=num_top_friends,json=numTopFriends" json:"num_top_friends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) Reset() {
	*x = CStore_GetTrendingAppsAmongFriends_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTrendingAppsAmongFriends_Request) ProtoMessage() {}

func (x *CStore_GetTrendingAppsAmongFriends_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTrendingAppsAmongFriends_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetTrendingAppsAmongFriends_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{28}
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) GetNumApps() uint32 {
	if x != nil && x.NumApps != nil {
		return *x.NumApps
	}
	return 0
}

func (x *CStore_GetTrendingAppsAmongFriends_Request) GetNumTopFriends() uint32 {
	if x != nil && x.NumTopFriends != nil {
		return *x.NumTopFriends
	}
	return 0
}

type CStore_GetTrendingAppsAmongFriends_Response struct {
	state         protoimpl.MessageState                                         `protogen:"open.v1"`
	TrendingApps  []*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData `protobuf:"bytes,1,rep,name=trending_apps,json=trendingApps" json:"trending_apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetTrendingAppsAmongFriends_Response) Reset() {
	*x = CStore_GetTrendingAppsAmongFriends_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetTrendingAppsAmongFriends_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTrendingAppsAmongFriends_Response) ProtoMessage() {}

func (x *CStore_GetTrendingAppsAmongFriends_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTrendingAppsAmongFriends_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetTrendingAppsAmongFriends_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{29}
}

func (x *CStore_GetTrendingAppsAmongFriends_Response) GetTrendingApps() []*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData {
	if x != nil {
		return x.TrendingApps
	}
	return nil
}

type CStore_MigratePartnerLinkTracking_Notification struct {
	state          protoimpl.MessageState              `protogen:"open.v1"`
	Accountid      *uint32                             `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Browserid      *uint64                             `protobuf:"varint,2,opt,name=browserid" json:"browserid,omitempty"`
	BackfillSource *EPartnerLinkTrackingBackfillSource `protobuf:"varint,3,opt,name=backfill_source,json=backfillSource,enum=EPartnerLinkTrackingBackfillSource,def=0" json:"backfill_source,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CStore_MigratePartnerLinkTracking_Notification fields.
const (
	Default_CStore_MigratePartnerLinkTracking_Notification_BackfillSource = EPartnerLinkTrackingBackfillSource_k_EPartnerLinkTrackingBackfillSource_None
)

func (x *CStore_MigratePartnerLinkTracking_Notification) Reset() {
	*x = CStore_MigratePartnerLinkTracking_Notification{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_MigratePartnerLinkTracking_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_MigratePartnerLinkTracking_Notification) ProtoMessage() {}

func (x *CStore_MigratePartnerLinkTracking_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_MigratePartnerLinkTracking_Notification.ProtoReflect.Descriptor instead.
func (*CStore_MigratePartnerLinkTracking_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{30}
}

func (x *CStore_MigratePartnerLinkTracking_Notification) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CStore_MigratePartnerLinkTracking_Notification) GetBrowserid() uint64 {
	if x != nil && x.Browserid != nil {
		return *x.Browserid
	}
	return 0
}

func (x *CStore_MigratePartnerLinkTracking_Notification) GetBackfillSource() EPartnerLinkTrackingBackfillSource {
	if x != nil && x.BackfillSource != nil {
		return *x.BackfillSource
	}
	return Default_CStore_MigratePartnerLinkTracking_Notification_BackfillSource
}

type CStore_UpdatePackageReservations_Request struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PackagesToReserve   []uint32               `protobuf:"varint,1,rep,name=packages_to_reserve,json=packagesToReserve" json:"packages_to_reserve,omitempty"`
	PackagesToUnreserve []uint32               `protobuf:"varint,2,rep,name=packages_to_unreserve,json=packagesToUnreserve" json:"packages_to_unreserve,omitempty"`
	CountryCode         *string                `protobuf:"bytes,3,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CStore_UpdatePackageReservations_Request) Reset() {
	*x = CStore_UpdatePackageReservations_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_UpdatePackageReservations_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UpdatePackageReservations_Request) ProtoMessage() {}

func (x *CStore_UpdatePackageReservations_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UpdatePackageReservations_Request.ProtoReflect.Descriptor instead.
func (*CStore_UpdatePackageReservations_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{31}
}

func (x *CStore_UpdatePackageReservations_Request) GetPackagesToReserve() []uint32 {
	if x != nil {
		return x.PackagesToReserve
	}
	return nil
}

func (x *CStore_UpdatePackageReservations_Request) GetPackagesToUnreserve() []uint32 {
	if x != nil {
		return x.PackagesToUnreserve
	}
	return nil
}

func (x *CStore_UpdatePackageReservations_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

type CStore_UpdatePackageReservations_Response struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	ReservationStatus []*CPackageReservationStatus `protobuf:"bytes,1,rep,name=reservation_status,json=reservationStatus" json:"reservation_status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CStore_UpdatePackageReservations_Response) Reset() {
	*x = CStore_UpdatePackageReservations_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_UpdatePackageReservations_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UpdatePackageReservations_Response) ProtoMessage() {}

func (x *CStore_UpdatePackageReservations_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UpdatePackageReservations_Response.ProtoReflect.Descriptor instead.
func (*CStore_UpdatePackageReservations_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{32}
}

func (x *CStore_UpdatePackageReservations_Response) GetReservationStatus() []*CPackageReservationStatus {
	if x != nil {
		return x.ReservationStatus
	}
	return nil
}

type CStore_GetWishlistDemoEmailStatus_Request struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Appid           *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DemoAppid       *uint32                `protobuf:"varint,2,opt,name=demo_appid,json=demoAppid" json:"demo_appid,omitempty"`
	AllowLateFiring *bool                  `protobuf:"varint,3,opt,name=allow_late_firing,json=allowLateFiring" json:"allow_late_firing,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) Reset() {
	*x = CStore_GetWishlistDemoEmailStatus_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetWishlistDemoEmailStatus_Request) ProtoMessage() {}

func (x *CStore_GetWishlistDemoEmailStatus_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetWishlistDemoEmailStatus_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetWishlistDemoEmailStatus_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{33}
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) GetDemoAppid() uint32 {
	if x != nil && x.DemoAppid != nil {
		return *x.DemoAppid
	}
	return 0
}

func (x *CStore_GetWishlistDemoEmailStatus_Request) GetAllowLateFiring() bool {
	if x != nil && x.AllowLateFiring != nil {
		return *x.AllowLateFiring
	}
	return false
}

type CStore_GetWishlistDemoEmailStatus_Response struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CanFire         *bool                  `protobuf:"varint,1,opt,name=can_fire,json=canFire,def=0" json:"can_fire,omitempty"`
	TimeStaged      *uint32                `protobuf:"varint,2,opt,name=time_staged,json=timeStaged" json:"time_staged,omitempty"`
	DemoReleaseDate *uint32                `protobuf:"varint,3,opt,name=demo_release_date,json=demoReleaseDate" json:"demo_release_date,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CStore_GetWishlistDemoEmailStatus_Response fields.
const (
	Default_CStore_GetWishlistDemoEmailStatus_Response_CanFire = bool(false)
)

func (x *CStore_GetWishlistDemoEmailStatus_Response) Reset() {
	*x = CStore_GetWishlistDemoEmailStatus_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetWishlistDemoEmailStatus_Response) ProtoMessage() {}

func (x *CStore_GetWishlistDemoEmailStatus_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetWishlistDemoEmailStatus_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetWishlistDemoEmailStatus_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{34}
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) GetCanFire() bool {
	if x != nil && x.CanFire != nil {
		return *x.CanFire
	}
	return Default_CStore_GetWishlistDemoEmailStatus_Response_CanFire
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) GetTimeStaged() uint32 {
	if x != nil && x.TimeStaged != nil {
		return *x.TimeStaged
	}
	return 0
}

func (x *CStore_GetWishlistDemoEmailStatus_Response) GetDemoReleaseDate() uint32 {
	if x != nil && x.DemoReleaseDate != nil {
		return *x.DemoReleaseDate
	}
	return 0
}

type CStore_QueueWishlistDemoEmailToFire_Request struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Appid           *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	DemoAppid       *uint32                `protobuf:"varint,2,opt,name=demo_appid,json=demoAppid" json:"demo_appid,omitempty"`
	AllowLateFiring *bool                  `protobuf:"varint,3,opt,name=allow_late_firing,json=allowLateFiring" json:"allow_late_firing,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) Reset() {
	*x = CStore_QueueWishlistDemoEmailToFire_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_QueueWishlistDemoEmailToFire_Request) ProtoMessage() {}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_QueueWishlistDemoEmailToFire_Request.ProtoReflect.Descriptor instead.
func (*CStore_QueueWishlistDemoEmailToFire_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{35}
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) GetDemoAppid() uint32 {
	if x != nil && x.DemoAppid != nil {
		return *x.DemoAppid
	}
	return 0
}

func (x *CStore_QueueWishlistDemoEmailToFire_Request) GetAllowLateFiring() bool {
	if x != nil && x.AllowLateFiring != nil {
		return *x.AllowLateFiring
	}
	return false
}

type CStore_QueueWishlistDemoEmailToFire_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_QueueWishlistDemoEmailToFire_Response) Reset() {
	*x = CStore_QueueWishlistDemoEmailToFire_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_QueueWishlistDemoEmailToFire_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_QueueWishlistDemoEmailToFire_Response) ProtoMessage() {}

func (x *CStore_QueueWishlistDemoEmailToFire_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_QueueWishlistDemoEmailToFire_Response.ProtoReflect.Descriptor instead.
func (*CStore_QueueWishlistDemoEmailToFire_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{36}
}

type CReservationPositionMessage struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Edistributor               *uint32                `protobuf:"varint,1,opt,name=edistributor" json:"edistributor,omitempty"`
	ProductIdentifier          *string                `protobuf:"bytes,2,opt,name=product_identifier,json=productIdentifier" json:"product_identifier,omitempty"`
	StartQueuePosition         *uint32                `protobuf:"varint,3,opt,name=start_queue_position,json=startQueuePosition" json:"start_queue_position,omitempty"`
	RtimeEstimatedNotification *uint32                `protobuf:"varint,4,opt,name=rtime_estimated_notification,json=rtimeEstimatedNotification" json:"rtime_estimated_notification,omitempty"`
	LocalizationToken          *string                `protobuf:"bytes,5,opt,name=localization_token,json=localizationToken" json:"localization_token,omitempty"`
	Accountid                  *uint32                `protobuf:"varint,6,opt,name=accountid" json:"accountid,omitempty"`
	RtimeCreated               *uint32                `protobuf:"varint,7,opt,name=rtime_created,json=rtimeCreated" json:"rtime_created,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CReservationPositionMessage) Reset() {
	*x = CReservationPositionMessage{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CReservationPositionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CReservationPositionMessage) ProtoMessage() {}

func (x *CReservationPositionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CReservationPositionMessage.ProtoReflect.Descriptor instead.
func (*CReservationPositionMessage) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{37}
}

func (x *CReservationPositionMessage) GetEdistributor() uint32 {
	if x != nil && x.Edistributor != nil {
		return *x.Edistributor
	}
	return 0
}

func (x *CReservationPositionMessage) GetProductIdentifier() string {
	if x != nil && x.ProductIdentifier != nil {
		return *x.ProductIdentifier
	}
	return ""
}

func (x *CReservationPositionMessage) GetStartQueuePosition() uint32 {
	if x != nil && x.StartQueuePosition != nil {
		return *x.StartQueuePosition
	}
	return 0
}

func (x *CReservationPositionMessage) GetRtimeEstimatedNotification() uint32 {
	if x != nil && x.RtimeEstimatedNotification != nil {
		return *x.RtimeEstimatedNotification
	}
	return 0
}

func (x *CReservationPositionMessage) GetLocalizationToken() string {
	if x != nil && x.LocalizationToken != nil {
		return *x.LocalizationToken
	}
	return ""
}

func (x *CReservationPositionMessage) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CReservationPositionMessage) GetRtimeCreated() uint32 {
	if x != nil && x.RtimeCreated != nil {
		return *x.RtimeCreated
	}
	return 0
}

type CStore_SetReservationPositionMessage_Request struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Settings      []*CReservationPositionMessage `protobuf:"bytes,1,rep,name=settings" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_SetReservationPositionMessage_Request) Reset() {
	*x = CStore_SetReservationPositionMessage_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_SetReservationPositionMessage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SetReservationPositionMessage_Request) ProtoMessage() {}

func (x *CStore_SetReservationPositionMessage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SetReservationPositionMessage_Request.ProtoReflect.Descriptor instead.
func (*CStore_SetReservationPositionMessage_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{38}
}

func (x *CStore_SetReservationPositionMessage_Request) GetSettings() []*CReservationPositionMessage {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CStore_SetReservationPositionMessage_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_SetReservationPositionMessage_Response) Reset() {
	*x = CStore_SetReservationPositionMessage_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_SetReservationPositionMessage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_SetReservationPositionMessage_Response) ProtoMessage() {}

func (x *CStore_SetReservationPositionMessage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_SetReservationPositionMessage_Response.ProtoReflect.Descriptor instead.
func (*CStore_SetReservationPositionMessage_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{39}
}

type CStore_DeleteReservationPositionMessage_Request struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Edistributor       *uint32                `protobuf:"varint,1,opt,name=edistributor" json:"edistributor,omitempty"`
	ProductIdentifier  *string                `protobuf:"bytes,2,opt,name=product_identifier,json=productIdentifier" json:"product_identifier,omitempty"`
	StartQueuePosition *uint32                `protobuf:"varint,3,opt,name=start_queue_position,json=startQueuePosition" json:"start_queue_position,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CStore_DeleteReservationPositionMessage_Request) Reset() {
	*x = CStore_DeleteReservationPositionMessage_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_DeleteReservationPositionMessage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_DeleteReservationPositionMessage_Request) ProtoMessage() {}

func (x *CStore_DeleteReservationPositionMessage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_DeleteReservationPositionMessage_Request.ProtoReflect.Descriptor instead.
func (*CStore_DeleteReservationPositionMessage_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{40}
}

func (x *CStore_DeleteReservationPositionMessage_Request) GetEdistributor() uint32 {
	if x != nil && x.Edistributor != nil {
		return *x.Edistributor
	}
	return 0
}

func (x *CStore_DeleteReservationPositionMessage_Request) GetProductIdentifier() string {
	if x != nil && x.ProductIdentifier != nil {
		return *x.ProductIdentifier
	}
	return ""
}

func (x *CStore_DeleteReservationPositionMessage_Request) GetStartQueuePosition() uint32 {
	if x != nil && x.StartQueuePosition != nil {
		return *x.StartQueuePosition
	}
	return 0
}

type CStore_DeleteReservationPositionMessage_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_DeleteReservationPositionMessage_Response) Reset() {
	*x = CStore_DeleteReservationPositionMessage_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_DeleteReservationPositionMessage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_DeleteReservationPositionMessage_Response) ProtoMessage() {}

func (x *CStore_DeleteReservationPositionMessage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_DeleteReservationPositionMessage_Response.ProtoReflect.Descriptor instead.
func (*CStore_DeleteReservationPositionMessage_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{41}
}

type CStore_GetAllReservationPositionMessages_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetAllReservationPositionMessages_Request) Reset() {
	*x = CStore_GetAllReservationPositionMessages_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetAllReservationPositionMessages_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetAllReservationPositionMessages_Request) ProtoMessage() {}

func (x *CStore_GetAllReservationPositionMessages_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetAllReservationPositionMessages_Request.ProtoReflect.Descriptor instead.
func (*CStore_GetAllReservationPositionMessages_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{42}
}

type CStore_GetAllReservationPositionMessages_Response struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Settings      []*CReservationPositionMessage `protobuf:"bytes,1,rep,name=settings" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetAllReservationPositionMessages_Response) Reset() {
	*x = CStore_GetAllReservationPositionMessages_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetAllReservationPositionMessages_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetAllReservationPositionMessages_Response) ProtoMessage() {}

func (x *CStore_GetAllReservationPositionMessages_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetAllReservationPositionMessages_Response.ProtoReflect.Descriptor instead.
func (*CStore_GetAllReservationPositionMessages_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{43}
}

func (x *CStore_GetAllReservationPositionMessages_Response) GetSettings() []*CReservationPositionMessage {
	if x != nil {
		return x.Settings
	}
	return nil
}

type CStore_ReloadAllReservationPositionMessages_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_ReloadAllReservationPositionMessages_Notification) Reset() {
	*x = CStore_ReloadAllReservationPositionMessages_Notification{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_ReloadAllReservationPositionMessages_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_ReloadAllReservationPositionMessages_Notification) ProtoMessage() {}

func (x *CStore_ReloadAllReservationPositionMessages_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_ReloadAllReservationPositionMessages_Notification.ProtoReflect.Descriptor instead.
func (*CStore_ReloadAllReservationPositionMessages_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{44}
}

type CSteamDeckCompatibility_SetFeedback_Request struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Appid         *uint32                          `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Feedback      *ESteamDeckCompatibilityFeedback `protobuf:"varint,2,opt,name=feedback,enum=ESteamDeckCompatibilityFeedback,def=0" json:"feedback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSteamDeckCompatibility_SetFeedback_Request fields.
const (
	Default_CSteamDeckCompatibility_SetFeedback_Request_Feedback = ESteamDeckCompatibilityFeedback_k_ESteamDeckCompatibilityFeedback_Unset
)

func (x *CSteamDeckCompatibility_SetFeedback_Request) Reset() {
	*x = CSteamDeckCompatibility_SetFeedback_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_SetFeedback_Request) ProtoMessage() {}

func (x *CSteamDeckCompatibility_SetFeedback_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_SetFeedback_Request.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_SetFeedback_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{45}
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CSteamDeckCompatibility_SetFeedback_Request) GetFeedback() ESteamDeckCompatibilityFeedback {
	if x != nil && x.Feedback != nil {
		return *x.Feedback
	}
	return Default_CSteamDeckCompatibility_SetFeedback_Request_Feedback
}

type CSteamDeckCompatibility_SetFeedback_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamDeckCompatibility_SetFeedback_Response) Reset() {
	*x = CSteamDeckCompatibility_SetFeedback_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamDeckCompatibility_SetFeedback_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_SetFeedback_Response) ProtoMessage() {}

func (x *CSteamDeckCompatibility_SetFeedback_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_SetFeedback_Response.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_SetFeedback_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{46}
}

type CSteamDeckCompatibility_ShouldPrompt_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) Reset() {
	*x = CSteamDeckCompatibility_ShouldPrompt_Request{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_ShouldPrompt_Request) ProtoMessage() {}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_ShouldPrompt_Request.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_ShouldPrompt_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{47}
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CSteamDeckCompatibility_ShouldPrompt_Response struct {
	state            protoimpl.MessageState           `protogen:"open.v1"`
	Prompt           *bool                            `protobuf:"varint,1,opt,name=prompt" json:"prompt,omitempty"`
	FeedbackEligible *bool                            `protobuf:"varint,2,opt,name=feedback_eligible,json=feedbackEligible" json:"feedback_eligible,omitempty"`
	ExistingFeedback *ESteamDeckCompatibilityFeedback `protobuf:"varint,3,opt,name=existing_feedback,json=existingFeedback,enum=ESteamDeckCompatibilityFeedback,def=0" json:"existing_feedback,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for CSteamDeckCompatibility_ShouldPrompt_Response fields.
const (
	Default_CSteamDeckCompatibility_ShouldPrompt_Response_ExistingFeedback = ESteamDeckCompatibilityFeedback_k_ESteamDeckCompatibilityFeedback_Unset
)

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) Reset() {
	*x = CSteamDeckCompatibility_ShouldPrompt_Response{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamDeckCompatibility_ShouldPrompt_Response) ProtoMessage() {}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamDeckCompatibility_ShouldPrompt_Response.ProtoReflect.Descriptor instead.
func (*CSteamDeckCompatibility_ShouldPrompt_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{48}
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) GetPrompt() bool {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return false
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) GetFeedbackEligible() bool {
	if x != nil && x.FeedbackEligible != nil {
		return *x.FeedbackEligible
	}
	return false
}

func (x *CSteamDeckCompatibility_ShouldPrompt_Response) GetExistingFeedback() ESteamDeckCompatibilityFeedback {
	if x != nil && x.ExistingFeedback != nil {
		return *x.ExistingFeedback
	}
	return Default_CSteamDeckCompatibility_ShouldPrompt_Response_ExistingFeedback
}

type CStore_StorePreferencesChanged_Notification struct {
	state                        protoimpl.MessageState            `protogen:"open.v1"`
	Preferences                  *CStore_UserPreferences           `protobuf:"bytes,1,opt,name=preferences" json:"preferences,omitempty"`
	TagPreferences               *CStore_UserTagPreferences        `protobuf:"bytes,2,opt,name=tag_preferences,json=tagPreferences" json:"tag_preferences,omitempty"`
	ContentDescriptorPreferences *UserContentDescriptorPreferences `protobuf:"bytes,3,opt,name=content_descriptor_preferences,json=contentDescriptorPreferences" json:"content_descriptor_preferences,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CStore_StorePreferencesChanged_Notification) Reset() {
	*x = CStore_StorePreferencesChanged_Notification{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_StorePreferencesChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_StorePreferencesChanged_Notification) ProtoMessage() {}

func (x *CStore_StorePreferencesChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_StorePreferencesChanged_Notification.ProtoReflect.Descriptor instead.
func (*CStore_StorePreferencesChanged_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{49}
}

func (x *CStore_StorePreferencesChanged_Notification) GetPreferences() *CStore_UserPreferences {
	if x != nil {
		return x.Preferences
	}
	return nil
}

func (x *CStore_StorePreferencesChanged_Notification) GetTagPreferences() *CStore_UserTagPreferences {
	if x != nil {
		return x.TagPreferences
	}
	return nil
}

func (x *CStore_StorePreferencesChanged_Notification) GetContentDescriptorPreferences() *UserContentDescriptorPreferences {
	if x != nil {
		return x.ContentDescriptorPreferences
	}
	return nil
}

type CStore_PurchaseReceiptInfo_LineItem struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Packageid           *uint32                `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	Appid               *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	LineItemDescription *string                `protobuf:"bytes,3,opt,name=line_item_description,json=lineItemDescription" json:"line_item_description,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CStore_PurchaseReceiptInfo_LineItem) Reset() {
	*x = CStore_PurchaseReceiptInfo_LineItem{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_PurchaseReceiptInfo_LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_PurchaseReceiptInfo_LineItem) ProtoMessage() {}

func (x *CStore_PurchaseReceiptInfo_LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_PurchaseReceiptInfo_LineItem.ProtoReflect.Descriptor instead.
func (*CStore_PurchaseReceiptInfo_LineItem) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CStore_PurchaseReceiptInfo_LineItem) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo_LineItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_PurchaseReceiptInfo_LineItem) GetLineItemDescription() string {
	if x != nil && x.LineItemDescription != nil {
		return *x.LineItemDescription
	}
	return ""
}

type CStore_GetRecommendedTagsForUser_Response_Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tagid         *uint32                `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Weight        *float32               `protobuf:"fixed32,3,opt,name=weight" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetRecommendedTagsForUser_Response_Tag) Reset() {
	*x = CStore_GetRecommendedTagsForUser_Response_Tag{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetRecommendedTagsForUser_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetRecommendedTagsForUser_Response_Tag) ProtoMessage() {}

func (x *CStore_GetRecommendedTagsForUser_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetRecommendedTagsForUser_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetRecommendedTagsForUser_Response_Tag) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CStore_GetRecommendedTagsForUser_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetRecommendedTagsForUser_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CStore_GetRecommendedTagsForUser_Response_Tag) GetWeight() float32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type CStore_GetMostPopularTags_Response_Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tagid         *uint32                `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetMostPopularTags_Response_Tag) Reset() {
	*x = CStore_GetMostPopularTags_Response_Tag{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetMostPopularTags_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetMostPopularTags_Response_Tag) ProtoMessage() {}

func (x *CStore_GetMostPopularTags_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetMostPopularTags_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetMostPopularTags_Response_Tag) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CStore_GetMostPopularTags_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetMostPopularTags_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CStore_GetLocalizedNameForTags_Response_Tag struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Tagid          *uint32                `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	EnglishName    *string                `protobuf:"bytes,2,opt,name=english_name,json=englishName" json:"english_name,omitempty"`
	Name           *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	NormalizedName *string                `protobuf:"bytes,4,opt,name=normalized_name,json=normalizedName" json:"normalized_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) Reset() {
	*x = CStore_GetLocalizedNameForTags_Response_Tag{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetLocalizedNameForTags_Response_Tag) ProtoMessage() {}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetLocalizedNameForTags_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetLocalizedNameForTags_Response_Tag) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetEnglishName() string {
	if x != nil && x.EnglishName != nil {
		return *x.EnglishName
	}
	return ""
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CStore_GetLocalizedNameForTags_Response_Tag) GetNormalizedName() string {
	if x != nil && x.NormalizedName != nil {
		return *x.NormalizedName
	}
	return ""
}

type CStore_GetTagList_Response_Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tagid         *uint32                `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStore_GetTagList_Response_Tag) Reset() {
	*x = CStore_GetTagList_Response_Tag{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetTagList_Response_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTagList_Response_Tag) ProtoMessage() {}

func (x *CStore_GetTagList_Response_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTagList_Response_Tag.ProtoReflect.Descriptor instead.
func (*CStore_GetTagList_Response_Tag) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CStore_GetTagList_Response_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_GetTagList_Response_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CStore_GetUserGameInterestState_Response_InQueue struct {
	state              protoimpl.MessageState    `protogen:"open.v1"`
	Type               *EStoreDiscoveryQueueType `protobuf:"varint,1,opt,name=type,enum=EStoreDiscoveryQueueType,def=0" json:"type,omitempty"`
	Skipped            *bool                     `protobuf:"varint,2,opt,name=skipped" json:"skipped,omitempty"`
	ItemsRemaining     *int32                    `protobuf:"varint,3,opt,name=items_remaining,json=itemsRemaining" json:"items_remaining,omitempty"`
	NextAppid          *uint32                   `protobuf:"varint,4,opt,name=next_appid,json=nextAppid" json:"next_appid,omitempty"`
	ExperimentalCohort *uint32                   `protobuf:"varint,5,opt,name=experimental_cohort,json=experimentalCohort" json:"experimental_cohort,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CStore_GetUserGameInterestState_Response_InQueue fields.
const (
	Default_CStore_GetUserGameInterestState_Response_InQueue_Type = EStoreDiscoveryQueueType_k_EStoreDiscoveryQueueTypeNew
)

func (x *CStore_GetUserGameInterestState_Response_InQueue) Reset() {
	*x = CStore_GetUserGameInterestState_Response_InQueue{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetUserGameInterestState_Response_InQueue) ProtoMessage() {}

func (x *CStore_GetUserGameInterestState_Response_InQueue) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetUserGameInterestState_Response_InQueue.ProtoReflect.Descriptor instead.
func (*CStore_GetUserGameInterestState_Response_InQueue) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{19, 0}
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetType() EStoreDiscoveryQueueType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CStore_GetUserGameInterestState_Response_InQueue_Type
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetSkipped() bool {
	if x != nil && x.Skipped != nil {
		return *x.Skipped
	}
	return false
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetItemsRemaining() int32 {
	if x != nil && x.ItemsRemaining != nil {
		return *x.ItemsRemaining
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetNextAppid() uint32 {
	if x != nil && x.NextAppid != nil {
		return *x.NextAppid
	}
	return 0
}

func (x *CStore_GetUserGameInterestState_Response_InQueue) GetExperimentalCohort() uint32 {
	if x != nil && x.ExperimentalCohort != nil {
		return *x.ExperimentalCohort
	}
	return 0
}

type CStore_UserTagPreferences_Tag struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Tagid          *uint32                `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Name           *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TimestampAdded *uint32                `protobuf:"varint,3,opt,name=timestamp_added,json=timestampAdded" json:"timestamp_added,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CStore_UserTagPreferences_Tag) Reset() {
	*x = CStore_UserTagPreferences_Tag{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_UserTagPreferences_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_UserTagPreferences_Tag) ProtoMessage() {}

func (x *CStore_UserTagPreferences_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_UserTagPreferences_Tag.ProtoReflect.Descriptor instead.
func (*CStore_UserTagPreferences_Tag) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{26, 0}
}

func (x *CStore_UserTagPreferences_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *CStore_UserTagPreferences_Tag) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CStore_UserTagPreferences_Tag) GetTimestampAdded() uint32 {
	if x != nil && x.TimestampAdded != nil {
		return *x.TimestampAdded
	}
	return 0
}

type CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Appid              *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	SteamidsTopFriends []uint64               `protobuf:"varint,2,rep,name=steamids_top_friends,json=steamidsTopFriends" json:"steamids_top_friends,omitempty"`
	TotalFriends       *uint32                `protobuf:"varint,3,opt,name=total_friends,json=totalFriends" json:"total_friends,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) Reset() {
	*x = CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData{}
	mi := &file_steammessages_store_steamclient_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) ProtoMessage() {}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_store_steamclient_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData.ProtoReflect.Descriptor instead.
func (*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) Descriptor() ([]byte, []int) {
	return file_steammessages_store_steamclient_proto_rawDescGZIP(), []int{29, 0}
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) GetSteamidsTopFriends() []uint64 {
	if x != nil {
		return x.SteamidsTopFriends
	}
	return nil
}

func (x *CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData) GetTotalFriends() uint32 {
	if x != nil && x.TotalFriends != nil {
		return *x.TotalFriends
	}
	return 0
}

var File_steammessages_store_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_store_steamclient_proto_rawDesc = "" +
	"\n" +
	"%steammessages_store.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\x1a\x11contenthubs.proto\x1a+steammessages_storebrowse.steamclient.proto\x1a\venums.proto\"\xa9\x01\n" +
	"\x1cCStore_RegisterCDKey_Request\x12'\n" +
	"\x0factivation_code\x18\x01 \x01(\tR\x0eactivationCode\x12+\n" +
	"\x11purchase_platform\x18\x02 \x01(\x05R\x10purchasePlatform\x123\n" +
	"\x16is_request_from_client\x18\x03 \x01(\bR\x13isRequestFromClient\"\xae\x06\n" +
	"\x1aCStore_PurchaseReceiptInfo\x12$\n" +
	"\rtransactionid\x18\x01 \x01(\x04R\rtransactionid\x12\x1c\n" +
	"\tpackageid\x18\x02 \x01(\rR\tpackageid\x12'\n" +
	"\x0fpurchase_status\x18\x03 \x01(\rR\x0epurchaseStatus\x12#\n" +
	"\rresult_detail\x18\x04 \x01(\rR\fresultDetail\x12)\n" +
	"\x10transaction_time\x18\x05 \x01(\rR\x0ftransactionTime\x12%\n" +
	"\x0epayment_method\x18\x06 \x01(\rR\rpaymentMethod\x12\x1d\n" +
	"\n" +
	"base_price\x18\a \x01(\x04R\tbasePrice\x12%\n" +
	"\x0etotal_discount\x18\b \x01(\x04R\rtotalDiscount\x12\x10\n" +
	"\x03tax\x18\t \x01(\x04R\x03tax\x12\x1a\n" +
	"\bshipping\x18\n" +
	" \x01(\x04R\bshipping\x12#\n" +
	"\rcurrency_code\x18\v \x01(\rR\fcurrencyCode\x12!\n" +
	"\fcountry_code\x18\f \x01(\tR\vcountryCode\x12%\n" +
	"\x0eerror_headline\x18\r \x01(\tR\rerrorHeadline\x12!\n" +
	"\ferror_string\x18\x0e \x01(\tR\verrorString\x12&\n" +
	"\x0ferror_link_text\x18\x0f \x01(\tR\rerrorLinkText\x12$\n" +
	"\x0eerror_link_url\x18\x10 \x01(\tR\ferrorLinkUrl\x12\x1f\n" +
	"\verror_appid\x18\x11 \x01(\rR\n" +
	"errorAppid\x12C\n" +
	"\n" +
	"line_items\x18\x12 \x03(\v2$.CStore_PurchaseReceiptInfo.LineItemR\tlineItems\x1ar\n" +
	"\bLineItem\x12\x1c\n" +
	"\tpackageid\x18\x01 \x01(\rR\tpackageid\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x122\n" +
	"\x15line_item_description\x18\x03 \x01(\tR\x13lineItemDescription\"\xa8\x01\n" +
	"\x1dCStore_RegisterCDKey_Response\x126\n" +
	"\x17purchase_result_details\x18\x01 \x01(\x05R\x15purchaseResultDetails\x12O\n" +
	"\x15purchase_receipt_info\x18\x02 \x01(\v2\x1b.CStore_PurchaseReceiptInfoR\x13purchaseReceiptInfo\"\x93\x01\n" +
	"(CStore_GetRecommendedTagsForUser_Request\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12(\n" +
	"\x10favor_rarer_tags\x18\x04 \x01(\bR\x0efavorRarerTags\"\xb8\x01\n" +
	")CStore_GetRecommendedTagsForUser_Response\x12B\n" +
	"\x04tags\x18\x01 \x03(\v2..CStore_GetRecommendedTagsForUser_Response.TagR\x04tags\x1aG\n" +
	"\x03Tag\x12\x14\n" +
	"\x05tagid\x18\x01 \x01(\rR\x05tagid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06weight\x18\x03 \x01(\x02R\x06weight\"?\n" +
	"!CStore_GetMostPopularTags_Request\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\"\x92\x01\n" +
	"\"CStore_GetMostPopularTags_Response\x12;\n" +
	"\x04tags\x18\x01 \x03(\v2'.CStore_GetMostPopularTags_Response.TagR\x04tags\x1a/\n" +
	"\x03Tag\x12\x14\n" +
	"\x05tagid\x18\x01 \x01(\rR\x05tagid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\\\n" +
	"&CStore_GetLocalizedNameForTags_Request\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x16\n" +
	"\x06tagids\x18\x02 \x03(\rR\x06tagids\"\xe8\x01\n" +
	"'CStore_GetLocalizedNameForTags_Response\x12@\n" +
	"\x04tags\x18\x01 \x03(\v2,.CStore_GetLocalizedNameForTags_Response.TagR\x04tags\x1a{\n" +
	"\x03Tag\x12\x14\n" +
	"\x05tagid\x18\x01 \x01(\rR\x05tagid\x12!\n" +
	"\fenglish_name\x18\x02 \x01(\tR\venglishName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12'\n" +
	"\x0fnormalized_name\x18\x04 \x01(\tR\x0enormalizedName\"c\n" +
	"\x19CStore_GetTagList_Request\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12*\n" +
	"\x11have_version_hash\x18\x02 \x01(\tR\x0fhaveVersionHash\"\xa5\x01\n" +
	"\x1aCStore_GetTagList_Response\x12!\n" +
	"\fversion_hash\x18\x01 \x01(\tR\vversionHash\x123\n" +
	"\x04tags\x18\x02 \x03(\v2\x1f.CStore_GetTagList_Response.TagR\x04tags\x1a/\n" +
	"\x03Tag\x12\x14\n" +
	"\x05tagid\x18\x01 \x01(\rR\x05tagid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\xaf\x04\n" +
	"\x1cCStoreDiscoveryQueueSettings\x12\x15\n" +
	"\x06os_win\x18\x04 \x01(\bR\x05osWin\x12\x15\n" +
	"\x06os_mac\x18\x05 \x01(\bR\x05osMac\x12\x19\n" +
	"\bos_linux\x18\x06 \x01(\bR\aosLinux\x126\n" +
	"\x17full_controller_support\x18\a \x01(\bR\x15fullControllerSupport\x126\n" +
	"\x17native_steam_controller\x18\b \x01(\bR\x15nativeSteamController\x12.\n" +
	"\x13include_coming_soon\x18\t \x01(\bR\x11includeComingSoon\x12'\n" +
	"\x0fexcluded_tagids\x18\n" +
	" \x03(\rR\x0eexcludedTagids\x120\n" +
	"\x14exclude_early_access\x18\v \x01(\bR\x12excludeEarlyAccess\x12%\n" +
	"\x0eexclude_videos\x18\f \x01(\bR\rexcludeVideos\x12)\n" +
	"\x10exclude_software\x18\r \x01(\bR\x0fexcludeSoftware\x12\x1f\n" +
	"\vexclude_dlc\x18\x0e \x01(\bR\n" +
	"excludeDlc\x12/\n" +
	"\x13exclude_soundtracks\x18\x0f \x01(\bR\x12excludeSoundtracks\x12'\n" +
	"\x0ffeatured_tagids\x18\x10 \x03(\rR\x0efeaturedTagids\"\xde\x05\n" +
	" CStore_GetDiscoveryQueue_Request\x12W\n" +
	"\n" +
	"queue_type\x18\x01 \x01(\x0e2\x19.EStoreDiscoveryQueueType:\x1dk_EStoreDiscoveryQueueTypeNewR\tqueueType\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x12#\n" +
	"\rrebuild_queue\x18\x03 \x01(\bR\frebuildQueue\x12)\n" +
	"\x10settings_changed\x18\x04 \x01(\bR\x0fsettingsChanged\x129\n" +
	"\bsettings\x18\x05 \x01(\v2\x1d.CStoreDiscoveryQueueSettingsR\bsettings\x123\n" +
	"\x16rebuild_queue_if_stale\x18\x06 \x01(\bR\x13rebuildQueueIfStale\x126\n" +
	"\x17ignore_user_preferences\x18\b \x01(\bR\x15ignoreUserPreferences\x126\n" +
	"\x17no_experimental_results\x18\t \x01(\bR\x15noExperimentalResults\x12/\n" +
	"\x13experimental_cohort\x18\n" +
	" \x01(\rR\x12experimentalCohort\x12/\n" +
	"\x14debug_get_solr_query\x18\v \x01(\bR\x11debugGetSolrQuery\x12=\n" +
	"\x11store_page_filter\x18\f \x01(\v2\x11.CStorePageFilterR\x0fstorePageFilter\x12-\n" +
	"\acontext\x18\r \x01(\v2\x13.StoreBrowseContextR\acontext\x12>\n" +
	"\fdata_request\x18\x0e \x01(\v2\x1b.StoreBrowseItemDataRequestR\vdataRequest\"\xd9\x02\n" +
	"!CStore_GetDiscoveryQueue_Response\x12\x16\n" +
	"\x06appids\x18\x01 \x03(\rR\x06appids\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x129\n" +
	"\bsettings\x18\x03 \x01(\v2\x1d.CStoreDiscoveryQueueSettingsR\bsettings\x12\x18\n" +
	"\askipped\x18\x04 \x01(\x05R\askipped\x12\x1c\n" +
	"\texhausted\x18\x05 \x01(\bR\texhausted\x12/\n" +
	"\x13experimental_cohort\x18\x06 \x01(\rR\x12experimentalCohort\x12(\n" +
	"\x10debug_solr_query\x18\a \x01(\tR\x0edebugSolrQuery\x12+\n" +
	"\vstore_items\x18\b \x03(\v2\n" +
	".StoreItemR\n" +
	"storeItems\"\xc2\x01\n" +
	"(CStore_GetDiscoveryQueueSettings_Request\x12W\n" +
	"\n" +
	"queue_type\x18\x01 \x01(\x0e2\x19.EStoreDiscoveryQueueType:\x1dk_EStoreDiscoveryQueueTypeNewR\tqueueType\x12=\n" +
	"\x11store_page_filter\x18\x02 \x01(\v2\x11.CStorePageFilterR\x0fstorePageFilter\"\x89\x01\n" +
	")CStore_GetDiscoveryQueueSettings_Response\x12!\n" +
	"\fcountry_code\x18\x01 \x01(\tR\vcountryCode\x129\n" +
	"\bsettings\x18\x02 \x01(\v2\x1d.CStoreDiscoveryQueueSettingsR\bsettings\"\xd5\x01\n" +
	"%CStore_SkipDiscoveryQueueItem_Request\x12W\n" +
	"\n" +
	"queue_type\x18\x01 \x01(\x0e2\x19.EStoreDiscoveryQueueType:\x1dk_EStoreDiscoveryQueueTypeNewR\tqueueType\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x12=\n" +
	"\x11store_page_filter\x18\x03 \x01(\v2\x11.CStorePageFilterR\x0fstorePageFilter\"(\n" +
	"&CStore_SkipDiscoveryQueueItem_Response\"\x7f\n" +
	"'CStore_GetUserGameInterestState_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1f\n" +
	"\vstore_appid\x18\x02 \x01(\rR\n" +
	"storeAppid\x12\x1d\n" +
	"\n" +
	"beta_appid\x18\x03 \x01(\rR\tbetaAppid\"\xce\x06\n" +
	"(CStore_GetUserGameInterestState_Response\x12\x14\n" +
	"\x05owned\x18\x01 \x01(\bR\x05owned\x12\x1a\n" +
	"\bwishlist\x18\x02 \x01(\bR\bwishlist\x12\x18\n" +
	"\aignored\x18\x03 \x01(\bR\aignored\x12\x1c\n" +
	"\tfollowing\x18\x04 \x01(\bR\tfollowing\x126\n" +
	"\tin_queues\x18\x05 \x03(\x0e2\x19.EStoreDiscoveryQueueTypeR\binQueues\x12C\n" +
	"\x10queues_with_skip\x18\x06 \x03(\x0e2\x19.EStoreDiscoveryQueueTypeR\x0equeuesWithSkip\x122\n" +
	"\x15queue_items_remaining\x18\a \x03(\x05R\x13queueItemsRemaining\x123\n" +
	"\x16queue_items_next_appid\x18\b \x03(\rR\x13queueItemsNextAppid\x12+\n" +
	"\x11temporarily_owned\x18\t \x01(\bR\x10temporarilyOwned\x12I\n" +
	"\x06queues\x18\n" +
	" \x03(\v21.CStore_GetUserGameInterestState_Response.InQueueR\x06queues\x12%\n" +
	"\x0eignored_reason\x18\v \x01(\x05R\rignoredReason\x12F\n" +
	"\vbeta_status\x18\f \x01(\x0e2\x10.EPlaytestStatus:\x13k_ETesterStatusNoneR\n" +
	"betaStatus\x1a\xea\x01\n" +
	"\aInQueue\x12L\n" +
	"\x04type\x18\x01 \x01(\x0e2\x19.EStoreDiscoveryQueueType:\x1dk_EStoreDiscoveryQueueTypeNewR\x04type\x12\x18\n" +
	"\askipped\x18\x02 \x01(\bR\askipped\x12'\n" +
	"\x0fitems_remaining\x18\x03 \x01(\x05R\x0eitemsRemaining\x12\x1d\n" +
	"\n" +
	"next_appid\x18\x04 \x01(\rR\tnextAppid\x12/\n" +
	"\x13experimental_cohort\x18\x05 \x01(\rR\x12experimentalCohort\"\xdf\x01\n" +
	"+CStore_GetDiscoveryQueueSkippedApps_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12W\n" +
	"\n" +
	"queue_type\x18\x02 \x01(\x0e2\x19.EStoreDiscoveryQueueType:\x1dk_EStoreDiscoveryQueueTypeNewR\tqueueType\x12=\n" +
	"\x11store_page_filter\x18\x03 \x01(\v2\x11.CStorePageFilterR\x0fstorePageFilter\"F\n" +
	",CStore_GetDiscoveryQueueSkippedApps_Response\x12\x16\n" +
	"\x06appids\x18\x01 \x03(\rR\x06appids\"\x94\x01\n" +
	"\x18CStore_ReportApp_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12J\n" +
	"\vreport_type\x18\x02 \x01(\x0e2\x0f.EAppReportType:\x18k_EAppReportType_InvalidR\n" +
	"reportType\x12\x16\n" +
	"\x06report\x18\x03 \x01(\tR\x06report\"\x1b\n" +
	"\x19CStore_ReportApp_Response\"$\n" +
	"\"CStore_GetStorePreferences_Request\"\xd9\x05\n" +
	"\x16CStore_UserPreferences\x12)\n" +
	"\x10primary_language\x18\x01 \x01(\x05R\x0fprimaryLanguage\x12/\n" +
	"\x13secondary_languages\x18\x02 \x01(\rR\x12secondaryLanguages\x12)\n" +
	"\x10platform_windows\x18\x03 \x01(\bR\x0fplatformWindows\x12!\n" +
	"\fplatform_mac\x18\x04 \x01(\bR\vplatformMac\x12%\n" +
	"\x0eplatform_linux\x18\x05 \x01(\bR\rplatformLinux\x12+\n" +
	"\x11timestamp_updated\x18\b \x01(\rR\x10timestampUpdated\x120\n" +
	"\x14hide_store_broadcast\x18\t \x01(\bR\x12hideStoreBroadcast\x12w\n" +
	"\x17review_score_preference\x18\n" +
	" \x01(\x0e2\x1b.EUserReviewScorePreference:\"k_EUserReviewScorePreference_UnsetR\x15reviewScorePreference\x12f\n" +
	"0timestamp_content_descriptor_preferences_updated\x18\v \x01(\x05R,timestampContentDescriptorPreferencesUpdated\x12{\n" +
	"\x15provide_deck_feedback\x18\f \x01(\x0e2\x1f.EProvideDeckFeedbackPreference:&k_EProvideDeckFeedbackPreference_UnsetR\x13provideDeckFeedback\x121\n" +
	"\x14additional_languages\x18\r \x01(\tR\x13additionalLanguages\"\xbd\x01\n" +
	"\x19CStore_UserTagPreferences\x12F\n" +
	"\x0ftags_to_exclude\x18\x01 \x03(\v2\x1e.CStore_UserTagPreferences.TagR\rtagsToExclude\x1aX\n" +
	"\x03Tag\x12\x14\n" +
	"\x05tagid\x18\x01 \x01(\rR\x05tagid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12'\n" +
	"\x0ftimestamp_added\x18\x03 \x01(\rR\x0etimestampAdded\"\x8e\x02\n" +
	"#CStore_GetStorePreferences_Response\x129\n" +
	"\vpreferences\x18\x01 \x01(\v2\x17.CStore_UserPreferencesR\vpreferences\x12C\n" +
	"\x0ftag_preferences\x18\x02 \x01(\v2\x1a.CStore_UserTagPreferencesR\x0etagPreferences\x12g\n" +
	"\x1econtent_descriptor_preferences\x18\x03 \x01(\v2!.UserContentDescriptorPreferencesR\x1ccontentDescriptorPreferences\"o\n" +
	"*CStore_GetTrendingAppsAmongFriends_Request\x12\x19\n" +
	"\bnum_apps\x18\x01 \x01(\rR\anumApps\x12&\n" +
	"\x0fnum_top_friends\x18\x02 \x01(\rR\rnumTopFriends\"\x90\x02\n" +
	"+CStore_GetTrendingAppsAmongFriends_Response\x12a\n" +
	"\rtrending_apps\x18\x01 \x03(\v2<.CStore_GetTrendingAppsAmongFriends_Response.TrendingAppDataR\ftrendingApps\x1a~\n" +
	"\x0fTrendingAppData\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x120\n" +
	"\x14steamids_top_friends\x18\x02 \x03(\x04R\x12steamidsTopFriends\x12#\n" +
	"\rtotal_friends\x18\x03 \x01(\rR\ftotalFriends\"\xe5\x01\n" +
	".CStore_MigratePartnerLinkTracking_Notification\x12\x1c\n" +
	"\taccountid\x18\x01 \x01(\rR\taccountid\x12\x1c\n" +
	"\tbrowserid\x18\x02 \x01(\x04R\tbrowserid\x12w\n" +
	"\x0fbackfill_source\x18\x03 \x01(\x0e2#.EPartnerLinkTrackingBackfillSource:)k_EPartnerLinkTrackingBackfillSource_NoneR\x0ebackfillSource\"\xb1\x01\n" +
	"(CStore_UpdatePackageReservations_Request\x12.\n" +
	"\x13packages_to_reserve\x18\x01 \x03(\rR\x11packagesToReserve\x122\n" +
	"\x15packages_to_unreserve\x18\x02 \x03(\rR\x13packagesToUnreserve\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\"v\n" +
	")CStore_UpdatePackageReservations_Response\x12I\n" +
	"\x12reservation_status\x18\x01 \x03(\v2\x1a.CPackageReservationStatusR\x11reservationStatus\"\x8c\x01\n" +
	")CStore_GetWishlistDemoEmailStatus_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1d\n" +
	"\n" +
	"demo_appid\x18\x02 \x01(\rR\tdemoAppid\x12*\n" +
	"\x11allow_late_firing\x18\x03 \x01(\bR\x0fallowLateFiring\"\x9b\x01\n" +
	"*CStore_GetWishlistDemoEmailStatus_Response\x12 \n" +
	"\bcan_fire\x18\x01 \x01(\b:\x05falseR\acanFire\x12\x1f\n" +
	"\vtime_staged\x18\x02 \x01(\rR\n" +
	"timeStaged\x12*\n" +
	"\x11demo_release_date\x18\x03 \x01(\rR\x0fdemoReleaseDate\"\x8e\x01\n" +
	"+CStore_QueueWishlistDemoEmailToFire_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1d\n" +
	"\n" +
	"demo_appid\x18\x02 \x01(\rR\tdemoAppid\x12*\n" +
	"\x11allow_late_firing\x18\x03 \x01(\bR\x0fallowLateFiring\".\n" +
	",CStore_QueueWishlistDemoEmailToFire_Response\"\xd6\x02\n" +
	"\x1bCReservationPositionMessage\x12\"\n" +
	"\fedistributor\x18\x01 \x01(\rR\fedistributor\x12-\n" +
	"\x12product_identifier\x18\x02 \x01(\tR\x11productIdentifier\x120\n" +
	"\x14start_queue_position\x18\x03 \x01(\rR\x12startQueuePosition\x12@\n" +
	"\x1crtime_estimated_notification\x18\x04 \x01(\rR\x1artimeEstimatedNotification\x12-\n" +
	"\x12localization_token\x18\x05 \x01(\tR\x11localizationToken\x12\x1c\n" +
	"\taccountid\x18\x06 \x01(\rR\taccountid\x12#\n" +
	"\rrtime_created\x18\a \x01(\rR\frtimeCreated\"h\n" +
	",CStore_SetReservationPositionMessage_Request\x128\n" +
	"\bsettings\x18\x01 \x03(\v2\x1c.CReservationPositionMessageR\bsettings\"/\n" +
	"-CStore_SetReservationPositionMessage_Response\"\xb6\x01\n" +
	"/CStore_DeleteReservationPositionMessage_Request\x12\"\n" +
	"\fedistributor\x18\x01 \x01(\rR\fedistributor\x12-\n" +
	"\x12product_identifier\x18\x02 \x01(\tR\x11productIdentifier\x120\n" +
	"\x14start_queue_position\x18\x03 \x01(\rR\x12startQueuePosition\"2\n" +
	"0CStore_DeleteReservationPositionMessage_Response\"2\n" +
	"0CStore_GetAllReservationPositionMessages_Request\"m\n" +
	"1CStore_GetAllReservationPositionMessages_Response\x128\n" +
	"\bsettings\x18\x01 \x03(\v2\x1c.CReservationPositionMessageR\bsettings\":\n" +
	"8CStore_ReloadAllReservationPositionMessages_Notification\"\xaa\x01\n" +
	"+CSteamDeckCompatibility_SetFeedback_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12e\n" +
	"\bfeedback\x18\x02 \x01(\x0e2 .ESteamDeckCompatibilityFeedback:'k_ESteamDeckCompatibilityFeedback_UnsetR\bfeedback\".\n" +
	",CSteamDeckCompatibility_SetFeedback_Response\"D\n" +
	",CSteamDeckCompatibility_ShouldPrompt_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"\xec\x01\n" +
	"-CSteamDeckCompatibility_ShouldPrompt_Response\x12\x16\n" +
	"\x06prompt\x18\x01 \x01(\bR\x06prompt\x12+\n" +
	"\x11feedback_eligible\x18\x02 \x01(\bR\x10feedbackEligible\x12v\n" +
	"\x11existing_feedback\x18\x03 \x01(\x0e2 .ESteamDeckCompatibilityFeedback:'k_ESteamDeckCompatibilityFeedback_UnsetR\x10existingFeedback\"\x96\x02\n" +
	"+CStore_StorePreferencesChanged_Notification\x129\n" +
	"\vpreferences\x18\x01 \x01(\v2\x17.CStore_UserPreferencesR\vpreferences\x12C\n" +
	"\x0ftag_preferences\x18\x02 \x01(\v2\x1a.CStore_UserTagPreferencesR\x0etagPreferences\x12g\n" +
	"\x1econtent_descriptor_preferences\x18\x03 \x01(\v2!.UserContentDescriptorPreferencesR\x1ccontentDescriptorPreferences*\xab\x05\n" +
	"\x18EStoreDiscoveryQueueType\x12!\n" +
	"\x1dk_EStoreDiscoveryQueueTypeNew\x10\x00\x12(\n" +
	"$k_EStoreDiscoveryQueueTypeComingSoon\x10\x01\x12)\n" +
	"%k_EStoreDiscoveryQueueTypeRecommended\x10\x02\x12-\n" +
	")k_EStoreDiscoveryQueueTypeEveryNewRelease\x10\x03\x12+\n" +
	"'k_EStoreDiscoveryQueueTypeMLRecommender\x10\x05\x12,\n" +
	"(k_EStoreDiscoveryQueueTypeWishlistOnSale\x10\x06\x12!\n" +
	"\x1dk_EStoreDiscoveryQueueTypeDLC\x10\a\x12'\n" +
	"#k_EStoreDiscoveryQueueTypeDLCOnSale\x10\b\x123\n" +
	"/k_EStoreDiscoveryQueueTypeRecommendedComingSoon\x10\t\x12-\n" +
	")k_EStoreDiscoveryQueueTypeRecommendedFree\x10\n" +
	"\x12/\n" +
	"+k_EStoreDiscoveryQueueTypeRecommendedOnSale\x10\v\x12.\n" +
	"*k_EStoreDiscoveryQueueTypeRecommendedDemos\x10\f\x12,\n" +
	"(k_EStoreDiscoveryQueueTypeDLCNewReleases\x10\r\x12+\n" +
	"'k_EStoreDiscoveryQueueTypeDLCTopSellers\x10\x0e\x12!\n" +
	"\x1dk_EStoreDiscoveryQueueTypeMAX\x10\x0f*\x9a\x01\n" +
	"\x0fEPlaytestStatus\x12\x17\n" +
	"\x13k_ETesterStatusNone\x10\x00\x12\x1a\n" +
	"\x16k_ETesterStatusPending\x10\x01\x12\x1a\n" +
	"\x16k_ETesterStatusInvited\x10\x02\x12\x1a\n" +
	"\x16k_ETesterStatusGranted\x10\x03\x12\x1a\n" +
	"\x16k_ETesterStatusExpired\x10\x04*\xa2\x04\n" +
	"\x0eEAppReportType\x12\x1c\n" +
	"\x18k_EAppReportType_Invalid\x10\x00\x12\x19\n" +
	"\x15k_EAppReportType_Scam\x10\x01\x12\x1c\n" +
	"\x18k_EAppReportType_Malware\x10\x02\x12\x1f\n" +
	"\x1bk_EAppReportType_HateSpeech\x10\x03\x12 \n" +
	"\x1ck_EAppReportType_Pornography\x10\x04\x12+\n" +
	"'k_EAppReportType_NonLabeledAdultContent\x10\x05\x12\x1d\n" +
	"\x19k_EAppReportType_Libelous\x10\x06\x12\x1e\n" +
	"\x1ak_EAppReportType_Offensive\x10\a\x12%\n" +
	"!k_EAppReportType_ExploitsChildren\x10\b\x128\n" +
	"4k_EAppReportType_MtxWithNonSteamWalletPaymentMethods\x10\t\x12'\n" +
	"#k_EAppReportType_CopyrightViolation\x10\n" +
	"\x12!\n" +
	"\x1dk_EAppReportType_ViolatesLaws\x10\v\x12\x1a\n" +
	"\x16k_EAppReportType_Other\x10\f\x12\x1b\n" +
	"\x17k_EAppReportType_Broken\x10\r\x12$\n" +
	" k_EAppReportType_AIContentReport\x10\x0e*\xa0\x01\n" +
	"\x1aEUserReviewScorePreference\x12&\n" +
	"\"k_EUserReviewScorePreference_Unset\x10\x00\x12+\n" +
	"'k_EUserReviewScorePreference_IncludeAll\x10\x01\x12-\n" +
	")k_EUserReviewScorePreference_ExcludeBombs\x10\x02*\xe4\x01\n" +
	"\"EPartnerLinkTrackingBackfillSource\x12-\n" +
	")k_EPartnerLinkTrackingBackfillSource_None\x10\x00\x12,\n" +
	"(k_EPartnerLinkTrackingBackfillSource_Web\x10\x01\x12/\n" +
	"+k_EPartnerLinkTrackingBackfillSource_Mobile\x10\x02\x120\n" +
	",k_EPartnerLinkTrackingBackfillSource_Desktop\x10\x032\xf4\x13\n" +
	"\x05Store\x12N\n" +
	"\rRegisterCDKey\x12\x1d.CStore_RegisterCDKey_Request\x1a\x1e.CStore_RegisterCDKey_Response\x12r\n" +
	"\x19GetRecommendedTagsForUser\x12).CStore_GetRecommendedTagsForUser_Request\x1a*.CStore_GetRecommendedTagsForUser_Response\x12]\n" +
	"\x12GetMostPopularTags\x12\".CStore_GetMostPopularTags_Request\x1a#.CStore_GetMostPopularTags_Response\x12l\n" +
	"\x17GetLocalizedNameForTags\x12'.CStore_GetLocalizedNameForTags_Request\x1a(.CStore_GetLocalizedNameForTags_Response\x12E\n" +
	"\n" +
	"GetTagList\x12\x1a.CStore_GetTagList_Request\x1a\x1b.CStore_GetTagList_Response\x12Z\n" +
	"\x11GetDiscoveryQueue\x12!.CStore_GetDiscoveryQueue_Request\x1a\".CStore_GetDiscoveryQueue_Response\x12r\n" +
	"\x19GetDiscoveryQueueSettings\x12).CStore_GetDiscoveryQueueSettings_Request\x1a*.CStore_GetDiscoveryQueueSettings_Response\x12i\n" +
	"\x16SkipDiscoveryQueueItem\x12&.CStore_SkipDiscoveryQueueItem_Request\x1a'.CStore_SkipDiscoveryQueueItem_Response\x12o\n" +
	"\x18GetUserGameInterestState\x12(.CStore_GetUserGameInterestState_Request\x1a).CStore_GetUserGameInterestState_Response\x12{\n" +
	"\x1cGetDiscoveryQueueSkippedApps\x12,.CStore_GetDiscoveryQueueSkippedApps_Request\x1a-.CStore_GetDiscoveryQueueSkippedApps_Response\x12B\n" +
	"\tReportApp\x12\x19.CStore_ReportApp_Request\x1a\x1a.CStore_ReportApp_Response\x12`\n" +
	"\x13GetStorePreferences\x12#.CStore_GetStorePreferences_Request\x1a$.CStore_GetStorePreferences_Response\x12x\n" +
	"\x1bGetTrendingAppsAmongFriends\x12+.CStore_GetTrendingAppsAmongFriends_Request\x1a,.CStore_GetTrendingAppsAmongFriends_Response\x12Z\n" +
	"\x1aMigratePartnerLinkTracking\x12/.CStore_MigratePartnerLinkTracking_Notification\x1a\v.NoResponse\x12r\n" +
	"\x19UpdatePackageReservations\x12).CStore_UpdatePackageReservations_Request\x1a*.CStore_UpdatePackageReservations_Response\x12u\n" +
	"\x1aGetWishlistDemoEmailStatus\x12*.CStore_GetWishlistDemoEmailStatus_Request\x1a+.CStore_GetWishlistDemoEmailStatus_Response\x12{\n" +
	"\x1cQueueWishlistDemoEmailToFire\x12,.CStore_QueueWishlistDemoEmailToFire_Request\x1a-.CStore_QueueWishlistDemoEmailToFire_Response\x12~\n" +
	"\x1dSetReservationPositionMessage\x12-.CStore_SetReservationPositionMessage_Request\x1a..CStore_SetReservationPositionMessage_Response\x12\x87\x01\n" +
	" DeleteReservationPositionMessage\x120.CStore_DeleteReservationPositionMessage_Request\x1a1.CStore_DeleteReservationPositionMessage_Response\x12\x8a\x01\n" +
	"!GetAllReservationPositionMessages\x121.CStore_GetAllReservationPositionMessages_Request\x1a2.CStore_GetAllReservationPositionMessages_Response\x12n\n" +
	"$ReloadAllReservationPositionMessages\x129.CStore_ReloadAllReservationPositionMessages_Notification\x1a\v.NoResponse\x12w\n" +
	"\x18SetCompatibilityFeedback\x12,.CSteamDeckCompatibility_SetFeedback_Request\x1a-.CSteamDeckCompatibility_SetFeedback_Response\x12\x85\x01\n" +
	"$ShouldPromptForCompatibilityFeedback\x12-.CSteamDeckCompatibility_ShouldPrompt_Request\x1a..CSteamDeckCompatibility_ShouldPrompt_Response2o\n" +
	"\vStoreClient\x12Z\n" +
	"\x1dNotifyStorePreferencesChanged\x12,.CStore_StorePreferencesChanged_Notification\x1a\v.NoResponse\x1a\x04\xc0\xb5\x18\x02B\x03\x80\x01\x01"

var (
	file_steammessages_store_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_store_steamclient_proto_rawDescData []byte
)

func file_steammessages_store_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_store_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_store_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_store_steamclient_proto_rawDesc), len(file_steammessages_store_steamclient_proto_rawDesc)))
	})
	return file_steammessages_store_steamclient_proto_rawDescData
}

var file_steammessages_store_steamclient_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_steammessages_store_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_steammessages_store_steamclient_proto_goTypes = []any{
	(EStoreDiscoveryQueueType)(0),                                       // 0: EStoreDiscoveryQueueType
	(EPlaytestStatus)(0),                                                // 1: EPlaytestStatus
	(EAppReportType)(0),                                                 // 2: EAppReportType
	(EUserReviewScorePreference)(0),                                     // 3: EUserReviewScorePreference
	(EPartnerLinkTrackingBackfillSource)(0),                             // 4: EPartnerLinkTrackingBackfillSource
	(*CStore_RegisterCDKey_Request)(nil),                                // 5: CStore_RegisterCDKey_Request
	(*CStore_PurchaseReceiptInfo)(nil),                                  // 6: CStore_PurchaseReceiptInfo
	(*CStore_RegisterCDKey_Response)(nil),                               // 7: CStore_RegisterCDKey_Response
	(*CStore_GetRecommendedTagsForUser_Request)(nil),                    // 8: CStore_GetRecommendedTagsForUser_Request
	(*CStore_GetRecommendedTagsForUser_Response)(nil),                   // 9: CStore_GetRecommendedTagsForUser_Response
	(*CStore_GetMostPopularTags_Request)(nil),                           // 10: CStore_GetMostPopularTags_Request
	(*CStore_GetMostPopularTags_Response)(nil),                          // 11: CStore_GetMostPopularTags_Response
	(*CStore_GetLocalizedNameForTags_Request)(nil),                      // 12: CStore_GetLocalizedNameForTags_Request
	(*CStore_GetLocalizedNameForTags_Response)(nil),                     // 13: CStore_GetLocalizedNameForTags_Response
	(*CStore_GetTagList_Request)(nil),                                   // 14: CStore_GetTagList_Request
	(*CStore_GetTagList_Response)(nil),                                  // 15: CStore_GetTagList_Response
	(*CStoreDiscoveryQueueSettings)(nil),                                // 16: CStoreDiscoveryQueueSettings
	(*CStore_GetDiscoveryQueue_Request)(nil),                            // 17: CStore_GetDiscoveryQueue_Request
	(*CStore_GetDiscoveryQueue_Response)(nil),                           // 18: CStore_GetDiscoveryQueue_Response
	(*CStore_GetDiscoveryQueueSettings_Request)(nil),                    // 19: CStore_GetDiscoveryQueueSettings_Request
	(*CStore_GetDiscoveryQueueSettings_Response)(nil),                   // 20: CStore_GetDiscoveryQueueSettings_Response
	(*CStore_SkipDiscoveryQueueItem_Request)(nil),                       // 21: CStore_SkipDiscoveryQueueItem_Request
	(*CStore_SkipDiscoveryQueueItem_Response)(nil),                      // 22: CStore_SkipDiscoveryQueueItem_Response
	(*CStore_GetUserGameInterestState_Request)(nil),                     // 23: CStore_GetUserGameInterestState_Request
	(*CStore_GetUserGameInterestState_Response)(nil),                    // 24: CStore_GetUserGameInterestState_Response
	(*CStore_GetDiscoveryQueueSkippedApps_Request)(nil),                 // 25: CStore_GetDiscoveryQueueSkippedApps_Request
	(*CStore_GetDiscoveryQueueSkippedApps_Response)(nil),                // 26: CStore_GetDiscoveryQueueSkippedApps_Response
	(*CStore_ReportApp_Request)(nil),                                    // 27: CStore_ReportApp_Request
	(*CStore_ReportApp_Response)(nil),                                   // 28: CStore_ReportApp_Response
	(*CStore_GetStorePreferences_Request)(nil),                          // 29: CStore_GetStorePreferences_Request
	(*CStore_UserPreferences)(nil),                                      // 30: CStore_UserPreferences
	(*CStore_UserTagPreferences)(nil),                                   // 31: CStore_UserTagPreferences
	(*CStore_GetStorePreferences_Response)(nil),                         // 32: CStore_GetStorePreferences_Response
	(*CStore_GetTrendingAppsAmongFriends_Request)(nil),                  // 33: CStore_GetTrendingAppsAmongFriends_Request
	(*CStore_GetTrendingAppsAmongFriends_Response)(nil),                 // 34: CStore_GetTrendingAppsAmongFriends_Response
	(*CStore_MigratePartnerLinkTracking_Notification)(nil),              // 35: CStore_MigratePartnerLinkTracking_Notification
	(*CStore_UpdatePackageReservations_Request)(nil),                    // 36: CStore_UpdatePackageReservations_Request
	(*CStore_UpdatePackageReservations_Response)(nil),                   // 37: CStore_UpdatePackageReservations_Response
	(*CStore_GetWishlistDemoEmailStatus_Request)(nil),                   // 38: CStore_GetWishlistDemoEmailStatus_Request
	(*CStore_GetWishlistDemoEmailStatus_Response)(nil),                  // 39: CStore_GetWishlistDemoEmailStatus_Response
	(*CStore_QueueWishlistDemoEmailToFire_Request)(nil),                 // 40: CStore_QueueWishlistDemoEmailToFire_Request
	(*CStore_QueueWishlistDemoEmailToFire_Response)(nil),                // 41: CStore_QueueWishlistDemoEmailToFire_Response
	(*CReservationPositionMessage)(nil),                                 // 42: CReservationPositionMessage
	(*CStore_SetReservationPositionMessage_Request)(nil),                // 43: CStore_SetReservationPositionMessage_Request
	(*CStore_SetReservationPositionMessage_Response)(nil),               // 44: CStore_SetReservationPositionMessage_Response
	(*CStore_DeleteReservationPositionMessage_Request)(nil),             // 45: CStore_DeleteReservationPositionMessage_Request
	(*CStore_DeleteReservationPositionMessage_Response)(nil),            // 46: CStore_DeleteReservationPositionMessage_Response
	(*CStore_GetAllReservationPositionMessages_Request)(nil),            // 47: CStore_GetAllReservationPositionMessages_Request
	(*CStore_GetAllReservationPositionMessages_Response)(nil),           // 48: CStore_GetAllReservationPositionMessages_Response
	(*CStore_ReloadAllReservationPositionMessages_Notification)(nil),    // 49: CStore_ReloadAllReservationPositionMessages_Notification
	(*CSteamDeckCompatibility_SetFeedback_Request)(nil),                 // 50: CSteamDeckCompatibility_SetFeedback_Request
	(*CSteamDeckCompatibility_SetFeedback_Response)(nil),                // 51: CSteamDeckCompatibility_SetFeedback_Response
	(*CSteamDeckCompatibility_ShouldPrompt_Request)(nil),                // 52: CSteamDeckCompatibility_ShouldPrompt_Request
	(*CSteamDeckCompatibility_ShouldPrompt_Response)(nil),               // 53: CSteamDeckCompatibility_ShouldPrompt_Response
	(*CStore_StorePreferencesChanged_Notification)(nil),                 // 54: CStore_StorePreferencesChanged_Notification
	(*CStore_PurchaseReceiptInfo_LineItem)(nil),                         // 55: CStore_PurchaseReceiptInfo.LineItem
	(*CStore_GetRecommendedTagsForUser_Response_Tag)(nil),               // 56: CStore_GetRecommendedTagsForUser_Response.Tag
	(*CStore_GetMostPopularTags_Response_Tag)(nil),                      // 57: CStore_GetMostPopularTags_Response.Tag
	(*CStore_GetLocalizedNameForTags_Response_Tag)(nil),                 // 58: CStore_GetLocalizedNameForTags_Response.Tag
	(*CStore_GetTagList_Response_Tag)(nil),                              // 59: CStore_GetTagList_Response.Tag
	(*CStore_GetUserGameInterestState_Response_InQueue)(nil),            // 60: CStore_GetUserGameInterestState_Response.InQueue
	(*CStore_UserTagPreferences_Tag)(nil),                               // 61: CStore_UserTagPreferences.Tag
	(*CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData)(nil), // 62: CStore_GetTrendingAppsAmongFriends_Response.TrendingAppData
	(*CStorePageFilter)(nil),                                            // 63: CStorePageFilter
	(*StoreBrowseContext)(nil),                                          // 64: StoreBrowseContext
	(*StoreBrowseItemDataRequest)(nil),                                  // 65: StoreBrowseItemDataRequest
	(*StoreItem)(nil),                                                   // 66: StoreItem
	(EProvideDeckFeedbackPreference)(0),                                 // 67: EProvideDeckFeedbackPreference
	(*UserContentDescriptorPreferences)(nil),                            // 68: UserContentDescriptorPreferences
	(*CPackageReservationStatus)(nil),                                   // 69: CPackageReservationStatus
	(ESteamDeckCompatibilityFeedback)(0),                                // 70: ESteamDeckCompatibilityFeedback
	(*NoResponse)(nil),                                                  // 71: NoResponse
}
var file_steammessages_store_steamclient_proto_depIdxs = []int32{
	55, // 0: CStore_PurchaseReceiptInfo.line_items:type_name -> CStore_PurchaseReceiptInfo.LineItem
	6,  // 1: CStore_RegisterCDKey_Response.purchase_receipt_info:type_name -> CStore_PurchaseReceiptInfo
	56, // 2: CStore_GetRecommendedTagsForUser_Response.tags:type_name -> CStore_GetRecommendedTagsForUser_Response.Tag
	57, // 3: CStore_GetMostPopularTags_Response.tags:type_name -> CStore_GetMostPopularTags_Response.Tag
	58, // 4: CStore_GetLocalizedNameForTags_Response.tags:type_name -> CStore_GetLocalizedNameForTags_Response.Tag
	59, // 5: CStore_GetTagList_Response.tags:type_name -> CStore_GetTagList_Response.Tag
	0,  // 6: CStore_GetDiscoveryQueue_Request.queue_type:type_name -> EStoreDiscoveryQueueType
	16, // 7: CStore_GetDiscoveryQueue_Request.settings:type_name -> CStoreDiscoveryQueueSettings
	63, // 8: CStore_GetDiscoveryQueue_Request.store_page_filter:type_name -> CStorePageFilter
	64, // 9: CStore_GetDiscoveryQueue_Request.context:type_name -> StoreBrowseContext
	65, // 10: CStore_GetDiscoveryQueue_Request.data_request:type_name -> StoreBrowseItemDataRequest
	16, // 11: CStore_GetDiscoveryQueue_Response.settings:type_name -> CStoreDiscoveryQueueSettings
	66, // 12: CStore_GetDiscoveryQueue_Response.store_items:type_name -> StoreItem
	0,  // 13: CStore_GetDiscoveryQueueSettings_Request.queue_type:type_name -> EStoreDiscoveryQueueType
	63, // 14: CStore_GetDiscoveryQueueSettings_Request.store_page_filter:type_name -> CStorePageFilter
	16, // 15: CStore_GetDiscoveryQueueSettings_Response.settings:type_name -> CStoreDiscoveryQueueSettings
	0,  // 16: CStore_SkipDiscoveryQueueItem_Request.queue_type:type_name -> EStoreDiscoveryQueueType
	63, // 17: CStore_SkipDiscoveryQueueItem_Request.store_page_filter:type_name -> CStorePageFilter
	0,  // 18: CStore_GetUserGameInterestState_Response.in_queues:type_name -> EStoreDiscoveryQueueType
	0,  // 19: CStore_GetUserGameInterestState_Response.queues_with_skip:type_name -> EStoreDiscoveryQueueType
	60, // 20: CStore_GetUserGameInterestState_Response.queues:type_name -> CStore_GetUserGameInterestState_Response.InQueue
	1,  // 21: CStore_GetUserGameInterestState_Response.beta_status:type_name -> EPlaytestStatus
	0,  // 22: CStore_GetDiscoveryQueueSkippedApps_Request.queue_type:type_name -> EStoreDiscoveryQueueType
	63, // 23: CStore_GetDiscoveryQueueSkippedApps_Request.store_page_filter:type_name -> CStorePageFilter
	2,  // 24: CStore_ReportApp_Request.report_type:type_name -> EAppReportType
	3,  // 25: CStore_UserPreferences.review_score_preference:type_name -> EUserReviewScorePreference
	67, // 26: CStore_UserPreferences.provide_deck_feedback:type_name -> EProvideDeckFeedbackPreference
	61, // 27: CStore_UserTagPreferences.tags_to_exclude:type_name -> CStore_UserTagPreferences.Tag
	30, // 28: CStore_GetStorePreferences_Response.preferences:type_name -> CStore_UserPreferences
	31, // 29: CStore_GetStorePreferences_Response.tag_preferences:type_name -> CStore_UserTagPreferences
	68, // 30: CStore_GetStorePreferences_Response.content_descriptor_preferences:type_name -> UserContentDescriptorPreferences
	62, // 31: CStore_GetTrendingAppsAmongFriends_Response.trending_apps:type_name -> CStore_GetTrendingAppsAmongFriends_Response.TrendingAppData
	4,  // 32: CStore_MigratePartnerLinkTracking_Notification.backfill_source:type_name -> EPartnerLinkTrackingBackfillSource
	69, // 33: CStore_UpdatePackageReservations_Response.reservation_status:type_name -> CPackageReservationStatus
	42, // 34: CStore_SetReservationPositionMessage_Request.settings:type_name -> CReservationPositionMessage
	42, // 35: CStore_GetAllReservationPositionMessages_Response.settings:type_name -> CReservationPositionMessage
	70, // 36: CSteamDeckCompatibility_SetFeedback_Request.feedback:type_name -> ESteamDeckCompatibilityFeedback
	70, // 37: CSteamDeckCompatibility_ShouldPrompt_Response.existing_feedback:type_name -> ESteamDeckCompatibilityFeedback
	30, // 38: CStore_StorePreferencesChanged_Notification.preferences:type_name -> CStore_UserPreferences
	31, // 39: CStore_StorePreferencesChanged_Notification.tag_preferences:type_name -> CStore_UserTagPreferences
	68, // 40: CStore_StorePreferencesChanged_Notification.content_descriptor_preferences:type_name -> UserContentDescriptorPreferences
	0,  // 41: CStore_GetUserGameInterestState_Response.InQueue.type:type_name -> EStoreDiscoveryQueueType
	5,  // 42: Store.RegisterCDKey:input_type -> CStore_RegisterCDKey_Request
	8,  // 43: Store.GetRecommendedTagsForUser:input_type -> CStore_GetRecommendedTagsForUser_Request
	10, // 44: Store.GetMostPopularTags:input_type -> CStore_GetMostPopularTags_Request
	12, // 45: Store.GetLocalizedNameForTags:input_type -> CStore_GetLocalizedNameForTags_Request
	14, // 46: Store.GetTagList:input_type -> CStore_GetTagList_Request
	17, // 47: Store.GetDiscoveryQueue:input_type -> CStore_GetDiscoveryQueue_Request
	19, // 48: Store.GetDiscoveryQueueSettings:input_type -> CStore_GetDiscoveryQueueSettings_Request
	21, // 49: Store.SkipDiscoveryQueueItem:input_type -> CStore_SkipDiscoveryQueueItem_Request
	23, // 50: Store.GetUserGameInterestState:input_type -> CStore_GetUserGameInterestState_Request
	25, // 51: Store.GetDiscoveryQueueSkippedApps:input_type -> CStore_GetDiscoveryQueueSkippedApps_Request
	27, // 52: Store.ReportApp:input_type -> CStore_ReportApp_Request
	29, // 53: Store.GetStorePreferences:input_type -> CStore_GetStorePreferences_Request
	33, // 54: Store.GetTrendingAppsAmongFriends:input_type -> CStore_GetTrendingAppsAmongFriends_Request
	35, // 55: Store.MigratePartnerLinkTracking:input_type -> CStore_MigratePartnerLinkTracking_Notification
	36, // 56: Store.UpdatePackageReservations:input_type -> CStore_UpdatePackageReservations_Request
	38, // 57: Store.GetWishlistDemoEmailStatus:input_type -> CStore_GetWishlistDemoEmailStatus_Request
	40, // 58: Store.QueueWishlistDemoEmailToFire:input_type -> CStore_QueueWishlistDemoEmailToFire_Request
	43, // 59: Store.SetReservationPositionMessage:input_type -> CStore_SetReservationPositionMessage_Request
	45, // 60: Store.DeleteReservationPositionMessage:input_type -> CStore_DeleteReservationPositionMessage_Request
	47, // 61: Store.GetAllReservationPositionMessages:input_type -> CStore_GetAllReservationPositionMessages_Request
	49, // 62: Store.ReloadAllReservationPositionMessages:input_type -> CStore_ReloadAllReservationPositionMessages_Notification
	50, // 63: Store.SetCompatibilityFeedback:input_type -> CSteamDeckCompatibility_SetFeedback_Request
	52, // 64: Store.ShouldPromptForCompatibilityFeedback:input_type -> CSteamDeckCompatibility_ShouldPrompt_Request
	54, // 65: StoreClient.NotifyStorePreferencesChanged:input_type -> CStore_StorePreferencesChanged_Notification
	7,  // 66: Store.RegisterCDKey:output_type -> CStore_RegisterCDKey_Response
	9,  // 67: Store.GetRecommendedTagsForUser:output_type -> CStore_GetRecommendedTagsForUser_Response
	11, // 68: Store.GetMostPopularTags:output_type -> CStore_GetMostPopularTags_Response
	13, // 69: Store.GetLocalizedNameForTags:output_type -> CStore_GetLocalizedNameForTags_Response
	15, // 70: Store.GetTagList:output_type -> CStore_GetTagList_Response
	18, // 71: Store.GetDiscoveryQueue:output_type -> CStore_GetDiscoveryQueue_Response
	20, // 72: Store.GetDiscoveryQueueSettings:output_type -> CStore_GetDiscoveryQueueSettings_Response
	22, // 73: Store.SkipDiscoveryQueueItem:output_type -> CStore_SkipDiscoveryQueueItem_Response
	24, // 74: Store.GetUserGameInterestState:output_type -> CStore_GetUserGameInterestState_Response
	26, // 75: Store.GetDiscoveryQueueSkippedApps:output_type -> CStore_GetDiscoveryQueueSkippedApps_Response
	28, // 76: Store.ReportApp:output_type -> CStore_ReportApp_Response
	32, // 77: Store.GetStorePreferences:output_type -> CStore_GetStorePreferences_Response
	34, // 78: Store.GetTrendingAppsAmongFriends:output_type -> CStore_GetTrendingAppsAmongFriends_Response
	71, // 79: Store.MigratePartnerLinkTracking:output_type -> NoResponse
	37, // 80: Store.UpdatePackageReservations:output_type -> CStore_UpdatePackageReservations_Response
	39, // 81: Store.GetWishlistDemoEmailStatus:output_type -> CStore_GetWishlistDemoEmailStatus_Response
	41, // 82: Store.QueueWishlistDemoEmailToFire:output_type -> CStore_QueueWishlistDemoEmailToFire_Response
	44, // 83: Store.SetReservationPositionMessage:output_type -> CStore_SetReservationPositionMessage_Response
	46, // 84: Store.DeleteReservationPositionMessage:output_type -> CStore_DeleteReservationPositionMessage_Response
	48, // 85: Store.GetAllReservationPositionMessages:output_type -> CStore_GetAllReservationPositionMessages_Response
	71, // 86: Store.ReloadAllReservationPositionMessages:output_type -> NoResponse
	51, // 87: Store.SetCompatibilityFeedback:output_type -> CSteamDeckCompatibility_SetFeedback_Response
	53, // 88: Store.ShouldPromptForCompatibilityFeedback:output_type -> CSteamDeckCompatibility_ShouldPrompt_Response
	71, // 89: StoreClient.NotifyStorePreferencesChanged:output_type -> NoResponse
	66, // [66:90] is the sub-list for method output_type
	42, // [42:66] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_steammessages_store_steamclient_proto_init() }
func file_steammessages_store_steamclient_proto_init() {
	if File_steammessages_store_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	file_contenthubs_proto_init()
	file_steammessages_storebrowse_steamclient_proto_init()
	file_enums_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_store_steamclient_proto_rawDesc), len(file_steammessages_store_steamclient_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_steammessages_store_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_store_steamclient_proto_depIdxs,
		EnumInfos:         file_steammessages_store_steamclient_proto_enumTypes,
		MessageInfos:      file_steammessages_store_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_store_steamclient_proto = out.File
	file_steammessages_store_steamclient_proto_goTypes = nil
	file_steammessages_store_steamclient_proto_depIdxs = nil
}
