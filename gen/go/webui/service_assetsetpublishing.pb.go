// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_assetsetpublishing.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CAssetSet struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Appid            *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AssetsetId       *uint64                `protobuf:"fixed64,2,opt,name=assetset_id,json=assetsetId" json:"assetset_id,omitempty"`
	Name             *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Desc             *string                `protobuf:"bytes,4,opt,name=desc" json:"desc,omitempty"`
	Branches         []string               `protobuf:"bytes,5,rep,name=branches" json:"branches,omitempty"`
	LastUpdateRtime  *uint32                `protobuf:"varint,6,opt,name=last_update_rtime,json=lastUpdateRtime" json:"last_update_rtime,omitempty"`
	Priority         *uint32                `protobuf:"varint,7,opt,name=priority" json:"priority,omitempty"`
	LastPublishRtime *uint32                `protobuf:"varint,8,opt,name=last_publish_rtime,json=lastPublishRtime" json:"last_publish_rtime,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CAssetSet) Reset() {
	*x = CAssetSet{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSet) ProtoMessage() {}

func (x *CAssetSet) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSet.ProtoReflect.Descriptor instead.
func (*CAssetSet) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{0}
}

func (x *CAssetSet) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSet) GetAssetsetId() uint64 {
	if x != nil && x.AssetsetId != nil {
		return *x.AssetsetId
	}
	return 0
}

func (x *CAssetSet) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CAssetSet) GetDesc() string {
	if x != nil && x.Desc != nil {
		return *x.Desc
	}
	return ""
}

func (x *CAssetSet) GetBranches() []string {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *CAssetSet) GetLastUpdateRtime() uint32 {
	if x != nil && x.LastUpdateRtime != nil {
		return *x.LastUpdateRtime
	}
	return 0
}

func (x *CAssetSet) GetPriority() uint32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CAssetSet) GetLastPublishRtime() uint32 {
	if x != nil && x.LastPublishRtime != nil {
		return *x.LastPublishRtime
	}
	return 0
}

type CAssetSetPublishing_AddBranchToAssetSet_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AssetsetId    *uint64                `protobuf:"fixed64,2,opt,name=assetset_id,json=assetsetId" json:"assetset_id,omitempty"`
	Branch        *string                `protobuf:"bytes,3,opt,name=branch" json:"branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Request) Reset() {
	*x = CAssetSetPublishing_AddBranchToAssetSet_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_AddBranchToAssetSet_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_AddBranchToAssetSet_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_AddBranchToAssetSet_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{1}
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Request) GetAssetsetId() uint64 {
	if x != nil && x.AssetsetId != nil {
		return *x.AssetsetId
	}
	return 0
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Request) GetBranch() string {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return ""
}

type CAssetSetPublishing_AddBranchToAssetSet_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updated       *CAssetSet             `protobuf:"bytes,1,opt,name=updated" json:"updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Response) Reset() {
	*x = CAssetSetPublishing_AddBranchToAssetSet_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_AddBranchToAssetSet_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_AddBranchToAssetSet_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_AddBranchToAssetSet_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{2}
}

func (x *CAssetSetPublishing_AddBranchToAssetSet_Response) GetUpdated() *CAssetSet {
	if x != nil {
		return x.Updated
	}
	return nil
}

type CAssetSetPublishing_CreateAssetSet_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Assetset      *CAssetSet             `protobuf:"bytes,2,opt,name=assetset" json:"assetset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_CreateAssetSet_Request) Reset() {
	*x = CAssetSetPublishing_CreateAssetSet_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_CreateAssetSet_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_CreateAssetSet_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_CreateAssetSet_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_CreateAssetSet_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_CreateAssetSet_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{3}
}

func (x *CAssetSetPublishing_CreateAssetSet_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_CreateAssetSet_Request) GetAssetset() *CAssetSet {
	if x != nil {
		return x.Assetset
	}
	return nil
}

type CAssetSetPublishing_CreateAssetSet_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assetset      *CAssetSet             `protobuf:"bytes,1,opt,name=assetset" json:"assetset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_CreateAssetSet_Response) Reset() {
	*x = CAssetSetPublishing_CreateAssetSet_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_CreateAssetSet_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_CreateAssetSet_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_CreateAssetSet_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_CreateAssetSet_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_CreateAssetSet_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{4}
}

func (x *CAssetSetPublishing_CreateAssetSet_Response) GetAssetset() *CAssetSet {
	if x != nil {
		return x.Assetset
	}
	return nil
}

type CAssetSetPublishing_DeleteAssetSet_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AssetsetId    *uint64                `protobuf:"fixed64,2,opt,name=assetset_id,json=assetsetId" json:"assetset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_DeleteAssetSet_Request) Reset() {
	*x = CAssetSetPublishing_DeleteAssetSet_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_DeleteAssetSet_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_DeleteAssetSet_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_DeleteAssetSet_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_DeleteAssetSet_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_DeleteAssetSet_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{5}
}

func (x *CAssetSetPublishing_DeleteAssetSet_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_DeleteAssetSet_Request) GetAssetsetId() uint64 {
	if x != nil && x.AssetsetId != nil {
		return *x.AssetsetId
	}
	return 0
}

type CAssetSetPublishing_DeleteAssetSet_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_DeleteAssetSet_Response) Reset() {
	*x = CAssetSetPublishing_DeleteAssetSet_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_DeleteAssetSet_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_DeleteAssetSet_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_DeleteAssetSet_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_DeleteAssetSet_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_DeleteAssetSet_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{6}
}

type CAssetSetPublishing_GetAllAssetSets_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_GetAllAssetSets_Request) Reset() {
	*x = CAssetSetPublishing_GetAllAssetSets_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_GetAllAssetSets_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_GetAllAssetSets_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_GetAllAssetSets_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_GetAllAssetSets_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_GetAllAssetSets_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{7}
}

func (x *CAssetSetPublishing_GetAllAssetSets_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CAssetSetPublishing_GetAllAssetSets_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assetset      []*CAssetSet           `protobuf:"bytes,2,rep,name=assetset" json:"assetset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_GetAllAssetSets_Response) Reset() {
	*x = CAssetSetPublishing_GetAllAssetSets_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_GetAllAssetSets_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_GetAllAssetSets_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_GetAllAssetSets_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_GetAllAssetSets_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_GetAllAssetSets_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{8}
}

func (x *CAssetSetPublishing_GetAllAssetSets_Response) GetAssetset() []*CAssetSet {
	if x != nil {
		return x.Assetset
	}
	return nil
}

type CAssetSetPublishing_RemoseBranchFromAssetSet_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updated       *CAssetSet             `protobuf:"bytes,1,opt,name=updated" json:"updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_RemoseBranchFromAssetSet_Response) Reset() {
	*x = CAssetSetPublishing_RemoseBranchFromAssetSet_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_RemoseBranchFromAssetSet_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_RemoseBranchFromAssetSet_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_RemoseBranchFromAssetSet_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_RemoseBranchFromAssetSet_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_RemoseBranchFromAssetSet_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{9}
}

func (x *CAssetSetPublishing_RemoseBranchFromAssetSet_Response) GetUpdated() *CAssetSet {
	if x != nil {
		return x.Updated
	}
	return nil
}

type CAssetSetPublishing_RemoveBranchFromAssetSet_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AssetsetId    *uint64                `protobuf:"fixed64,2,opt,name=assetset_id,json=assetsetId" json:"assetset_id,omitempty"`
	Branch        *string                `protobuf:"bytes,3,opt,name=branch" json:"branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_RemoveBranchFromAssetSet_Request) Reset() {
	*x = CAssetSetPublishing_RemoveBranchFromAssetSet_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_RemoveBranchFromAssetSet_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_RemoveBranchFromAssetSet_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_RemoveBranchFromAssetSet_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_RemoveBranchFromAssetSet_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_RemoveBranchFromAssetSet_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{10}
}

func (x *CAssetSetPublishing_RemoveBranchFromAssetSet_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_RemoveBranchFromAssetSet_Request) GetAssetsetId() uint64 {
	if x != nil && x.AssetsetId != nil {
		return *x.AssetsetId
	}
	return 0
}

func (x *CAssetSetPublishing_RemoveBranchFromAssetSet_Request) GetBranch() string {
	if x != nil && x.Branch != nil {
		return *x.Branch
	}
	return ""
}

type CAssetSetPublishing_SwapAssetSetPriority_Request struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Appid            *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	FirstAssetsetId  *uint64                `protobuf:"fixed64,2,opt,name=first_assetset_id,json=firstAssetsetId" json:"first_assetset_id,omitempty"`
	SecondAssetsetId *uint64                `protobuf:"fixed64,3,opt,name=second_assetset_id,json=secondAssetsetId" json:"second_assetset_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Request) Reset() {
	*x = CAssetSetPublishing_SwapAssetSetPriority_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_SwapAssetSetPriority_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_SwapAssetSetPriority_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_SwapAssetSetPriority_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{11}
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Request) GetFirstAssetsetId() uint64 {
	if x != nil && x.FirstAssetsetId != nil {
		return *x.FirstAssetsetId
	}
	return 0
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Request) GetSecondAssetsetId() uint64 {
	if x != nil && x.SecondAssetsetId != nil {
		return *x.SecondAssetsetId
	}
	return 0
}

type CAssetSetPublishing_SwapAssetSetPriority_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpdatedFirst  *CAssetSet             `protobuf:"bytes,1,opt,name=updated_first,json=updatedFirst" json:"updated_first,omitempty"`
	UpdatedSecond *CAssetSet             `protobuf:"bytes,2,opt,name=updated_second,json=updatedSecond" json:"updated_second,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Response) Reset() {
	*x = CAssetSetPublishing_SwapAssetSetPriority_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_SwapAssetSetPriority_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_SwapAssetSetPriority_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_SwapAssetSetPriority_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{12}
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Response) GetUpdatedFirst() *CAssetSet {
	if x != nil {
		return x.UpdatedFirst
	}
	return nil
}

func (x *CAssetSetPublishing_SwapAssetSetPriority_Response) GetUpdatedSecond() *CAssetSet {
	if x != nil {
		return x.UpdatedSecond
	}
	return nil
}

type CAssetSetPublishing_UpdateAssetSet_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Assetset      *CAssetSet             `protobuf:"bytes,2,opt,name=assetset" json:"assetset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_UpdateAssetSet_Request) Reset() {
	*x = CAssetSetPublishing_UpdateAssetSet_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_UpdateAssetSet_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_UpdateAssetSet_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_UpdateAssetSet_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_UpdateAssetSet_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_UpdateAssetSet_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{13}
}

func (x *CAssetSetPublishing_UpdateAssetSet_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_UpdateAssetSet_Request) GetAssetset() *CAssetSet {
	if x != nil {
		return x.Assetset
	}
	return nil
}

type CAssetSetPublishing_UpdateAssetSet_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_UpdateAssetSet_Response) Reset() {
	*x = CAssetSetPublishing_UpdateAssetSet_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_UpdateAssetSet_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_UpdateAssetSet_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_UpdateAssetSet_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_UpdateAssetSet_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_UpdateAssetSet_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{14}
}

type CAssetSetPublishing_UpdatePublishTime_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AssetsetId    *uint64                `protobuf:"fixed64,2,opt,name=assetset_id,json=assetsetId" json:"assetset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_UpdatePublishTime_Request) Reset() {
	*x = CAssetSetPublishing_UpdatePublishTime_Request{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_UpdatePublishTime_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_UpdatePublishTime_Request) ProtoMessage() {}

func (x *CAssetSetPublishing_UpdatePublishTime_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_UpdatePublishTime_Request.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_UpdatePublishTime_Request) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{15}
}

func (x *CAssetSetPublishing_UpdatePublishTime_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CAssetSetPublishing_UpdatePublishTime_Request) GetAssetsetId() uint64 {
	if x != nil && x.AssetsetId != nil {
		return *x.AssetsetId
	}
	return 0
}

type CAssetSetPublishing_UpdatePublishTime_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Updated       *CAssetSet             `protobuf:"bytes,1,opt,name=updated" json:"updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CAssetSetPublishing_UpdatePublishTime_Response) Reset() {
	*x = CAssetSetPublishing_UpdatePublishTime_Response{}
	mi := &file_service_assetsetpublishing_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAssetSetPublishing_UpdatePublishTime_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAssetSetPublishing_UpdatePublishTime_Response) ProtoMessage() {}

func (x *CAssetSetPublishing_UpdatePublishTime_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_assetsetpublishing_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAssetSetPublishing_UpdatePublishTime_Response.ProtoReflect.Descriptor instead.
func (*CAssetSetPublishing_UpdatePublishTime_Response) Descriptor() ([]byte, []int) {
	return file_service_assetsetpublishing_proto_rawDescGZIP(), []int{16}
}

func (x *CAssetSetPublishing_UpdatePublishTime_Response) GetUpdated() *CAssetSet {
	if x != nil {
		return x.Updated
	}
	return nil
}

var File_service_assetsetpublishing_proto protoreflect.FileDescriptor

const file_service_assetsetpublishing_proto_rawDesc = "" +
	"\n" +
	" service_assetsetpublishing.proto\"\xfc\x01\n" +
	"\tCAssetSet\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1f\n" +
	"\vassetset_id\x18\x02 \x01(\x06R\n" +
	"assetsetId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04desc\x18\x04 \x01(\tR\x04desc\x12\x1a\n" +
	"\bbranches\x18\x05 \x03(\tR\bbranches\x12*\n" +
	"\x11last_update_rtime\x18\x06 \x01(\rR\x0flastUpdateRtime\x12\x1a\n" +
	"\bpriority\x18\a \x01(\rR\bpriority\x12,\n" +
	"\x12last_publish_rtime\x18\b \x01(\rR\x10lastPublishRtime\"\x80\x01\n" +
	"/CAssetSetPublishing_AddBranchToAssetSet_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1f\n" +
	"\vassetset_id\x18\x02 \x01(\x06R\n" +
	"assetsetId\x12\x16\n" +
	"\x06branch\x18\x03 \x01(\tR\x06branch\"X\n" +
	"0CAssetSetPublishing_AddBranchToAssetSet_Response\x12$\n" +
	"\aupdated\x18\x01 \x01(\v2\n" +
	".CAssetSetR\aupdated\"j\n" +
	"*CAssetSetPublishing_CreateAssetSet_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12&\n" +
	"\bassetset\x18\x02 \x01(\v2\n" +
	".CAssetSetR\bassetset\"U\n" +
	"+CAssetSetPublishing_CreateAssetSet_Response\x12&\n" +
	"\bassetset\x18\x01 \x01(\v2\n" +
	".CAssetSetR\bassetset\"c\n" +
	"*CAssetSetPublishing_DeleteAssetSet_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1f\n" +
	"\vassetset_id\x18\x02 \x01(\x06R\n" +
	"assetsetId\"-\n" +
	"+CAssetSetPublishing_DeleteAssetSet_Response\"C\n" +
	"+CAssetSetPublishing_GetAllAssetSets_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"V\n" +
	",CAssetSetPublishing_GetAllAssetSets_Response\x12&\n" +
	"\bassetset\x18\x02 \x03(\v2\n" +
	".CAssetSetR\bassetset\"]\n" +
	"5CAssetSetPublishing_RemoseBranchFromAssetSet_Response\x12$\n" +
	"\aupdated\x18\x01 \x01(\v2\n" +
	".CAssetSetR\aupdated\"\x85\x01\n" +
	"4CAssetSetPublishing_RemoveBranchFromAssetSet_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1f\n" +
	"\vassetset_id\x18\x02 \x01(\x06R\n" +
	"assetsetId\x12\x16\n" +
	"\x06branch\x18\x03 \x01(\tR\x06branch\"\xa2\x01\n" +
	"0CAssetSetPublishing_SwapAssetSetPriority_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12*\n" +
	"\x11first_assetset_id\x18\x02 \x01(\x06R\x0ffirstAssetsetId\x12,\n" +
	"\x12second_assetset_id\x18\x03 \x01(\x06R\x10secondAssetsetId\"\x97\x01\n" +
	"1CAssetSetPublishing_SwapAssetSetPriority_Response\x12/\n" +
	"\rupdated_first\x18\x01 \x01(\v2\n" +
	".CAssetSetR\fupdatedFirst\x121\n" +
	"\x0eupdated_second\x18\x02 \x01(\v2\n" +
	".CAssetSetR\rupdatedSecond\"j\n" +
	"*CAssetSetPublishing_UpdateAssetSet_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12&\n" +
	"\bassetset\x18\x02 \x01(\v2\n" +
	".CAssetSetR\bassetset\"-\n" +
	"+CAssetSetPublishing_UpdateAssetSet_Response\"f\n" +
	"-CAssetSetPublishing_UpdatePublishTime_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1f\n" +
	"\vassetset_id\x18\x02 \x01(\x06R\n" +
	"assetsetId\"V\n" +
	".CAssetSetPublishing_UpdatePublishTime_Response\x12$\n" +
	"\aupdated\x18\x01 \x01(\v2\n" +
	".CAssetSetR\aupdated2\xc8\a\n" +
	"\x12AssetSetPublishing\x12z\n" +
	"\x13AddBranchToAssetSet\x120.CAssetSetPublishing_AddBranchToAssetSet_Request\x1a1.CAssetSetPublishing_AddBranchToAssetSet_Response\x12k\n" +
	"\x0eCreateAssetSet\x12+.CAssetSetPublishing_CreateAssetSet_Request\x1a,.CAssetSetPublishing_CreateAssetSet_Response\x12k\n" +
	"\x0eDeleteAssetSet\x12+.CAssetSetPublishing_DeleteAssetSet_Request\x1a,.CAssetSetPublishing_DeleteAssetSet_Response\x12n\n" +
	"\x0fGetAllAssetSets\x12,.CAssetSetPublishing_GetAllAssetSets_Request\x1a-.CAssetSetPublishing_GetAllAssetSets_Response\x12\x89\x01\n" +
	"\x18RemoveBranchFromAssetSet\x125.CAssetSetPublishing_RemoveBranchFromAssetSet_Request\x1a6.CAssetSetPublishing_RemoseBranchFromAssetSet_Response\x12}\n" +
	"\x14SwapAssetSetPriority\x121.CAssetSetPublishing_SwapAssetSetPriority_Request\x1a2.CAssetSetPublishing_SwapAssetSetPriority_Response\x12k\n" +
	"\x0eUpdateAssetSet\x12+.CAssetSetPublishing_UpdateAssetSet_Request\x1a,.CAssetSetPublishing_UpdateAssetSet_Response\x12t\n" +
	"\x11UpdatePublishTime\x12..CAssetSetPublishing_UpdatePublishTime_Request\x1a/.CAssetSetPublishing_UpdatePublishTime_Response"

var (
	file_service_assetsetpublishing_proto_rawDescOnce sync.Once
	file_service_assetsetpublishing_proto_rawDescData []byte
)

func file_service_assetsetpublishing_proto_rawDescGZIP() []byte {
	file_service_assetsetpublishing_proto_rawDescOnce.Do(func() {
		file_service_assetsetpublishing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_assetsetpublishing_proto_rawDesc), len(file_service_assetsetpublishing_proto_rawDesc)))
	})
	return file_service_assetsetpublishing_proto_rawDescData
}

var file_service_assetsetpublishing_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_service_assetsetpublishing_proto_goTypes = []any{
	(*CAssetSet)(nil), // 0: CAssetSet
	(*CAssetSetPublishing_AddBranchToAssetSet_Request)(nil),       // 1: CAssetSetPublishing_AddBranchToAssetSet_Request
	(*CAssetSetPublishing_AddBranchToAssetSet_Response)(nil),      // 2: CAssetSetPublishing_AddBranchToAssetSet_Response
	(*CAssetSetPublishing_CreateAssetSet_Request)(nil),            // 3: CAssetSetPublishing_CreateAssetSet_Request
	(*CAssetSetPublishing_CreateAssetSet_Response)(nil),           // 4: CAssetSetPublishing_CreateAssetSet_Response
	(*CAssetSetPublishing_DeleteAssetSet_Request)(nil),            // 5: CAssetSetPublishing_DeleteAssetSet_Request
	(*CAssetSetPublishing_DeleteAssetSet_Response)(nil),           // 6: CAssetSetPublishing_DeleteAssetSet_Response
	(*CAssetSetPublishing_GetAllAssetSets_Request)(nil),           // 7: CAssetSetPublishing_GetAllAssetSets_Request
	(*CAssetSetPublishing_GetAllAssetSets_Response)(nil),          // 8: CAssetSetPublishing_GetAllAssetSets_Response
	(*CAssetSetPublishing_RemoseBranchFromAssetSet_Response)(nil), // 9: CAssetSetPublishing_RemoseBranchFromAssetSet_Response
	(*CAssetSetPublishing_RemoveBranchFromAssetSet_Request)(nil),  // 10: CAssetSetPublishing_RemoveBranchFromAssetSet_Request
	(*CAssetSetPublishing_SwapAssetSetPriority_Request)(nil),      // 11: CAssetSetPublishing_SwapAssetSetPriority_Request
	(*CAssetSetPublishing_SwapAssetSetPriority_Response)(nil),     // 12: CAssetSetPublishing_SwapAssetSetPriority_Response
	(*CAssetSetPublishing_UpdateAssetSet_Request)(nil),            // 13: CAssetSetPublishing_UpdateAssetSet_Request
	(*CAssetSetPublishing_UpdateAssetSet_Response)(nil),           // 14: CAssetSetPublishing_UpdateAssetSet_Response
	(*CAssetSetPublishing_UpdatePublishTime_Request)(nil),         // 15: CAssetSetPublishing_UpdatePublishTime_Request
	(*CAssetSetPublishing_UpdatePublishTime_Response)(nil),        // 16: CAssetSetPublishing_UpdatePublishTime_Response
}
var file_service_assetsetpublishing_proto_depIdxs = []int32{
	0,  // 0: CAssetSetPublishing_AddBranchToAssetSet_Response.updated:type_name -> CAssetSet
	0,  // 1: CAssetSetPublishing_CreateAssetSet_Request.assetset:type_name -> CAssetSet
	0,  // 2: CAssetSetPublishing_CreateAssetSet_Response.assetset:type_name -> CAssetSet
	0,  // 3: CAssetSetPublishing_GetAllAssetSets_Response.assetset:type_name -> CAssetSet
	0,  // 4: CAssetSetPublishing_RemoseBranchFromAssetSet_Response.updated:type_name -> CAssetSet
	0,  // 5: CAssetSetPublishing_SwapAssetSetPriority_Response.updated_first:type_name -> CAssetSet
	0,  // 6: CAssetSetPublishing_SwapAssetSetPriority_Response.updated_second:type_name -> CAssetSet
	0,  // 7: CAssetSetPublishing_UpdateAssetSet_Request.assetset:type_name -> CAssetSet
	0,  // 8: CAssetSetPublishing_UpdatePublishTime_Response.updated:type_name -> CAssetSet
	1,  // 9: AssetSetPublishing.AddBranchToAssetSet:input_type -> CAssetSetPublishing_AddBranchToAssetSet_Request
	3,  // 10: AssetSetPublishing.CreateAssetSet:input_type -> CAssetSetPublishing_CreateAssetSet_Request
	5,  // 11: AssetSetPublishing.DeleteAssetSet:input_type -> CAssetSetPublishing_DeleteAssetSet_Request
	7,  // 12: AssetSetPublishing.GetAllAssetSets:input_type -> CAssetSetPublishing_GetAllAssetSets_Request
	10, // 13: AssetSetPublishing.RemoveBranchFromAssetSet:input_type -> CAssetSetPublishing_RemoveBranchFromAssetSet_Request
	11, // 14: AssetSetPublishing.SwapAssetSetPriority:input_type -> CAssetSetPublishing_SwapAssetSetPriority_Request
	13, // 15: AssetSetPublishing.UpdateAssetSet:input_type -> CAssetSetPublishing_UpdateAssetSet_Request
	15, // 16: AssetSetPublishing.UpdatePublishTime:input_type -> CAssetSetPublishing_UpdatePublishTime_Request
	2,  // 17: AssetSetPublishing.AddBranchToAssetSet:output_type -> CAssetSetPublishing_AddBranchToAssetSet_Response
	4,  // 18: AssetSetPublishing.CreateAssetSet:output_type -> CAssetSetPublishing_CreateAssetSet_Response
	6,  // 19: AssetSetPublishing.DeleteAssetSet:output_type -> CAssetSetPublishing_DeleteAssetSet_Response
	8,  // 20: AssetSetPublishing.GetAllAssetSets:output_type -> CAssetSetPublishing_GetAllAssetSets_Response
	9,  // 21: AssetSetPublishing.RemoveBranchFromAssetSet:output_type -> CAssetSetPublishing_RemoseBranchFromAssetSet_Response
	12, // 22: AssetSetPublishing.SwapAssetSetPriority:output_type -> CAssetSetPublishing_SwapAssetSetPriority_Response
	14, // 23: AssetSetPublishing.UpdateAssetSet:output_type -> CAssetSetPublishing_UpdateAssetSet_Response
	16, // 24: AssetSetPublishing.UpdatePublishTime:output_type -> CAssetSetPublishing_UpdatePublishTime_Response
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_service_assetsetpublishing_proto_init() }
func file_service_assetsetpublishing_proto_init() {
	if File_service_assetsetpublishing_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_assetsetpublishing_proto_rawDesc), len(file_service_assetsetpublishing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_assetsetpublishing_proto_goTypes,
		DependencyIndexes: file_service_assetsetpublishing_proto_depIdxs,
		MessageInfos:      file_service_assetsetpublishing_proto_msgTypes,
	}.Build()
	File_service_assetsetpublishing_proto = out.File
	file_service_assetsetpublishing_proto_goTypes = nil
	file_service_assetsetpublishing_proto_depIdxs = nil
}
