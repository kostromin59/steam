// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_partnermeetsteam.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CParterMeetSteam_TestFireEmails_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClanEventGid  *uint64                `protobuf:"fixed64,1,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CParterMeetSteam_TestFireEmails_Request) Reset() {
	*x = CParterMeetSteam_TestFireEmails_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CParterMeetSteam_TestFireEmails_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CParterMeetSteam_TestFireEmails_Request) ProtoMessage() {}

func (x *CParterMeetSteam_TestFireEmails_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CParterMeetSteam_TestFireEmails_Request.ProtoReflect.Descriptor instead.
func (*CParterMeetSteam_TestFireEmails_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{0}
}

func (x *CParterMeetSteam_TestFireEmails_Request) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

func (x *CParterMeetSteam_TestFireEmails_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CParterMeetSteam_TestFireEmails_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessionids    []uint32               `protobuf:"varint,1,rep,name=sessionids" json:"sessionids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CParterMeetSteam_TestFireEmails_Response) Reset() {
	*x = CParterMeetSteam_TestFireEmails_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CParterMeetSteam_TestFireEmails_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CParterMeetSteam_TestFireEmails_Response) ProtoMessage() {}

func (x *CParterMeetSteam_TestFireEmails_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CParterMeetSteam_TestFireEmails_Response.ProtoReflect.Descriptor instead.
func (*CParterMeetSteam_TestFireEmails_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{1}
}

func (x *CParterMeetSteam_TestFireEmails_Response) GetSessionids() []uint32 {
	if x != nil {
		return x.Sessionids
	}
	return nil
}

type CPartnerEmailAndName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accountid     *uint32                `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Partnerid     *uint32                `protobuf:"varint,2,opt,name=partnerid" json:"partnerid,omitempty"`
	Realname      *string                `protobuf:"bytes,3,opt,name=realname" json:"realname,omitempty"`
	Email         *string                `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerEmailAndName) Reset() {
	*x = CPartnerEmailAndName{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerEmailAndName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerEmailAndName) ProtoMessage() {}

func (x *CPartnerEmailAndName) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerEmailAndName.ProtoReflect.Descriptor instead.
func (*CPartnerEmailAndName) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{2}
}

func (x *CPartnerEmailAndName) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CPartnerEmailAndName) GetPartnerid() uint32 {
	if x != nil && x.Partnerid != nil {
		return *x.Partnerid
	}
	return 0
}

func (x *CPartnerEmailAndName) GetRealname() string {
	if x != nil && x.Realname != nil {
		return *x.Realname
	}
	return ""
}

func (x *CPartnerEmailAndName) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type CPartnerMeetSteam_EmailInvitees_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClanEventGid  *uint64                `protobuf:"fixed64,1,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_EmailInvitees_Request) Reset() {
	*x = CPartnerMeetSteam_EmailInvitees_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_EmailInvitees_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_EmailInvitees_Request) ProtoMessage() {}

func (x *CPartnerMeetSteam_EmailInvitees_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_EmailInvitees_Request.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_EmailInvitees_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{3}
}

func (x *CPartnerMeetSteam_EmailInvitees_Request) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

func (x *CPartnerMeetSteam_EmailInvitees_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CPartnerMeetSteam_EmailInvitees_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumEmailed    *uint32                `protobuf:"varint,1,opt,name=num_emailed,json=numEmailed" json:"num_emailed,omitempty"`
	NumSkipped    *uint32                `protobuf:"varint,2,opt,name=num_skipped,json=numSkipped" json:"num_skipped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_EmailInvitees_Response) Reset() {
	*x = CPartnerMeetSteam_EmailInvitees_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_EmailInvitees_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_EmailInvitees_Response) ProtoMessage() {}

func (x *CPartnerMeetSteam_EmailInvitees_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_EmailInvitees_Response.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_EmailInvitees_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{4}
}

func (x *CPartnerMeetSteam_EmailInvitees_Response) GetNumEmailed() uint32 {
	if x != nil && x.NumEmailed != nil {
		return *x.NumEmailed
	}
	return 0
}

func (x *CPartnerMeetSteam_EmailInvitees_Response) GetNumSkipped() uint32 {
	if x != nil && x.NumSkipped != nil {
		return *x.NumSkipped
	}
	return 0
}

type CPartnerMeetSteam_GetAvailability_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClanEventGid  *uint64                `protobuf:"fixed64,1,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetAvailability_Request) Reset() {
	*x = CPartnerMeetSteam_GetAvailability_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetAvailability_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetAvailability_Request) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetAvailability_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetAvailability_Request.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetAvailability_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{5}
}

func (x *CPartnerMeetSteam_GetAvailability_Request) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

type CPartnerMeetSteam_GetAvailability_Response struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	Availability  []*CPartnerMeetSteam_GetAvailability_Response_Session `protobuf:"bytes,1,rep,name=availability" json:"availability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetAvailability_Response) Reset() {
	*x = CPartnerMeetSteam_GetAvailability_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetAvailability_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetAvailability_Response) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetAvailability_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetAvailability_Response.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetAvailability_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{6}
}

func (x *CPartnerMeetSteam_GetAvailability_Response) GetAvailability() []*CPartnerMeetSteam_GetAvailability_Response_Session {
	if x != nil {
		return x.Availability
	}
	return nil
}

type CPartnerMeetSteam_GetAvailability_Response_Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       *uint32                `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SessionId     *uint32                `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	GuestCount    *uint32                `protobuf:"varint,3,opt,name=guest_count,json=guestCount" json:"guest_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetAvailability_Response_Session) Reset() {
	*x = CPartnerMeetSteam_GetAvailability_Response_Session{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetAvailability_Response_Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetAvailability_Response_Session) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetAvailability_Response_Session) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetAvailability_Response_Session.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetAvailability_Response_Session) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{7}
}

func (x *CPartnerMeetSteam_GetAvailability_Response_Session) GetGroupId() uint32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CPartnerMeetSteam_GetAvailability_Response_Session) GetSessionId() uint32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CPartnerMeetSteam_GetAvailability_Response_Session) GetGuestCount() uint32 {
	if x != nil && x.GuestCount != nil {
		return *x.GuestCount
	}
	return 0
}

type CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accountids    []uint32               `protobuf:"varint,1,rep,name=accountids" json:"accountids,omitempty"`
	Partnerids    []uint32               `protobuf:"varint,2,rep,name=partnerids" json:"partnerids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) Reset() {
	*x = CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{8}
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) GetAccountids() []uint32 {
	if x != nil {
		return x.Accountids
	}
	return nil
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request) GetPartnerids() []uint32 {
	if x != nil {
		return x.Partnerids
	}
	return nil
}

type CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Info          []*CPartnerEmailAndName `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response) Reset() {
	*x = CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{9}
}

func (x *CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response) GetInfo() []*CPartnerEmailAndName {
	if x != nil {
		return x.Info
	}
	return nil
}

type CPartnerMeetSteam_GetRegistrations_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClanEventGid  *uint64                `protobuf:"fixed64,1,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetRegistrations_Request) Reset() {
	*x = CPartnerMeetSteam_GetRegistrations_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetRegistrations_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetRegistrations_Request) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetRegistrations_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetRegistrations_Request.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetRegistrations_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{10}
}

func (x *CPartnerMeetSteam_GetRegistrations_Request) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CPartnerMeetSteam_GetRegistrations_Response struct {
	state         protoimpl.MessageState                                      `protogen:"open.v1"`
	Registrations []*CPartnerMeetSteam_GetRegistrations_Response_Registration `protobuf:"bytes,1,rep,name=registrations" json:"registrations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetRegistrations_Response) Reset() {
	*x = CPartnerMeetSteam_GetRegistrations_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetRegistrations_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetRegistrations_Response) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetRegistrations_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetRegistrations_Response.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetRegistrations_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{11}
}

func (x *CPartnerMeetSteam_GetRegistrations_Response) GetRegistrations() []*CPartnerMeetSteam_GetRegistrations_Response_Registration {
	if x != nil {
		return x.Registrations
	}
	return nil
}

type CPartnerMeetSteam_GetRegistrations_Response_Registration struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GroupId            *uint32                `protobuf:"varint,1,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	SessionId          *uint32                `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Steamid            *uint64                `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	GuestsRegistered   *uint32                `protobuf:"varint,4,opt,name=guests_registered,json=guestsRegistered" json:"guests_registered,omitempty"`
	Jsondata           *string                `protobuf:"bytes,5,opt,name=jsondata" json:"jsondata,omitempty"`
	RtAttendanceMarked *uint32                `protobuf:"varint,6,opt,name=rt_attendance_marked,json=rtAttendanceMarked" json:"rt_attendance_marked,omitempty"`
	AttendanceCount    *uint32                `protobuf:"varint,7,opt,name=attendance_count,json=attendanceCount" json:"attendance_count,omitempty"`
	GuestsAttendance   *string                `protobuf:"bytes,8,opt,name=guests_attendance,json=guestsAttendance" json:"guests_attendance,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) Reset() {
	*x = CPartnerMeetSteam_GetRegistrations_Response_Registration{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetRegistrations_Response_Registration) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetRegistrations_Response_Registration.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetRegistrations_Response_Registration) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{12}
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetGroupId() uint32 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetSessionId() uint32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetGuestsRegistered() uint32 {
	if x != nil && x.GuestsRegistered != nil {
		return *x.GuestsRegistered
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetJsondata() string {
	if x != nil && x.Jsondata != nil {
		return *x.Jsondata
	}
	return ""
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetRtAttendanceMarked() uint32 {
	if x != nil && x.RtAttendanceMarked != nil {
		return *x.RtAttendanceMarked
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetAttendanceCount() uint32 {
	if x != nil && x.AttendanceCount != nil {
		return *x.AttendanceCount
	}
	return 0
}

func (x *CPartnerMeetSteam_GetRegistrations_Response_Registration) GetGuestsAttendance() string {
	if x != nil && x.GuestsAttendance != nil {
		return *x.GuestsAttendance
	}
	return ""
}

type CPartnerMeetSteam_GetSaleEventOrganizers_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RtOldestDate  *uint32                `protobuf:"varint,1,opt,name=rt_oldest_date,json=rtOldestDate" json:"rt_oldest_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Request) Reset() {
	*x = CPartnerMeetSteam_GetSaleEventOrganizers_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetSaleEventOrganizers_Request) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetSaleEventOrganizers_Request.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetSaleEventOrganizers_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{13}
}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Request) GetRtOldestDate() uint32 {
	if x != nil && x.RtOldestDate != nil {
		return *x.RtOldestDate
	}
	return 0
}

type CPartnerMeetSteam_GetSaleEventOrganizers_Response struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Info          []*CSaleEventOrganizerInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Response) Reset() {
	*x = CPartnerMeetSteam_GetSaleEventOrganizers_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_GetSaleEventOrganizers_Response) ProtoMessage() {}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_GetSaleEventOrganizers_Response.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_GetSaleEventOrganizers_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{14}
}

func (x *CPartnerMeetSteam_GetSaleEventOrganizers_Response) GetInfo() []*CSaleEventOrganizerInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CPartnerMeetSteam_UpdateRegistration_Request struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ClanEventGid          *uint64                `protobuf:"fixed64,1,opt,name=clan_event_gid,json=clanEventGid" json:"clan_event_gid,omitempty"`
	Steamid               *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	RegistrationGroupId   *uint32                `protobuf:"varint,3,opt,name=registration_group_id,json=registrationGroupId" json:"registration_group_id,omitempty"`
	RegistrationSessionId *uint32                `protobuf:"varint,4,opt,name=registration_session_id,json=registrationSessionId" json:"registration_session_id,omitempty"`
	GuestCount            *uint32                `protobuf:"varint,5,opt,name=guest_count,json=guestCount" json:"guest_count,omitempty"`
	Jsondata              *string                `protobuf:"bytes,7,opt,name=jsondata" json:"jsondata,omitempty"`
	SkipEmail             *bool                  `protobuf:"varint,8,opt,name=skip_email,json=skipEmail" json:"skip_email,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) Reset() {
	*x = CPartnerMeetSteam_UpdateRegistration_Request{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_UpdateRegistration_Request) ProtoMessage() {}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_UpdateRegistration_Request.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_UpdateRegistration_Request) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{15}
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetClanEventGid() uint64 {
	if x != nil && x.ClanEventGid != nil {
		return *x.ClanEventGid
	}
	return 0
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetRegistrationGroupId() uint32 {
	if x != nil && x.RegistrationGroupId != nil {
		return *x.RegistrationGroupId
	}
	return 0
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetRegistrationSessionId() uint32 {
	if x != nil && x.RegistrationSessionId != nil {
		return *x.RegistrationSessionId
	}
	return 0
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetGuestCount() uint32 {
	if x != nil && x.GuestCount != nil {
		return *x.GuestCount
	}
	return 0
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetJsondata() string {
	if x != nil && x.Jsondata != nil {
		return *x.Jsondata
	}
	return ""
}

func (x *CPartnerMeetSteam_UpdateRegistration_Request) GetSkipEmail() bool {
	if x != nil && x.SkipEmail != nil {
		return *x.SkipEmail
	}
	return false
}

type CPartnerMeetSteam_UpdateRegistration_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPartnerMeetSteam_UpdateRegistration_Response) Reset() {
	*x = CPartnerMeetSteam_UpdateRegistration_Response{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPartnerMeetSteam_UpdateRegistration_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPartnerMeetSteam_UpdateRegistration_Response) ProtoMessage() {}

func (x *CPartnerMeetSteam_UpdateRegistration_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPartnerMeetSteam_UpdateRegistration_Response.ProtoReflect.Descriptor instead.
func (*CPartnerMeetSteam_UpdateRegistration_Response) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{16}
}

type CSaleEventOrganizerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accountid     *uint32                `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	ClanEventGids []uint64               `protobuf:"fixed64,2,rep,name=clan_event_gids,json=clanEventGids" json:"clan_event_gids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleEventOrganizerInfo) Reset() {
	*x = CSaleEventOrganizerInfo{}
	mi := &file_service_partnermeetsteam_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleEventOrganizerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleEventOrganizerInfo) ProtoMessage() {}

func (x *CSaleEventOrganizerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_service_partnermeetsteam_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleEventOrganizerInfo.ProtoReflect.Descriptor instead.
func (*CSaleEventOrganizerInfo) Descriptor() ([]byte, []int) {
	return file_service_partnermeetsteam_proto_rawDescGZIP(), []int{17}
}

func (x *CSaleEventOrganizerInfo) GetAccountid() uint32 {
	if x != nil && x.Accountid != nil {
		return *x.Accountid
	}
	return 0
}

func (x *CSaleEventOrganizerInfo) GetClanEventGids() []uint64 {
	if x != nil {
		return x.ClanEventGids
	}
	return nil
}

var File_service_partnermeetsteam_proto protoreflect.FileDescriptor

const file_service_partnermeetsteam_proto_rawDesc = "" +
	"\n" +
	"\x1eservice_partnermeetsteam.proto\"i\n" +
	"'CParterMeetSteam_TestFireEmails_Request\x12$\n" +
	"\x0eclan_event_gid\x18\x01 \x01(\x06R\fclanEventGid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\"J\n" +
	"(CParterMeetSteam_TestFireEmails_Response\x12\x1e\n" +
	"\n" +
	"sessionids\x18\x01 \x03(\rR\n" +
	"sessionids\"\x84\x01\n" +
	"\x14CPartnerEmailAndName\x12\x1c\n" +
	"\taccountid\x18\x01 \x01(\rR\taccountid\x12\x1c\n" +
	"\tpartnerid\x18\x02 \x01(\rR\tpartnerid\x12\x1a\n" +
	"\brealname\x18\x03 \x01(\tR\brealname\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\"i\n" +
	"'CPartnerMeetSteam_EmailInvitees_Request\x12$\n" +
	"\x0eclan_event_gid\x18\x01 \x01(\x06R\fclanEventGid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\"l\n" +
	"(CPartnerMeetSteam_EmailInvitees_Response\x12\x1f\n" +
	"\vnum_emailed\x18\x01 \x01(\rR\n" +
	"numEmailed\x12\x1f\n" +
	"\vnum_skipped\x18\x02 \x01(\rR\n" +
	"numSkipped\"Q\n" +
	")CPartnerMeetSteam_GetAvailability_Request\x12$\n" +
	"\x0eclan_event_gid\x18\x01 \x01(\x06R\fclanEventGid\"\x85\x01\n" +
	"*CPartnerMeetSteam_GetAvailability_Response\x12W\n" +
	"\favailability\x18\x01 \x03(\v23.CPartnerMeetSteam_GetAvailability_Response_SessionR\favailability\"\x8f\x01\n" +
	"2CPartnerMeetSteam_GetAvailability_Response_Session\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\rR\agroupId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\rR\tsessionId\x12\x1f\n" +
	"\vguest_count\x18\x03 \x01(\rR\n" +
	"guestCount\"w\n" +
	"5CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request\x12\x1e\n" +
	"\n" +
	"accountids\x18\x01 \x03(\rR\n" +
	"accountids\x12\x1e\n" +
	"\n" +
	"partnerids\x18\x02 \x03(\rR\n" +
	"partnerids\"c\n" +
	"6CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response\x12)\n" +
	"\x04info\x18\x01 \x03(\v2\x15.CPartnerEmailAndNameR\x04info\"l\n" +
	"*CPartnerMeetSteam_GetRegistrations_Request\x12$\n" +
	"\x0eclan_event_gid\x18\x01 \x01(\x06R\fclanEventGid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\"\x8e\x01\n" +
	"+CPartnerMeetSteam_GetRegistrations_Response\x12_\n" +
	"\rregistrations\x18\x01 \x03(\v29.CPartnerMeetSteam_GetRegistrations_Response_RegistrationR\rregistrations\"\xe1\x02\n" +
	"8CPartnerMeetSteam_GetRegistrations_Response_Registration\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\rR\agroupId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\rR\tsessionId\x12\x18\n" +
	"\asteamid\x18\x03 \x01(\x06R\asteamid\x12+\n" +
	"\x11guests_registered\x18\x04 \x01(\rR\x10guestsRegistered\x12\x1a\n" +
	"\bjsondata\x18\x05 \x01(\tR\bjsondata\x120\n" +
	"\x14rt_attendance_marked\x18\x06 \x01(\rR\x12rtAttendanceMarked\x12)\n" +
	"\x10attendance_count\x18\a \x01(\rR\x0fattendanceCount\x12+\n" +
	"\x11guests_attendance\x18\b \x01(\tR\x10guestsAttendance\"X\n" +
	"0CPartnerMeetSteam_GetSaleEventOrganizers_Request\x12$\n" +
	"\x0ert_oldest_date\x18\x01 \x01(\rR\frtOldestDate\"a\n" +
	"1CPartnerMeetSteam_GetSaleEventOrganizers_Response\x12,\n" +
	"\x04info\x18\x01 \x03(\v2\x18.CSaleEventOrganizerInfoR\x04info\"\xb6\x02\n" +
	",CPartnerMeetSteam_UpdateRegistration_Request\x12$\n" +
	"\x0eclan_event_gid\x18\x01 \x01(\x06R\fclanEventGid\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\x122\n" +
	"\x15registration_group_id\x18\x03 \x01(\rR\x13registrationGroupId\x126\n" +
	"\x17registration_session_id\x18\x04 \x01(\rR\x15registrationSessionId\x12\x1f\n" +
	"\vguest_count\x18\x05 \x01(\rR\n" +
	"guestCount\x12\x1a\n" +
	"\bjsondata\x18\a \x01(\tR\bjsondata\x12\x1d\n" +
	"\n" +
	"skip_email\x18\b \x01(\bR\tskipEmail\"/\n" +
	"-CPartnerMeetSteam_UpdateRegistration_Response\"_\n" +
	"\x17CSaleEventOrganizerInfo\x12\x1c\n" +
	"\taccountid\x18\x01 \x01(\rR\taccountid\x12&\n" +
	"\x0fclan_event_gids\x18\x02 \x03(\x06R\rclanEventGids2\xc1\x06\n" +
	"\x10PartnerMeetSteam\x12d\n" +
	"\rEmailInvitees\x12(.CPartnerMeetSteam_EmailInvitees_Request\x1a).CPartnerMeetSteam_EmailInvitees_Response\x12j\n" +
	"\x0fGetAvailability\x12*.CPartnerMeetSteam_GetAvailability_Request\x1a+.CPartnerMeetSteam_GetAvailability_Response\x12\x8e\x01\n" +
	"\x1bGetBatchPartnerEmailAndName\x126.CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request\x1a7.CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response\x12m\n" +
	"\x10GetRegistrations\x12+.CPartnerMeetSteam_GetRegistrations_Request\x1a,.CPartnerMeetSteam_GetRegistrations_Response\x12\x7f\n" +
	"\x16GetSaleEventOrganizers\x121.CPartnerMeetSteam_GetSaleEventOrganizers_Request\x1a2.CPartnerMeetSteam_GetSaleEventOrganizers_Response\x12e\n" +
	"\x0eTestFireEmails\x12(.CParterMeetSteam_TestFireEmails_Request\x1a).CParterMeetSteam_TestFireEmails_Response\x12s\n" +
	"\x12UpdateRegistration\x12-.CPartnerMeetSteam_UpdateRegistration_Request\x1a..CPartnerMeetSteam_UpdateRegistration_Response"

var (
	file_service_partnermeetsteam_proto_rawDescOnce sync.Once
	file_service_partnermeetsteam_proto_rawDescData []byte
)

func file_service_partnermeetsteam_proto_rawDescGZIP() []byte {
	file_service_partnermeetsteam_proto_rawDescOnce.Do(func() {
		file_service_partnermeetsteam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_partnermeetsteam_proto_rawDesc), len(file_service_partnermeetsteam_proto_rawDesc)))
	})
	return file_service_partnermeetsteam_proto_rawDescData
}

var file_service_partnermeetsteam_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_service_partnermeetsteam_proto_goTypes = []any{
	(*CParterMeetSteam_TestFireEmails_Request)(nil),                  // 0: CParterMeetSteam_TestFireEmails_Request
	(*CParterMeetSteam_TestFireEmails_Response)(nil),                 // 1: CParterMeetSteam_TestFireEmails_Response
	(*CPartnerEmailAndName)(nil),                                     // 2: CPartnerEmailAndName
	(*CPartnerMeetSteam_EmailInvitees_Request)(nil),                  // 3: CPartnerMeetSteam_EmailInvitees_Request
	(*CPartnerMeetSteam_EmailInvitees_Response)(nil),                 // 4: CPartnerMeetSteam_EmailInvitees_Response
	(*CPartnerMeetSteam_GetAvailability_Request)(nil),                // 5: CPartnerMeetSteam_GetAvailability_Request
	(*CPartnerMeetSteam_GetAvailability_Response)(nil),               // 6: CPartnerMeetSteam_GetAvailability_Response
	(*CPartnerMeetSteam_GetAvailability_Response_Session)(nil),       // 7: CPartnerMeetSteam_GetAvailability_Response_Session
	(*CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request)(nil),    // 8: CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request
	(*CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response)(nil),   // 9: CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response
	(*CPartnerMeetSteam_GetRegistrations_Request)(nil),               // 10: CPartnerMeetSteam_GetRegistrations_Request
	(*CPartnerMeetSteam_GetRegistrations_Response)(nil),              // 11: CPartnerMeetSteam_GetRegistrations_Response
	(*CPartnerMeetSteam_GetRegistrations_Response_Registration)(nil), // 12: CPartnerMeetSteam_GetRegistrations_Response_Registration
	(*CPartnerMeetSteam_GetSaleEventOrganizers_Request)(nil),         // 13: CPartnerMeetSteam_GetSaleEventOrganizers_Request
	(*CPartnerMeetSteam_GetSaleEventOrganizers_Response)(nil),        // 14: CPartnerMeetSteam_GetSaleEventOrganizers_Response
	(*CPartnerMeetSteam_UpdateRegistration_Request)(nil),             // 15: CPartnerMeetSteam_UpdateRegistration_Request
	(*CPartnerMeetSteam_UpdateRegistration_Response)(nil),            // 16: CPartnerMeetSteam_UpdateRegistration_Response
	(*CSaleEventOrganizerInfo)(nil),                                  // 17: CSaleEventOrganizerInfo
}
var file_service_partnermeetsteam_proto_depIdxs = []int32{
	7,  // 0: CPartnerMeetSteam_GetAvailability_Response.availability:type_name -> CPartnerMeetSteam_GetAvailability_Response_Session
	2,  // 1: CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response.info:type_name -> CPartnerEmailAndName
	12, // 2: CPartnerMeetSteam_GetRegistrations_Response.registrations:type_name -> CPartnerMeetSteam_GetRegistrations_Response_Registration
	17, // 3: CPartnerMeetSteam_GetSaleEventOrganizers_Response.info:type_name -> CSaleEventOrganizerInfo
	3,  // 4: PartnerMeetSteam.EmailInvitees:input_type -> CPartnerMeetSteam_EmailInvitees_Request
	5,  // 5: PartnerMeetSteam.GetAvailability:input_type -> CPartnerMeetSteam_GetAvailability_Request
	8,  // 6: PartnerMeetSteam.GetBatchPartnerEmailAndName:input_type -> CPartnerMeetSteam_GetBatchPartnerEmailAndName_Request
	10, // 7: PartnerMeetSteam.GetRegistrations:input_type -> CPartnerMeetSteam_GetRegistrations_Request
	13, // 8: PartnerMeetSteam.GetSaleEventOrganizers:input_type -> CPartnerMeetSteam_GetSaleEventOrganizers_Request
	0,  // 9: PartnerMeetSteam.TestFireEmails:input_type -> CParterMeetSteam_TestFireEmails_Request
	15, // 10: PartnerMeetSteam.UpdateRegistration:input_type -> CPartnerMeetSteam_UpdateRegistration_Request
	4,  // 11: PartnerMeetSteam.EmailInvitees:output_type -> CPartnerMeetSteam_EmailInvitees_Response
	6,  // 12: PartnerMeetSteam.GetAvailability:output_type -> CPartnerMeetSteam_GetAvailability_Response
	9,  // 13: PartnerMeetSteam.GetBatchPartnerEmailAndName:output_type -> CPartnerMeetSteam_GetBatchPartnerEmailAndName_Response
	11, // 14: PartnerMeetSteam.GetRegistrations:output_type -> CPartnerMeetSteam_GetRegistrations_Response
	14, // 15: PartnerMeetSteam.GetSaleEventOrganizers:output_type -> CPartnerMeetSteam_GetSaleEventOrganizers_Response
	1,  // 16: PartnerMeetSteam.TestFireEmails:output_type -> CParterMeetSteam_TestFireEmails_Response
	16, // 17: PartnerMeetSteam.UpdateRegistration:output_type -> CPartnerMeetSteam_UpdateRegistration_Response
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_service_partnermeetsteam_proto_init() }
func file_service_partnermeetsteam_proto_init() {
	if File_service_partnermeetsteam_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_partnermeetsteam_proto_rawDesc), len(file_service_partnermeetsteam_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_partnermeetsteam_proto_goTypes,
		DependencyIndexes: file_service_partnermeetsteam_proto_depIdxs,
		MessageInfos:      file_service_partnermeetsteam_proto_msgTypes,
	}.Build()
	File_service_partnermeetsteam_proto = out.File
	file_service_partnermeetsteam_proto_goTypes = nil
	file_service_partnermeetsteam_proto_depIdxs = nil
}
