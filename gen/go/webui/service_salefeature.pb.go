// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_salefeature.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CAchievementDetails struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Statid                  *uint32                `protobuf:"varint,1,opt,name=statid" json:"statid,omitempty"`
	Fieldid                 *uint32                `protobuf:"varint,2,opt,name=fieldid" json:"fieldid,omitempty"`
	AchievementNameInternal *string                `protobuf:"bytes,3,opt,name=achievement_name_internal,json=achievementNameInternal" json:"achievement_name_internal,omitempty"`
	RtimeUnlocked           *uint32                `protobuf:"varint,4,opt,name=rtime_unlocked,json=rtimeUnlocked" json:"rtime_unlocked,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CAchievementDetails) Reset() {
	*x = CAchievementDetails{}
	mi := &file_service_salefeature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CAchievementDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAchievementDetails) ProtoMessage() {}

func (x *CAchievementDetails) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAchievementDetails.ProtoReflect.Descriptor instead.
func (*CAchievementDetails) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{0}
}

func (x *CAchievementDetails) GetStatid() uint32 {
	if x != nil && x.Statid != nil {
		return *x.Statid
	}
	return 0
}

func (x *CAchievementDetails) GetFieldid() uint32 {
	if x != nil && x.Fieldid != nil {
		return *x.Fieldid
	}
	return 0
}

func (x *CAchievementDetails) GetAchievementNameInternal() string {
	if x != nil && x.AchievementNameInternal != nil {
		return *x.AchievementNameInternal
	}
	return ""
}

func (x *CAchievementDetails) GetRtimeUnlocked() uint32 {
	if x != nil && x.RtimeUnlocked != nil {
		return *x.RtimeUnlocked
	}
	return 0
}

type CFriendSharedYearInView struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Steamid          *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	PrivacyState     *int32                 `protobuf:"varint,3,opt,name=privacy_state,json=privacyState" json:"privacy_state,omitempty"`
	RtPrivacyUpdated *uint32                `protobuf:"varint,4,opt,name=rt_privacy_updated,json=rtPrivacyUpdated" json:"rt_privacy_updated,omitempty"`
	PrivacyOverride  *bool                  `protobuf:"varint,5,opt,name=privacy_override,json=privacyOverride" json:"privacy_override,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CFriendSharedYearInView) Reset() {
	*x = CFriendSharedYearInView{}
	mi := &file_service_salefeature_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CFriendSharedYearInView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CFriendSharedYearInView) ProtoMessage() {}

func (x *CFriendSharedYearInView) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CFriendSharedYearInView.ProtoReflect.Descriptor instead.
func (*CFriendSharedYearInView) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{1}
}

func (x *CFriendSharedYearInView) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CFriendSharedYearInView) GetPrivacyState() int32 {
	if x != nil && x.PrivacyState != nil {
		return *x.PrivacyState
	}
	return 0
}

func (x *CFriendSharedYearInView) GetRtPrivacyUpdated() uint32 {
	if x != nil && x.RtPrivacyUpdated != nil {
		return *x.RtPrivacyUpdated
	}
	return 0
}

func (x *CFriendSharedYearInView) GetPrivacyOverride() bool {
	if x != nil && x.PrivacyOverride != nil {
		return *x.PrivacyOverride
	}
	return false
}

type CGameAchievements struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Appid                       *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Achievements                []*CAchievementDetails `protobuf:"bytes,2,rep,name=achievements" json:"achievements,omitempty"`
	AllTimeUnlockedAchievements *uint32                `protobuf:"varint,3,opt,name=all_time_unlocked_achievements,json=allTimeUnlockedAchievements" json:"all_time_unlocked_achievements,omitempty"`
	UnlockedMoreInFuture        *bool                  `protobuf:"varint,4,opt,name=unlocked_more_in_future,json=unlockedMoreInFuture" json:"unlocked_more_in_future,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CGameAchievements) Reset() {
	*x = CGameAchievements{}
	mi := &file_service_salefeature_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameAchievements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameAchievements) ProtoMessage() {}

func (x *CGameAchievements) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameAchievements.ProtoReflect.Descriptor instead.
func (*CGameAchievements) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{2}
}

func (x *CGameAchievements) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CGameAchievements) GetAchievements() []*CAchievementDetails {
	if x != nil {
		return x.Achievements
	}
	return nil
}

func (x *CGameAchievements) GetAllTimeUnlockedAchievements() uint32 {
	if x != nil && x.AllTimeUnlockedAchievements != nil {
		return *x.AllTimeUnlockedAchievements
	}
	return 0
}

func (x *CGameAchievements) GetUnlockedMoreInFuture() bool {
	if x != nil && x.UnlockedMoreInFuture != nil {
		return *x.UnlockedMoreInFuture
	}
	return false
}

type CGamePlaytimeStats struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Appid             *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Stats             *CPlaytimeStats        `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
	PlaytimeStreak    *CPlaytimeStreak       `protobuf:"bytes,3,opt,name=playtime_streak,json=playtimeStreak" json:"playtime_streak,omitempty"`
	PlaytimeRanks     *CPlaytimeRanks        `protobuf:"bytes,4,opt,name=playtime_ranks,json=playtimeRanks" json:"playtime_ranks,omitempty"`
	RtimeFirstPlayed  *uint32                `protobuf:"varint,5,opt,name=rtime_first_played,json=rtimeFirstPlayed" json:"rtime_first_played,omitempty"`
	RelativeGameStats *CPlaytimeStats        `protobuf:"bytes,6,opt,name=relative_game_stats,json=relativeGameStats" json:"relative_game_stats,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CGamePlaytimeStats) Reset() {
	*x = CGamePlaytimeStats{}
	mi := &file_service_salefeature_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGamePlaytimeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGamePlaytimeStats) ProtoMessage() {}

func (x *CGamePlaytimeStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGamePlaytimeStats.ProtoReflect.Descriptor instead.
func (*CGamePlaytimeStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{3}
}

func (x *CGamePlaytimeStats) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CGamePlaytimeStats) GetStats() *CPlaytimeStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CGamePlaytimeStats) GetPlaytimeStreak() *CPlaytimeStreak {
	if x != nil {
		return x.PlaytimeStreak
	}
	return nil
}

func (x *CGamePlaytimeStats) GetPlaytimeRanks() *CPlaytimeRanks {
	if x != nil {
		return x.PlaytimeRanks
	}
	return nil
}

func (x *CGamePlaytimeStats) GetRtimeFirstPlayed() uint32 {
	if x != nil && x.RtimeFirstPlayed != nil {
		return *x.RtimeFirstPlayed
	}
	return 0
}

func (x *CGamePlaytimeStats) GetRelativeGameStats() *CPlaytimeStats {
	if x != nil {
		return x.RelativeGameStats
	}
	return nil
}

type CGameRank struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Appid                          *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Rank                           *uint32                `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	RelativePlaytimePercentagex100 *uint32                `protobuf:"varint,3,opt,name=relative_playtime_percentagex100,json=relativePlaytimePercentagex100" json:"relative_playtime_percentagex100,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *CGameRank) Reset() {
	*x = CGameRank{}
	mi := &file_service_salefeature_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRank) ProtoMessage() {}

func (x *CGameRank) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRank.ProtoReflect.Descriptor instead.
func (*CGameRank) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{4}
}

func (x *CGameRank) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CGameRank) GetRank() uint32 {
	if x != nil && x.Rank != nil {
		return *x.Rank
	}
	return 0
}

func (x *CGameRank) GetRelativePlaytimePercentagex100() uint32 {
	if x != nil && x.RelativePlaytimePercentagex100 != nil {
		return *x.RelativePlaytimePercentagex100
	}
	return 0
}

type CGameRankings struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OverallRanking    *CRankingCategory      `protobuf:"bytes,1,opt,name=overall_ranking,json=overallRanking" json:"overall_ranking,omitempty"`
	VrRanking         *CRankingCategory      `protobuf:"bytes,2,opt,name=vr_ranking,json=vrRanking" json:"vr_ranking,omitempty"`
	DeckRanking       *CRankingCategory      `protobuf:"bytes,3,opt,name=deck_ranking,json=deckRanking" json:"deck_ranking,omitempty"`
	ControllerRanking *CRankingCategory      `protobuf:"bytes,4,opt,name=controller_ranking,json=controllerRanking" json:"controller_ranking,omitempty"`
	LinuxRanking      *CRankingCategory      `protobuf:"bytes,5,opt,name=linux_ranking,json=linuxRanking" json:"linux_ranking,omitempty"`
	MacRanking        *CRankingCategory      `protobuf:"bytes,6,opt,name=mac_ranking,json=macRanking" json:"mac_ranking,omitempty"`
	WindowsRanking    *CRankingCategory      `protobuf:"bytes,7,opt,name=windows_ranking,json=windowsRanking" json:"windows_ranking,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CGameRankings) Reset() {
	*x = CGameRankings{}
	mi := &file_service_salefeature_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRankings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRankings) ProtoMessage() {}

func (x *CGameRankings) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRankings.ProtoReflect.Descriptor instead.
func (*CGameRankings) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{5}
}

func (x *CGameRankings) GetOverallRanking() *CRankingCategory {
	if x != nil {
		return x.OverallRanking
	}
	return nil
}

func (x *CGameRankings) GetVrRanking() *CRankingCategory {
	if x != nil {
		return x.VrRanking
	}
	return nil
}

func (x *CGameRankings) GetDeckRanking() *CRankingCategory {
	if x != nil {
		return x.DeckRanking
	}
	return nil
}

func (x *CGameRankings) GetControllerRanking() *CRankingCategory {
	if x != nil {
		return x.ControllerRanking
	}
	return nil
}

func (x *CGameRankings) GetLinuxRanking() *CRankingCategory {
	if x != nil {
		return x.LinuxRanking
	}
	return nil
}

func (x *CGameRankings) GetMacRanking() *CRankingCategory {
	if x != nil {
		return x.MacRanking
	}
	return nil
}

func (x *CGameRankings) GetWindowsRanking() *CRankingCategory {
	if x != nil {
		return x.WindowsRanking
	}
	return nil
}

type CGameSummary struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Appid                       *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	NewThisYear                 *bool                  `protobuf:"varint,2,opt,name=new_this_year,json=newThisYear" json:"new_this_year,omitempty"`
	RtimeFirstPlayedLifetime    *uint32                `protobuf:"varint,3,opt,name=rtime_first_played_lifetime,json=rtimeFirstPlayedLifetime" json:"rtime_first_played_lifetime,omitempty"`
	Demo                        *bool                  `protobuf:"varint,4,opt,name=demo" json:"demo,omitempty"`
	Playtest                    *bool                  `protobuf:"varint,5,opt,name=playtest" json:"playtest,omitempty"`
	PlayedDuringEarlyAccess     *bool                  `protobuf:"varint,6,opt,name=played_during_early_access,json=playedDuringEarlyAccess" json:"played_during_early_access,omitempty"`
	PlayedVr                    *bool                  `protobuf:"varint,7,opt,name=played_vr,json=playedVr" json:"played_vr,omitempty"`
	PlayedDeck                  *bool                  `protobuf:"varint,8,opt,name=played_deck,json=playedDeck" json:"played_deck,omitempty"`
	PlayedController            *bool                  `protobuf:"varint,9,opt,name=played_controller,json=playedController" json:"played_controller,omitempty"`
	PlayedLinux                 *bool                  `protobuf:"varint,10,opt,name=played_linux,json=playedLinux" json:"played_linux,omitempty"`
	PlayedMac                   *bool                  `protobuf:"varint,11,opt,name=played_mac,json=playedMac" json:"played_mac,omitempty"`
	PlayedWindows               *bool                  `protobuf:"varint,12,opt,name=played_windows,json=playedWindows" json:"played_windows,omitempty"`
	TotalPlaytimePercentagex100 *uint32                `protobuf:"varint,13,opt,name=total_playtime_percentagex100,json=totalPlaytimePercentagex100" json:"total_playtime_percentagex100,omitempty"`
	TotalSessions               *uint32                `protobuf:"varint,14,opt,name=total_sessions,json=totalSessions" json:"total_sessions,omitempty"`
	RtimeReleaseDate            *uint32                `protobuf:"varint,15,opt,name=rtime_release_date,json=rtimeReleaseDate" json:"rtime_release_date,omitempty"`
	ParentAppid                 *uint32                `protobuf:"varint,16,opt,name=parent_appid,json=parentAppid" json:"parent_appid,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CGameSummary) Reset() {
	*x = CGameSummary{}
	mi := &file_service_salefeature_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameSummary) ProtoMessage() {}

func (x *CGameSummary) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameSummary.ProtoReflect.Descriptor instead.
func (*CGameSummary) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{6}
}

func (x *CGameSummary) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CGameSummary) GetNewThisYear() bool {
	if x != nil && x.NewThisYear != nil {
		return *x.NewThisYear
	}
	return false
}

func (x *CGameSummary) GetRtimeFirstPlayedLifetime() uint32 {
	if x != nil && x.RtimeFirstPlayedLifetime != nil {
		return *x.RtimeFirstPlayedLifetime
	}
	return 0
}

func (x *CGameSummary) GetDemo() bool {
	if x != nil && x.Demo != nil {
		return *x.Demo
	}
	return false
}

func (x *CGameSummary) GetPlaytest() bool {
	if x != nil && x.Playtest != nil {
		return *x.Playtest
	}
	return false
}

func (x *CGameSummary) GetPlayedDuringEarlyAccess() bool {
	if x != nil && x.PlayedDuringEarlyAccess != nil {
		return *x.PlayedDuringEarlyAccess
	}
	return false
}

func (x *CGameSummary) GetPlayedVr() bool {
	if x != nil && x.PlayedVr != nil {
		return *x.PlayedVr
	}
	return false
}

func (x *CGameSummary) GetPlayedDeck() bool {
	if x != nil && x.PlayedDeck != nil {
		return *x.PlayedDeck
	}
	return false
}

func (x *CGameSummary) GetPlayedController() bool {
	if x != nil && x.PlayedController != nil {
		return *x.PlayedController
	}
	return false
}

func (x *CGameSummary) GetPlayedLinux() bool {
	if x != nil && x.PlayedLinux != nil {
		return *x.PlayedLinux
	}
	return false
}

func (x *CGameSummary) GetPlayedMac() bool {
	if x != nil && x.PlayedMac != nil {
		return *x.PlayedMac
	}
	return false
}

func (x *CGameSummary) GetPlayedWindows() bool {
	if x != nil && x.PlayedWindows != nil {
		return *x.PlayedWindows
	}
	return false
}

func (x *CGameSummary) GetTotalPlaytimePercentagex100() uint32 {
	if x != nil && x.TotalPlaytimePercentagex100 != nil {
		return *x.TotalPlaytimePercentagex100
	}
	return 0
}

func (x *CGameSummary) GetTotalSessions() uint32 {
	if x != nil && x.TotalSessions != nil {
		return *x.TotalSessions
	}
	return 0
}

func (x *CGameSummary) GetRtimeReleaseDate() uint32 {
	if x != nil && x.RtimeReleaseDate != nil {
		return *x.RtimeReleaseDate
	}
	return 0
}

func (x *CGameSummary) GetParentAppid() uint32 {
	if x != nil && x.ParentAppid != nil {
		return *x.ParentAppid
	}
	return 0
}

type CGlobalPercentiles struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MedianAchievements *uint32                `protobuf:"varint,1,opt,name=median_achievements,json=medianAchievements" json:"median_achievements,omitempty"`
	MedianGames        *uint32                `protobuf:"varint,2,opt,name=median_games,json=medianGames" json:"median_games,omitempty"`
	MedianStreak       *uint32                `protobuf:"varint,3,opt,name=median_streak,json=medianStreak" json:"median_streak,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CGlobalPercentiles) Reset() {
	*x = CGlobalPercentiles{}
	mi := &file_service_salefeature_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGlobalPercentiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGlobalPercentiles) ProtoMessage() {}

func (x *CGlobalPercentiles) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGlobalPercentiles.ProtoReflect.Descriptor instead.
func (*CGlobalPercentiles) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{7}
}

func (x *CGlobalPercentiles) GetMedianAchievements() uint32 {
	if x != nil && x.MedianAchievements != nil {
		return *x.MedianAchievements
	}
	return 0
}

func (x *CGlobalPercentiles) GetMedianGames() uint32 {
	if x != nil && x.MedianGames != nil {
		return *x.MedianGames
	}
	return 0
}

func (x *CGlobalPercentiles) GetMedianStreak() uint32 {
	if x != nil && x.MedianStreak != nil {
		return *x.MedianStreak
	}
	return 0
}

type CGlobalPlaytimeDistribution struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NewReleases      *uint32                `protobuf:"varint,1,opt,name=new_releases,json=newReleases" json:"new_releases,omitempty"`
	RecentReleases   *uint32                `protobuf:"varint,2,opt,name=recent_releases,json=recentReleases" json:"recent_releases,omitempty"`
	ClassicReleases  *uint32                `protobuf:"varint,3,opt,name=classic_releases,json=classicReleases" json:"classic_releases,omitempty"`
	RecentCutoffYear *uint32                `protobuf:"varint,4,opt,name=recent_cutoff_year,json=recentCutoffYear" json:"recent_cutoff_year,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CGlobalPlaytimeDistribution) Reset() {
	*x = CGlobalPlaytimeDistribution{}
	mi := &file_service_salefeature_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGlobalPlaytimeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGlobalPlaytimeDistribution) ProtoMessage() {}

func (x *CGlobalPlaytimeDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGlobalPlaytimeDistribution.ProtoReflect.Descriptor instead.
func (*CGlobalPlaytimeDistribution) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{8}
}

func (x *CGlobalPlaytimeDistribution) GetNewReleases() uint32 {
	if x != nil && x.NewReleases != nil {
		return *x.NewReleases
	}
	return 0
}

func (x *CGlobalPlaytimeDistribution) GetRecentReleases() uint32 {
	if x != nil && x.RecentReleases != nil {
		return *x.RecentReleases
	}
	return 0
}

func (x *CGlobalPlaytimeDistribution) GetClassicReleases() uint32 {
	if x != nil && x.ClassicReleases != nil {
		return *x.ClassicReleases
	}
	return 0
}

func (x *CGlobalPlaytimeDistribution) GetRecentCutoffYear() uint32 {
	if x != nil && x.RecentCutoffYear != nil {
		return *x.RecentCutoffYear
	}
	return 0
}

type CMonthlyPlaytimeStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	RtimeMonth           *uint32                `protobuf:"varint,1,opt,name=rtime_month,json=rtimeMonth" json:"rtime_month,omitempty"`
	Stats                *CPlaytimeStats        `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
	Appid                []*CGamePlaytimeStats  `protobuf:"bytes,4,rep,name=appid" json:"appid,omitempty"`
	RelativeMonthlyStats *CPlaytimeStats        `protobuf:"bytes,5,opt,name=relative_monthly_stats,json=relativeMonthlyStats" json:"relative_monthly_stats,omitempty"`
	GameSummary          []*CSimpleGameSummary  `protobuf:"bytes,6,rep,name=game_summary,json=gameSummary" json:"game_summary,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CMonthlyPlaytimeStats) Reset() {
	*x = CMonthlyPlaytimeStats{}
	mi := &file_service_salefeature_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMonthlyPlaytimeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMonthlyPlaytimeStats) ProtoMessage() {}

func (x *CMonthlyPlaytimeStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMonthlyPlaytimeStats.ProtoReflect.Descriptor instead.
func (*CMonthlyPlaytimeStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{9}
}

func (x *CMonthlyPlaytimeStats) GetRtimeMonth() uint32 {
	if x != nil && x.RtimeMonth != nil {
		return *x.RtimeMonth
	}
	return 0
}

func (x *CMonthlyPlaytimeStats) GetStats() *CPlaytimeStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CMonthlyPlaytimeStats) GetAppid() []*CGamePlaytimeStats {
	if x != nil {
		return x.Appid
	}
	return nil
}

func (x *CMonthlyPlaytimeStats) GetRelativeMonthlyStats() *CPlaytimeStats {
	if x != nil {
		return x.RelativeMonthlyStats
	}
	return nil
}

func (x *CMonthlyPlaytimeStats) GetGameSummary() []*CSimpleGameSummary {
	if x != nil {
		return x.GameSummary
	}
	return nil
}

type CPlaytimeByNumbers struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ScreenshotsShared     *uint32                `protobuf:"varint,1,opt,name=screenshots_shared,json=screenshotsShared" json:"screenshots_shared,omitempty"`
	GiftsSent             *uint32                `protobuf:"varint,2,opt,name=gifts_sent,json=giftsSent" json:"gifts_sent,omitempty"`
	LoyaltyReactions      *uint32                `protobuf:"varint,3,opt,name=loyalty_reactions,json=loyaltyReactions" json:"loyalty_reactions,omitempty"`
	WrittenReviews        *uint32                `protobuf:"varint,4,opt,name=written_reviews,json=writtenReviews" json:"written_reviews,omitempty"`
	GuidesSubmitted       *uint32                `protobuf:"varint,5,opt,name=guides_submitted,json=guidesSubmitted" json:"guides_submitted,omitempty"`
	WorkshopContributions *uint32                `protobuf:"varint,6,opt,name=workshop_contributions,json=workshopContributions" json:"workshop_contributions,omitempty"`
	BadgesEarned          *uint32                `protobuf:"varint,7,opt,name=badges_earned,json=badgesEarned" json:"badges_earned,omitempty"`
	FriendsAdded          *uint32                `protobuf:"varint,8,opt,name=friends_added,json=friendsAdded" json:"friends_added,omitempty"`
	ForumPosts            *uint32                `protobuf:"varint,9,opt,name=forum_posts,json=forumPosts" json:"forum_posts,omitempty"`
	WorkshopSubscriptions *uint32                `protobuf:"varint,10,opt,name=workshop_subscriptions,json=workshopSubscriptions" json:"workshop_subscriptions,omitempty"`
	GuideSubscribers      *uint32                `protobuf:"varint,11,opt,name=guide_subscribers,json=guideSubscribers" json:"guide_subscribers,omitempty"`
	WorkshopSubscribers   *uint32                `protobuf:"varint,12,opt,name=workshop_subscribers,json=workshopSubscribers" json:"workshop_subscribers,omitempty"`
	GamesPlayedPct        *uint32                `protobuf:"varint,13,opt,name=games_played_pct,json=gamesPlayedPct" json:"games_played_pct,omitempty"`
	AchievementsPct       *uint32                `protobuf:"varint,14,opt,name=achievements_pct,json=achievementsPct" json:"achievements_pct,omitempty"`
	GameStreakPct         *uint32                `protobuf:"varint,15,opt,name=game_streak_pct,json=gameStreakPct" json:"game_streak_pct,omitempty"`
	GamesPlayedAvg        *uint32                `protobuf:"varint,16,opt,name=games_played_avg,json=gamesPlayedAvg" json:"games_played_avg,omitempty"`
	AchievementsAvg       *uint32                `protobuf:"varint,17,opt,name=achievements_avg,json=achievementsAvg" json:"achievements_avg,omitempty"`
	GameStreakAvg         *uint32                `protobuf:"varint,18,opt,name=game_streak_avg,json=gameStreakAvg" json:"game_streak_avg,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CPlaytimeByNumbers) Reset() {
	*x = CPlaytimeByNumbers{}
	mi := &file_service_salefeature_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytimeByNumbers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytimeByNumbers) ProtoMessage() {}

func (x *CPlaytimeByNumbers) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytimeByNumbers.ProtoReflect.Descriptor instead.
func (*CPlaytimeByNumbers) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{10}
}

func (x *CPlaytimeByNumbers) GetScreenshotsShared() uint32 {
	if x != nil && x.ScreenshotsShared != nil {
		return *x.ScreenshotsShared
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGiftsSent() uint32 {
	if x != nil && x.GiftsSent != nil {
		return *x.GiftsSent
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetLoyaltyReactions() uint32 {
	if x != nil && x.LoyaltyReactions != nil {
		return *x.LoyaltyReactions
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetWrittenReviews() uint32 {
	if x != nil && x.WrittenReviews != nil {
		return *x.WrittenReviews
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGuidesSubmitted() uint32 {
	if x != nil && x.GuidesSubmitted != nil {
		return *x.GuidesSubmitted
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetWorkshopContributions() uint32 {
	if x != nil && x.WorkshopContributions != nil {
		return *x.WorkshopContributions
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetBadgesEarned() uint32 {
	if x != nil && x.BadgesEarned != nil {
		return *x.BadgesEarned
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetFriendsAdded() uint32 {
	if x != nil && x.FriendsAdded != nil {
		return *x.FriendsAdded
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetForumPosts() uint32 {
	if x != nil && x.ForumPosts != nil {
		return *x.ForumPosts
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetWorkshopSubscriptions() uint32 {
	if x != nil && x.WorkshopSubscriptions != nil {
		return *x.WorkshopSubscriptions
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGuideSubscribers() uint32 {
	if x != nil && x.GuideSubscribers != nil {
		return *x.GuideSubscribers
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetWorkshopSubscribers() uint32 {
	if x != nil && x.WorkshopSubscribers != nil {
		return *x.WorkshopSubscribers
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGamesPlayedPct() uint32 {
	if x != nil && x.GamesPlayedPct != nil {
		return *x.GamesPlayedPct
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetAchievementsPct() uint32 {
	if x != nil && x.AchievementsPct != nil {
		return *x.AchievementsPct
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGameStreakPct() uint32 {
	if x != nil && x.GameStreakPct != nil {
		return *x.GameStreakPct
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGamesPlayedAvg() uint32 {
	if x != nil && x.GamesPlayedAvg != nil {
		return *x.GamesPlayedAvg
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetAchievementsAvg() uint32 {
	if x != nil && x.AchievementsAvg != nil {
		return *x.AchievementsAvg
	}
	return 0
}

func (x *CPlaytimeByNumbers) GetGameStreakAvg() uint32 {
	if x != nil && x.GameStreakAvg != nil {
		return *x.GameStreakAvg
	}
	return 0
}

type CPlaytimeRanks struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OverallRank    *uint32                `protobuf:"varint,1,opt,name=overall_rank,json=overallRank" json:"overall_rank,omitempty"`
	VrRank         *uint32                `protobuf:"varint,2,opt,name=vr_rank,json=vrRank" json:"vr_rank,omitempty"`
	DeckRank       *uint32                `protobuf:"varint,3,opt,name=deck_rank,json=deckRank" json:"deck_rank,omitempty"`
	ControllerRank *uint32                `protobuf:"varint,4,opt,name=controller_rank,json=controllerRank" json:"controller_rank,omitempty"`
	LinuxRank      *uint32                `protobuf:"varint,5,opt,name=linux_rank,json=linuxRank" json:"linux_rank,omitempty"`
	MacRank        *uint32                `protobuf:"varint,6,opt,name=mac_rank,json=macRank" json:"mac_rank,omitempty"`
	WindowsRank    *uint32                `protobuf:"varint,7,opt,name=windows_rank,json=windowsRank" json:"windows_rank,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CPlaytimeRanks) Reset() {
	*x = CPlaytimeRanks{}
	mi := &file_service_salefeature_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytimeRanks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytimeRanks) ProtoMessage() {}

func (x *CPlaytimeRanks) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytimeRanks.ProtoReflect.Descriptor instead.
func (*CPlaytimeRanks) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{11}
}

func (x *CPlaytimeRanks) GetOverallRank() uint32 {
	if x != nil && x.OverallRank != nil {
		return *x.OverallRank
	}
	return 0
}

func (x *CPlaytimeRanks) GetVrRank() uint32 {
	if x != nil && x.VrRank != nil {
		return *x.VrRank
	}
	return 0
}

func (x *CPlaytimeRanks) GetDeckRank() uint32 {
	if x != nil && x.DeckRank != nil {
		return *x.DeckRank
	}
	return 0
}

func (x *CPlaytimeRanks) GetControllerRank() uint32 {
	if x != nil && x.ControllerRank != nil {
		return *x.ControllerRank
	}
	return 0
}

func (x *CPlaytimeRanks) GetLinuxRank() uint32 {
	if x != nil && x.LinuxRank != nil {
		return *x.LinuxRank
	}
	return 0
}

func (x *CPlaytimeRanks) GetMacRank() uint32 {
	if x != nil && x.MacRank != nil {
		return *x.MacRank
	}
	return 0
}

func (x *CPlaytimeRanks) GetWindowsRank() uint32 {
	if x != nil && x.WindowsRank != nil {
		return *x.WindowsRank
	}
	return 0
}

type CPlaytimeStats struct {
	state                            protoimpl.MessageState `protogen:"open.v1"`
	TotalPlaytimeSeconds             *uint32                `protobuf:"varint,1,opt,name=total_playtime_seconds,json=totalPlaytimeSeconds" json:"total_playtime_seconds,omitempty"`
	TotalSessions                    *uint32                `protobuf:"varint,20,opt,name=total_sessions,json=totalSessions" json:"total_sessions,omitempty"`
	VrSessions                       *uint32                `protobuf:"varint,21,opt,name=vr_sessions,json=vrSessions" json:"vr_sessions,omitempty"`
	DeckSessions                     *uint32                `protobuf:"varint,22,opt,name=deck_sessions,json=deckSessions" json:"deck_sessions,omitempty"`
	ControllerSessions               *uint32                `protobuf:"varint,23,opt,name=controller_sessions,json=controllerSessions" json:"controller_sessions,omitempty"`
	LinuxSessions                    *uint32                `protobuf:"varint,24,opt,name=linux_sessions,json=linuxSessions" json:"linux_sessions,omitempty"`
	MacosSessions                    *uint32                `protobuf:"varint,25,opt,name=macos_sessions,json=macosSessions" json:"macos_sessions,omitempty"`
	WindowsSessions                  *uint32                `protobuf:"varint,26,opt,name=windows_sessions,json=windowsSessions" json:"windows_sessions,omitempty"`
	TotalPlaytimePercentagex100      *uint32                `protobuf:"varint,27,opt,name=total_playtime_percentagex100,json=totalPlaytimePercentagex100" json:"total_playtime_percentagex100,omitempty"`
	VrPlaytimePercentagex100         *uint32                `protobuf:"varint,28,opt,name=vr_playtime_percentagex100,json=vrPlaytimePercentagex100" json:"vr_playtime_percentagex100,omitempty"`
	DeckPlaytimePercentagex100       *uint32                `protobuf:"varint,29,opt,name=deck_playtime_percentagex100,json=deckPlaytimePercentagex100" json:"deck_playtime_percentagex100,omitempty"`
	ControllerPlaytimePercentagex100 *uint32                `protobuf:"varint,30,opt,name=controller_playtime_percentagex100,json=controllerPlaytimePercentagex100" json:"controller_playtime_percentagex100,omitempty"`
	LinuxPlaytimePercentagex100      *uint32                `protobuf:"varint,31,opt,name=linux_playtime_percentagex100,json=linuxPlaytimePercentagex100" json:"linux_playtime_percentagex100,omitempty"`
	MacosPlaytimePercentagex100      *uint32                `protobuf:"varint,32,opt,name=macos_playtime_percentagex100,json=macosPlaytimePercentagex100" json:"macos_playtime_percentagex100,omitempty"`
	WindowsPlaytimePercentagex100    *uint32                `protobuf:"varint,33,opt,name=windows_playtime_percentagex100,json=windowsPlaytimePercentagex100" json:"windows_playtime_percentagex100,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *CPlaytimeStats) Reset() {
	*x = CPlaytimeStats{}
	mi := &file_service_salefeature_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytimeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytimeStats) ProtoMessage() {}

func (x *CPlaytimeStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytimeStats.ProtoReflect.Descriptor instead.
func (*CPlaytimeStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{12}
}

func (x *CPlaytimeStats) GetTotalPlaytimeSeconds() uint32 {
	if x != nil && x.TotalPlaytimeSeconds != nil {
		return *x.TotalPlaytimeSeconds
	}
	return 0
}

func (x *CPlaytimeStats) GetTotalSessions() uint32 {
	if x != nil && x.TotalSessions != nil {
		return *x.TotalSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetVrSessions() uint32 {
	if x != nil && x.VrSessions != nil {
		return *x.VrSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetDeckSessions() uint32 {
	if x != nil && x.DeckSessions != nil {
		return *x.DeckSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetControllerSessions() uint32 {
	if x != nil && x.ControllerSessions != nil {
		return *x.ControllerSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetLinuxSessions() uint32 {
	if x != nil && x.LinuxSessions != nil {
		return *x.LinuxSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetMacosSessions() uint32 {
	if x != nil && x.MacosSessions != nil {
		return *x.MacosSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetWindowsSessions() uint32 {
	if x != nil && x.WindowsSessions != nil {
		return *x.WindowsSessions
	}
	return 0
}

func (x *CPlaytimeStats) GetTotalPlaytimePercentagex100() uint32 {
	if x != nil && x.TotalPlaytimePercentagex100 != nil {
		return *x.TotalPlaytimePercentagex100
	}
	return 0
}

func (x *CPlaytimeStats) GetVrPlaytimePercentagex100() uint32 {
	if x != nil && x.VrPlaytimePercentagex100 != nil {
		return *x.VrPlaytimePercentagex100
	}
	return 0
}

func (x *CPlaytimeStats) GetDeckPlaytimePercentagex100() uint32 {
	if x != nil && x.DeckPlaytimePercentagex100 != nil {
		return *x.DeckPlaytimePercentagex100
	}
	return 0
}

func (x *CPlaytimeStats) GetControllerPlaytimePercentagex100() uint32 {
	if x != nil && x.ControllerPlaytimePercentagex100 != nil {
		return *x.ControllerPlaytimePercentagex100
	}
	return 0
}

func (x *CPlaytimeStats) GetLinuxPlaytimePercentagex100() uint32 {
	if x != nil && x.LinuxPlaytimePercentagex100 != nil {
		return *x.LinuxPlaytimePercentagex100
	}
	return 0
}

func (x *CPlaytimeStats) GetMacosPlaytimePercentagex100() uint32 {
	if x != nil && x.MacosPlaytimePercentagex100 != nil {
		return *x.MacosPlaytimePercentagex100
	}
	return 0
}

func (x *CPlaytimeStats) GetWindowsPlaytimePercentagex100() uint32 {
	if x != nil && x.WindowsPlaytimePercentagex100 != nil {
		return *x.WindowsPlaytimePercentagex100
	}
	return 0
}

type CPlaytimeStreak struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	LongestConsecutiveDays *uint32                `protobuf:"varint,1,opt,name=longest_consecutive_days,json=longestConsecutiveDays" json:"longest_consecutive_days,omitempty"`
	RtimeStart             *uint32                `protobuf:"varint,2,opt,name=rtime_start,json=rtimeStart" json:"rtime_start,omitempty"`
	StreakGames            []*CPlaytimeStreakGame `protobuf:"bytes,3,rep,name=streak_games,json=streakGames" json:"streak_games,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CPlaytimeStreak) Reset() {
	*x = CPlaytimeStreak{}
	mi := &file_service_salefeature_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytimeStreak) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytimeStreak) ProtoMessage() {}

func (x *CPlaytimeStreak) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytimeStreak.ProtoReflect.Descriptor instead.
func (*CPlaytimeStreak) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{13}
}

func (x *CPlaytimeStreak) GetLongestConsecutiveDays() uint32 {
	if x != nil && x.LongestConsecutiveDays != nil {
		return *x.LongestConsecutiveDays
	}
	return 0
}

func (x *CPlaytimeStreak) GetRtimeStart() uint32 {
	if x != nil && x.RtimeStart != nil {
		return *x.RtimeStart
	}
	return 0
}

func (x *CPlaytimeStreak) GetStreakGames() []*CPlaytimeStreakGame {
	if x != nil {
		return x.StreakGames
	}
	return nil
}

type CPlaytimeStreakGame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPlaytimeStreakGame) Reset() {
	*x = CPlaytimeStreakGame{}
	mi := &file_service_salefeature_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPlaytimeStreakGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPlaytimeStreakGame) ProtoMessage() {}

func (x *CPlaytimeStreakGame) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPlaytimeStreakGame.ProtoReflect.Descriptor instead.
func (*CPlaytimeStreakGame) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{14}
}

func (x *CPlaytimeStreakGame) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CPreviousYIRSummaryData struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	GamesPlayed          *uint32                `protobuf:"varint,1,opt,name=games_played,json=gamesPlayed" json:"games_played,omitempty"`
	UnlockedAchievements *uint32                `protobuf:"varint,2,opt,name=unlocked_achievements,json=unlockedAchievements" json:"unlocked_achievements,omitempty"`
	LongestStreak        *uint32                `protobuf:"varint,3,opt,name=longest_streak,json=longestStreak" json:"longest_streak,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CPreviousYIRSummaryData) Reset() {
	*x = CPreviousYIRSummaryData{}
	mi := &file_service_salefeature_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPreviousYIRSummaryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPreviousYIRSummaryData) ProtoMessage() {}

func (x *CPreviousYIRSummaryData) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPreviousYIRSummaryData.ProtoReflect.Descriptor instead.
func (*CPreviousYIRSummaryData) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{15}
}

func (x *CPreviousYIRSummaryData) GetGamesPlayed() uint32 {
	if x != nil && x.GamesPlayed != nil {
		return *x.GamesPlayed
	}
	return 0
}

func (x *CPreviousYIRSummaryData) GetUnlockedAchievements() uint32 {
	if x != nil && x.UnlockedAchievements != nil {
		return *x.UnlockedAchievements
	}
	return 0
}

func (x *CPreviousYIRSummaryData) GetLongestStreak() uint32 {
	if x != nil && x.LongestStreak != nil {
		return *x.LongestStreak
	}
	return 0
}

type CRankingCategory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      *string                `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Rankings      []*CGameRank           `protobuf:"bytes,2,rep,name=rankings" json:"rankings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CRankingCategory) Reset() {
	*x = CRankingCategory{}
	mi := &file_service_salefeature_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CRankingCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CRankingCategory) ProtoMessage() {}

func (x *CRankingCategory) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CRankingCategory.ProtoReflect.Descriptor instead.
func (*CRankingCategory) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{16}
}

func (x *CRankingCategory) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *CRankingCategory) GetRankings() []*CGameRank {
	if x != nil {
		return x.Rankings
	}
	return nil
}

type CSaleFeature_GetAllUserActionDataForType_Request struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Gid              *uint64                `protobuf:"fixed64,1,opt,name=gid" json:"gid,omitempty"`
	Type             *int32                 `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Count            *uint32                `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	LastAccountIndex *uint32                `protobuf:"varint,4,opt,name=last_account_index,json=lastAccountIndex" json:"last_account_index,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) Reset() {
	*x = CSaleFeature_GetAllUserActionDataForType_Request{}
	mi := &file_service_salefeature_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetAllUserActionDataForType_Request) ProtoMessage() {}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetAllUserActionDataForType_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetAllUserActionDataForType_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{17}
}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CSaleFeature_GetAllUserActionDataForType_Request) GetLastAccountIndex() uint32 {
	if x != nil && x.LastAccountIndex != nil {
		return *x.LastAccountIndex
	}
	return 0
}

type CSaleFeature_GetAllUserActionDataForType_Response struct {
	state            protoimpl.MessageState                                     `protogen:"open.v1"`
	Entries          []*CSaleFeature_GetAllUserActionDataForType_Response_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	LastAccountIndex *uint32                                                    `protobuf:"varint,2,opt,name=last_account_index,json=lastAccountIndex" json:"last_account_index,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response) Reset() {
	*x = CSaleFeature_GetAllUserActionDataForType_Response{}
	mi := &file_service_salefeature_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetAllUserActionDataForType_Response) ProtoMessage() {}

func (x *CSaleFeature_GetAllUserActionDataForType_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetAllUserActionDataForType_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetAllUserActionDataForType_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{18}
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response) GetEntries() []*CSaleFeature_GetAllUserActionDataForType_Response_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response) GetLastAccountIndex() uint32 {
	if x != nil && x.LastAccountIndex != nil {
		return *x.LastAccountIndex
	}
	return 0
}

type CSaleFeature_GetAllUserActionDataForType_Response_Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           *uint64                `protobuf:"fixed64,1,opt,name=gid" json:"gid,omitempty"`
	Jsondata      *string                `protobuf:"bytes,2,opt,name=jsondata" json:"jsondata,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response_Entry) Reset() {
	*x = CSaleFeature_GetAllUserActionDataForType_Response_Entry{}
	mi := &file_service_salefeature_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetAllUserActionDataForType_Response_Entry) ProtoMessage() {}

func (x *CSaleFeature_GetAllUserActionDataForType_Response_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetAllUserActionDataForType_Response_Entry.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetAllUserActionDataForType_Response_Entry) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{19}
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response_Entry) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response_Entry) GetJsondata() string {
	if x != nil && x.Jsondata != nil {
		return *x.Jsondata
	}
	return ""
}

func (x *CSaleFeature_GetAllUserActionDataForType_Response_Entry) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CSaleFeature_GetFriendsSharedYearInReview_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	ReturnPrivate *bool                  `protobuf:"varint,3,opt,name=return_private,json=returnPrivate" json:"return_private,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Request) Reset() {
	*x = CSaleFeature_GetFriendsSharedYearInReview_Request{}
	mi := &file_service_salefeature_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetFriendsSharedYearInReview_Request) ProtoMessage() {}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetFriendsSharedYearInReview_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetFriendsSharedYearInReview_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{20}
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Request) GetReturnPrivate() bool {
	if x != nil && x.ReturnPrivate != nil {
		return *x.ReturnPrivate
	}
	return false
}

type CSaleFeature_GetFriendsSharedYearInReview_Response struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	FriendShares  []*CFriendSharedYearInView `protobuf:"bytes,1,rep,name=friend_shares,json=friendShares" json:"friend_shares,omitempty"`
	Year          *uint32                    `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Response) Reset() {
	*x = CSaleFeature_GetFriendsSharedYearInReview_Response{}
	mi := &file_service_salefeature_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetFriendsSharedYearInReview_Response) ProtoMessage() {}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetFriendsSharedYearInReview_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetFriendsSharedYearInReview_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{21}
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Response) GetFriendShares() []*CFriendSharedYearInView {
	if x != nil {
		return x.FriendShares
	}
	return nil
}

func (x *CSaleFeature_GetFriendsSharedYearInReview_Response) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

type CSaleFeature_GetMultipleUserActionData_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Gids          []uint64               `protobuf:"fixed64,2,rep,name=gids" json:"gids,omitempty"`
	Type          *int32                 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetMultipleUserActionData_Request) Reset() {
	*x = CSaleFeature_GetMultipleUserActionData_Request{}
	mi := &file_service_salefeature_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetMultipleUserActionData_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetMultipleUserActionData_Request) ProtoMessage() {}

func (x *CSaleFeature_GetMultipleUserActionData_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetMultipleUserActionData_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetMultipleUserActionData_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{22}
}

func (x *CSaleFeature_GetMultipleUserActionData_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetMultipleUserActionData_Request) GetGids() []uint64 {
	if x != nil {
		return x.Gids
	}
	return nil
}

func (x *CSaleFeature_GetMultipleUserActionData_Request) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type CSaleFeature_GetMultipleUserActionData_Response struct {
	state         protoimpl.MessageState                                   `protogen:"open.v1"`
	Entries       []*CSaleFeature_GetMultipleUserActionData_Response_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetMultipleUserActionData_Response) Reset() {
	*x = CSaleFeature_GetMultipleUserActionData_Response{}
	mi := &file_service_salefeature_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetMultipleUserActionData_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetMultipleUserActionData_Response) ProtoMessage() {}

func (x *CSaleFeature_GetMultipleUserActionData_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetMultipleUserActionData_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetMultipleUserActionData_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{23}
}

func (x *CSaleFeature_GetMultipleUserActionData_Response) GetEntries() []*CSaleFeature_GetMultipleUserActionData_Response_Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type CSaleFeature_GetMultipleUserActionData_Response_Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           *uint64                `protobuf:"fixed64,1,opt,name=gid" json:"gid,omitempty"`
	Jsondata      *string                `protobuf:"bytes,2,opt,name=jsondata" json:"jsondata,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetMultipleUserActionData_Response_Entry) Reset() {
	*x = CSaleFeature_GetMultipleUserActionData_Response_Entry{}
	mi := &file_service_salefeature_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetMultipleUserActionData_Response_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetMultipleUserActionData_Response_Entry) ProtoMessage() {}

func (x *CSaleFeature_GetMultipleUserActionData_Response_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetMultipleUserActionData_Response_Entry.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetMultipleUserActionData_Response_Entry) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{24}
}

func (x *CSaleFeature_GetMultipleUserActionData_Response_Entry) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *CSaleFeature_GetMultipleUserActionData_Response_Entry) GetJsondata() string {
	if x != nil && x.Jsondata != nil {
		return *x.Jsondata
	}
	return ""
}

func (x *CSaleFeature_GetMultipleUserActionData_Response_Entry) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CSaleFeature_GetUserActionData_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Gid           *uint64                `protobuf:"fixed64,2,opt,name=gid" json:"gid,omitempty"`
	Type          *int32                 `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserActionData_Request) Reset() {
	*x = CSaleFeature_GetUserActionData_Request{}
	mi := &file_service_salefeature_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserActionData_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserActionData_Request) ProtoMessage() {}

func (x *CSaleFeature_GetUserActionData_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserActionData_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserActionData_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{25}
}

func (x *CSaleFeature_GetUserActionData_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserActionData_Request) GetGid() uint64 {
	if x != nil && x.Gid != nil {
		return *x.Gid
	}
	return 0
}

func (x *CSaleFeature_GetUserActionData_Request) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type CSaleFeature_GetUserActionData_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jsondata      *string                `protobuf:"bytes,1,opt,name=jsondata" json:"jsondata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserActionData_Response) Reset() {
	*x = CSaleFeature_GetUserActionData_Response{}
	mi := &file_service_salefeature_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserActionData_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserActionData_Response) ProtoMessage() {}

func (x *CSaleFeature_GetUserActionData_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserActionData_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserActionData_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{26}
}

func (x *CSaleFeature_GetUserActionData_Response) GetJsondata() string {
	if x != nil && x.Jsondata != nil {
		return *x.Jsondata
	}
	return ""
}

type CSaleFeature_GetUserSharingPermissions_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserSharingPermissions_Request) Reset() {
	*x = CSaleFeature_GetUserSharingPermissions_Request{}
	mi := &file_service_salefeature_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserSharingPermissions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserSharingPermissions_Request) ProtoMessage() {}

func (x *CSaleFeature_GetUserSharingPermissions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserSharingPermissions_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserSharingPermissions_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{27}
}

func (x *CSaleFeature_GetUserSharingPermissions_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserSharingPermissions_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

type CSaleFeature_GetUserSharingPermissions_Response struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PrivacyState     *int32                 `protobuf:"varint,1,opt,name=privacy_state,json=privacyState" json:"privacy_state,omitempty"`
	GeneratedValue   *bool                  `protobuf:"varint,2,opt,name=generated_value,json=generatedValue" json:"generated_value,omitempty"`
	Steamid          *uint64                `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	RtPrivacyUpdated *uint32                `protobuf:"varint,4,opt,name=rt_privacy_updated,json=rtPrivacyUpdated" json:"rt_privacy_updated,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserSharingPermissions_Response) Reset() {
	*x = CSaleFeature_GetUserSharingPermissions_Response{}
	mi := &file_service_salefeature_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserSharingPermissions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserSharingPermissions_Response) ProtoMessage() {}

func (x *CSaleFeature_GetUserSharingPermissions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserSharingPermissions_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserSharingPermissions_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{28}
}

func (x *CSaleFeature_GetUserSharingPermissions_Response) GetPrivacyState() int32 {
	if x != nil && x.PrivacyState != nil {
		return *x.PrivacyState
	}
	return 0
}

func (x *CSaleFeature_GetUserSharingPermissions_Response) GetGeneratedValue() bool {
	if x != nil && x.GeneratedValue != nil {
		return *x.GeneratedValue
	}
	return false
}

func (x *CSaleFeature_GetUserSharingPermissions_Response) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserSharingPermissions_Response) GetRtPrivacyUpdated() uint32 {
	if x != nil && x.RtPrivacyUpdated != nil {
		return *x.RtPrivacyUpdated
	}
	return 0
}

type CSaleFeature_GetUserYearAchievements_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Appids        []uint32               `protobuf:"varint,3,rep,name=appids" json:"appids,omitempty"`
	TotalOnly     *bool                  `protobuf:"varint,4,opt,name=total_only,json=totalOnly" json:"total_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearAchievements_Request) Reset() {
	*x = CSaleFeature_GetUserYearAchievements_Request{}
	mi := &file_service_salefeature_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearAchievements_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearAchievements_Request) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearAchievements_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearAchievements_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearAchievements_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{29}
}

func (x *CSaleFeature_GetUserYearAchievements_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserYearAchievements_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_GetUserYearAchievements_Request) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CSaleFeature_GetUserYearAchievements_Request) GetTotalOnly() bool {
	if x != nil && x.TotalOnly != nil {
		return *x.TotalOnly
	}
	return false
}

type CSaleFeature_GetUserYearAchievements_Response struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	GameAchievements           []*CGameAchievements   `protobuf:"bytes,1,rep,name=game_achievements,json=gameAchievements" json:"game_achievements,omitempty"`
	TotalAchievements          *uint32                `protobuf:"varint,2,opt,name=total_achievements,json=totalAchievements" json:"total_achievements,omitempty"`
	TotalRareAchievements      *uint32                `protobuf:"varint,3,opt,name=total_rare_achievements,json=totalRareAchievements" json:"total_rare_achievements,omitempty"`
	TotalGamesWithAchievements *uint32                `protobuf:"varint,4,opt,name=total_games_with_achievements,json=totalGamesWithAchievements" json:"total_games_with_achievements,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearAchievements_Response) Reset() {
	*x = CSaleFeature_GetUserYearAchievements_Response{}
	mi := &file_service_salefeature_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearAchievements_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearAchievements_Response) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearAchievements_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearAchievements_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearAchievements_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{30}
}

func (x *CSaleFeature_GetUserYearAchievements_Response) GetGameAchievements() []*CGameAchievements {
	if x != nil {
		return x.GameAchievements
	}
	return nil
}

func (x *CSaleFeature_GetUserYearAchievements_Response) GetTotalAchievements() uint32 {
	if x != nil && x.TotalAchievements != nil {
		return *x.TotalAchievements
	}
	return 0
}

func (x *CSaleFeature_GetUserYearAchievements_Response) GetTotalRareAchievements() uint32 {
	if x != nil && x.TotalRareAchievements != nil {
		return *x.TotalRareAchievements
	}
	return 0
}

func (x *CSaleFeature_GetUserYearAchievements_Response) GetTotalGamesWithAchievements() uint32 {
	if x != nil && x.TotalGamesWithAchievements != nil {
		return *x.TotalGamesWithAchievements
	}
	return 0
}

type CSaleFeature_GetUserYearInReview_Request struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Steamid                  *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year                     *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	ForceRegenerate          *bool                  `protobuf:"varint,3,opt,name=force_regenerate,json=forceRegenerate" json:"force_regenerate,omitempty"`
	AccessSource             *int32                 `protobuf:"varint,4,opt,name=access_source,json=accessSource" json:"access_source,omitempty"`
	FetchPreviousYearSummary *bool                  `protobuf:"varint,5,opt,name=fetch_previous_year_summary,json=fetchPreviousYearSummary,def=0" json:"fetch_previous_year_summary,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

// Default values for CSaleFeature_GetUserYearInReview_Request fields.
const (
	Default_CSaleFeature_GetUserYearInReview_Request_FetchPreviousYearSummary = bool(false)
)

func (x *CSaleFeature_GetUserYearInReview_Request) Reset() {
	*x = CSaleFeature_GetUserYearInReview_Request{}
	mi := &file_service_salefeature_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearInReview_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearInReview_Request) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearInReview_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearInReview_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearInReview_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{31}
}

func (x *CSaleFeature_GetUserYearInReview_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserYearInReview_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_GetUserYearInReview_Request) GetForceRegenerate() bool {
	if x != nil && x.ForceRegenerate != nil {
		return *x.ForceRegenerate
	}
	return false
}

func (x *CSaleFeature_GetUserYearInReview_Request) GetAccessSource() int32 {
	if x != nil && x.AccessSource != nil {
		return *x.AccessSource
	}
	return 0
}

func (x *CSaleFeature_GetUserYearInReview_Request) GetFetchPreviousYearSummary() bool {
	if x != nil && x.FetchPreviousYearSummary != nil {
		return *x.FetchPreviousYearSummary
	}
	return Default_CSaleFeature_GetUserYearInReview_Request_FetchPreviousYearSummary
}

type CSaleFeature_GetUserYearInReview_Response struct {
	state               protoimpl.MessageState         `protogen:"open.v1"`
	Stats               *CUserYearInReviewStats        `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	PerformanceStats    *CYearInReviewPerformanceStats `protobuf:"bytes,2,opt,name=performance_stats,json=performanceStats" json:"performance_stats,omitempty"`
	Percentiles         *CGlobalPercentiles            `protobuf:"bytes,3,opt,name=percentiles" json:"percentiles,omitempty"`
	Distribution        *CGlobalPlaytimeDistribution   `protobuf:"bytes,4,opt,name=distribution" json:"distribution,omitempty"`
	PreviousYearSummary *CPreviousYIRSummaryData       `protobuf:"bytes,5,opt,name=previous_year_summary,json=previousYearSummary" json:"previous_year_summary,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearInReview_Response) Reset() {
	*x = CSaleFeature_GetUserYearInReview_Response{}
	mi := &file_service_salefeature_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearInReview_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearInReview_Response) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearInReview_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearInReview_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearInReview_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{32}
}

func (x *CSaleFeature_GetUserYearInReview_Response) GetStats() *CUserYearInReviewStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *CSaleFeature_GetUserYearInReview_Response) GetPerformanceStats() *CYearInReviewPerformanceStats {
	if x != nil {
		return x.PerformanceStats
	}
	return nil
}

func (x *CSaleFeature_GetUserYearInReview_Response) GetPercentiles() *CGlobalPercentiles {
	if x != nil {
		return x.Percentiles
	}
	return nil
}

func (x *CSaleFeature_GetUserYearInReview_Response) GetDistribution() *CGlobalPlaytimeDistribution {
	if x != nil {
		return x.Distribution
	}
	return nil
}

func (x *CSaleFeature_GetUserYearInReview_Response) GetPreviousYearSummary() *CPreviousYIRSummaryData {
	if x != nil {
		return x.PreviousYearSummary
	}
	return nil
}

type CSaleFeature_GetUserYearInReviewShareImage_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Language      *string                `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Request) Reset() {
	*x = CSaleFeature_GetUserYearInReviewShareImage_Request{}
	mi := &file_service_salefeature_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearInReviewShareImage_Request) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearInReviewShareImage_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearInReviewShareImage_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{33}
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

type CSaleFeature_GetUserYearInReviewShareImage_Response struct {
	state         protoimpl.MessageState                                       `protogen:"open.v1"`
	Images        []*CSaleFeature_GetUserYearInReviewShareImage_Response_Image `protobuf:"bytes,1,rep,name=images" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response) Reset() {
	*x = CSaleFeature_GetUserYearInReviewShareImage_Response{}
	mi := &file_service_salefeature_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearInReviewShareImage_Response) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearInReviewShareImage_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearInReviewShareImage_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{34}
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response) GetImages() []*CSaleFeature_GetUserYearInReviewShareImage_Response_Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type CSaleFeature_GetUserYearInReviewShareImage_Response_Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UrlPath       *string                `protobuf:"bytes,2,opt,name=url_path,json=urlPath" json:"url_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response_Image) Reset() {
	*x = CSaleFeature_GetUserYearInReviewShareImage_Response_Image{}
	mi := &file_service_salefeature_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearInReviewShareImage_Response_Image) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response_Image) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearInReviewShareImage_Response_Image.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearInReviewShareImage_Response_Image) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{35}
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response_Image) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CSaleFeature_GetUserYearInReviewShareImage_Response_Image) GetUrlPath() string {
	if x != nil && x.UrlPath != nil {
		return *x.UrlPath
	}
	return ""
}

type CSaleFeature_GetUserYearScreenshots_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Appids        []uint32               `protobuf:"varint,3,rep,name=appids" json:"appids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearScreenshots_Request) Reset() {
	*x = CSaleFeature_GetUserYearScreenshots_Request{}
	mi := &file_service_salefeature_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearScreenshots_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearScreenshots_Request) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearScreenshots_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearScreenshots_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearScreenshots_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{36}
}

func (x *CSaleFeature_GetUserYearScreenshots_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_GetUserYearScreenshots_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_GetUserYearScreenshots_Request) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

type CSaleFeature_GetUserYearScreenshots_Response struct {
	state         protoimpl.MessageState                                           `protogen:"open.v1"`
	Apps          []*CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearScreenshots_Response) Reset() {
	*x = CSaleFeature_GetUserYearScreenshots_Response{}
	mi := &file_service_salefeature_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearScreenshots_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearScreenshots_Response) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearScreenshots_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearScreenshots_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearScreenshots_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{37}
}

func (x *CSaleFeature_GetUserYearScreenshots_Response) GetApps() []*CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp {
	if x != nil {
		return x.Apps
	}
	return nil
}

type CSaleFeature_GetUserYearScreenshots_Response_Screenshot struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	ImageUrl                   *string                `protobuf:"bytes,1,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	PreviewUrl                 *string                `protobuf:"bytes,2,opt,name=preview_url,json=previewUrl" json:"preview_url,omitempty"`
	ImageWidth                 *uint32                `protobuf:"varint,3,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight                *uint32                `protobuf:"varint,4,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	MaybeInappropriateSex      *bool                  `protobuf:"varint,5,opt,name=maybe_inappropriate_sex,json=maybeInappropriateSex" json:"maybe_inappropriate_sex,omitempty"`
	MaybeInappropriateViolence *bool                  `protobuf:"varint,6,opt,name=maybe_inappropriate_violence,json=maybeInappropriateViolence" json:"maybe_inappropriate_violence,omitempty"`
	Visibility                 *uint32                `protobuf:"varint,7,opt,name=visibility" json:"visibility,omitempty"`
	SpoilerTag                 *bool                  `protobuf:"varint,8,opt,name=spoiler_tag,json=spoilerTag" json:"spoiler_tag,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) Reset() {
	*x = CSaleFeature_GetUserYearScreenshots_Response_Screenshot{}
	mi := &file_service_salefeature_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearScreenshots_Response_Screenshot) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearScreenshots_Response_Screenshot.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearScreenshots_Response_Screenshot) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{38}
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetPreviewUrl() string {
	if x != nil && x.PreviewUrl != nil {
		return *x.PreviewUrl
	}
	return ""
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetImageWidth() uint32 {
	if x != nil && x.ImageWidth != nil {
		return *x.ImageWidth
	}
	return 0
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetImageHeight() uint32 {
	if x != nil && x.ImageHeight != nil {
		return *x.ImageHeight
	}
	return 0
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetMaybeInappropriateSex() bool {
	if x != nil && x.MaybeInappropriateSex != nil {
		return *x.MaybeInappropriateSex
	}
	return false
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetMaybeInappropriateViolence() bool {
	if x != nil && x.MaybeInappropriateViolence != nil {
		return *x.MaybeInappropriateViolence
	}
	return false
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetVisibility() uint32 {
	if x != nil && x.Visibility != nil {
		return *x.Visibility
	}
	return 0
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_Screenshot) GetSpoilerTag() bool {
	if x != nil && x.SpoilerTag != nil {
		return *x.SpoilerTag
	}
	return false
}

type CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Appid         *uint32                                                    `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Screenshots   []*CSaleFeature_GetUserYearScreenshots_Response_Screenshot `protobuf:"bytes,2,rep,name=screenshots" json:"screenshots,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) Reset() {
	*x = CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp{}
	mi := &file_service_salefeature_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) ProtoMessage() {}

func (x *CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{39}
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp) GetScreenshots() []*CSaleFeature_GetUserYearScreenshots_Response_Screenshot {
	if x != nil {
		return x.Screenshots
	}
	return nil
}

type CSaleFeature_GetYIRCurrentMonthlySummary_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Request) Reset() {
	*x = CSaleFeature_GetYIRCurrentMonthlySummary_Request{}
	mi := &file_service_salefeature_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetYIRCurrentMonthlySummary_Request) ProtoMessage() {}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetYIRCurrentMonthlySummary_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetYIRCurrentMonthlySummary_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{40}
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CSaleFeature_GetYIRCurrentMonthlySummary_Response struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Year              *uint32                `protobuf:"varint,1,opt,name=year" json:"year,omitempty"`
	Month             *uint32                `protobuf:"varint,2,opt,name=month" json:"month,omitempty"`
	GamesPlayed       *uint32                `protobuf:"varint,4,opt,name=games_played,json=gamesPlayed" json:"games_played,omitempty"`
	TopPlayedAppid    *uint32                `protobuf:"varint,5,opt,name=top_played_appid,json=topPlayedAppid" json:"top_played_appid,omitempty"`
	LongestStreakDays *uint32                `protobuf:"varint,6,opt,name=longest_streak_days,json=longestStreakDays" json:"longest_streak_days,omitempty"`
	RtStreakStart     *uint32                `protobuf:"varint,7,opt,name=rt_streak_start,json=rtStreakStart" json:"rt_streak_start,omitempty"`
	Achievements      *uint32                `protobuf:"varint,8,opt,name=achievements" json:"achievements,omitempty"`
	Screenshots       *uint32                `protobuf:"varint,9,opt,name=screenshots" json:"screenshots,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) Reset() {
	*x = CSaleFeature_GetYIRCurrentMonthlySummary_Response{}
	mi := &file_service_salefeature_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_GetYIRCurrentMonthlySummary_Response) ProtoMessage() {}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_GetYIRCurrentMonthlySummary_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_GetYIRCurrentMonthlySummary_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{41}
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetMonth() uint32 {
	if x != nil && x.Month != nil {
		return *x.Month
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetGamesPlayed() uint32 {
	if x != nil && x.GamesPlayed != nil {
		return *x.GamesPlayed
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetTopPlayedAppid() uint32 {
	if x != nil && x.TopPlayedAppid != nil {
		return *x.TopPlayedAppid
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetLongestStreakDays() uint32 {
	if x != nil && x.LongestStreakDays != nil {
		return *x.LongestStreakDays
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetRtStreakStart() uint32 {
	if x != nil && x.RtStreakStart != nil {
		return *x.RtStreakStart
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetAchievements() uint32 {
	if x != nil && x.Achievements != nil {
		return *x.Achievements
	}
	return 0
}

func (x *CSaleFeature_GetYIRCurrentMonthlySummary_Response) GetScreenshots() uint32 {
	if x != nil && x.Screenshots != nil {
		return *x.Screenshots
	}
	return 0
}

type CSaleFeature_SetUserSharingPermissions_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	PrivacyState  *int32                 `protobuf:"varint,3,opt,name=privacy_state,json=privacyState" json:"privacy_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_SetUserSharingPermissions_Request) Reset() {
	*x = CSaleFeature_SetUserSharingPermissions_Request{}
	mi := &file_service_salefeature_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_SetUserSharingPermissions_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_SetUserSharingPermissions_Request) ProtoMessage() {}

func (x *CSaleFeature_SetUserSharingPermissions_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_SetUserSharingPermissions_Request.ProtoReflect.Descriptor instead.
func (*CSaleFeature_SetUserSharingPermissions_Request) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{42}
}

func (x *CSaleFeature_SetUserSharingPermissions_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSaleFeature_SetUserSharingPermissions_Request) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CSaleFeature_SetUserSharingPermissions_Request) GetPrivacyState() int32 {
	if x != nil && x.PrivacyState != nil {
		return *x.PrivacyState
	}
	return 0
}

type CSaleFeature_SetUserSharingPermissions_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivacyState  *int32                 `protobuf:"varint,1,opt,name=privacy_state,json=privacyState" json:"privacy_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSaleFeature_SetUserSharingPermissions_Response) Reset() {
	*x = CSaleFeature_SetUserSharingPermissions_Response{}
	mi := &file_service_salefeature_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSaleFeature_SetUserSharingPermissions_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSaleFeature_SetUserSharingPermissions_Response) ProtoMessage() {}

func (x *CSaleFeature_SetUserSharingPermissions_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSaleFeature_SetUserSharingPermissions_Response.ProtoReflect.Descriptor instead.
func (*CSaleFeature_SetUserSharingPermissions_Response) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{43}
}

func (x *CSaleFeature_SetUserSharingPermissions_Response) GetPrivacyState() int32 {
	if x != nil && x.PrivacyState != nil {
		return *x.PrivacyState
	}
	return 0
}

type CSimpleGameSummary struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	Appid                          *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	TotalPlaytimePercentagex100    *uint32                `protobuf:"varint,2,opt,name=total_playtime_percentagex100,json=totalPlaytimePercentagex100" json:"total_playtime_percentagex100,omitempty"`
	RelativePlaytimePercentagex100 *uint32                `protobuf:"varint,3,opt,name=relative_playtime_percentagex100,json=relativePlaytimePercentagex100" json:"relative_playtime_percentagex100,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *CSimpleGameSummary) Reset() {
	*x = CSimpleGameSummary{}
	mi := &file_service_salefeature_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSimpleGameSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSimpleGameSummary) ProtoMessage() {}

func (x *CSimpleGameSummary) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSimpleGameSummary.ProtoReflect.Descriptor instead.
func (*CSimpleGameSummary) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{44}
}

func (x *CSimpleGameSummary) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CSimpleGameSummary) GetTotalPlaytimePercentagex100() uint32 {
	if x != nil && x.TotalPlaytimePercentagex100 != nil {
		return *x.TotalPlaytimePercentagex100
	}
	return 0
}

func (x *CSimpleGameSummary) GetRelativePlaytimePercentagex100() uint32 {
	if x != nil && x.RelativePlaytimePercentagex100 != nil {
		return *x.RelativePlaytimePercentagex100
	}
	return 0
}

type CUserPlaytimeStats struct {
	state           protoimpl.MessageState     `protogen:"open.v1"`
	TotalStats      *CPlaytimeStats            `protobuf:"bytes,1,opt,name=total_stats,json=totalStats" json:"total_stats,omitempty"`
	Games           []*CGamePlaytimeStats      `protobuf:"bytes,2,rep,name=games" json:"games,omitempty"`
	PlaytimeStreak  *CPlaytimeStreak           `protobuf:"bytes,3,opt,name=playtime_streak,json=playtimeStreak" json:"playtime_streak,omitempty"`
	Months          []*CMonthlyPlaytimeStats   `protobuf:"bytes,5,rep,name=months" json:"months,omitempty"`
	GameSummary     []*CGameSummary            `protobuf:"bytes,6,rep,name=game_summary,json=gameSummary" json:"game_summary,omitempty"`
	DemosPlayed     *uint32                    `protobuf:"varint,7,opt,name=demos_played,json=demosPlayed" json:"demos_played,omitempty"`
	GameRankings    *CGameRankings             `protobuf:"bytes,8,opt,name=game_rankings,json=gameRankings" json:"game_rankings,omitempty"`
	PlaytestsPlayed *uint32                    `protobuf:"varint,9,opt,name=playtests_played,json=playtestsPlayed" json:"playtests_played,omitempty"`
	SummaryStats    *CUserPlaytimeSummaryStats `protobuf:"bytes,10,opt,name=summary_stats,json=summaryStats" json:"summary_stats,omitempty"`
	Substantial     *bool                      `protobuf:"varint,11,opt,name=substantial,def=1" json:"substantial,omitempty"`
	TagStats        *CUserTagStats             `protobuf:"bytes,12,opt,name=tag_stats,json=tagStats" json:"tag_stats,omitempty"`
	ByNumbers       *CPlaytimeByNumbers        `protobuf:"bytes,13,opt,name=by_numbers,json=byNumbers" json:"by_numbers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CUserPlaytimeStats fields.
const (
	Default_CUserPlaytimeStats_Substantial = bool(true)
)

func (x *CUserPlaytimeStats) Reset() {
	*x = CUserPlaytimeStats{}
	mi := &file_service_salefeature_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserPlaytimeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserPlaytimeStats) ProtoMessage() {}

func (x *CUserPlaytimeStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserPlaytimeStats.ProtoReflect.Descriptor instead.
func (*CUserPlaytimeStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{45}
}

func (x *CUserPlaytimeStats) GetTotalStats() *CPlaytimeStats {
	if x != nil {
		return x.TotalStats
	}
	return nil
}

func (x *CUserPlaytimeStats) GetGames() []*CGamePlaytimeStats {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *CUserPlaytimeStats) GetPlaytimeStreak() *CPlaytimeStreak {
	if x != nil {
		return x.PlaytimeStreak
	}
	return nil
}

func (x *CUserPlaytimeStats) GetMonths() []*CMonthlyPlaytimeStats {
	if x != nil {
		return x.Months
	}
	return nil
}

func (x *CUserPlaytimeStats) GetGameSummary() []*CGameSummary {
	if x != nil {
		return x.GameSummary
	}
	return nil
}

func (x *CUserPlaytimeStats) GetDemosPlayed() uint32 {
	if x != nil && x.DemosPlayed != nil {
		return *x.DemosPlayed
	}
	return 0
}

func (x *CUserPlaytimeStats) GetGameRankings() *CGameRankings {
	if x != nil {
		return x.GameRankings
	}
	return nil
}

func (x *CUserPlaytimeStats) GetPlaytestsPlayed() uint32 {
	if x != nil && x.PlaytestsPlayed != nil {
		return *x.PlaytestsPlayed
	}
	return 0
}

func (x *CUserPlaytimeStats) GetSummaryStats() *CUserPlaytimeSummaryStats {
	if x != nil {
		return x.SummaryStats
	}
	return nil
}

func (x *CUserPlaytimeStats) GetSubstantial() bool {
	if x != nil && x.Substantial != nil {
		return *x.Substantial
	}
	return Default_CUserPlaytimeStats_Substantial
}

func (x *CUserPlaytimeStats) GetTagStats() *CUserTagStats {
	if x != nil {
		return x.TagStats
	}
	return nil
}

func (x *CUserPlaytimeStats) GetByNumbers() *CPlaytimeByNumbers {
	if x != nil {
		return x.ByNumbers
	}
	return nil
}

type CUserPlaytimeSummaryStats struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TotalAchievements          *uint32                `protobuf:"varint,2,opt,name=total_achievements,json=totalAchievements" json:"total_achievements,omitempty"`
	TotalGamesWithAchievements *uint32                `protobuf:"varint,3,opt,name=total_games_with_achievements,json=totalGamesWithAchievements" json:"total_games_with_achievements,omitempty"`
	TotalRareAchievements      *uint32                `protobuf:"varint,4,opt,name=total_rare_achievements,json=totalRareAchievements" json:"total_rare_achievements,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CUserPlaytimeSummaryStats) Reset() {
	*x = CUserPlaytimeSummaryStats{}
	mi := &file_service_salefeature_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserPlaytimeSummaryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserPlaytimeSummaryStats) ProtoMessage() {}

func (x *CUserPlaytimeSummaryStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserPlaytimeSummaryStats.ProtoReflect.Descriptor instead.
func (*CUserPlaytimeSummaryStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{46}
}

func (x *CUserPlaytimeSummaryStats) GetTotalAchievements() uint32 {
	if x != nil && x.TotalAchievements != nil {
		return *x.TotalAchievements
	}
	return 0
}

func (x *CUserPlaytimeSummaryStats) GetTotalGamesWithAchievements() uint32 {
	if x != nil && x.TotalGamesWithAchievements != nil {
		return *x.TotalGamesWithAchievements
	}
	return 0
}

func (x *CUserPlaytimeSummaryStats) GetTotalRareAchievements() uint32 {
	if x != nil && x.TotalRareAchievements != nil {
		return *x.TotalRareAchievements
	}
	return 0
}

type CUserTagStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         []*CUserTagStats_Tag   `protobuf:"bytes,1,rep,name=stats" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CUserTagStats) Reset() {
	*x = CUserTagStats{}
	mi := &file_service_salefeature_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserTagStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserTagStats) ProtoMessage() {}

func (x *CUserTagStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserTagStats.ProtoReflect.Descriptor instead.
func (*CUserTagStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{47}
}

func (x *CUserTagStats) GetStats() []*CUserTagStats_Tag {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CUserTagStats_Tag struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	TagId                 *uint32                `protobuf:"varint,1,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	TagWeight             *float32               `protobuf:"fixed32,2,opt,name=tag_weight,json=tagWeight" json:"tag_weight,omitempty"`
	TagWeightPreSelection *float32               `protobuf:"fixed32,3,opt,name=tag_weight_pre_selection,json=tagWeightPreSelection" json:"tag_weight_pre_selection,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CUserTagStats_Tag) Reset() {
	*x = CUserTagStats_Tag{}
	mi := &file_service_salefeature_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserTagStats_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserTagStats_Tag) ProtoMessage() {}

func (x *CUserTagStats_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserTagStats_Tag.ProtoReflect.Descriptor instead.
func (*CUserTagStats_Tag) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{48}
}

func (x *CUserTagStats_Tag) GetTagId() uint32 {
	if x != nil && x.TagId != nil {
		return *x.TagId
	}
	return 0
}

func (x *CUserTagStats_Tag) GetTagWeight() float32 {
	if x != nil && x.TagWeight != nil {
		return *x.TagWeight
	}
	return 0
}

func (x *CUserTagStats_Tag) GetTagWeightPreSelection() float32 {
	if x != nil && x.TagWeightPreSelection != nil {
		return *x.TagWeightPreSelection
	}
	return 0
}

type CUserYearInReviewStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountId     *uint32                `protobuf:"varint,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Year          *uint32                `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	PlaytimeStats *CUserPlaytimeStats    `protobuf:"bytes,3,opt,name=playtime_stats,json=playtimeStats" json:"playtime_stats,omitempty"`
	PrivacyState  *int32                 `protobuf:"varint,4,opt,name=privacy_state,json=privacyState" json:"privacy_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CUserYearInReviewStats) Reset() {
	*x = CUserYearInReviewStats{}
	mi := &file_service_salefeature_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserYearInReviewStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserYearInReviewStats) ProtoMessage() {}

func (x *CUserYearInReviewStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserYearInReviewStats.ProtoReflect.Descriptor instead.
func (*CUserYearInReviewStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{49}
}

func (x *CUserYearInReviewStats) GetAccountId() uint32 {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return 0
}

func (x *CUserYearInReviewStats) GetYear() uint32 {
	if x != nil && x.Year != nil {
		return *x.Year
	}
	return 0
}

func (x *CUserYearInReviewStats) GetPlaytimeStats() *CUserPlaytimeStats {
	if x != nil {
		return x.PlaytimeStats
	}
	return nil
}

func (x *CUserYearInReviewStats) GetPrivacyState() int32 {
	if x != nil && x.PrivacyState != nil {
		return *x.PrivacyState
	}
	return 0
}

type CYearInReviewPerformanceStats struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FromDbo             *bool                  `protobuf:"varint,1,opt,name=from_dbo,json=fromDbo" json:"from_dbo,omitempty"`
	OverallTimeMs       *uint64                `protobuf:"varint,2,opt,name=overall_time_ms,json=overallTimeMs" json:"overall_time_ms,omitempty"`
	DboLoadMs           *uint64                `protobuf:"varint,3,opt,name=dbo_load_ms,json=dboLoadMs" json:"dbo_load_ms,omitempty"`
	QueryExecutionMs    *uint64                `protobuf:"varint,4,opt,name=query_execution_ms,json=queryExecutionMs" json:"query_execution_ms,omitempty"`
	MessagePopulationMs *uint64                `protobuf:"varint,5,opt,name=message_population_ms,json=messagePopulationMs" json:"message_population_ms,omitempty"`
	DboLockLoadMs       *uint64                `protobuf:"varint,6,opt,name=dbo_lock_load_ms,json=dboLockLoadMs" json:"dbo_lock_load_ms,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CYearInReviewPerformanceStats) Reset() {
	*x = CYearInReviewPerformanceStats{}
	mi := &file_service_salefeature_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CYearInReviewPerformanceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CYearInReviewPerformanceStats) ProtoMessage() {}

func (x *CYearInReviewPerformanceStats) ProtoReflect() protoreflect.Message {
	mi := &file_service_salefeature_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CYearInReviewPerformanceStats.ProtoReflect.Descriptor instead.
func (*CYearInReviewPerformanceStats) Descriptor() ([]byte, []int) {
	return file_service_salefeature_proto_rawDescGZIP(), []int{50}
}

func (x *CYearInReviewPerformanceStats) GetFromDbo() bool {
	if x != nil && x.FromDbo != nil {
		return *x.FromDbo
	}
	return false
}

func (x *CYearInReviewPerformanceStats) GetOverallTimeMs() uint64 {
	if x != nil && x.OverallTimeMs != nil {
		return *x.OverallTimeMs
	}
	return 0
}

func (x *CYearInReviewPerformanceStats) GetDboLoadMs() uint64 {
	if x != nil && x.DboLoadMs != nil {
		return *x.DboLoadMs
	}
	return 0
}

func (x *CYearInReviewPerformanceStats) GetQueryExecutionMs() uint64 {
	if x != nil && x.QueryExecutionMs != nil {
		return *x.QueryExecutionMs
	}
	return 0
}

func (x *CYearInReviewPerformanceStats) GetMessagePopulationMs() uint64 {
	if x != nil && x.MessagePopulationMs != nil {
		return *x.MessagePopulationMs
	}
	return 0
}

func (x *CYearInReviewPerformanceStats) GetDboLockLoadMs() uint64 {
	if x != nil && x.DboLockLoadMs != nil {
		return *x.DboLockLoadMs
	}
	return 0
}

var File_service_salefeature_proto protoreflect.FileDescriptor

const file_service_salefeature_proto_rawDesc = "" +
	"\n" +
	"\x19service_salefeature.proto\x1a\x11common_base.proto\"\xaa\x01\n" +
	"\x13CAchievementDetails\x12\x16\n" +
	"\x06statid\x18\x01 \x01(\rR\x06statid\x12\x18\n" +
	"\afieldid\x18\x02 \x01(\rR\afieldid\x12:\n" +
	"\x19achievement_name_internal\x18\x03 \x01(\tR\x17achievementNameInternal\x12%\n" +
	"\x0ertime_unlocked\x18\x04 \x01(\rR\rrtimeUnlocked\"\xbb\x01\n" +
	"\x17CFriendSharedYearInView\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12-\n" +
	"\rprivacy_state\x18\x03 \x01(\x05B\b\x82\xb5\x18\x04enumR\fprivacyState\x12,\n" +
	"\x12rt_privacy_updated\x18\x04 \x01(\rR\x10rtPrivacyUpdated\x12)\n" +
	"\x10privacy_override\x18\x05 \x01(\bR\x0fprivacyOverride\"\xdf\x01\n" +
	"\x11CGameAchievements\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x128\n" +
	"\fachievements\x18\x02 \x03(\v2\x14.CAchievementDetailsR\fachievements\x12C\n" +
	"\x1eall_time_unlocked_achievements\x18\x03 \x01(\rR\x1ballTimeUnlockedAchievements\x125\n" +
	"\x17unlocked_more_in_future\x18\x04 \x01(\bR\x14unlockedMoreInFuture\"\xb3\x02\n" +
	"\x12CGamePlaytimeStats\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12%\n" +
	"\x05stats\x18\x02 \x01(\v2\x0f.CPlaytimeStatsR\x05stats\x129\n" +
	"\x0fplaytime_streak\x18\x03 \x01(\v2\x10.CPlaytimeStreakR\x0eplaytimeStreak\x126\n" +
	"\x0eplaytime_ranks\x18\x04 \x01(\v2\x0f.CPlaytimeRanksR\rplaytimeRanks\x12,\n" +
	"\x12rtime_first_played\x18\x05 \x01(\rR\x10rtimeFirstPlayed\x12?\n" +
	"\x13relative_game_stats\x18\x06 \x01(\v2\x0f.CPlaytimeStatsR\x11relativeGameStats\"\x7f\n" +
	"\tCGameRank\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x12\n" +
	"\x04rank\x18\x02 \x01(\rR\x04rank\x12H\n" +
	" relative_playtime_percentagex100\x18\x03 \x01(\rR\x1erelativePlaytimePercentagex100\"\x9d\x03\n" +
	"\rCGameRankings\x12:\n" +
	"\x0foverall_ranking\x18\x01 \x01(\v2\x11.CRankingCategoryR\x0eoverallRanking\x120\n" +
	"\n" +
	"vr_ranking\x18\x02 \x01(\v2\x11.CRankingCategoryR\tvrRanking\x124\n" +
	"\fdeck_ranking\x18\x03 \x01(\v2\x11.CRankingCategoryR\vdeckRanking\x12@\n" +
	"\x12controller_ranking\x18\x04 \x01(\v2\x11.CRankingCategoryR\x11controllerRanking\x126\n" +
	"\rlinux_ranking\x18\x05 \x01(\v2\x11.CRankingCategoryR\flinuxRanking\x122\n" +
	"\vmac_ranking\x18\x06 \x01(\v2\x11.CRankingCategoryR\n" +
	"macRanking\x12:\n" +
	"\x0fwindows_ranking\x18\a \x01(\v2\x11.CRankingCategoryR\x0ewindowsRanking\"\x84\x05\n" +
	"\fCGameSummary\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\"\n" +
	"\rnew_this_year\x18\x02 \x01(\bR\vnewThisYear\x12=\n" +
	"\x1brtime_first_played_lifetime\x18\x03 \x01(\rR\x18rtimeFirstPlayedLifetime\x12\x12\n" +
	"\x04demo\x18\x04 \x01(\bR\x04demo\x12\x1a\n" +
	"\bplaytest\x18\x05 \x01(\bR\bplaytest\x12;\n" +
	"\x1aplayed_during_early_access\x18\x06 \x01(\bR\x17playedDuringEarlyAccess\x12\x1b\n" +
	"\tplayed_vr\x18\a \x01(\bR\bplayedVr\x12\x1f\n" +
	"\vplayed_deck\x18\b \x01(\bR\n" +
	"playedDeck\x12+\n" +
	"\x11played_controller\x18\t \x01(\bR\x10playedController\x12!\n" +
	"\fplayed_linux\x18\n" +
	" \x01(\bR\vplayedLinux\x12\x1d\n" +
	"\n" +
	"played_mac\x18\v \x01(\bR\tplayedMac\x12%\n" +
	"\x0eplayed_windows\x18\f \x01(\bR\rplayedWindows\x12B\n" +
	"\x1dtotal_playtime_percentagex100\x18\r \x01(\rR\x1btotalPlaytimePercentagex100\x12%\n" +
	"\x0etotal_sessions\x18\x0e \x01(\rR\rtotalSessions\x12,\n" +
	"\x12rtime_release_date\x18\x0f \x01(\rR\x10rtimeReleaseDate\x12!\n" +
	"\fparent_appid\x18\x10 \x01(\rR\vparentAppid\"\x8d\x01\n" +
	"\x12CGlobalPercentiles\x12/\n" +
	"\x13median_achievements\x18\x01 \x01(\rR\x12medianAchievements\x12!\n" +
	"\fmedian_games\x18\x02 \x01(\rR\vmedianGames\x12#\n" +
	"\rmedian_streak\x18\x03 \x01(\rR\fmedianStreak\"\xc2\x01\n" +
	"\x1bCGlobalPlaytimeDistribution\x12!\n" +
	"\fnew_releases\x18\x01 \x01(\rR\vnewReleases\x12'\n" +
	"\x0frecent_releases\x18\x02 \x01(\rR\x0erecentReleases\x12)\n" +
	"\x10classic_releases\x18\x03 \x01(\rR\x0fclassicReleases\x12,\n" +
	"\x12recent_cutoff_year\x18\x04 \x01(\rR\x10recentCutoffYear\"\x89\x02\n" +
	"\x15CMonthlyPlaytimeStats\x12\x1f\n" +
	"\vrtime_month\x18\x01 \x01(\rR\n" +
	"rtimeMonth\x12%\n" +
	"\x05stats\x18\x02 \x01(\v2\x0f.CPlaytimeStatsR\x05stats\x12)\n" +
	"\x05appid\x18\x04 \x03(\v2\x13.CGamePlaytimeStatsR\x05appid\x12E\n" +
	"\x16relative_monthly_stats\x18\x05 \x01(\v2\x0f.CPlaytimeStatsR\x14relativeMonthlyStats\x126\n" +
	"\fgame_summary\x18\x06 \x03(\v2\x13.CSimpleGameSummaryR\vgameSummary\"\x96\x06\n" +
	"\x12CPlaytimeByNumbers\x12-\n" +
	"\x12screenshots_shared\x18\x01 \x01(\rR\x11screenshotsShared\x12\x1d\n" +
	"\n" +
	"gifts_sent\x18\x02 \x01(\rR\tgiftsSent\x12+\n" +
	"\x11loyalty_reactions\x18\x03 \x01(\rR\x10loyaltyReactions\x12'\n" +
	"\x0fwritten_reviews\x18\x04 \x01(\rR\x0ewrittenReviews\x12)\n" +
	"\x10guides_submitted\x18\x05 \x01(\rR\x0fguidesSubmitted\x125\n" +
	"\x16workshop_contributions\x18\x06 \x01(\rR\x15workshopContributions\x12#\n" +
	"\rbadges_earned\x18\a \x01(\rR\fbadgesEarned\x12#\n" +
	"\rfriends_added\x18\b \x01(\rR\ffriendsAdded\x12\x1f\n" +
	"\vforum_posts\x18\t \x01(\rR\n" +
	"forumPosts\x125\n" +
	"\x16workshop_subscriptions\x18\n" +
	" \x01(\rR\x15workshopSubscriptions\x12+\n" +
	"\x11guide_subscribers\x18\v \x01(\rR\x10guideSubscribers\x121\n" +
	"\x14workshop_subscribers\x18\f \x01(\rR\x13workshopSubscribers\x12(\n" +
	"\x10games_played_pct\x18\r \x01(\rR\x0egamesPlayedPct\x12)\n" +
	"\x10achievements_pct\x18\x0e \x01(\rR\x0fachievementsPct\x12&\n" +
	"\x0fgame_streak_pct\x18\x0f \x01(\rR\rgameStreakPct\x12(\n" +
	"\x10games_played_avg\x18\x10 \x01(\rR\x0egamesPlayedAvg\x12)\n" +
	"\x10achievements_avg\x18\x11 \x01(\rR\x0fachievementsAvg\x12&\n" +
	"\x0fgame_streak_avg\x18\x12 \x01(\rR\rgameStreakAvg\"\xef\x01\n" +
	"\x0eCPlaytimeRanks\x12!\n" +
	"\foverall_rank\x18\x01 \x01(\rR\voverallRank\x12\x17\n" +
	"\avr_rank\x18\x02 \x01(\rR\x06vrRank\x12\x1b\n" +
	"\tdeck_rank\x18\x03 \x01(\rR\bdeckRank\x12'\n" +
	"\x0fcontroller_rank\x18\x04 \x01(\rR\x0econtrollerRank\x12\x1d\n" +
	"\n" +
	"linux_rank\x18\x05 \x01(\rR\tlinuxRank\x12\x19\n" +
	"\bmac_rank\x18\x06 \x01(\rR\amacRank\x12!\n" +
	"\fwindows_rank\x18\a \x01(\rR\vwindowsRank\"\xbf\x06\n" +
	"\x0eCPlaytimeStats\x124\n" +
	"\x16total_playtime_seconds\x18\x01 \x01(\rR\x14totalPlaytimeSeconds\x12%\n" +
	"\x0etotal_sessions\x18\x14 \x01(\rR\rtotalSessions\x12\x1f\n" +
	"\vvr_sessions\x18\x15 \x01(\rR\n" +
	"vrSessions\x12#\n" +
	"\rdeck_sessions\x18\x16 \x01(\rR\fdeckSessions\x12/\n" +
	"\x13controller_sessions\x18\x17 \x01(\rR\x12controllerSessions\x12%\n" +
	"\x0elinux_sessions\x18\x18 \x01(\rR\rlinuxSessions\x12%\n" +
	"\x0emacos_sessions\x18\x19 \x01(\rR\rmacosSessions\x12)\n" +
	"\x10windows_sessions\x18\x1a \x01(\rR\x0fwindowsSessions\x12B\n" +
	"\x1dtotal_playtime_percentagex100\x18\x1b \x01(\rR\x1btotalPlaytimePercentagex100\x12<\n" +
	"\x1avr_playtime_percentagex100\x18\x1c \x01(\rR\x18vrPlaytimePercentagex100\x12@\n" +
	"\x1cdeck_playtime_percentagex100\x18\x1d \x01(\rR\x1adeckPlaytimePercentagex100\x12L\n" +
	"\"controller_playtime_percentagex100\x18\x1e \x01(\rR controllerPlaytimePercentagex100\x12B\n" +
	"\x1dlinux_playtime_percentagex100\x18\x1f \x01(\rR\x1blinuxPlaytimePercentagex100\x12B\n" +
	"\x1dmacos_playtime_percentagex100\x18  \x01(\rR\x1bmacosPlaytimePercentagex100\x12F\n" +
	"\x1fwindows_playtime_percentagex100\x18! \x01(\rR\x1dwindowsPlaytimePercentagex100\"\xa5\x01\n" +
	"\x0fCPlaytimeStreak\x128\n" +
	"\x18longest_consecutive_days\x18\x01 \x01(\rR\x16longestConsecutiveDays\x12\x1f\n" +
	"\vrtime_start\x18\x02 \x01(\rR\n" +
	"rtimeStart\x127\n" +
	"\fstreak_games\x18\x03 \x03(\v2\x14.CPlaytimeStreakGameR\vstreakGames\"+\n" +
	"\x13CPlaytimeStreakGame\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"\x98\x01\n" +
	"\x17CPreviousYIRSummaryData\x12!\n" +
	"\fgames_played\x18\x01 \x01(\rR\vgamesPlayed\x123\n" +
	"\x15unlocked_achievements\x18\x02 \x01(\rR\x14unlockedAchievements\x12%\n" +
	"\x0elongest_streak\x18\x03 \x01(\rR\rlongestStreak\"V\n" +
	"\x10CRankingCategory\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\x12&\n" +
	"\brankings\x18\x02 \x03(\v2\n" +
	".CGameRankR\brankings\"\xa6\x01\n" +
	"0CSaleFeature_GetAllUserActionDataForType_Request\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\x06R\x03gid\x12\x1c\n" +
	"\x04type\x18\x02 \x01(\x05B\b\x82\xb5\x18\x04enumR\x04type\x12\x14\n" +
	"\x05count\x18\x03 \x01(\rR\x05count\x12,\n" +
	"\x12last_account_index\x18\x04 \x01(\rR\x10lastAccountIndex\"\xb5\x01\n" +
	"1CSaleFeature_GetAllUserActionDataForType_Response\x12R\n" +
	"\aentries\x18\x01 \x03(\v28.CSaleFeature_GetAllUserActionDataForType_Response_EntryR\aentries\x12,\n" +
	"\x12last_account_index\x18\x02 \x01(\rR\x10lastAccountIndex\"\x81\x01\n" +
	"7CSaleFeature_GetAllUserActionDataForType_Response_Entry\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\x06R\x03gid\x12\x1a\n" +
	"\bjsondata\x18\x02 \x01(\tR\bjsondata\x12\x18\n" +
	"\asteamid\x18\x03 \x01(\x06R\asteamid\"\x88\x01\n" +
	"1CSaleFeature_GetFriendsSharedYearInReview_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12%\n" +
	"\x0ereturn_private\x18\x03 \x01(\bR\rreturnPrivate\"\x87\x01\n" +
	"2CSaleFeature_GetFriendsSharedYearInReview_Response\x12=\n" +
	"\rfriend_shares\x18\x01 \x03(\v2\x18.CFriendSharedYearInViewR\ffriendShares\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\"|\n" +
	".CSaleFeature_GetMultipleUserActionData_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04gids\x18\x02 \x03(\x06R\x04gids\x12\x1c\n" +
	"\x04type\x18\x03 \x01(\x05B\b\x82\xb5\x18\x04enumR\x04type\"\x83\x01\n" +
	"/CSaleFeature_GetMultipleUserActionData_Response\x12P\n" +
	"\aentries\x18\x01 \x03(\v26.CSaleFeature_GetMultipleUserActionData_Response_EntryR\aentries\"\x7f\n" +
	"5CSaleFeature_GetMultipleUserActionData_Response_Entry\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\x06R\x03gid\x12\x1a\n" +
	"\bjsondata\x18\x02 \x01(\tR\bjsondata\x12\x18\n" +
	"\asteamid\x18\x03 \x01(\x06R\asteamid\"r\n" +
	"&CSaleFeature_GetUserActionData_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x10\n" +
	"\x03gid\x18\x02 \x01(\x06R\x03gid\x12\x1c\n" +
	"\x04type\x18\x03 \x01(\x05B\b\x82\xb5\x18\x04enumR\x04type\"E\n" +
	"'CSaleFeature_GetUserActionData_Response\x12\x1a\n" +
	"\bjsondata\x18\x01 \x01(\tR\bjsondata\"^\n" +
	".CSaleFeature_GetUserSharingPermissions_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\"\xd1\x01\n" +
	"/CSaleFeature_GetUserSharingPermissions_Response\x12-\n" +
	"\rprivacy_state\x18\x01 \x01(\x05B\b\x82\xb5\x18\x04enumR\fprivacyState\x12'\n" +
	"\x0fgenerated_value\x18\x02 \x01(\bR\x0egeneratedValue\x12\x18\n" +
	"\asteamid\x18\x03 \x01(\x06R\asteamid\x12,\n" +
	"\x12rt_privacy_updated\x18\x04 \x01(\rR\x10rtPrivacyUpdated\"\x93\x01\n" +
	",CSaleFeature_GetUserYearAchievements_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12\x16\n" +
	"\x06appids\x18\x03 \x03(\rR\x06appids\x12\x1d\n" +
	"\n" +
	"total_only\x18\x04 \x01(\bR\ttotalOnly\"\x9a\x02\n" +
	"-CSaleFeature_GetUserYearAchievements_Response\x12?\n" +
	"\x11game_achievements\x18\x01 \x03(\v2\x12.CGameAchievementsR\x10gameAchievements\x12-\n" +
	"\x12total_achievements\x18\x02 \x01(\rR\x11totalAchievements\x126\n" +
	"\x17total_rare_achievements\x18\x03 \x01(\rR\x15totalRareAchievements\x12A\n" +
	"\x1dtotal_games_with_achievements\x18\x04 \x01(\rR\x1atotalGamesWithAchievements\"\xee\x01\n" +
	"(CSaleFeature_GetUserYearInReview_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12)\n" +
	"\x10force_regenerate\x18\x03 \x01(\bR\x0fforceRegenerate\x12#\n" +
	"\raccess_source\x18\x04 \x01(\x05R\faccessSource\x12D\n" +
	"\x1bfetch_previous_year_summary\x18\x05 \x01(\b:\x05falseR\x18fetchPreviousYearSummary\"\xee\x02\n" +
	")CSaleFeature_GetUserYearInReview_Response\x12-\n" +
	"\x05stats\x18\x01 \x01(\v2\x17.CUserYearInReviewStatsR\x05stats\x12K\n" +
	"\x11performance_stats\x18\x02 \x01(\v2\x1e.CYearInReviewPerformanceStatsR\x10performanceStats\x125\n" +
	"\vpercentiles\x18\x03 \x01(\v2\x13.CGlobalPercentilesR\vpercentiles\x12@\n" +
	"\fdistribution\x18\x04 \x01(\v2\x1c.CGlobalPlaytimeDistributionR\fdistribution\x12L\n" +
	"\x15previous_year_summary\x18\x05 \x01(\v2\x18.CPreviousYIRSummaryDataR\x13previousYearSummary\"~\n" +
	"2CSaleFeature_GetUserYearInReviewShareImage_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\"\x89\x01\n" +
	"3CSaleFeature_GetUserYearInReviewShareImage_Response\x12R\n" +
	"\x06images\x18\x01 \x03(\v2:.CSaleFeature_GetUserYearInReviewShareImage_Response_ImageR\x06images\"j\n" +
	"9CSaleFeature_GetUserYearInReviewShareImage_Response_Image\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x19\n" +
	"\burl_path\x18\x02 \x01(\tR\aurlPath\"s\n" +
	"+CSaleFeature_GetUserYearScreenshots_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12\x16\n" +
	"\x06appids\x18\x03 \x03(\rR\x06appids\"\x82\x01\n" +
	",CSaleFeature_GetUserYearScreenshots_Response\x12R\n" +
	"\x04apps\x18\x01 \x03(\v2>.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByAppR\x04apps\"\xf6\x02\n" +
	"7CSaleFeature_GetUserYearScreenshots_Response_Screenshot\x12\x1b\n" +
	"\timage_url\x18\x01 \x01(\tR\bimageUrl\x12\x1f\n" +
	"\vpreview_url\x18\x02 \x01(\tR\n" +
	"previewUrl\x12\x1f\n" +
	"\vimage_width\x18\x03 \x01(\rR\n" +
	"imageWidth\x12!\n" +
	"\fimage_height\x18\x04 \x01(\rR\vimageHeight\x126\n" +
	"\x17maybe_inappropriate_sex\x18\x05 \x01(\bR\x15maybeInappropriateSex\x12@\n" +
	"\x1cmaybe_inappropriate_violence\x18\x06 \x01(\bR\x1amaybeInappropriateViolence\x12\x1e\n" +
	"\n" +
	"visibility\x18\a \x01(\rR\n" +
	"visibility\x12\x1f\n" +
	"\vspoiler_tag\x18\b \x01(\bR\n" +
	"spoilerTag\"\xb1\x01\n" +
	"=CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12Z\n" +
	"\vscreenshots\x18\x02 \x03(\v28.CSaleFeature_GetUserYearScreenshots_Response_ScreenshotR\vscreenshots\"L\n" +
	"0CSaleFeature_GetYIRCurrentMonthlySummary_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\"\xc8\x02\n" +
	"1CSaleFeature_GetYIRCurrentMonthlySummary_Response\x12\x12\n" +
	"\x04year\x18\x01 \x01(\rR\x04year\x12\x14\n" +
	"\x05month\x18\x02 \x01(\rR\x05month\x12!\n" +
	"\fgames_played\x18\x04 \x01(\rR\vgamesPlayed\x12(\n" +
	"\x10top_played_appid\x18\x05 \x01(\rR\x0etopPlayedAppid\x12.\n" +
	"\x13longest_streak_days\x18\x06 \x01(\rR\x11longestStreakDays\x12&\n" +
	"\x0frt_streak_start\x18\a \x01(\rR\rrtStreakStart\x12\"\n" +
	"\fachievements\x18\b \x01(\rR\fachievements\x12 \n" +
	"\vscreenshots\x18\t \x01(\rR\vscreenshots\"\x8d\x01\n" +
	".CSaleFeature_SetUserSharingPermissions_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12-\n" +
	"\rprivacy_state\x18\x03 \x01(\x05B\b\x82\xb5\x18\x04enumR\fprivacyState\"`\n" +
	"/CSaleFeature_SetUserSharingPermissions_Response\x12-\n" +
	"\rprivacy_state\x18\x01 \x01(\x05B\b\x82\xb5\x18\x04enumR\fprivacyState\"\xb8\x01\n" +
	"\x12CSimpleGameSummary\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12B\n" +
	"\x1dtotal_playtime_percentagex100\x18\x02 \x01(\rR\x1btotalPlaytimePercentagex100\x12H\n" +
	" relative_playtime_percentagex100\x18\x03 \x01(\rR\x1erelativePlaytimePercentagex100\"\xdb\x04\n" +
	"\x12CUserPlaytimeStats\x120\n" +
	"\vtotal_stats\x18\x01 \x01(\v2\x0f.CPlaytimeStatsR\n" +
	"totalStats\x12)\n" +
	"\x05games\x18\x02 \x03(\v2\x13.CGamePlaytimeStatsR\x05games\x129\n" +
	"\x0fplaytime_streak\x18\x03 \x01(\v2\x10.CPlaytimeStreakR\x0eplaytimeStreak\x12.\n" +
	"\x06months\x18\x05 \x03(\v2\x16.CMonthlyPlaytimeStatsR\x06months\x120\n" +
	"\fgame_summary\x18\x06 \x03(\v2\r.CGameSummaryR\vgameSummary\x12!\n" +
	"\fdemos_played\x18\a \x01(\rR\vdemosPlayed\x123\n" +
	"\rgame_rankings\x18\b \x01(\v2\x0e.CGameRankingsR\fgameRankings\x12)\n" +
	"\x10playtests_played\x18\t \x01(\rR\x0fplaytestsPlayed\x12?\n" +
	"\rsummary_stats\x18\n" +
	" \x01(\v2\x1a.CUserPlaytimeSummaryStatsR\fsummaryStats\x12&\n" +
	"\vsubstantial\x18\v \x01(\b:\x04trueR\vsubstantial\x12+\n" +
	"\ttag_stats\x18\f \x01(\v2\x0e.CUserTagStatsR\btagStats\x122\n" +
	"\n" +
	"by_numbers\x18\r \x01(\v2\x13.CPlaytimeByNumbersR\tbyNumbers\"\xc5\x01\n" +
	"\x19CUserPlaytimeSummaryStats\x12-\n" +
	"\x12total_achievements\x18\x02 \x01(\rR\x11totalAchievements\x12A\n" +
	"\x1dtotal_games_with_achievements\x18\x03 \x01(\rR\x1atotalGamesWithAchievements\x126\n" +
	"\x17total_rare_achievements\x18\x04 \x01(\rR\x15totalRareAchievements\"9\n" +
	"\rCUserTagStats\x12(\n" +
	"\x05stats\x18\x01 \x03(\v2\x12.CUserTagStats_TagR\x05stats\"\x82\x01\n" +
	"\x11CUserTagStats_Tag\x12\x15\n" +
	"\x06tag_id\x18\x01 \x01(\rR\x05tagId\x12\x1d\n" +
	"\n" +
	"tag_weight\x18\x02 \x01(\x02R\ttagWeight\x127\n" +
	"\x18tag_weight_pre_selection\x18\x03 \x01(\x02R\x15tagWeightPreSelection\"\xb6\x01\n" +
	"\x16CUserYearInReviewStats\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\rR\taccountId\x12\x12\n" +
	"\x04year\x18\x02 \x01(\rR\x04year\x12:\n" +
	"\x0eplaytime_stats\x18\x03 \x01(\v2\x13.CUserPlaytimeStatsR\rplaytimeStats\x12-\n" +
	"\rprivacy_state\x18\x04 \x01(\x05B\b\x82\xb5\x18\x04enumR\fprivacyState\"\x8d\x02\n" +
	"\x1dCYearInReviewPerformanceStats\x12\x19\n" +
	"\bfrom_dbo\x18\x01 \x01(\bR\afromDbo\x12&\n" +
	"\x0foverall_time_ms\x18\x02 \x01(\x04R\roverallTimeMs\x12\x1e\n" +
	"\vdbo_load_ms\x18\x03 \x01(\x04R\tdboLoadMs\x12,\n" +
	"\x12query_execution_ms\x18\x04 \x01(\x04R\x10queryExecutionMs\x122\n" +
	"\x15message_population_ms\x18\x05 \x01(\x04R\x13messagePopulationMs\x12'\n" +
	"\x10dbo_lock_load_ms\x18\x06 \x01(\x04R\rdboLockLoadMs2\xf9\n" +
	"\n" +
	"\vSaleFeature\x12\x84\x01\n" +
	"\x1bGetAllUserActionDataForType\x121.CSaleFeature_GetAllUserActionDataForType_Request\x1a2.CSaleFeature_GetAllUserActionDataForType_Response\x12\x87\x01\n" +
	"\x1cGetFriendsSharedYearInReview\x122.CSaleFeature_GetFriendsSharedYearInReview_Request\x1a3.CSaleFeature_GetFriendsSharedYearInReview_Response\x12~\n" +
	"\x19GetMultipleUserActionData\x12/.CSaleFeature_GetMultipleUserActionData_Request\x1a0.CSaleFeature_GetMultipleUserActionData_Response\x12f\n" +
	"\x11GetUserActionData\x12'.CSaleFeature_GetUserActionData_Request\x1a(.CSaleFeature_GetUserActionData_Response\x12~\n" +
	"\x19GetUserSharingPermissions\x12/.CSaleFeature_GetUserSharingPermissions_Request\x1a0.CSaleFeature_GetUserSharingPermissions_Response\x12x\n" +
	"\x17GetUserYearAchievements\x12-.CSaleFeature_GetUserYearAchievements_Request\x1a..CSaleFeature_GetUserYearAchievements_Response\x12l\n" +
	"\x13GetUserYearInReview\x12).CSaleFeature_GetUserYearInReview_Request\x1a*.CSaleFeature_GetUserYearInReview_Response\x12\x8a\x01\n" +
	"\x1dGetUserYearInReviewShareImage\x123.CSaleFeature_GetUserYearInReviewShareImage_Request\x1a4.CSaleFeature_GetUserYearInReviewShareImage_Response\x12u\n" +
	"\x16GetUserYearScreenshots\x12,.CSaleFeature_GetUserYearScreenshots_Request\x1a-.CSaleFeature_GetUserYearScreenshots_Response\x12\x84\x01\n" +
	"\x1bGetYIRCurrentMonthlySummary\x121.CSaleFeature_GetYIRCurrentMonthlySummary_Request\x1a2.CSaleFeature_GetYIRCurrentMonthlySummary_Response\x12~\n" +
	"\x19SetUserSharingPermissions\x12/.CSaleFeature_SetUserSharingPermissions_Request\x1a0.CSaleFeature_SetUserSharingPermissions_Response"

var (
	file_service_salefeature_proto_rawDescOnce sync.Once
	file_service_salefeature_proto_rawDescData []byte
)

func file_service_salefeature_proto_rawDescGZIP() []byte {
	file_service_salefeature_proto_rawDescOnce.Do(func() {
		file_service_salefeature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_salefeature_proto_rawDesc), len(file_service_salefeature_proto_rawDesc)))
	})
	return file_service_salefeature_proto_rawDescData
}

var file_service_salefeature_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_service_salefeature_proto_goTypes = []any{
	(*CAchievementDetails)(nil),                                           // 0: CAchievementDetails
	(*CFriendSharedYearInView)(nil),                                       // 1: CFriendSharedYearInView
	(*CGameAchievements)(nil),                                             // 2: CGameAchievements
	(*CGamePlaytimeStats)(nil),                                            // 3: CGamePlaytimeStats
	(*CGameRank)(nil),                                                     // 4: CGameRank
	(*CGameRankings)(nil),                                                 // 5: CGameRankings
	(*CGameSummary)(nil),                                                  // 6: CGameSummary
	(*CGlobalPercentiles)(nil),                                            // 7: CGlobalPercentiles
	(*CGlobalPlaytimeDistribution)(nil),                                   // 8: CGlobalPlaytimeDistribution
	(*CMonthlyPlaytimeStats)(nil),                                         // 9: CMonthlyPlaytimeStats
	(*CPlaytimeByNumbers)(nil),                                            // 10: CPlaytimeByNumbers
	(*CPlaytimeRanks)(nil),                                                // 11: CPlaytimeRanks
	(*CPlaytimeStats)(nil),                                                // 12: CPlaytimeStats
	(*CPlaytimeStreak)(nil),                                               // 13: CPlaytimeStreak
	(*CPlaytimeStreakGame)(nil),                                           // 14: CPlaytimeStreakGame
	(*CPreviousYIRSummaryData)(nil),                                       // 15: CPreviousYIRSummaryData
	(*CRankingCategory)(nil),                                              // 16: CRankingCategory
	(*CSaleFeature_GetAllUserActionDataForType_Request)(nil),              // 17: CSaleFeature_GetAllUserActionDataForType_Request
	(*CSaleFeature_GetAllUserActionDataForType_Response)(nil),             // 18: CSaleFeature_GetAllUserActionDataForType_Response
	(*CSaleFeature_GetAllUserActionDataForType_Response_Entry)(nil),       // 19: CSaleFeature_GetAllUserActionDataForType_Response_Entry
	(*CSaleFeature_GetFriendsSharedYearInReview_Request)(nil),             // 20: CSaleFeature_GetFriendsSharedYearInReview_Request
	(*CSaleFeature_GetFriendsSharedYearInReview_Response)(nil),            // 21: CSaleFeature_GetFriendsSharedYearInReview_Response
	(*CSaleFeature_GetMultipleUserActionData_Request)(nil),                // 22: CSaleFeature_GetMultipleUserActionData_Request
	(*CSaleFeature_GetMultipleUserActionData_Response)(nil),               // 23: CSaleFeature_GetMultipleUserActionData_Response
	(*CSaleFeature_GetMultipleUserActionData_Response_Entry)(nil),         // 24: CSaleFeature_GetMultipleUserActionData_Response_Entry
	(*CSaleFeature_GetUserActionData_Request)(nil),                        // 25: CSaleFeature_GetUserActionData_Request
	(*CSaleFeature_GetUserActionData_Response)(nil),                       // 26: CSaleFeature_GetUserActionData_Response
	(*CSaleFeature_GetUserSharingPermissions_Request)(nil),                // 27: CSaleFeature_GetUserSharingPermissions_Request
	(*CSaleFeature_GetUserSharingPermissions_Response)(nil),               // 28: CSaleFeature_GetUserSharingPermissions_Response
	(*CSaleFeature_GetUserYearAchievements_Request)(nil),                  // 29: CSaleFeature_GetUserYearAchievements_Request
	(*CSaleFeature_GetUserYearAchievements_Response)(nil),                 // 30: CSaleFeature_GetUserYearAchievements_Response
	(*CSaleFeature_GetUserYearInReview_Request)(nil),                      // 31: CSaleFeature_GetUserYearInReview_Request
	(*CSaleFeature_GetUserYearInReview_Response)(nil),                     // 32: CSaleFeature_GetUserYearInReview_Response
	(*CSaleFeature_GetUserYearInReviewShareImage_Request)(nil),            // 33: CSaleFeature_GetUserYearInReviewShareImage_Request
	(*CSaleFeature_GetUserYearInReviewShareImage_Response)(nil),           // 34: CSaleFeature_GetUserYearInReviewShareImage_Response
	(*CSaleFeature_GetUserYearInReviewShareImage_Response_Image)(nil),     // 35: CSaleFeature_GetUserYearInReviewShareImage_Response_Image
	(*CSaleFeature_GetUserYearScreenshots_Request)(nil),                   // 36: CSaleFeature_GetUserYearScreenshots_Request
	(*CSaleFeature_GetUserYearScreenshots_Response)(nil),                  // 37: CSaleFeature_GetUserYearScreenshots_Response
	(*CSaleFeature_GetUserYearScreenshots_Response_Screenshot)(nil),       // 38: CSaleFeature_GetUserYearScreenshots_Response_Screenshot
	(*CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp)(nil), // 39: CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp
	(*CSaleFeature_GetYIRCurrentMonthlySummary_Request)(nil),              // 40: CSaleFeature_GetYIRCurrentMonthlySummary_Request
	(*CSaleFeature_GetYIRCurrentMonthlySummary_Response)(nil),             // 41: CSaleFeature_GetYIRCurrentMonthlySummary_Response
	(*CSaleFeature_SetUserSharingPermissions_Request)(nil),                // 42: CSaleFeature_SetUserSharingPermissions_Request
	(*CSaleFeature_SetUserSharingPermissions_Response)(nil),               // 43: CSaleFeature_SetUserSharingPermissions_Response
	(*CSimpleGameSummary)(nil),                                            // 44: CSimpleGameSummary
	(*CUserPlaytimeStats)(nil),                                            // 45: CUserPlaytimeStats
	(*CUserPlaytimeSummaryStats)(nil),                                     // 46: CUserPlaytimeSummaryStats
	(*CUserTagStats)(nil),                                                 // 47: CUserTagStats
	(*CUserTagStats_Tag)(nil),                                             // 48: CUserTagStats_Tag
	(*CUserYearInReviewStats)(nil),                                        // 49: CUserYearInReviewStats
	(*CYearInReviewPerformanceStats)(nil),                                 // 50: CYearInReviewPerformanceStats
}
var file_service_salefeature_proto_depIdxs = []int32{
	0,  // 0: CGameAchievements.achievements:type_name -> CAchievementDetails
	12, // 1: CGamePlaytimeStats.stats:type_name -> CPlaytimeStats
	13, // 2: CGamePlaytimeStats.playtime_streak:type_name -> CPlaytimeStreak
	11, // 3: CGamePlaytimeStats.playtime_ranks:type_name -> CPlaytimeRanks
	12, // 4: CGamePlaytimeStats.relative_game_stats:type_name -> CPlaytimeStats
	16, // 5: CGameRankings.overall_ranking:type_name -> CRankingCategory
	16, // 6: CGameRankings.vr_ranking:type_name -> CRankingCategory
	16, // 7: CGameRankings.deck_ranking:type_name -> CRankingCategory
	16, // 8: CGameRankings.controller_ranking:type_name -> CRankingCategory
	16, // 9: CGameRankings.linux_ranking:type_name -> CRankingCategory
	16, // 10: CGameRankings.mac_ranking:type_name -> CRankingCategory
	16, // 11: CGameRankings.windows_ranking:type_name -> CRankingCategory
	12, // 12: CMonthlyPlaytimeStats.stats:type_name -> CPlaytimeStats
	3,  // 13: CMonthlyPlaytimeStats.appid:type_name -> CGamePlaytimeStats
	12, // 14: CMonthlyPlaytimeStats.relative_monthly_stats:type_name -> CPlaytimeStats
	44, // 15: CMonthlyPlaytimeStats.game_summary:type_name -> CSimpleGameSummary
	14, // 16: CPlaytimeStreak.streak_games:type_name -> CPlaytimeStreakGame
	4,  // 17: CRankingCategory.rankings:type_name -> CGameRank
	19, // 18: CSaleFeature_GetAllUserActionDataForType_Response.entries:type_name -> CSaleFeature_GetAllUserActionDataForType_Response_Entry
	1,  // 19: CSaleFeature_GetFriendsSharedYearInReview_Response.friend_shares:type_name -> CFriendSharedYearInView
	24, // 20: CSaleFeature_GetMultipleUserActionData_Response.entries:type_name -> CSaleFeature_GetMultipleUserActionData_Response_Entry
	2,  // 21: CSaleFeature_GetUserYearAchievements_Response.game_achievements:type_name -> CGameAchievements
	49, // 22: CSaleFeature_GetUserYearInReview_Response.stats:type_name -> CUserYearInReviewStats
	50, // 23: CSaleFeature_GetUserYearInReview_Response.performance_stats:type_name -> CYearInReviewPerformanceStats
	7,  // 24: CSaleFeature_GetUserYearInReview_Response.percentiles:type_name -> CGlobalPercentiles
	8,  // 25: CSaleFeature_GetUserYearInReview_Response.distribution:type_name -> CGlobalPlaytimeDistribution
	15, // 26: CSaleFeature_GetUserYearInReview_Response.previous_year_summary:type_name -> CPreviousYIRSummaryData
	35, // 27: CSaleFeature_GetUserYearInReviewShareImage_Response.images:type_name -> CSaleFeature_GetUserYearInReviewShareImage_Response_Image
	39, // 28: CSaleFeature_GetUserYearScreenshots_Response.apps:type_name -> CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp
	38, // 29: CSaleFeature_GetUserYearScreenshots_Response_ScreenshotsByApp.screenshots:type_name -> CSaleFeature_GetUserYearScreenshots_Response_Screenshot
	12, // 30: CUserPlaytimeStats.total_stats:type_name -> CPlaytimeStats
	3,  // 31: CUserPlaytimeStats.games:type_name -> CGamePlaytimeStats
	13, // 32: CUserPlaytimeStats.playtime_streak:type_name -> CPlaytimeStreak
	9,  // 33: CUserPlaytimeStats.months:type_name -> CMonthlyPlaytimeStats
	6,  // 34: CUserPlaytimeStats.game_summary:type_name -> CGameSummary
	5,  // 35: CUserPlaytimeStats.game_rankings:type_name -> CGameRankings
	46, // 36: CUserPlaytimeStats.summary_stats:type_name -> CUserPlaytimeSummaryStats
	47, // 37: CUserPlaytimeStats.tag_stats:type_name -> CUserTagStats
	10, // 38: CUserPlaytimeStats.by_numbers:type_name -> CPlaytimeByNumbers
	48, // 39: CUserTagStats.stats:type_name -> CUserTagStats_Tag
	45, // 40: CUserYearInReviewStats.playtime_stats:type_name -> CUserPlaytimeStats
	17, // 41: SaleFeature.GetAllUserActionDataForType:input_type -> CSaleFeature_GetAllUserActionDataForType_Request
	20, // 42: SaleFeature.GetFriendsSharedYearInReview:input_type -> CSaleFeature_GetFriendsSharedYearInReview_Request
	22, // 43: SaleFeature.GetMultipleUserActionData:input_type -> CSaleFeature_GetMultipleUserActionData_Request
	25, // 44: SaleFeature.GetUserActionData:input_type -> CSaleFeature_GetUserActionData_Request
	27, // 45: SaleFeature.GetUserSharingPermissions:input_type -> CSaleFeature_GetUserSharingPermissions_Request
	29, // 46: SaleFeature.GetUserYearAchievements:input_type -> CSaleFeature_GetUserYearAchievements_Request
	31, // 47: SaleFeature.GetUserYearInReview:input_type -> CSaleFeature_GetUserYearInReview_Request
	33, // 48: SaleFeature.GetUserYearInReviewShareImage:input_type -> CSaleFeature_GetUserYearInReviewShareImage_Request
	36, // 49: SaleFeature.GetUserYearScreenshots:input_type -> CSaleFeature_GetUserYearScreenshots_Request
	40, // 50: SaleFeature.GetYIRCurrentMonthlySummary:input_type -> CSaleFeature_GetYIRCurrentMonthlySummary_Request
	42, // 51: SaleFeature.SetUserSharingPermissions:input_type -> CSaleFeature_SetUserSharingPermissions_Request
	18, // 52: SaleFeature.GetAllUserActionDataForType:output_type -> CSaleFeature_GetAllUserActionDataForType_Response
	21, // 53: SaleFeature.GetFriendsSharedYearInReview:output_type -> CSaleFeature_GetFriendsSharedYearInReview_Response
	23, // 54: SaleFeature.GetMultipleUserActionData:output_type -> CSaleFeature_GetMultipleUserActionData_Response
	26, // 55: SaleFeature.GetUserActionData:output_type -> CSaleFeature_GetUserActionData_Response
	28, // 56: SaleFeature.GetUserSharingPermissions:output_type -> CSaleFeature_GetUserSharingPermissions_Response
	30, // 57: SaleFeature.GetUserYearAchievements:output_type -> CSaleFeature_GetUserYearAchievements_Response
	32, // 58: SaleFeature.GetUserYearInReview:output_type -> CSaleFeature_GetUserYearInReview_Response
	34, // 59: SaleFeature.GetUserYearInReviewShareImage:output_type -> CSaleFeature_GetUserYearInReviewShareImage_Response
	37, // 60: SaleFeature.GetUserYearScreenshots:output_type -> CSaleFeature_GetUserYearScreenshots_Response
	41, // 61: SaleFeature.GetYIRCurrentMonthlySummary:output_type -> CSaleFeature_GetYIRCurrentMonthlySummary_Response
	43, // 62: SaleFeature.SetUserSharingPermissions:output_type -> CSaleFeature_SetUserSharingPermissions_Response
	52, // [52:63] is the sub-list for method output_type
	41, // [41:52] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_service_salefeature_proto_init() }
func file_service_salefeature_proto_init() {
	if File_service_salefeature_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_salefeature_proto_rawDesc), len(file_service_salefeature_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_salefeature_proto_goTypes,
		DependencyIndexes: file_service_salefeature_proto_depIdxs,
		MessageInfos:      file_service_salefeature_proto_msgTypes,
	}.Build()
	File_service_salefeature_proto = out.File
	file_service_salefeature_proto_goTypes = nil
	file_service_salefeature_proto_depIdxs = nil
}
