// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_hardwareupdate.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CHardwareUpdate_CheckForUpdates_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_CheckForUpdates_Request) Reset() {
	*x = CHardwareUpdate_CheckForUpdates_Request{}
	mi := &file_service_hardwareupdate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_CheckForUpdates_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_CheckForUpdates_Request) ProtoMessage() {}

func (x *CHardwareUpdate_CheckForUpdates_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_CheckForUpdates_Request.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_CheckForUpdates_Request) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{0}
}

type CHardwareUpdate_CheckForUpdates_Response struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Updates       []*CMsgAvailableHardwareUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_CheckForUpdates_Response) Reset() {
	*x = CHardwareUpdate_CheckForUpdates_Response{}
	mi := &file_service_hardwareupdate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_CheckForUpdates_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_CheckForUpdates_Response) ProtoMessage() {}

func (x *CHardwareUpdate_CheckForUpdates_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_CheckForUpdates_Response.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_CheckForUpdates_Response) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{1}
}

func (x *CHardwareUpdate_CheckForUpdates_Response) GetUpdates() []*CMsgAvailableHardwareUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

type CHardwareUpdate_GetState_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_GetState_Request) Reset() {
	*x = CHardwareUpdate_GetState_Request{}
	mi := &file_service_hardwareupdate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_GetState_Request) ProtoMessage() {}

func (x *CHardwareUpdate_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_GetState_Request.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_GetState_Request) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{2}
}

type CHardwareUpdate_GetState_Response struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IsUpdaterSupported *bool                  `protobuf:"varint,1,opt,name=is_updater_supported,json=isUpdaterSupported" json:"is_updater_supported,omitempty"`
	HasSeenControllers *bool                  `protobuf:"varint,2,opt,name=has_seen_controllers,json=hasSeenControllers" json:"has_seen_controllers,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CHardwareUpdate_GetState_Response) Reset() {
	*x = CHardwareUpdate_GetState_Response{}
	mi := &file_service_hardwareupdate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_GetState_Response) ProtoMessage() {}

func (x *CHardwareUpdate_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_GetState_Response.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_GetState_Response) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{3}
}

func (x *CHardwareUpdate_GetState_Response) GetIsUpdaterSupported() bool {
	if x != nil && x.IsUpdaterSupported != nil {
		return *x.IsUpdaterSupported
	}
	return false
}

func (x *CHardwareUpdate_GetState_Response) GetHasSeenControllers() bool {
	if x != nil && x.HasSeenControllers != nil {
		return *x.HasSeenControllers
	}
	return false
}

type CHardwareUpdate_StateChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_StateChanged_Notification) Reset() {
	*x = CHardwareUpdate_StateChanged_Notification{}
	mi := &file_service_hardwareupdate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_StateChanged_Notification) ProtoMessage() {}

func (x *CHardwareUpdate_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{4}
}

type CHardwareUpdate_Update_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SerialNumber  *string                `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_Update_Request) Reset() {
	*x = CHardwareUpdate_Update_Request{}
	mi := &file_service_hardwareupdate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_Update_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_Update_Request) ProtoMessage() {}

func (x *CHardwareUpdate_Update_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_Update_Request.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_Update_Request) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{5}
}

func (x *CHardwareUpdate_Update_Request) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

type CHardwareUpdate_Update_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_Update_Response) Reset() {
	*x = CHardwareUpdate_Update_Response{}
	mi := &file_service_hardwareupdate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_Update_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_Update_Response) ProtoMessage() {}

func (x *CHardwareUpdate_Update_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_Update_Response.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_Update_Response) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{6}
}

type CHardwareUpdate_UpdateProgress_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      *int32                 `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_UpdateProgress_Notification) Reset() {
	*x = CHardwareUpdate_UpdateProgress_Notification{}
	mi := &file_service_hardwareupdate_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_UpdateProgress_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_UpdateProgress_Notification) ProtoMessage() {}

func (x *CHardwareUpdate_UpdateProgress_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_UpdateProgress_Notification.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_UpdateProgress_Notification) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{7}
}

func (x *CHardwareUpdate_UpdateProgress_Notification) GetProgress() int32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

type CHardwareUpdate_UpdateStateChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CHardwareUpdate_UpdateStateChanged_Notification) Reset() {
	*x = CHardwareUpdate_UpdateStateChanged_Notification{}
	mi := &file_service_hardwareupdate_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwareUpdate_UpdateStateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwareUpdate_UpdateStateChanged_Notification) ProtoMessage() {}

func (x *CHardwareUpdate_UpdateStateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwareUpdate_UpdateStateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CHardwareUpdate_UpdateStateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{8}
}

type CMsgAvailableHardwareUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Etype         *uint32                `protobuf:"varint,1,opt,name=etype" json:"etype,omitempty"`
	HardwareId    *uint32                `protobuf:"varint,2,opt,name=hardware_id,json=hardwareId" json:"hardware_id,omitempty"`
	SerialNumber  *string                `protobuf:"bytes,3,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	CurrentTs     *string                `protobuf:"bytes,4,opt,name=current_ts,json=currentTs" json:"current_ts,omitempty"`
	UpdateTs      *string                `protobuf:"bytes,5,opt,name=update_ts,json=updateTs" json:"update_ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgAvailableHardwareUpdate) Reset() {
	*x = CMsgAvailableHardwareUpdate{}
	mi := &file_service_hardwareupdate_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgAvailableHardwareUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgAvailableHardwareUpdate) ProtoMessage() {}

func (x *CMsgAvailableHardwareUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_service_hardwareupdate_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgAvailableHardwareUpdate.ProtoReflect.Descriptor instead.
func (*CMsgAvailableHardwareUpdate) Descriptor() ([]byte, []int) {
	return file_service_hardwareupdate_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgAvailableHardwareUpdate) GetEtype() uint32 {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return 0
}

func (x *CMsgAvailableHardwareUpdate) GetHardwareId() uint32 {
	if x != nil && x.HardwareId != nil {
		return *x.HardwareId
	}
	return 0
}

func (x *CMsgAvailableHardwareUpdate) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *CMsgAvailableHardwareUpdate) GetCurrentTs() string {
	if x != nil && x.CurrentTs != nil {
		return *x.CurrentTs
	}
	return ""
}

func (x *CMsgAvailableHardwareUpdate) GetUpdateTs() string {
	if x != nil && x.UpdateTs != nil {
		return *x.UpdateTs
	}
	return ""
}

var File_service_hardwareupdate_proto protoreflect.FileDescriptor

const file_service_hardwareupdate_proto_rawDesc = "" +
	"\n" +
	"\x1cservice_hardwareupdate.proto\x1a\x11common_base.proto\")\n" +
	"'CHardwareUpdate_CheckForUpdates_Request\"b\n" +
	"(CHardwareUpdate_CheckForUpdates_Response\x126\n" +
	"\aupdates\x18\x01 \x03(\v2\x1c.CMsgAvailableHardwareUpdateR\aupdates\"\"\n" +
	" CHardwareUpdate_GetState_Request\"\x87\x01\n" +
	"!CHardwareUpdate_GetState_Response\x120\n" +
	"\x14is_updater_supported\x18\x01 \x01(\bR\x12isUpdaterSupported\x120\n" +
	"\x14has_seen_controllers\x18\x02 \x01(\bR\x12hasSeenControllers\"+\n" +
	")CHardwareUpdate_StateChanged_Notification\"E\n" +
	"\x1eCHardwareUpdate_Update_Request\x12#\n" +
	"\rserial_number\x18\x01 \x01(\tR\fserialNumber\"!\n" +
	"\x1fCHardwareUpdate_Update_Response\"I\n" +
	"+CHardwareUpdate_UpdateProgress_Notification\x12\x1a\n" +
	"\bprogress\x18\x01 \x01(\x05R\bprogress\"1\n" +
	"/CHardwareUpdate_UpdateStateChanged_Notification\"\xb5\x01\n" +
	"\x1bCMsgAvailableHardwareUpdate\x12\x14\n" +
	"\x05etype\x18\x01 \x01(\rR\x05etype\x12\x1f\n" +
	"\vhardware_id\x18\x02 \x01(\rR\n" +
	"hardwareId\x12#\n" +
	"\rserial_number\x18\x03 \x01(\tR\fserialNumber\x12\x1d\n" +
	"\n" +
	"current_ts\x18\x04 \x01(\tR\tcurrentTs\x12\x1b\n" +
	"\tupdate_ts\x18\x05 \x01(\tR\bupdateTs2\x95\x04\n" +
	"\x0eHardwareUpdate\x12f\n" +
	"\x0fCheckForUpdates\x12(.CHardwareUpdate_CheckForUpdates_Request\x1a).CHardwareUpdate_CheckForUpdates_Response\x12Q\n" +
	"\bGetState\x12!.CHardwareUpdate_GetState_Request\x1a\".CHardwareUpdate_GetState_Response\x12M\n" +
	"\x12NotifyStateChanged\x12*.CHardwareUpdate_StateChanged_Notification\x1a\v.NoResponse\x12Q\n" +
	"\x14NotifyUpdateProgress\x12,.CHardwareUpdate_UpdateProgress_Notification\x1a\v.NoResponse\x12Y\n" +
	"\x18NotifyUpdateStateChanged\x120.CHardwareUpdate_UpdateStateChanged_Notification\x1a\v.NoResponse\x12K\n" +
	"\x06Update\x12\x1f.CHardwareUpdate_Update_Request\x1a .CHardwareUpdate_Update_Response"

var (
	file_service_hardwareupdate_proto_rawDescOnce sync.Once
	file_service_hardwareupdate_proto_rawDescData []byte
)

func file_service_hardwareupdate_proto_rawDescGZIP() []byte {
	file_service_hardwareupdate_proto_rawDescOnce.Do(func() {
		file_service_hardwareupdate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_hardwareupdate_proto_rawDesc), len(file_service_hardwareupdate_proto_rawDesc)))
	})
	return file_service_hardwareupdate_proto_rawDescData
}

var file_service_hardwareupdate_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_service_hardwareupdate_proto_goTypes = []any{
	(*CHardwareUpdate_CheckForUpdates_Request)(nil),         // 0: CHardwareUpdate_CheckForUpdates_Request
	(*CHardwareUpdate_CheckForUpdates_Response)(nil),        // 1: CHardwareUpdate_CheckForUpdates_Response
	(*CHardwareUpdate_GetState_Request)(nil),                // 2: CHardwareUpdate_GetState_Request
	(*CHardwareUpdate_GetState_Response)(nil),               // 3: CHardwareUpdate_GetState_Response
	(*CHardwareUpdate_StateChanged_Notification)(nil),       // 4: CHardwareUpdate_StateChanged_Notification
	(*CHardwareUpdate_Update_Request)(nil),                  // 5: CHardwareUpdate_Update_Request
	(*CHardwareUpdate_Update_Response)(nil),                 // 6: CHardwareUpdate_Update_Response
	(*CHardwareUpdate_UpdateProgress_Notification)(nil),     // 7: CHardwareUpdate_UpdateProgress_Notification
	(*CHardwareUpdate_UpdateStateChanged_Notification)(nil), // 8: CHardwareUpdate_UpdateStateChanged_Notification
	(*CMsgAvailableHardwareUpdate)(nil),                     // 9: CMsgAvailableHardwareUpdate
	(*NoResponse)(nil),                                      // 10: NoResponse
}
var file_service_hardwareupdate_proto_depIdxs = []int32{
	9,  // 0: CHardwareUpdate_CheckForUpdates_Response.updates:type_name -> CMsgAvailableHardwareUpdate
	0,  // 1: HardwareUpdate.CheckForUpdates:input_type -> CHardwareUpdate_CheckForUpdates_Request
	2,  // 2: HardwareUpdate.GetState:input_type -> CHardwareUpdate_GetState_Request
	4,  // 3: HardwareUpdate.NotifyStateChanged:input_type -> CHardwareUpdate_StateChanged_Notification
	7,  // 4: HardwareUpdate.NotifyUpdateProgress:input_type -> CHardwareUpdate_UpdateProgress_Notification
	8,  // 5: HardwareUpdate.NotifyUpdateStateChanged:input_type -> CHardwareUpdate_UpdateStateChanged_Notification
	5,  // 6: HardwareUpdate.Update:input_type -> CHardwareUpdate_Update_Request
	1,  // 7: HardwareUpdate.CheckForUpdates:output_type -> CHardwareUpdate_CheckForUpdates_Response
	3,  // 8: HardwareUpdate.GetState:output_type -> CHardwareUpdate_GetState_Response
	10, // 9: HardwareUpdate.NotifyStateChanged:output_type -> NoResponse
	10, // 10: HardwareUpdate.NotifyUpdateProgress:output_type -> NoResponse
	10, // 11: HardwareUpdate.NotifyUpdateStateChanged:output_type -> NoResponse
	6,  // 12: HardwareUpdate.Update:output_type -> CHardwareUpdate_Update_Response
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_service_hardwareupdate_proto_init() }
func file_service_hardwareupdate_proto_init() {
	if File_service_hardwareupdate_proto != nil {
		return
	}
	file_common_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_hardwareupdate_proto_rawDesc), len(file_service_hardwareupdate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_hardwareupdate_proto_goTypes,
		DependencyIndexes: file_service_hardwareupdate_proto_depIdxs,
		MessageInfos:      file_service_hardwareupdate_proto_msgTypes,
	}.Build()
	File_service_hardwareupdate_proto = out.File
	file_service_hardwareupdate_proto_goTypes = nil
	file_service_hardwareupdate_proto_depIdxs = nil
}
