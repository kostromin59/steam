// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_usernews.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CUserNews_Event struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Eventtype          *uint32                `protobuf:"varint,1,opt,name=eventtype" json:"eventtype,omitempty"`
	Eventtime          *uint32                `protobuf:"varint,2,opt,name=eventtime" json:"eventtime,omitempty"`
	SteamidActor       *uint64                `protobuf:"fixed64,3,opt,name=steamid_actor,json=steamidActor" json:"steamid_actor,omitempty"`
	SteamidTarget      *uint64                `protobuf:"fixed64,4,opt,name=steamid_target,json=steamidTarget" json:"steamid_target,omitempty"`
	Gameid             *uint64                `protobuf:"fixed64,5,opt,name=gameid" json:"gameid,omitempty"`
	Packageid          *uint32                `protobuf:"varint,6,opt,name=packageid" json:"packageid,omitempty"`
	Shortcutid         *uint32                `protobuf:"varint,7,opt,name=shortcutid" json:"shortcutid,omitempty"`
	AchievementNames   []string               `protobuf:"bytes,8,rep,name=achievement_names,json=achievementNames" json:"achievement_names,omitempty"`
	ClanEventid        *uint64                `protobuf:"fixed64,9,opt,name=clan_eventid,json=clanEventid" json:"clan_eventid,omitempty"`
	ClanAnnouncementid *uint64                `protobuf:"fixed64,10,opt,name=clan_announcementid,json=clanAnnouncementid" json:"clan_announcementid,omitempty"`
	Publishedfileid    *uint64                `protobuf:"fixed64,11,opt,name=publishedfileid" json:"publishedfileid,omitempty"`
	EventLastModTime   *uint32                `protobuf:"varint,12,opt,name=event_last_mod_time,json=eventLastModTime" json:"event_last_mod_time,omitempty"`
	Appids             []uint32               `protobuf:"varint,13,rep,name=appids" json:"appids,omitempty"`
	EventPostTime      *uint32                `protobuf:"varint,14,opt,name=event_post_time,json=eventPostTime" json:"event_post_time,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CUserNews_Event) Reset() {
	*x = CUserNews_Event{}
	mi := &file_service_usernews_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNews_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNews_Event) ProtoMessage() {}

func (x *CUserNews_Event) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNews_Event.ProtoReflect.Descriptor instead.
func (*CUserNews_Event) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{0}
}

func (x *CUserNews_Event) GetEventtype() uint32 {
	if x != nil && x.Eventtype != nil {
		return *x.Eventtype
	}
	return 0
}

func (x *CUserNews_Event) GetEventtime() uint32 {
	if x != nil && x.Eventtime != nil {
		return *x.Eventtime
	}
	return 0
}

func (x *CUserNews_Event) GetSteamidActor() uint64 {
	if x != nil && x.SteamidActor != nil {
		return *x.SteamidActor
	}
	return 0
}

func (x *CUserNews_Event) GetSteamidTarget() uint64 {
	if x != nil && x.SteamidTarget != nil {
		return *x.SteamidTarget
	}
	return 0
}

func (x *CUserNews_Event) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CUserNews_Event) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CUserNews_Event) GetShortcutid() uint32 {
	if x != nil && x.Shortcutid != nil {
		return *x.Shortcutid
	}
	return 0
}

func (x *CUserNews_Event) GetAchievementNames() []string {
	if x != nil {
		return x.AchievementNames
	}
	return nil
}

func (x *CUserNews_Event) GetClanEventid() uint64 {
	if x != nil && x.ClanEventid != nil {
		return *x.ClanEventid
	}
	return 0
}

func (x *CUserNews_Event) GetClanAnnouncementid() uint64 {
	if x != nil && x.ClanAnnouncementid != nil {
		return *x.ClanAnnouncementid
	}
	return 0
}

func (x *CUserNews_Event) GetPublishedfileid() uint64 {
	if x != nil && x.Publishedfileid != nil {
		return *x.Publishedfileid
	}
	return 0
}

func (x *CUserNews_Event) GetEventLastModTime() uint32 {
	if x != nil && x.EventLastModTime != nil {
		return *x.EventLastModTime
	}
	return 0
}

func (x *CUserNews_Event) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CUserNews_Event) GetEventPostTime() uint32 {
	if x != nil && x.EventPostTime != nil {
		return *x.EventPostTime
	}
	return 0
}

type CUserNews_GetAppDetailsSpotlight_Request struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Appid              *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	IncludeAlreadySeen *bool                  `protobuf:"varint,2,opt,name=include_already_seen,json=includeAlreadySeen" json:"include_already_seen,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CUserNews_GetAppDetailsSpotlight_Request) Reset() {
	*x = CUserNews_GetAppDetailsSpotlight_Request{}
	mi := &file_service_usernews_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNews_GetAppDetailsSpotlight_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNews_GetAppDetailsSpotlight_Request) ProtoMessage() {}

func (x *CUserNews_GetAppDetailsSpotlight_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNews_GetAppDetailsSpotlight_Request.ProtoReflect.Descriptor instead.
func (*CUserNews_GetAppDetailsSpotlight_Request) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{1}
}

func (x *CUserNews_GetAppDetailsSpotlight_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserNews_GetAppDetailsSpotlight_Request) GetIncludeAlreadySeen() bool {
	if x != nil && x.IncludeAlreadySeen != nil {
		return *x.IncludeAlreadySeen
	}
	return false
}

type CUserNews_GetAppDetailsSpotlight_Response struct {
	state         protoimpl.MessageState                                     `protogen:"open.v1"`
	Events        []*CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CUserNews_GetAppDetailsSpotlight_Response) Reset() {
	*x = CUserNews_GetAppDetailsSpotlight_Response{}
	mi := &file_service_usernews_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNews_GetAppDetailsSpotlight_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNews_GetAppDetailsSpotlight_Response) ProtoMessage() {}

func (x *CUserNews_GetAppDetailsSpotlight_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNews_GetAppDetailsSpotlight_Response.ProtoReflect.Descriptor instead.
func (*CUserNews_GetAppDetailsSpotlight_Response) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{2}
}

func (x *CUserNews_GetAppDetailsSpotlight_Response) GetEvents() []*CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	EventType           *uint32                `protobuf:"varint,1,opt,name=event_type,json=eventType" json:"event_type,omitempty"`
	EventTime           *uint32                `protobuf:"varint,2,opt,name=event_time,json=eventTime" json:"event_time,omitempty"`
	ClanId              *uint64                `protobuf:"fixed64,3,opt,name=clan_id,json=clanId" json:"clan_id,omitempty"`
	ClanAnnouncementid  *uint64                `protobuf:"fixed64,4,opt,name=clan_announcementid,json=clanAnnouncementid" json:"clan_announcementid,omitempty"`
	Appid               *uint32                `protobuf:"varint,5,opt,name=appid" json:"appid,omitempty"`
	Rtime32LastModified *uint32                `protobuf:"varint,6,opt,name=rtime32_last_modified,json=rtime32LastModified" json:"rtime32_last_modified,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) Reset() {
	*x = CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent{}
	mi := &file_service_usernews_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) ProtoMessage() {}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent.ProtoReflect.Descriptor instead.
func (*CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{3}
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) GetEventType() uint32 {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return 0
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) GetEventTime() uint32 {
	if x != nil && x.EventTime != nil {
		return *x.EventTime
	}
	return 0
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) GetClanId() uint64 {
	if x != nil && x.ClanId != nil {
		return *x.ClanId
	}
	return 0
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) GetClanAnnouncementid() uint64 {
	if x != nil && x.ClanAnnouncementid != nil {
		return *x.ClanAnnouncementid
	}
	return 0
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent) GetRtime32LastModified() uint32 {
	if x != nil && x.Rtime32LastModified != nil {
		return *x.Rtime32LastModified
	}
	return 0
}

type CUserNews_GetUserNews_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         *uint32                `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Starttime     *uint32                `protobuf:"varint,2,opt,name=starttime" json:"starttime,omitempty"`
	Endtime       *uint32                `protobuf:"varint,3,opt,name=endtime" json:"endtime,omitempty"`
	Language      *string                `protobuf:"bytes,4,opt,name=language" json:"language,omitempty"`
	Filterflags   *uint32                `protobuf:"varint,5,opt,name=filterflags" json:"filterflags,omitempty"`
	Filterappid   *uint32                `protobuf:"varint,6,opt,name=filterappid" json:"filterappid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CUserNews_GetUserNews_Request) Reset() {
	*x = CUserNews_GetUserNews_Request{}
	mi := &file_service_usernews_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNews_GetUserNews_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNews_GetUserNews_Request) ProtoMessage() {}

func (x *CUserNews_GetUserNews_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNews_GetUserNews_Request.ProtoReflect.Descriptor instead.
func (*CUserNews_GetUserNews_Request) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{4}
}

func (x *CUserNews_GetUserNews_Request) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CUserNews_GetUserNews_Request) GetStarttime() uint32 {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return 0
}

func (x *CUserNews_GetUserNews_Request) GetEndtime() uint32 {
	if x != nil && x.Endtime != nil {
		return *x.Endtime
	}
	return 0
}

func (x *CUserNews_GetUserNews_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CUserNews_GetUserNews_Request) GetFilterflags() uint32 {
	if x != nil && x.Filterflags != nil {
		return *x.Filterflags
	}
	return 0
}

func (x *CUserNews_GetUserNews_Request) GetFilterappid() uint32 {
	if x != nil && x.Filterappid != nil {
		return *x.Filterappid
	}
	return 0
}

type CUserNews_GetUserNews_Response struct {
	state                  protoimpl.MessageState             `protogen:"open.v1"`
	News                   []*CUserNews_Event                 `protobuf:"bytes,1,rep,name=news" json:"news,omitempty"`
	AchievementDisplayData []*CUserNewsAchievementDisplayData `protobuf:"bytes,2,rep,name=achievement_display_data,json=achievementDisplayData" json:"achievement_display_data,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CUserNews_GetUserNews_Response) Reset() {
	*x = CUserNews_GetUserNews_Response{}
	mi := &file_service_usernews_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNews_GetUserNews_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNews_GetUserNews_Response) ProtoMessage() {}

func (x *CUserNews_GetUserNews_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNews_GetUserNews_Response.ProtoReflect.Descriptor instead.
func (*CUserNews_GetUserNews_Response) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{5}
}

func (x *CUserNews_GetUserNews_Response) GetNews() []*CUserNews_Event {
	if x != nil {
		return x.News
	}
	return nil
}

func (x *CUserNews_GetUserNews_Response) GetAchievementDisplayData() []*CUserNewsAchievementDisplayData {
	if x != nil {
		return x.AchievementDisplayData
	}
	return nil
}

type CUserNewsAchievementDisplayData struct {
	state         protoimpl.MessageState                          `protogen:"open.v1"`
	Appid         *uint32                                         `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Achievements  []*CUserNewsAchievementDisplayData_CAchievement `protobuf:"bytes,2,rep,name=achievements" json:"achievements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CUserNewsAchievementDisplayData) Reset() {
	*x = CUserNewsAchievementDisplayData{}
	mi := &file_service_usernews_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNewsAchievementDisplayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNewsAchievementDisplayData) ProtoMessage() {}

func (x *CUserNewsAchievementDisplayData) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNewsAchievementDisplayData.ProtoReflect.Descriptor instead.
func (*CUserNewsAchievementDisplayData) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{6}
}

func (x *CUserNewsAchievementDisplayData) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CUserNewsAchievementDisplayData) GetAchievements() []*CUserNewsAchievementDisplayData_CAchievement {
	if x != nil {
		return x.Achievements
	}
	return nil
}

type CUserNewsAchievementDisplayData_CAchievement struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DisplayName        *string                `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	DisplayDescription *string                `protobuf:"bytes,3,opt,name=display_description,json=displayDescription" json:"display_description,omitempty"`
	Icon               *string                `protobuf:"bytes,4,opt,name=icon" json:"icon,omitempty"`
	UnlockedPct        *float32               `protobuf:"fixed32,5,opt,name=unlocked_pct,json=unlockedPct" json:"unlocked_pct,omitempty"`
	Hidden             *bool                  `protobuf:"varint,6,opt,name=hidden" json:"hidden,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CUserNewsAchievementDisplayData_CAchievement) Reset() {
	*x = CUserNewsAchievementDisplayData_CAchievement{}
	mi := &file_service_usernews_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CUserNewsAchievementDisplayData_CAchievement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CUserNewsAchievementDisplayData_CAchievement) ProtoMessage() {}

func (x *CUserNewsAchievementDisplayData_CAchievement) ProtoReflect() protoreflect.Message {
	mi := &file_service_usernews_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CUserNewsAchievementDisplayData_CAchievement.ProtoReflect.Descriptor instead.
func (*CUserNewsAchievementDisplayData_CAchievement) Descriptor() ([]byte, []int) {
	return file_service_usernews_proto_rawDescGZIP(), []int{7}
}

func (x *CUserNewsAchievementDisplayData_CAchievement) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CUserNewsAchievementDisplayData_CAchievement) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CUserNewsAchievementDisplayData_CAchievement) GetDisplayDescription() string {
	if x != nil && x.DisplayDescription != nil {
		return *x.DisplayDescription
	}
	return ""
}

func (x *CUserNewsAchievementDisplayData_CAchievement) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *CUserNewsAchievementDisplayData_CAchievement) GetUnlockedPct() float32 {
	if x != nil && x.UnlockedPct != nil {
		return *x.UnlockedPct
	}
	return 0
}

func (x *CUserNewsAchievementDisplayData_CAchievement) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

var File_service_usernews_proto protoreflect.FileDescriptor

const file_service_usernews_proto_rawDesc = "" +
	"\n" +
	"\x16service_usernews.proto\"\x89\x04\n" +
	"\x0fCUserNews_Event\x12\x1c\n" +
	"\teventtype\x18\x01 \x01(\rR\teventtype\x12\x1c\n" +
	"\teventtime\x18\x02 \x01(\rR\teventtime\x12#\n" +
	"\rsteamid_actor\x18\x03 \x01(\x06R\fsteamidActor\x12%\n" +
	"\x0esteamid_target\x18\x04 \x01(\x06R\rsteamidTarget\x12\x16\n" +
	"\x06gameid\x18\x05 \x01(\x06R\x06gameid\x12\x1c\n" +
	"\tpackageid\x18\x06 \x01(\rR\tpackageid\x12\x1e\n" +
	"\n" +
	"shortcutid\x18\a \x01(\rR\n" +
	"shortcutid\x12+\n" +
	"\x11achievement_names\x18\b \x03(\tR\x10achievementNames\x12!\n" +
	"\fclan_eventid\x18\t \x01(\x06R\vclanEventid\x12/\n" +
	"\x13clan_announcementid\x18\n" +
	" \x01(\x06R\x12clanAnnouncementid\x12(\n" +
	"\x0fpublishedfileid\x18\v \x01(\x06R\x0fpublishedfileid\x12-\n" +
	"\x13event_last_mod_time\x18\f \x01(\rR\x10eventLastModTime\x12\x16\n" +
	"\x06appids\x18\r \x03(\rR\x06appids\x12&\n" +
	"\x0fevent_post_time\x18\x0e \x01(\rR\reventPostTime\"r\n" +
	"(CUserNews_GetAppDetailsSpotlight_Request\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x120\n" +
	"\x14include_already_seen\x18\x02 \x01(\bR\x12includeAlreadySeen\"}\n" +
	")CUserNews_GetAppDetailsSpotlight_Response\x12P\n" +
	"\x06events\x18\x01 \x03(\v28.CUserNews_GetAppDetailsSpotlight_Response_FeaturedEventR\x06events\"\x8b\x02\n" +
	"7CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\rR\teventType\x12\x1d\n" +
	"\n" +
	"event_time\x18\x02 \x01(\rR\teventTime\x12\x17\n" +
	"\aclan_id\x18\x03 \x01(\x06R\x06clanId\x12/\n" +
	"\x13clan_announcementid\x18\x04 \x01(\x06R\x12clanAnnouncementid\x12\x14\n" +
	"\x05appid\x18\x05 \x01(\rR\x05appid\x122\n" +
	"\x15rtime32_last_modified\x18\x06 \x01(\rR\x13rtime32LastModified\"\xcd\x01\n" +
	"\x1dCUserNews_GetUserNews_Request\x12\x14\n" +
	"\x05count\x18\x01 \x01(\rR\x05count\x12\x1c\n" +
	"\tstarttime\x18\x02 \x01(\rR\tstarttime\x12\x18\n" +
	"\aendtime\x18\x03 \x01(\rR\aendtime\x12\x1a\n" +
	"\blanguage\x18\x04 \x01(\tR\blanguage\x12 \n" +
	"\vfilterflags\x18\x05 \x01(\rR\vfilterflags\x12 \n" +
	"\vfilterappid\x18\x06 \x01(\rR\vfilterappid\"\xa2\x01\n" +
	"\x1eCUserNews_GetUserNews_Response\x12$\n" +
	"\x04news\x18\x01 \x03(\v2\x10.CUserNews_EventR\x04news\x12Z\n" +
	"\x18achievement_display_data\x18\x02 \x03(\v2 .CUserNewsAchievementDisplayDataR\x16achievementDisplayData\"\x8a\x01\n" +
	"\x1fCUserNewsAchievementDisplayData\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12Q\n" +
	"\fachievements\x18\x02 \x03(\v2-.CUserNewsAchievementDisplayData_CAchievementR\fachievements\"\xe5\x01\n" +
	",CUserNewsAchievementDisplayData_CAchievement\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12/\n" +
	"\x13display_description\x18\x03 \x01(\tR\x12displayDescription\x12\x12\n" +
	"\x04icon\x18\x04 \x01(\tR\x04icon\x12!\n" +
	"\funlocked_pct\x18\x05 \x01(\x02R\vunlockedPct\x12\x16\n" +
	"\x06hidden\x18\x06 \x01(\bR\x06hidden2\xcb\x01\n" +
	"\bUserNews\x12o\n" +
	"\x16GetAppDetailsSpotlight\x12).CUserNews_GetAppDetailsSpotlight_Request\x1a*.CUserNews_GetAppDetailsSpotlight_Response\x12N\n" +
	"\vGetUserNews\x12\x1e.CUserNews_GetUserNews_Request\x1a\x1f.CUserNews_GetUserNews_Response"

var (
	file_service_usernews_proto_rawDescOnce sync.Once
	file_service_usernews_proto_rawDescData []byte
)

func file_service_usernews_proto_rawDescGZIP() []byte {
	file_service_usernews_proto_rawDescOnce.Do(func() {
		file_service_usernews_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_usernews_proto_rawDesc), len(file_service_usernews_proto_rawDesc)))
	})
	return file_service_usernews_proto_rawDescData
}

var file_service_usernews_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_service_usernews_proto_goTypes = []any{
	(*CUserNews_Event)(nil),                                         // 0: CUserNews_Event
	(*CUserNews_GetAppDetailsSpotlight_Request)(nil),                // 1: CUserNews_GetAppDetailsSpotlight_Request
	(*CUserNews_GetAppDetailsSpotlight_Response)(nil),               // 2: CUserNews_GetAppDetailsSpotlight_Response
	(*CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent)(nil), // 3: CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent
	(*CUserNews_GetUserNews_Request)(nil),                           // 4: CUserNews_GetUserNews_Request
	(*CUserNews_GetUserNews_Response)(nil),                          // 5: CUserNews_GetUserNews_Response
	(*CUserNewsAchievementDisplayData)(nil),                         // 6: CUserNewsAchievementDisplayData
	(*CUserNewsAchievementDisplayData_CAchievement)(nil),            // 7: CUserNewsAchievementDisplayData_CAchievement
}
var file_service_usernews_proto_depIdxs = []int32{
	3, // 0: CUserNews_GetAppDetailsSpotlight_Response.events:type_name -> CUserNews_GetAppDetailsSpotlight_Response_FeaturedEvent
	0, // 1: CUserNews_GetUserNews_Response.news:type_name -> CUserNews_Event
	6, // 2: CUserNews_GetUserNews_Response.achievement_display_data:type_name -> CUserNewsAchievementDisplayData
	7, // 3: CUserNewsAchievementDisplayData.achievements:type_name -> CUserNewsAchievementDisplayData_CAchievement
	1, // 4: UserNews.GetAppDetailsSpotlight:input_type -> CUserNews_GetAppDetailsSpotlight_Request
	4, // 5: UserNews.GetUserNews:input_type -> CUserNews_GetUserNews_Request
	2, // 6: UserNews.GetAppDetailsSpotlight:output_type -> CUserNews_GetAppDetailsSpotlight_Response
	5, // 7: UserNews.GetUserNews:output_type -> CUserNews_GetUserNews_Response
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_service_usernews_proto_init() }
func file_service_usernews_proto_init() {
	if File_service_usernews_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_usernews_proto_rawDesc), len(file_service_usernews_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_usernews_proto_goTypes,
		DependencyIndexes: file_service_usernews_proto_depIdxs,
		MessageInfos:      file_service_usernews_proto_msgTypes,
	}.Build()
	File_service_usernews_proto = out.File
	file_service_usernews_proto_goTypes = nil
	file_service_usernews_proto_depIdxs = nil
}
