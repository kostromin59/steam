// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_gamerecordingclip.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CGameRecording_CreateShareClip_Request struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Clip          *CGameRecordingClip          `protobuf:"bytes,2,opt,name=clip" json:"clip,omitempty"`
	VideoDef      []*CMsgVideoGameRecordingDef `protobuf:"bytes,3,rep,name=video_def,json=videoDef" json:"video_def,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameRecording_CreateShareClip_Request) Reset() {
	*x = CGameRecording_CreateShareClip_Request{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecording_CreateShareClip_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecording_CreateShareClip_Request) ProtoMessage() {}

func (x *CGameRecording_CreateShareClip_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecording_CreateShareClip_Request.ProtoReflect.Descriptor instead.
func (*CGameRecording_CreateShareClip_Request) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{0}
}

func (x *CGameRecording_CreateShareClip_Request) GetClip() *CGameRecordingClip {
	if x != nil {
		return x.Clip
	}
	return nil
}

func (x *CGameRecording_CreateShareClip_Request) GetVideoDef() []*CMsgVideoGameRecordingDef {
	if x != nil {
		return x.VideoDef
	}
	return nil
}

type CGameRecording_CreateShareClip_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clip          *CGameRecordingClip    `protobuf:"bytes,1,opt,name=clip" json:"clip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameRecording_CreateShareClip_Response) Reset() {
	*x = CGameRecording_CreateShareClip_Response{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecording_CreateShareClip_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecording_CreateShareClip_Response) ProtoMessage() {}

func (x *CGameRecording_CreateShareClip_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecording_CreateShareClip_Response.ProtoReflect.Descriptor instead.
func (*CGameRecording_CreateShareClip_Response) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{1}
}

func (x *CGameRecording_CreateShareClip_Response) GetClip() *CGameRecordingClip {
	if x != nil {
		return x.Clip
	}
	return nil
}

type CGameRecording_DeleteSharedClip_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClipId        *uint64                `protobuf:"fixed64,2,opt,name=clip_id,json=clipId" json:"clip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameRecording_DeleteSharedClip_Request) Reset() {
	*x = CGameRecording_DeleteSharedClip_Request{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecording_DeleteSharedClip_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecording_DeleteSharedClip_Request) ProtoMessage() {}

func (x *CGameRecording_DeleteSharedClip_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecording_DeleteSharedClip_Request.ProtoReflect.Descriptor instead.
func (*CGameRecording_DeleteSharedClip_Request) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{2}
}

func (x *CGameRecording_DeleteSharedClip_Request) GetClipId() uint64 {
	if x != nil && x.ClipId != nil {
		return *x.ClipId
	}
	return 0
}

type CGameRecording_DeleteSharedClip_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameRecording_DeleteSharedClip_Response) Reset() {
	*x = CGameRecording_DeleteSharedClip_Response{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecording_DeleteSharedClip_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecording_DeleteSharedClip_Response) ProtoMessage() {}

func (x *CGameRecording_DeleteSharedClip_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecording_DeleteSharedClip_Response.ProtoReflect.Descriptor instead.
func (*CGameRecording_DeleteSharedClip_Response) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{3}
}

type CGameRecording_GetSingleSharedClip_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClipId        *uint64                `protobuf:"fixed64,2,opt,name=clip_id,json=clipId" json:"clip_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameRecording_GetSingleSharedClip_Request) Reset() {
	*x = CGameRecording_GetSingleSharedClip_Request{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecording_GetSingleSharedClip_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecording_GetSingleSharedClip_Request) ProtoMessage() {}

func (x *CGameRecording_GetSingleSharedClip_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecording_GetSingleSharedClip_Request.ProtoReflect.Descriptor instead.
func (*CGameRecording_GetSingleSharedClip_Request) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{4}
}

func (x *CGameRecording_GetSingleSharedClip_Request) GetClipId() uint64 {
	if x != nil && x.ClipId != nil {
		return *x.ClipId
	}
	return 0
}

type CGameRecording_GetSingleSharedClip_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clip          *CGameRecordingClip    `protobuf:"bytes,1,opt,name=clip" json:"clip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CGameRecording_GetSingleSharedClip_Response) Reset() {
	*x = CGameRecording_GetSingleSharedClip_Response{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecording_GetSingleSharedClip_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecording_GetSingleSharedClip_Response) ProtoMessage() {}

func (x *CGameRecording_GetSingleSharedClip_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecording_GetSingleSharedClip_Response.ProtoReflect.Descriptor instead.
func (*CGameRecording_GetSingleSharedClip_Response) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{5}
}

func (x *CGameRecording_GetSingleSharedClip_Response) GetClip() *CGameRecordingClip {
	if x != nil {
		return x.Clip
	}
	return nil
}

type CGameRecordingClip struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ClipId             *uint64                `protobuf:"fixed64,1,opt,name=clip_id,json=clipId" json:"clip_id,omitempty"`
	Gameid             *uint64                `protobuf:"varint,2,opt,name=gameid" json:"gameid,omitempty"`
	DateRecorded       *uint32                `protobuf:"varint,4,opt,name=date_recorded,json=dateRecorded" json:"date_recorded,omitempty"`
	TotalFileSizeBytes *uint64                `protobuf:"varint,7,opt,name=total_file_size_bytes,json=totalFileSizeBytes" json:"total_file_size_bytes,omitempty"`
	VideoIds           []*CVideoManagerClipID `protobuf:"bytes,9,rep,name=video_ids,json=videoIds" json:"video_ids,omitempty"`
	OwnerSteamid       *uint64                `protobuf:"fixed64,10,opt,name=owner_steamid,json=ownerSteamid" json:"owner_steamid,omitempty"`
	UploadComplete     *bool                  `protobuf:"varint,11,opt,name=upload_complete,json=uploadComplete" json:"upload_complete,omitempty"`
	DurationMs         *uint32                `protobuf:"varint,12,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CGameRecordingClip) Reset() {
	*x = CGameRecordingClip{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CGameRecordingClip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CGameRecordingClip) ProtoMessage() {}

func (x *CGameRecordingClip) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CGameRecordingClip.ProtoReflect.Descriptor instead.
func (*CGameRecordingClip) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{6}
}

func (x *CGameRecordingClip) GetClipId() uint64 {
	if x != nil && x.ClipId != nil {
		return *x.ClipId
	}
	return 0
}

func (x *CGameRecordingClip) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CGameRecordingClip) GetDateRecorded() uint32 {
	if x != nil && x.DateRecorded != nil {
		return *x.DateRecorded
	}
	return 0
}

func (x *CGameRecordingClip) GetTotalFileSizeBytes() uint64 {
	if x != nil && x.TotalFileSizeBytes != nil {
		return *x.TotalFileSizeBytes
	}
	return 0
}

func (x *CGameRecordingClip) GetVideoIds() []*CVideoManagerClipID {
	if x != nil {
		return x.VideoIds
	}
	return nil
}

func (x *CGameRecordingClip) GetOwnerSteamid() uint64 {
	if x != nil && x.OwnerSteamid != nil {
		return *x.OwnerSteamid
	}
	return 0
}

func (x *CGameRecordingClip) GetUploadComplete() bool {
	if x != nil && x.UploadComplete != nil {
		return *x.UploadComplete
	}
	return false
}

func (x *CGameRecordingClip) GetDurationMs() uint32 {
	if x != nil && x.DurationMs != nil {
		return *x.DurationMs
	}
	return 0
}

type CMsgVideoGameRecordingComponent struct {
	state           protoimpl.MessageState                  `protogen:"open.v1"`
	ComponentName   *string                                 `protobuf:"bytes,1,opt,name=component_name,json=componentName" json:"component_name,omitempty"`
	Contents        *uint32                                 `protobuf:"varint,2,opt,name=contents" json:"contents,omitempty"`
	SegmentSize     *uint32                                 `protobuf:"varint,3,opt,name=segment_size,json=segmentSize" json:"segment_size,omitempty"`
	FileType        *string                                 `protobuf:"bytes,4,opt,name=file_type,json=fileType" json:"file_type,omitempty"`
	Representations []*CMsgVideoGameRecordingRepresentation `protobuf:"bytes,5,rep,name=representations" json:"representations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgVideoGameRecordingComponent) Reset() {
	*x = CMsgVideoGameRecordingComponent{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVideoGameRecordingComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVideoGameRecordingComponent) ProtoMessage() {}

func (x *CMsgVideoGameRecordingComponent) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVideoGameRecordingComponent.ProtoReflect.Descriptor instead.
func (*CMsgVideoGameRecordingComponent) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgVideoGameRecordingComponent) GetComponentName() string {
	if x != nil && x.ComponentName != nil {
		return *x.ComponentName
	}
	return ""
}

func (x *CMsgVideoGameRecordingComponent) GetContents() uint32 {
	if x != nil && x.Contents != nil {
		return *x.Contents
	}
	return 0
}

func (x *CMsgVideoGameRecordingComponent) GetSegmentSize() uint32 {
	if x != nil && x.SegmentSize != nil {
		return *x.SegmentSize
	}
	return 0
}

func (x *CMsgVideoGameRecordingComponent) GetFileType() string {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return ""
}

func (x *CMsgVideoGameRecordingComponent) GetRepresentations() []*CMsgVideoGameRecordingRepresentation {
	if x != nil {
		return x.Representations
	}
	return nil
}

type CMsgVideoGameRecordingDef struct {
	state                    protoimpl.MessageState             `protogen:"open.v1"`
	Steamid                  *uint64                            `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	AppId                    *uint32                            `protobuf:"varint,2,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	NumSegments              *uint32                            `protobuf:"varint,3,opt,name=num_segments,json=numSegments" json:"num_segments,omitempty"`
	LengthMilliseconds       *uint32                            `protobuf:"varint,4,opt,name=length_milliseconds,json=lengthMilliseconds" json:"length_milliseconds,omitempty"`
	SegmentDurationTimescale *uint32                            `protobuf:"varint,5,opt,name=segment_duration_timescale,json=segmentDurationTimescale" json:"segment_duration_timescale,omitempty"`
	SegmentDuration          *uint32                            `protobuf:"varint,6,opt,name=segment_duration,json=segmentDuration" json:"segment_duration,omitempty"`
	Components               []*CMsgVideoGameRecordingComponent `protobuf:"bytes,7,rep,name=components" json:"components,omitempty"`
	StartTimeMs              *uint32                            `protobuf:"varint,8,opt,name=start_time_ms,json=startTimeMs" json:"start_time_ms,omitempty"`
	StartOffsetInTimelineMs  *uint32                            `protobuf:"varint,9,opt,name=start_offset_in_timeline_ms,json=startOffsetInTimelineMs" json:"start_offset_in_timeline_ms,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CMsgVideoGameRecordingDef) Reset() {
	*x = CMsgVideoGameRecordingDef{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVideoGameRecordingDef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVideoGameRecordingDef) ProtoMessage() {}

func (x *CMsgVideoGameRecordingDef) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVideoGameRecordingDef.ProtoReflect.Descriptor instead.
func (*CMsgVideoGameRecordingDef) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgVideoGameRecordingDef) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetNumSegments() uint32 {
	if x != nil && x.NumSegments != nil {
		return *x.NumSegments
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetLengthMilliseconds() uint32 {
	if x != nil && x.LengthMilliseconds != nil {
		return *x.LengthMilliseconds
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetSegmentDurationTimescale() uint32 {
	if x != nil && x.SegmentDurationTimescale != nil {
		return *x.SegmentDurationTimescale
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetSegmentDuration() uint32 {
	if x != nil && x.SegmentDuration != nil {
		return *x.SegmentDuration
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetComponents() []*CMsgVideoGameRecordingComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *CMsgVideoGameRecordingDef) GetStartTimeMs() uint32 {
	if x != nil && x.StartTimeMs != nil {
		return *x.StartTimeMs
	}
	return 0
}

func (x *CMsgVideoGameRecordingDef) GetStartOffsetInTimelineMs() uint32 {
	if x != nil && x.StartOffsetInTimelineMs != nil {
		return *x.StartOffsetInTimelineMs
	}
	return 0
}

type CMsgVideoGameRecordingRepresentation struct {
	state                protoimpl.MessageState             `protogen:"open.v1"`
	RepresentationName   *string                            `protobuf:"bytes,2,opt,name=representation_name,json=representationName" json:"representation_name,omitempty"`
	HorizontalResolution *uint32                            `protobuf:"varint,3,opt,name=horizontal_resolution,json=horizontalResolution" json:"horizontal_resolution,omitempty"`
	VerticalResolution   *uint32                            `protobuf:"varint,4,opt,name=vertical_resolution,json=verticalResolution" json:"vertical_resolution,omitempty"`
	FrameRate            *float64                           `protobuf:"fixed64,5,opt,name=frame_rate,json=frameRate" json:"frame_rate,omitempty"`
	Bandwidth            *uint32                            `protobuf:"varint,6,opt,name=bandwidth" json:"bandwidth,omitempty"`
	AudioSampleRate      *uint32                            `protobuf:"varint,7,opt,name=audio_sample_rate,json=audioSampleRate" json:"audio_sample_rate,omitempty"`
	FrameRateString      *string                            `protobuf:"bytes,8,opt,name=frame_rate_string,json=frameRateString" json:"frame_rate_string,omitempty"`
	Codec                *string                            `protobuf:"bytes,9,opt,name=codec" json:"codec,omitempty"`
	AudioChannelConfig   *uint32                            `protobuf:"varint,10,opt,name=audio_channel_config,json=audioChannelConfig" json:"audio_channel_config,omitempty"`
	SegmentInfo          []*CVideo_GameRecordingSegmentInfo `protobuf:"bytes,11,rep,name=segment_info,json=segmentInfo" json:"segment_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CMsgVideoGameRecordingRepresentation) Reset() {
	*x = CMsgVideoGameRecordingRepresentation{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVideoGameRecordingRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVideoGameRecordingRepresentation) ProtoMessage() {}

func (x *CMsgVideoGameRecordingRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVideoGameRecordingRepresentation.ProtoReflect.Descriptor instead.
func (*CMsgVideoGameRecordingRepresentation) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgVideoGameRecordingRepresentation) GetRepresentationName() string {
	if x != nil && x.RepresentationName != nil {
		return *x.RepresentationName
	}
	return ""
}

func (x *CMsgVideoGameRecordingRepresentation) GetHorizontalResolution() uint32 {
	if x != nil && x.HorizontalResolution != nil {
		return *x.HorizontalResolution
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetVerticalResolution() uint32 {
	if x != nil && x.VerticalResolution != nil {
		return *x.VerticalResolution
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetFrameRate() float64 {
	if x != nil && x.FrameRate != nil {
		return *x.FrameRate
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetBandwidth() uint32 {
	if x != nil && x.Bandwidth != nil {
		return *x.Bandwidth
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetAudioSampleRate() uint32 {
	if x != nil && x.AudioSampleRate != nil {
		return *x.AudioSampleRate
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetFrameRateString() string {
	if x != nil && x.FrameRateString != nil {
		return *x.FrameRateString
	}
	return ""
}

func (x *CMsgVideoGameRecordingRepresentation) GetCodec() string {
	if x != nil && x.Codec != nil {
		return *x.Codec
	}
	return ""
}

func (x *CMsgVideoGameRecordingRepresentation) GetAudioChannelConfig() uint32 {
	if x != nil && x.AudioChannelConfig != nil {
		return *x.AudioChannelConfig
	}
	return 0
}

func (x *CMsgVideoGameRecordingRepresentation) GetSegmentInfo() []*CVideo_GameRecordingSegmentInfo {
	if x != nil {
		return x.SegmentInfo
	}
	return nil
}

type CVideoManagerClipID struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	VideoManagerClipId  *uint64                `protobuf:"fixed64,1,opt,name=video_manager_clip_id,json=videoManagerClipId" json:"video_manager_clip_id,omitempty"`
	VideoManagerVideoId *uint64                `protobuf:"fixed64,2,opt,name=video_manager_video_id,json=videoManagerVideoId" json:"video_manager_video_id,omitempty"`
	ServerTimelineId    *uint64                `protobuf:"fixed64,3,opt,name=server_timeline_id,json=serverTimelineId" json:"server_timeline_id,omitempty"`
	ManifestUrl         *string                `protobuf:"bytes,4,opt,name=manifest_url,json=manifestUrl" json:"manifest_url,omitempty"`
	DurationMs          *uint32                `protobuf:"varint,5,opt,name=duration_ms,json=durationMs" json:"duration_ms,omitempty"`
	StartOffsetMs       *uint32                `protobuf:"varint,6,opt,name=start_offset_ms,json=startOffsetMs" json:"start_offset_ms,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CVideoManagerClipID) Reset() {
	*x = CVideoManagerClipID{}
	mi := &file_service_gamerecordingclip_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CVideoManagerClipID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVideoManagerClipID) ProtoMessage() {}

func (x *CVideoManagerClipID) ProtoReflect() protoreflect.Message {
	mi := &file_service_gamerecordingclip_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVideoManagerClipID.ProtoReflect.Descriptor instead.
func (*CVideoManagerClipID) Descriptor() ([]byte, []int) {
	return file_service_gamerecordingclip_proto_rawDescGZIP(), []int{10}
}

func (x *CVideoManagerClipID) GetVideoManagerClipId() uint64 {
	if x != nil && x.VideoManagerClipId != nil {
		return *x.VideoManagerClipId
	}
	return 0
}

func (x *CVideoManagerClipID) GetVideoManagerVideoId() uint64 {
	if x != nil && x.VideoManagerVideoId != nil {
		return *x.VideoManagerVideoId
	}
	return 0
}

func (x *CVideoManagerClipID) GetServerTimelineId() uint64 {
	if x != nil && x.ServerTimelineId != nil {
		return *x.ServerTimelineId
	}
	return 0
}

func (x *CVideoManagerClipID) GetManifestUrl() string {
	if x != nil && x.ManifestUrl != nil {
		return *x.ManifestUrl
	}
	return ""
}

func (x *CVideoManagerClipID) GetDurationMs() uint32 {
	if x != nil && x.DurationMs != nil {
		return *x.DurationMs
	}
	return 0
}

func (x *CVideoManagerClipID) GetStartOffsetMs() uint32 {
	if x != nil && x.StartOffsetMs != nil {
		return *x.StartOffsetMs
	}
	return 0
}

var File_service_gamerecordingclip_proto protoreflect.FileDescriptor

const file_service_gamerecordingclip_proto_rawDesc = "" +
	"\n" +
	"\x1fservice_gamerecordingclip.proto\x1a\fcommon.proto\"\x8a\x01\n" +
	"&CGameRecording_CreateShareClip_Request\x12'\n" +
	"\x04clip\x18\x02 \x01(\v2\x13.CGameRecordingClipR\x04clip\x127\n" +
	"\tvideo_def\x18\x03 \x03(\v2\x1a.CMsgVideoGameRecordingDefR\bvideoDef\"R\n" +
	"'CGameRecording_CreateShareClip_Response\x12'\n" +
	"\x04clip\x18\x01 \x01(\v2\x13.CGameRecordingClipR\x04clip\"B\n" +
	"'CGameRecording_DeleteSharedClip_Request\x12\x17\n" +
	"\aclip_id\x18\x02 \x01(\x06R\x06clipId\"*\n" +
	"(CGameRecording_DeleteSharedClip_Response\"E\n" +
	"*CGameRecording_GetSingleSharedClip_Request\x12\x17\n" +
	"\aclip_id\x18\x02 \x01(\x06R\x06clipId\"V\n" +
	"+CGameRecording_GetSingleSharedClip_Response\x12'\n" +
	"\x04clip\x18\x01 \x01(\v2\x13.CGameRecordingClipR\x04clip\"\xbf\x02\n" +
	"\x12CGameRecordingClip\x12\x17\n" +
	"\aclip_id\x18\x01 \x01(\x06R\x06clipId\x12\x16\n" +
	"\x06gameid\x18\x02 \x01(\x04R\x06gameid\x12#\n" +
	"\rdate_recorded\x18\x04 \x01(\rR\fdateRecorded\x121\n" +
	"\x15total_file_size_bytes\x18\a \x01(\x04R\x12totalFileSizeBytes\x121\n" +
	"\tvideo_ids\x18\t \x03(\v2\x14.CVideoManagerClipIDR\bvideoIds\x12#\n" +
	"\rowner_steamid\x18\n" +
	" \x01(\x06R\fownerSteamid\x12'\n" +
	"\x0fupload_complete\x18\v \x01(\bR\x0euploadComplete\x12\x1f\n" +
	"\vduration_ms\x18\f \x01(\rR\n" +
	"durationMs\"\xf5\x01\n" +
	"\x1fCMsgVideoGameRecordingComponent\x12%\n" +
	"\x0ecomponent_name\x18\x01 \x01(\tR\rcomponentName\x12\x1a\n" +
	"\bcontents\x18\x02 \x01(\rR\bcontents\x12!\n" +
	"\fsegment_size\x18\x03 \x01(\rR\vsegmentSize\x12\x1b\n" +
	"\tfile_type\x18\x04 \x01(\tR\bfileType\x12O\n" +
	"\x0frepresentations\x18\x05 \x03(\v2%.CMsgVideoGameRecordingRepresentationR\x0frepresentations\"\xad\x03\n" +
	"\x19CMsgVideoGameRecordingDef\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x04R\asteamid\x12\x15\n" +
	"\x06app_id\x18\x02 \x01(\rR\x05appId\x12!\n" +
	"\fnum_segments\x18\x03 \x01(\rR\vnumSegments\x12/\n" +
	"\x13length_milliseconds\x18\x04 \x01(\rR\x12lengthMilliseconds\x12<\n" +
	"\x1asegment_duration_timescale\x18\x05 \x01(\rR\x18segmentDurationTimescale\x12)\n" +
	"\x10segment_duration\x18\x06 \x01(\rR\x0fsegmentDuration\x12@\n" +
	"\n" +
	"components\x18\a \x03(\v2 .CMsgVideoGameRecordingComponentR\n" +
	"components\x12\"\n" +
	"\rstart_time_ms\x18\b \x01(\rR\vstartTimeMs\x12<\n" +
	"\x1bstart_offset_in_timeline_ms\x18\t \x01(\rR\x17startOffsetInTimelineMs\"\xdf\x03\n" +
	"$CMsgVideoGameRecordingRepresentation\x12/\n" +
	"\x13representation_name\x18\x02 \x01(\tR\x12representationName\x123\n" +
	"\x15horizontal_resolution\x18\x03 \x01(\rR\x14horizontalResolution\x12/\n" +
	"\x13vertical_resolution\x18\x04 \x01(\rR\x12verticalResolution\x12\x1d\n" +
	"\n" +
	"frame_rate\x18\x05 \x01(\x01R\tframeRate\x12\x1c\n" +
	"\tbandwidth\x18\x06 \x01(\rR\tbandwidth\x12*\n" +
	"\x11audio_sample_rate\x18\a \x01(\rR\x0faudioSampleRate\x12*\n" +
	"\x11frame_rate_string\x18\b \x01(\tR\x0fframeRateString\x12\x14\n" +
	"\x05codec\x18\t \x01(\tR\x05codec\x120\n" +
	"\x14audio_channel_config\x18\n" +
	" \x01(\rR\x12audioChannelConfig\x12C\n" +
	"\fsegment_info\x18\v \x03(\v2 .CVideo_GameRecordingSegmentInfoR\vsegmentInfo\"\x97\x02\n" +
	"\x13CVideoManagerClipID\x121\n" +
	"\x15video_manager_clip_id\x18\x01 \x01(\x06R\x12videoManagerClipId\x123\n" +
	"\x16video_manager_video_id\x18\x02 \x01(\x06R\x13videoManagerVideoId\x12,\n" +
	"\x12server_timeline_id\x18\x03 \x01(\x06R\x10serverTimelineId\x12!\n" +
	"\fmanifest_url\x18\x04 \x01(\tR\vmanifestUrl\x12\x1f\n" +
	"\vduration_ms\x18\x05 \x01(\rR\n" +
	"durationMs\x12&\n" +
	"\x0fstart_offset_ms\x18\x06 \x01(\rR\rstartOffsetMs2\xd4\x02\n" +
	"\x11GameRecordingClip\x12d\n" +
	"\x0fCreateShareClip\x12'.CGameRecording_CreateShareClip_Request\x1a(.CGameRecording_CreateShareClip_Response\x12g\n" +
	"\x10DeleteSharedClip\x12(.CGameRecording_DeleteSharedClip_Request\x1a).CGameRecording_DeleteSharedClip_Response\x12p\n" +
	"\x13GetSingleSharedClip\x12+.CGameRecording_GetSingleSharedClip_Request\x1a,.CGameRecording_GetSingleSharedClip_Response"

var (
	file_service_gamerecordingclip_proto_rawDescOnce sync.Once
	file_service_gamerecordingclip_proto_rawDescData []byte
)

func file_service_gamerecordingclip_proto_rawDescGZIP() []byte {
	file_service_gamerecordingclip_proto_rawDescOnce.Do(func() {
		file_service_gamerecordingclip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_gamerecordingclip_proto_rawDesc), len(file_service_gamerecordingclip_proto_rawDesc)))
	})
	return file_service_gamerecordingclip_proto_rawDescData
}

var file_service_gamerecordingclip_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_gamerecordingclip_proto_goTypes = []any{
	(*CGameRecording_CreateShareClip_Request)(nil),      // 0: CGameRecording_CreateShareClip_Request
	(*CGameRecording_CreateShareClip_Response)(nil),     // 1: CGameRecording_CreateShareClip_Response
	(*CGameRecording_DeleteSharedClip_Request)(nil),     // 2: CGameRecording_DeleteSharedClip_Request
	(*CGameRecording_DeleteSharedClip_Response)(nil),    // 3: CGameRecording_DeleteSharedClip_Response
	(*CGameRecording_GetSingleSharedClip_Request)(nil),  // 4: CGameRecording_GetSingleSharedClip_Request
	(*CGameRecording_GetSingleSharedClip_Response)(nil), // 5: CGameRecording_GetSingleSharedClip_Response
	(*CGameRecordingClip)(nil),                          // 6: CGameRecordingClip
	(*CMsgVideoGameRecordingComponent)(nil),             // 7: CMsgVideoGameRecordingComponent
	(*CMsgVideoGameRecordingDef)(nil),                   // 8: CMsgVideoGameRecordingDef
	(*CMsgVideoGameRecordingRepresentation)(nil),        // 9: CMsgVideoGameRecordingRepresentation
	(*CVideoManagerClipID)(nil),                         // 10: CVideoManagerClipID
	(*CVideo_GameRecordingSegmentInfo)(nil),             // 11: CVideo_GameRecordingSegmentInfo
}
var file_service_gamerecordingclip_proto_depIdxs = []int32{
	6,  // 0: CGameRecording_CreateShareClip_Request.clip:type_name -> CGameRecordingClip
	8,  // 1: CGameRecording_CreateShareClip_Request.video_def:type_name -> CMsgVideoGameRecordingDef
	6,  // 2: CGameRecording_CreateShareClip_Response.clip:type_name -> CGameRecordingClip
	6,  // 3: CGameRecording_GetSingleSharedClip_Response.clip:type_name -> CGameRecordingClip
	10, // 4: CGameRecordingClip.video_ids:type_name -> CVideoManagerClipID
	9,  // 5: CMsgVideoGameRecordingComponent.representations:type_name -> CMsgVideoGameRecordingRepresentation
	7,  // 6: CMsgVideoGameRecordingDef.components:type_name -> CMsgVideoGameRecordingComponent
	11, // 7: CMsgVideoGameRecordingRepresentation.segment_info:type_name -> CVideo_GameRecordingSegmentInfo
	0,  // 8: GameRecordingClip.CreateShareClip:input_type -> CGameRecording_CreateShareClip_Request
	2,  // 9: GameRecordingClip.DeleteSharedClip:input_type -> CGameRecording_DeleteSharedClip_Request
	4,  // 10: GameRecordingClip.GetSingleSharedClip:input_type -> CGameRecording_GetSingleSharedClip_Request
	1,  // 11: GameRecordingClip.CreateShareClip:output_type -> CGameRecording_CreateShareClip_Response
	3,  // 12: GameRecordingClip.DeleteSharedClip:output_type -> CGameRecording_DeleteSharedClip_Response
	5,  // 13: GameRecordingClip.GetSingleSharedClip:output_type -> CGameRecording_GetSingleSharedClip_Response
	11, // [11:14] is the sub-list for method output_type
	8,  // [8:11] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_service_gamerecordingclip_proto_init() }
func file_service_gamerecordingclip_proto_init() {
	if File_service_gamerecordingclip_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_gamerecordingclip_proto_rawDesc), len(file_service_gamerecordingclip_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_gamerecordingclip_proto_goTypes,
		DependencyIndexes: file_service_gamerecordingclip_proto_depIdxs,
		MessageInfos:      file_service_gamerecordingclip_proto_msgTypes,
	}.Build()
	File_service_gamerecordingclip_proto = out.File
	file_service_gamerecordingclip_proto_goTypes = nil
	file_service_gamerecordingclip_proto_depIdxs = nil
}
