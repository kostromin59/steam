// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_embedded.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CEmbeddedClient_AuthorizeCurrentDevice_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid         *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	DeviceInfo    *string                `protobuf:"bytes,3,opt,name=device_info,json=deviceInfo" json:"device_info,omitempty"`
	Deviceid      *uint32                `protobuf:"varint,4,opt,name=deviceid" json:"deviceid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) Reset() {
	*x = CEmbeddedClient_AuthorizeCurrentDevice_Request{}
	mi := &file_service_embedded_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEmbeddedClient_AuthorizeCurrentDevice_Request) ProtoMessage() {}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_embedded_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEmbeddedClient_AuthorizeCurrentDevice_Request.ProtoReflect.Descriptor instead.
func (*CEmbeddedClient_AuthorizeCurrentDevice_Request) Descriptor() ([]byte, []int) {
	return file_service_embedded_proto_rawDescGZIP(), []int{0}
}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) GetDeviceInfo() string {
	if x != nil && x.DeviceInfo != nil {
		return *x.DeviceInfo
	}
	return ""
}

func (x *CEmbeddedClient_AuthorizeCurrentDevice_Request) GetDeviceid() uint32 {
	if x != nil && x.Deviceid != nil {
		return *x.Deviceid
	}
	return 0
}

type CEmbeddedClient_AuthorizeDevice_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	Token         *CEmbeddedClient_Token `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CEmbeddedClient_AuthorizeDevice_Response) Reset() {
	*x = CEmbeddedClient_AuthorizeDevice_Response{}
	mi := &file_service_embedded_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CEmbeddedClient_AuthorizeDevice_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEmbeddedClient_AuthorizeDevice_Response) ProtoMessage() {}

func (x *CEmbeddedClient_AuthorizeDevice_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_embedded_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEmbeddedClient_AuthorizeDevice_Response.ProtoReflect.Descriptor instead.
func (*CEmbeddedClient_AuthorizeDevice_Response) Descriptor() ([]byte, []int) {
	return file_service_embedded_proto_rawDescGZIP(), []int{1}
}

func (x *CEmbeddedClient_AuthorizeDevice_Response) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *CEmbeddedClient_AuthorizeDevice_Response) GetToken() *CEmbeddedClient_Token {
	if x != nil {
		return x.Token
	}
	return nil
}

type CEmbeddedClient_Token struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	ClientToken   []byte                 `protobuf:"bytes,2,opt,name=client_token,json=clientToken" json:"client_token,omitempty"`
	Expiry        *uint32                `protobuf:"varint,3,opt,name=expiry" json:"expiry,omitempty"`
	Deviceid      *uint32                `protobuf:"varint,4,opt,name=deviceid" json:"deviceid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CEmbeddedClient_Token) Reset() {
	*x = CEmbeddedClient_Token{}
	mi := &file_service_embedded_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CEmbeddedClient_Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEmbeddedClient_Token) ProtoMessage() {}

func (x *CEmbeddedClient_Token) ProtoReflect() protoreflect.Message {
	mi := &file_service_embedded_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEmbeddedClient_Token.ProtoReflect.Descriptor instead.
func (*CEmbeddedClient_Token) Descriptor() ([]byte, []int) {
	return file_service_embedded_proto_rawDescGZIP(), []int{2}
}

func (x *CEmbeddedClient_Token) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CEmbeddedClient_Token) GetClientToken() []byte {
	if x != nil {
		return x.ClientToken
	}
	return nil
}

func (x *CEmbeddedClient_Token) GetExpiry() uint32 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

func (x *CEmbeddedClient_Token) GetDeviceid() uint32 {
	if x != nil && x.Deviceid != nil {
		return *x.Deviceid
	}
	return 0
}

var File_service_embedded_proto protoreflect.FileDescriptor

const file_service_embedded_proto_rawDesc = "" +
	"\n" +
	"\x16service_embedded.proto\"\x9d\x01\n" +
	".CEmbeddedClient_AuthorizeCurrentDevice_Request\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x12\x1f\n" +
	"\vdevice_info\x18\x03 \x01(\tR\n" +
	"deviceInfo\x12\x1a\n" +
	"\bdeviceid\x18\x04 \x01(\rR\bdeviceid\"p\n" +
	"(CEmbeddedClient_AuthorizeDevice_Response\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\x12,\n" +
	"\x05token\x18\x02 \x01(\v2\x16.CEmbeddedClient_TokenR\x05token\"\x88\x01\n" +
	"\x15CEmbeddedClient_Token\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12!\n" +
	"\fclient_token\x18\x02 \x01(\fR\vclientToken\x12\x16\n" +
	"\x06expiry\x18\x03 \x01(\rR\x06expiry\x12\x1a\n" +
	"\bdeviceid\x18\x04 \x01(\rR\bdeviceid2\x86\x01\n" +
	"\x0eEmbeddedClient\x12t\n" +
	"\x16AuthorizeCurrentDevice\x12/.CEmbeddedClient_AuthorizeCurrentDevice_Request\x1a).CEmbeddedClient_AuthorizeDevice_Response"

var (
	file_service_embedded_proto_rawDescOnce sync.Once
	file_service_embedded_proto_rawDescData []byte
)

func file_service_embedded_proto_rawDescGZIP() []byte {
	file_service_embedded_proto_rawDescOnce.Do(func() {
		file_service_embedded_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_embedded_proto_rawDesc), len(file_service_embedded_proto_rawDesc)))
	})
	return file_service_embedded_proto_rawDescData
}

var file_service_embedded_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_service_embedded_proto_goTypes = []any{
	(*CEmbeddedClient_AuthorizeCurrentDevice_Request)(nil), // 0: CEmbeddedClient_AuthorizeCurrentDevice_Request
	(*CEmbeddedClient_AuthorizeDevice_Response)(nil),       // 1: CEmbeddedClient_AuthorizeDevice_Response
	(*CEmbeddedClient_Token)(nil),                          // 2: CEmbeddedClient_Token
}
var file_service_embedded_proto_depIdxs = []int32{
	2, // 0: CEmbeddedClient_AuthorizeDevice_Response.token:type_name -> CEmbeddedClient_Token
	0, // 1: EmbeddedClient.AuthorizeCurrentDevice:input_type -> CEmbeddedClient_AuthorizeCurrentDevice_Request
	1, // 2: EmbeddedClient.AuthorizeCurrentDevice:output_type -> CEmbeddedClient_AuthorizeDevice_Response
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_service_embedded_proto_init() }
func file_service_embedded_proto_init() {
	if File_service_embedded_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_embedded_proto_rawDesc), len(file_service_embedded_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_embedded_proto_goTypes,
		DependencyIndexes: file_service_embedded_proto_depIdxs,
		MessageInfos:      file_service_embedded_proto_msgTypes,
	}.Build()
	File_service_embedded_proto = out.File
	file_service_embedded_proto_goTypes = nil
	file_service_embedded_proto_depIdxs = nil
}
