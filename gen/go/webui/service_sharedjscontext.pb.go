// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0
// source: service_sharedjscontext.proto

package webui

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgSteamUIBrowserWindow struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    *int32                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Pid                   *int32                 `protobuf:"varint,2,opt,name=pid" json:"pid,omitempty"`
	BrowserId             *int32                 `protobuf:"varint,3,opt,name=browser_id,json=browserId" json:"browser_id,omitempty"`
	WindowType            *int32                 `protobuf:"varint,4,opt,name=window_type,json=windowType" json:"window_type,omitempty"`
	X                     *int32                 `protobuf:"varint,5,opt,name=x" json:"x,omitempty"`
	Y                     *int32                 `protobuf:"varint,6,opt,name=y" json:"y,omitempty"`
	Appid                 *uint64                `protobuf:"varint,7,opt,name=appid" json:"appid,omitempty"`
	ParentWindowHandle    *uint64                `protobuf:"varint,8,opt,name=parent_window_handle,json=parentWindowHandle" json:"parent_window_handle,omitempty"`
	AppName               *string                `protobuf:"bytes,9,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	GamepaduiViaGamescope *bool                  `protobuf:"varint,10,opt,name=gamepadui_via_gamescope,json=gamepaduiViaGamescope" json:"gamepadui_via_gamescope,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CMsgSteamUIBrowserWindow) Reset() {
	*x = CMsgSteamUIBrowserWindow{}
	mi := &file_service_sharedjscontext_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamUIBrowserWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamUIBrowserWindow) ProtoMessage() {}

func (x *CMsgSteamUIBrowserWindow) ProtoReflect() protoreflect.Message {
	mi := &file_service_sharedjscontext_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamUIBrowserWindow.ProtoReflect.Descriptor instead.
func (*CMsgSteamUIBrowserWindow) Descriptor() ([]byte, []int) {
	return file_service_sharedjscontext_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSteamUIBrowserWindow) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetPid() int32 {
	if x != nil && x.Pid != nil {
		return *x.Pid
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetBrowserId() int32 {
	if x != nil && x.BrowserId != nil {
		return *x.BrowserId
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetWindowType() int32 {
	if x != nil && x.WindowType != nil {
		return *x.WindowType
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetAppid() uint64 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetParentWindowHandle() uint64 {
	if x != nil && x.ParentWindowHandle != nil {
		return *x.ParentWindowHandle
	}
	return 0
}

func (x *CMsgSteamUIBrowserWindow) GetAppName() string {
	if x != nil && x.AppName != nil {
		return *x.AppName
	}
	return ""
}

func (x *CMsgSteamUIBrowserWindow) GetGamepaduiViaGamescope() bool {
	if x != nil && x.GamepaduiViaGamescope != nil {
		return *x.GamepaduiViaGamescope
	}
	return false
}

type CSharedJSContext_GetDesiredSteamUIWindows_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Request) Reset() {
	*x = CSharedJSContext_GetDesiredSteamUIWindows_Request{}
	mi := &file_service_sharedjscontext_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSharedJSContext_GetDesiredSteamUIWindows_Request) ProtoMessage() {}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Request) ProtoReflect() protoreflect.Message {
	mi := &file_service_sharedjscontext_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSharedJSContext_GetDesiredSteamUIWindows_Request.ProtoReflect.Descriptor instead.
func (*CSharedJSContext_GetDesiredSteamUIWindows_Request) Descriptor() ([]byte, []int) {
	return file_service_sharedjscontext_proto_rawDescGZIP(), []int{1}
}

type CSharedJSContext_GetDesiredSteamUIWindows_Response struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Windows       []*CMsgSteamUIBrowserWindow `protobuf:"bytes,1,rep,name=windows" json:"windows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Response) Reset() {
	*x = CSharedJSContext_GetDesiredSteamUIWindows_Response{}
	mi := &file_service_sharedjscontext_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSharedJSContext_GetDesiredSteamUIWindows_Response) ProtoMessage() {}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Response) ProtoReflect() protoreflect.Message {
	mi := &file_service_sharedjscontext_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSharedJSContext_GetDesiredSteamUIWindows_Response.ProtoReflect.Descriptor instead.
func (*CSharedJSContext_GetDesiredSteamUIWindows_Response) Descriptor() ([]byte, []int) {
	return file_service_sharedjscontext_proto_rawDescGZIP(), []int{2}
}

func (x *CSharedJSContext_GetDesiredSteamUIWindows_Response) GetWindows() []*CMsgSteamUIBrowserWindow {
	if x != nil {
		return x.Windows
	}
	return nil
}

var File_service_sharedjscontext_proto protoreflect.FileDescriptor

const file_service_sharedjscontext_proto_rawDesc = "" +
	"\n" +
	"\x1dservice_sharedjscontext.proto\"\xb3\x02\n" +
	"\x18CMsgSteamUIBrowserWindow\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x10\n" +
	"\x03pid\x18\x02 \x01(\x05R\x03pid\x12\x1d\n" +
	"\n" +
	"browser_id\x18\x03 \x01(\x05R\tbrowserId\x12\x1f\n" +
	"\vwindow_type\x18\x04 \x01(\x05R\n" +
	"windowType\x12\f\n" +
	"\x01x\x18\x05 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x06 \x01(\x05R\x01y\x12\x14\n" +
	"\x05appid\x18\a \x01(\x04R\x05appid\x120\n" +
	"\x14parent_window_handle\x18\b \x01(\x04R\x12parentWindowHandle\x12\x19\n" +
	"\bapp_name\x18\t \x01(\tR\aappName\x126\n" +
	"\x17gamepadui_via_gamescope\x18\n" +
	" \x01(\bR\x15gamepaduiViaGamescope\"3\n" +
	"1CSharedJSContext_GetDesiredSteamUIWindows_Request\"i\n" +
	"2CSharedJSContext_GetDesiredSteamUIWindows_Response\x123\n" +
	"\awindows\x18\x01 \x03(\v2\x19.CMsgSteamUIBrowserWindowR\awindows2\x97\x01\n" +
	"\x0fSharedJSContext\x12\x83\x01\n" +
	"\x18GetDesiredSteamUIWindows\x122.CSharedJSContext_GetDesiredSteamUIWindows_Request\x1a3.CSharedJSContext_GetDesiredSteamUIWindows_Response"

var (
	file_service_sharedjscontext_proto_rawDescOnce sync.Once
	file_service_sharedjscontext_proto_rawDescData []byte
)

func file_service_sharedjscontext_proto_rawDescGZIP() []byte {
	file_service_sharedjscontext_proto_rawDescOnce.Do(func() {
		file_service_sharedjscontext_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_sharedjscontext_proto_rawDesc), len(file_service_sharedjscontext_proto_rawDesc)))
	})
	return file_service_sharedjscontext_proto_rawDescData
}

var file_service_sharedjscontext_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_service_sharedjscontext_proto_goTypes = []any{
	(*CMsgSteamUIBrowserWindow)(nil),                           // 0: CMsgSteamUIBrowserWindow
	(*CSharedJSContext_GetDesiredSteamUIWindows_Request)(nil),  // 1: CSharedJSContext_GetDesiredSteamUIWindows_Request
	(*CSharedJSContext_GetDesiredSteamUIWindows_Response)(nil), // 2: CSharedJSContext_GetDesiredSteamUIWindows_Response
}
var file_service_sharedjscontext_proto_depIdxs = []int32{
	0, // 0: CSharedJSContext_GetDesiredSteamUIWindows_Response.windows:type_name -> CMsgSteamUIBrowserWindow
	1, // 1: SharedJSContext.GetDesiredSteamUIWindows:input_type -> CSharedJSContext_GetDesiredSteamUIWindows_Request
	2, // 2: SharedJSContext.GetDesiredSteamUIWindows:output_type -> CSharedJSContext_GetDesiredSteamUIWindows_Response
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_service_sharedjscontext_proto_init() }
func file_service_sharedjscontext_proto_init() {
	if File_service_sharedjscontext_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_sharedjscontext_proto_rawDesc), len(file_service_sharedjscontext_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_sharedjscontext_proto_goTypes,
		DependencyIndexes: file_service_sharedjscontext_proto_depIdxs,
		MessageInfos:      file_service_sharedjscontext_proto_msgTypes,
	}.Build()
	File_service_sharedjscontext_proto = out.File
	file_service_sharedjscontext_proto_goTypes = nil
	file_service_sharedjscontext_proto_depIdxs = nil
}
