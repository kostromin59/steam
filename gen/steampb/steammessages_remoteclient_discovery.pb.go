// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_remoteclient_discovery.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ERemoteClientBroadcastMsg int32

const (
	ERemoteClientBroadcastMsg_k_ERemoteClientBroadcastMsgDiscovery          ERemoteClientBroadcastMsg = 0
	ERemoteClientBroadcastMsg_k_ERemoteClientBroadcastMsgStatus             ERemoteClientBroadcastMsg = 1
	ERemoteClientBroadcastMsg_k_ERemoteClientBroadcastMsgOffline            ERemoteClientBroadcastMsg = 2
	ERemoteClientBroadcastMsg_k_ERemoteDeviceAuthorizationRequest           ERemoteClientBroadcastMsg = 3
	ERemoteClientBroadcastMsg_k_ERemoteDeviceAuthorizationResponse          ERemoteClientBroadcastMsg = 4
	ERemoteClientBroadcastMsg_k_ERemoteDeviceStreamingRequest               ERemoteClientBroadcastMsg = 5
	ERemoteClientBroadcastMsg_k_ERemoteDeviceStreamingResponse              ERemoteClientBroadcastMsg = 6
	ERemoteClientBroadcastMsg_k_ERemoteDeviceProofRequest                   ERemoteClientBroadcastMsg = 7
	ERemoteClientBroadcastMsg_k_ERemoteDeviceProofResponse                  ERemoteClientBroadcastMsg = 8
	ERemoteClientBroadcastMsg_k_ERemoteDeviceAuthorizationCancelRequest     ERemoteClientBroadcastMsg = 9
	ERemoteClientBroadcastMsg_k_ERemoteDeviceStreamingCancelRequest         ERemoteClientBroadcastMsg = 10
	ERemoteClientBroadcastMsg_k_ERemoteClientBroadcastMsgClientIDDeconflict ERemoteClientBroadcastMsg = 11
	ERemoteClientBroadcastMsg_k_ERemoteDeviceStreamTransportSignal          ERemoteClientBroadcastMsg = 12
	ERemoteClientBroadcastMsg_k_ERemoteDeviceStreamingProgress              ERemoteClientBroadcastMsg = 13
	ERemoteClientBroadcastMsg_k_ERemoteDeviceAuthorizationConfirmed         ERemoteClientBroadcastMsg = 14
)

// Enum value maps for ERemoteClientBroadcastMsg.
var (
	ERemoteClientBroadcastMsg_name = map[int32]string{
		0:  "k_ERemoteClientBroadcastMsgDiscovery",
		1:  "k_ERemoteClientBroadcastMsgStatus",
		2:  "k_ERemoteClientBroadcastMsgOffline",
		3:  "k_ERemoteDeviceAuthorizationRequest",
		4:  "k_ERemoteDeviceAuthorizationResponse",
		5:  "k_ERemoteDeviceStreamingRequest",
		6:  "k_ERemoteDeviceStreamingResponse",
		7:  "k_ERemoteDeviceProofRequest",
		8:  "k_ERemoteDeviceProofResponse",
		9:  "k_ERemoteDeviceAuthorizationCancelRequest",
		10: "k_ERemoteDeviceStreamingCancelRequest",
		11: "k_ERemoteClientBroadcastMsgClientIDDeconflict",
		12: "k_ERemoteDeviceStreamTransportSignal",
		13: "k_ERemoteDeviceStreamingProgress",
		14: "k_ERemoteDeviceAuthorizationConfirmed",
	}
	ERemoteClientBroadcastMsg_value = map[string]int32{
		"k_ERemoteClientBroadcastMsgDiscovery":          0,
		"k_ERemoteClientBroadcastMsgStatus":             1,
		"k_ERemoteClientBroadcastMsgOffline":            2,
		"k_ERemoteDeviceAuthorizationRequest":           3,
		"k_ERemoteDeviceAuthorizationResponse":          4,
		"k_ERemoteDeviceStreamingRequest":               5,
		"k_ERemoteDeviceStreamingResponse":              6,
		"k_ERemoteDeviceProofRequest":                   7,
		"k_ERemoteDeviceProofResponse":                  8,
		"k_ERemoteDeviceAuthorizationCancelRequest":     9,
		"k_ERemoteDeviceStreamingCancelRequest":         10,
		"k_ERemoteClientBroadcastMsgClientIDDeconflict": 11,
		"k_ERemoteDeviceStreamTransportSignal":          12,
		"k_ERemoteDeviceStreamingProgress":              13,
		"k_ERemoteDeviceAuthorizationConfirmed":         14,
	}
)

func (x ERemoteClientBroadcastMsg) Enum() *ERemoteClientBroadcastMsg {
	p := new(ERemoteClientBroadcastMsg)
	*p = x
	return p
}

func (x ERemoteClientBroadcastMsg) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERemoteClientBroadcastMsg) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[0].Descriptor()
}

func (ERemoteClientBroadcastMsg) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[0]
}

func (x ERemoteClientBroadcastMsg) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERemoteClientBroadcastMsg) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERemoteClientBroadcastMsg(num)
	return nil
}

// Deprecated: Use ERemoteClientBroadcastMsg.Descriptor instead.
func (ERemoteClientBroadcastMsg) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{0}
}

type ERemoteClientService int32

const (
	ERemoteClientService_k_ERemoteClientServiceNone          ERemoteClientService = 0
	ERemoteClientService_k_ERemoteClientServiceRemoteControl ERemoteClientService = 1
	ERemoteClientService_k_ERemoteClientServiceGameStreaming ERemoteClientService = 2
	ERemoteClientService_k_ERemoteClientServiceSiteLicense   ERemoteClientService = 4
	ERemoteClientService_k_ERemoteClientServiceContentCache  ERemoteClientService = 8
	ERemoteClientService_k_ERemoteClientServiceContentServer ERemoteClientService = 16
)

// Enum value maps for ERemoteClientService.
var (
	ERemoteClientService_name = map[int32]string{
		0:  "k_ERemoteClientServiceNone",
		1:  "k_ERemoteClientServiceRemoteControl",
		2:  "k_ERemoteClientServiceGameStreaming",
		4:  "k_ERemoteClientServiceSiteLicense",
		8:  "k_ERemoteClientServiceContentCache",
		16: "k_ERemoteClientServiceContentServer",
	}
	ERemoteClientService_value = map[string]int32{
		"k_ERemoteClientServiceNone":          0,
		"k_ERemoteClientServiceRemoteControl": 1,
		"k_ERemoteClientServiceGameStreaming": 2,
		"k_ERemoteClientServiceSiteLicense":   4,
		"k_ERemoteClientServiceContentCache":  8,
		"k_ERemoteClientServiceContentServer": 16,
	}
)

func (x ERemoteClientService) Enum() *ERemoteClientService {
	p := new(ERemoteClientService)
	*p = x
	return p
}

func (x ERemoteClientService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERemoteClientService) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[1].Descriptor()
}

func (ERemoteClientService) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[1]
}

func (x ERemoteClientService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERemoteClientService) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERemoteClientService(num)
	return nil
}

// Deprecated: Use ERemoteClientService.Descriptor instead.
func (ERemoteClientService) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{1}
}

type EVRLinkCaps int32

const (
	EVRLinkCaps_k_EVRLinkCapsUnknown                 EVRLinkCaps = 0
	EVRLinkCaps_k_EVRLinkCapsAvailable               EVRLinkCaps = 1
	EVRLinkCaps_k_EVRLinkCapsUnimplemented           EVRLinkCaps = 2
	EVRLinkCaps_k_EVRLinkCapsMissingHardwareEncoding EVRLinkCaps = 3
)

// Enum value maps for EVRLinkCaps.
var (
	EVRLinkCaps_name = map[int32]string{
		0: "k_EVRLinkCapsUnknown",
		1: "k_EVRLinkCapsAvailable",
		2: "k_EVRLinkCapsUnimplemented",
		3: "k_EVRLinkCapsMissingHardwareEncoding",
	}
	EVRLinkCaps_value = map[string]int32{
		"k_EVRLinkCapsUnknown":                 0,
		"k_EVRLinkCapsAvailable":               1,
		"k_EVRLinkCapsUnimplemented":           2,
		"k_EVRLinkCapsMissingHardwareEncoding": 3,
	}
)

func (x EVRLinkCaps) Enum() *EVRLinkCaps {
	p := new(EVRLinkCaps)
	*p = x
	return p
}

func (x EVRLinkCaps) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EVRLinkCaps) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[2].Descriptor()
}

func (EVRLinkCaps) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[2]
}

func (x EVRLinkCaps) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EVRLinkCaps) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EVRLinkCaps(num)
	return nil
}

// Deprecated: Use EVRLinkCaps.Descriptor instead.
func (EVRLinkCaps) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{2}
}

type ERemoteDeviceAuthorizationResult int32

const (
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationSuccess     ERemoteDeviceAuthorizationResult = 0
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationDenied      ERemoteDeviceAuthorizationResult = 1
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationNotLoggedIn ERemoteDeviceAuthorizationResult = 2
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationOffline     ERemoteDeviceAuthorizationResult = 3
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationBusy        ERemoteDeviceAuthorizationResult = 4
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationInProgress  ERemoteDeviceAuthorizationResult = 5
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationTimedOut    ERemoteDeviceAuthorizationResult = 6
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationFailed      ERemoteDeviceAuthorizationResult = 7
	ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationCanceled    ERemoteDeviceAuthorizationResult = 8
)

// Enum value maps for ERemoteDeviceAuthorizationResult.
var (
	ERemoteDeviceAuthorizationResult_name = map[int32]string{
		0: "k_ERemoteDeviceAuthorizationSuccess",
		1: "k_ERemoteDeviceAuthorizationDenied",
		2: "k_ERemoteDeviceAuthorizationNotLoggedIn",
		3: "k_ERemoteDeviceAuthorizationOffline",
		4: "k_ERemoteDeviceAuthorizationBusy",
		5: "k_ERemoteDeviceAuthorizationInProgress",
		6: "k_ERemoteDeviceAuthorizationTimedOut",
		7: "k_ERemoteDeviceAuthorizationFailed",
		8: "k_ERemoteDeviceAuthorizationCanceled",
	}
	ERemoteDeviceAuthorizationResult_value = map[string]int32{
		"k_ERemoteDeviceAuthorizationSuccess":     0,
		"k_ERemoteDeviceAuthorizationDenied":      1,
		"k_ERemoteDeviceAuthorizationNotLoggedIn": 2,
		"k_ERemoteDeviceAuthorizationOffline":     3,
		"k_ERemoteDeviceAuthorizationBusy":        4,
		"k_ERemoteDeviceAuthorizationInProgress":  5,
		"k_ERemoteDeviceAuthorizationTimedOut":    6,
		"k_ERemoteDeviceAuthorizationFailed":      7,
		"k_ERemoteDeviceAuthorizationCanceled":    8,
	}
)

func (x ERemoteDeviceAuthorizationResult) Enum() *ERemoteDeviceAuthorizationResult {
	p := new(ERemoteDeviceAuthorizationResult)
	*p = x
	return p
}

func (x ERemoteDeviceAuthorizationResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERemoteDeviceAuthorizationResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[3].Descriptor()
}

func (ERemoteDeviceAuthorizationResult) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[3]
}

func (x ERemoteDeviceAuthorizationResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERemoteDeviceAuthorizationResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERemoteDeviceAuthorizationResult(num)
	return nil
}

// Deprecated: Use ERemoteDeviceAuthorizationResult.Descriptor instead.
func (ERemoteDeviceAuthorizationResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{3}
}

type EStreamDeviceFormFactor int32

const (
	EStreamDeviceFormFactor_k_EStreamDeviceFormFactorUnknown   EStreamDeviceFormFactor = 0
	EStreamDeviceFormFactor_k_EStreamDeviceFormFactorPhone     EStreamDeviceFormFactor = 1
	EStreamDeviceFormFactor_k_EStreamDeviceFormFactorTablet    EStreamDeviceFormFactor = 2
	EStreamDeviceFormFactor_k_EStreamDeviceFormFactorComputer  EStreamDeviceFormFactor = 3
	EStreamDeviceFormFactor_k_EStreamDeviceFormFactorTV        EStreamDeviceFormFactor = 4
	EStreamDeviceFormFactor_k_EStreamDeviceFormFactorVRHeadset EStreamDeviceFormFactor = 5
)

// Enum value maps for EStreamDeviceFormFactor.
var (
	EStreamDeviceFormFactor_name = map[int32]string{
		0: "k_EStreamDeviceFormFactorUnknown",
		1: "k_EStreamDeviceFormFactorPhone",
		2: "k_EStreamDeviceFormFactorTablet",
		3: "k_EStreamDeviceFormFactorComputer",
		4: "k_EStreamDeviceFormFactorTV",
		5: "k_EStreamDeviceFormFactorVRHeadset",
	}
	EStreamDeviceFormFactor_value = map[string]int32{
		"k_EStreamDeviceFormFactorUnknown":   0,
		"k_EStreamDeviceFormFactorPhone":     1,
		"k_EStreamDeviceFormFactorTablet":    2,
		"k_EStreamDeviceFormFactorComputer":  3,
		"k_EStreamDeviceFormFactorTV":        4,
		"k_EStreamDeviceFormFactorVRHeadset": 5,
	}
)

func (x EStreamDeviceFormFactor) Enum() *EStreamDeviceFormFactor {
	p := new(EStreamDeviceFormFactor)
	*p = x
	return p
}

func (x EStreamDeviceFormFactor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStreamDeviceFormFactor) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[4].Descriptor()
}

func (EStreamDeviceFormFactor) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[4]
}

func (x EStreamDeviceFormFactor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStreamDeviceFormFactor) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStreamDeviceFormFactor(num)
	return nil
}

// Deprecated: Use EStreamDeviceFormFactor.Descriptor instead.
func (EStreamDeviceFormFactor) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{4}
}

type EStreamTransport int32

const (
	EStreamTransport_k_EStreamTransportNone            EStreamTransport = 0
	EStreamTransport_k_EStreamTransportUDP             EStreamTransport = 1
	EStreamTransport_k_EStreamTransportUDPRelay        EStreamTransport = 2
	EStreamTransport_k_EStreamTransportWebRTC_OBSOLETE EStreamTransport = 3
	EStreamTransport_k_EStreamTransportSDR             EStreamTransport = 4
	EStreamTransport_k_EStreamTransportUDP_SNS         EStreamTransport = 5
	EStreamTransport_k_EStreamTransportUDPRelay_SNS    EStreamTransport = 6
)

// Enum value maps for EStreamTransport.
var (
	EStreamTransport_name = map[int32]string{
		0: "k_EStreamTransportNone",
		1: "k_EStreamTransportUDP",
		2: "k_EStreamTransportUDPRelay",
		3: "k_EStreamTransportWebRTC_OBSOLETE",
		4: "k_EStreamTransportSDR",
		5: "k_EStreamTransportUDP_SNS",
		6: "k_EStreamTransportUDPRelay_SNS",
	}
	EStreamTransport_value = map[string]int32{
		"k_EStreamTransportNone":            0,
		"k_EStreamTransportUDP":             1,
		"k_EStreamTransportUDPRelay":        2,
		"k_EStreamTransportWebRTC_OBSOLETE": 3,
		"k_EStreamTransportSDR":             4,
		"k_EStreamTransportUDP_SNS":         5,
		"k_EStreamTransportUDPRelay_SNS":    6,
	}
)

func (x EStreamTransport) Enum() *EStreamTransport {
	p := new(EStreamTransport)
	*p = x
	return p
}

func (x EStreamTransport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStreamTransport) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[5].Descriptor()
}

func (EStreamTransport) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[5]
}

func (x EStreamTransport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStreamTransport) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStreamTransport(num)
	return nil
}

// Deprecated: Use EStreamTransport.Descriptor instead.
func (EStreamTransport) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{5}
}

type EStreamInterface int32

const (
	EStreamInterface_k_EStreamInterfaceDefault     EStreamInterface = 0
	EStreamInterface_k_EStreamInterfaceRecentGames EStreamInterface = 1
	EStreamInterface_k_EStreamInterfaceBigPicture  EStreamInterface = 2
	EStreamInterface_k_EStreamInterfaceDesktop     EStreamInterface = 3
	EStreamInterface_k_EStreamInterfaceSteamVR     EStreamInterface = 4
)

// Enum value maps for EStreamInterface.
var (
	EStreamInterface_name = map[int32]string{
		0: "k_EStreamInterfaceDefault",
		1: "k_EStreamInterfaceRecentGames",
		2: "k_EStreamInterfaceBigPicture",
		3: "k_EStreamInterfaceDesktop",
		4: "k_EStreamInterfaceSteamVR",
	}
	EStreamInterface_value = map[string]int32{
		"k_EStreamInterfaceDefault":     0,
		"k_EStreamInterfaceRecentGames": 1,
		"k_EStreamInterfaceBigPicture":  2,
		"k_EStreamInterfaceDesktop":     3,
		"k_EStreamInterfaceSteamVR":     4,
	}
)

func (x EStreamInterface) Enum() *EStreamInterface {
	p := new(EStreamInterface)
	*p = x
	return p
}

func (x EStreamInterface) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStreamInterface) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[6].Descriptor()
}

func (EStreamInterface) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[6]
}

func (x EStreamInterface) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStreamInterface) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStreamInterface(num)
	return nil
}

// Deprecated: Use EStreamInterface.Descriptor instead.
func (EStreamInterface) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{6}
}

type ERemoteDeviceStreamingResult int32

const (
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingSuccess              ERemoteDeviceStreamingResult = 0
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingUnauthorized         ERemoteDeviceStreamingResult = 1
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingScreenLocked         ERemoteDeviceStreamingResult = 2
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingFailed               ERemoteDeviceStreamingResult = 3
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingBusy                 ERemoteDeviceStreamingResult = 4
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingInProgress           ERemoteDeviceStreamingResult = 5
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingCanceled             ERemoteDeviceStreamingResult = 6
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingDriversNotInstalled  ERemoteDeviceStreamingResult = 7
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingDisabled             ERemoteDeviceStreamingResult = 8
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingBroadcastingActive   ERemoteDeviceStreamingResult = 9
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingVRActive             ERemoteDeviceStreamingResult = 10
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingPINRequired          ERemoteDeviceStreamingResult = 11
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingTransportUnavailable ERemoteDeviceStreamingResult = 12
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingInvisible            ERemoteDeviceStreamingResult = 13
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingGameLaunchFailed     ERemoteDeviceStreamingResult = 14
	ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingSteamVRNotInstalled  ERemoteDeviceStreamingResult = 15
)

// Enum value maps for ERemoteDeviceStreamingResult.
var (
	ERemoteDeviceStreamingResult_name = map[int32]string{
		0:  "k_ERemoteDeviceStreamingSuccess",
		1:  "k_ERemoteDeviceStreamingUnauthorized",
		2:  "k_ERemoteDeviceStreamingScreenLocked",
		3:  "k_ERemoteDeviceStreamingFailed",
		4:  "k_ERemoteDeviceStreamingBusy",
		5:  "k_ERemoteDeviceStreamingInProgress",
		6:  "k_ERemoteDeviceStreamingCanceled",
		7:  "k_ERemoteDeviceStreamingDriversNotInstalled",
		8:  "k_ERemoteDeviceStreamingDisabled",
		9:  "k_ERemoteDeviceStreamingBroadcastingActive",
		10: "k_ERemoteDeviceStreamingVRActive",
		11: "k_ERemoteDeviceStreamingPINRequired",
		12: "k_ERemoteDeviceStreamingTransportUnavailable",
		13: "k_ERemoteDeviceStreamingInvisible",
		14: "k_ERemoteDeviceStreamingGameLaunchFailed",
		15: "k_ERemoteDeviceStreamingSteamVRNotInstalled",
	}
	ERemoteDeviceStreamingResult_value = map[string]int32{
		"k_ERemoteDeviceStreamingSuccess":              0,
		"k_ERemoteDeviceStreamingUnauthorized":         1,
		"k_ERemoteDeviceStreamingScreenLocked":         2,
		"k_ERemoteDeviceStreamingFailed":               3,
		"k_ERemoteDeviceStreamingBusy":                 4,
		"k_ERemoteDeviceStreamingInProgress":           5,
		"k_ERemoteDeviceStreamingCanceled":             6,
		"k_ERemoteDeviceStreamingDriversNotInstalled":  7,
		"k_ERemoteDeviceStreamingDisabled":             8,
		"k_ERemoteDeviceStreamingBroadcastingActive":   9,
		"k_ERemoteDeviceStreamingVRActive":             10,
		"k_ERemoteDeviceStreamingPINRequired":          11,
		"k_ERemoteDeviceStreamingTransportUnavailable": 12,
		"k_ERemoteDeviceStreamingInvisible":            13,
		"k_ERemoteDeviceStreamingGameLaunchFailed":     14,
		"k_ERemoteDeviceStreamingSteamVRNotInstalled":  15,
	}
)

func (x ERemoteDeviceStreamingResult) Enum() *ERemoteDeviceStreamingResult {
	p := new(ERemoteDeviceStreamingResult)
	*p = x
	return p
}

func (x ERemoteDeviceStreamingResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERemoteDeviceStreamingResult) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[7].Descriptor()
}

func (ERemoteDeviceStreamingResult) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[7]
}

func (x ERemoteDeviceStreamingResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ERemoteDeviceStreamingResult) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ERemoteDeviceStreamingResult(num)
	return nil
}

// Deprecated: Use ERemoteDeviceStreamingResult.Descriptor instead.
func (ERemoteDeviceStreamingResult) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{7}
}

type CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage int32

const (
	CMsgRemoteDeviceAuthorizationRequest_k_EKeyEscrowUsageStreamingDevice CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage = 0
)

// Enum value maps for CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage.
var (
	CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage_name = map[int32]string{
		0: "k_EKeyEscrowUsageStreamingDevice",
	}
	CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage_value = map[string]int32{
		"k_EKeyEscrowUsageStreamingDevice": 0,
	}
)

func (x CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) Enum() *CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage {
	p := new(CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage)
	*p = x
	return p
}

func (x CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_remoteclient_discovery_proto_enumTypes[8].Descriptor()
}

func (CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) Type() protoreflect.EnumType {
	return &file_steammessages_remoteclient_discovery_proto_enumTypes[8]
}

func (x CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage(num)
	return nil
}

// Deprecated: Use CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage.Descriptor instead.
func (CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{4, 0}
}

type CMsgRemoteClientBroadcastHeader struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	ClientId          *uint64                    `protobuf:"varint,1,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	MsgType           *ERemoteClientBroadcastMsg `protobuf:"varint,2,opt,name=msg_type,json=msgType,enum=ERemoteClientBroadcastMsg,def=0" json:"msg_type,omitempty"`
	InstanceId        *uint64                    `protobuf:"varint,3,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	DeviceId_OBSOLETE *uint64                    `protobuf:"varint,4,opt,name=device_id_OBSOLETE,json=deviceIdOBSOLETE" json:"device_id_OBSOLETE,omitempty"`
	DeviceToken       []byte                     `protobuf:"bytes,5,opt,name=device_token,json=deviceToken" json:"device_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgRemoteClientBroadcastHeader fields.
const (
	Default_CMsgRemoteClientBroadcastHeader_MsgType = ERemoteClientBroadcastMsg_k_ERemoteClientBroadcastMsgDiscovery
)

func (x *CMsgRemoteClientBroadcastHeader) Reset() {
	*x = CMsgRemoteClientBroadcastHeader{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientBroadcastHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientBroadcastHeader) ProtoMessage() {}

func (x *CMsgRemoteClientBroadcastHeader) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientBroadcastHeader.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientBroadcastHeader) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgRemoteClientBroadcastHeader) GetClientId() uint64 {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastHeader) GetMsgType() ERemoteClientBroadcastMsg {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return Default_CMsgRemoteClientBroadcastHeader_MsgType
}

func (x *CMsgRemoteClientBroadcastHeader) GetInstanceId() uint64 {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastHeader) GetDeviceId_OBSOLETE() uint64 {
	if x != nil && x.DeviceId_OBSOLETE != nil {
		return *x.DeviceId_OBSOLETE
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastHeader) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

type CMsgRemoteClientBroadcastStatus struct {
	state                protoimpl.MessageState                  `protogen:"open.v1"`
	Version              *int32                                  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	MinVersion           *int32                                  `protobuf:"varint,2,opt,name=min_version,json=minVersion" json:"min_version,omitempty"`
	ConnectPort          *uint32                                 `protobuf:"varint,3,opt,name=connect_port,json=connectPort" json:"connect_port,omitempty"`
	Hostname             *string                                 `protobuf:"bytes,4,opt,name=hostname" json:"hostname,omitempty"`
	EnabledServices      *uint32                                 `protobuf:"varint,6,opt,name=enabled_services,json=enabledServices" json:"enabled_services,omitempty"`
	Ostype               *int32                                  `protobuf:"varint,7,opt,name=ostype,def=0" json:"ostype,omitempty"`
	Is64Bit              *bool                                   `protobuf:"varint,8,opt,name=is64bit" json:"is64bit,omitempty"`
	Users                []*CMsgRemoteClientBroadcastStatus_User `protobuf:"bytes,9,rep,name=users" json:"users,omitempty"`
	Euniverse            *int32                                  `protobuf:"varint,11,opt,name=euniverse" json:"euniverse,omitempty"`
	Timestamp            *uint32                                 `protobuf:"varint,12,opt,name=timestamp" json:"timestamp,omitempty"`
	ScreenLocked         *bool                                   `protobuf:"varint,13,opt,name=screen_locked,json=screenLocked" json:"screen_locked,omitempty"`
	GamesRunning         *bool                                   `protobuf:"varint,14,opt,name=games_running,json=gamesRunning" json:"games_running,omitempty"`
	MacAddresses         []string                                `protobuf:"bytes,15,rep,name=mac_addresses,json=macAddresses" json:"mac_addresses,omitempty"`
	DownloadLanPeerGroup *uint32                                 `protobuf:"varint,16,opt,name=download_lan_peer_group,json=downloadLanPeerGroup" json:"download_lan_peer_group,omitempty"`
	BroadcastingActive   *bool                                   `protobuf:"varint,17,opt,name=broadcasting_active,json=broadcastingActive" json:"broadcasting_active,omitempty"`
	VrActive             *bool                                   `protobuf:"varint,18,opt,name=vr_active,json=vrActive" json:"vr_active,omitempty"`
	ContentCachePort     *uint32                                 `protobuf:"varint,19,opt,name=content_cache_port,json=contentCachePort" json:"content_cache_port,omitempty"`
	IpAddresses          []string                                `protobuf:"bytes,20,rep,name=ip_addresses,json=ipAddresses" json:"ip_addresses,omitempty"`
	PublicIpAddress      *string                                 `protobuf:"bytes,21,opt,name=public_ip_address,json=publicIpAddress" json:"public_ip_address,omitempty"`
	RemoteplayActive     *bool                                   `protobuf:"varint,22,opt,name=remoteplay_active,json=remoteplayActive" json:"remoteplay_active,omitempty"`
	SupportedServices    *uint32                                 `protobuf:"varint,23,opt,name=supported_services,json=supportedServices" json:"supported_services,omitempty"`
	SteamDeck            *bool                                   `protobuf:"varint,24,opt,name=steam_deck,json=steamDeck" json:"steam_deck,omitempty"`
	SteamVersion         *uint64                                 `protobuf:"varint,25,opt,name=steam_version,json=steamVersion" json:"steam_version,omitempty"`
	VrLinkCaps           *EVRLinkCaps                            `protobuf:"varint,26,opt,name=vr_link_caps,json=vrLinkCaps,enum=EVRLinkCaps,def=0" json:"vr_link_caps,omitempty"`
	VrLinkInviteClientId *uint64                                 `protobuf:"fixed64,27,opt,name=vr_link_invite_client_id,json=vrLinkInviteClientId" json:"vr_link_invite_client_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

// Default values for CMsgRemoteClientBroadcastStatus fields.
const (
	Default_CMsgRemoteClientBroadcastStatus_Ostype     = int32(0)
	Default_CMsgRemoteClientBroadcastStatus_VrLinkCaps = EVRLinkCaps_k_EVRLinkCapsUnknown
)

func (x *CMsgRemoteClientBroadcastStatus) Reset() {
	*x = CMsgRemoteClientBroadcastStatus{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientBroadcastStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientBroadcastStatus) ProtoMessage() {}

func (x *CMsgRemoteClientBroadcastStatus) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientBroadcastStatus.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientBroadcastStatus) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgRemoteClientBroadcastStatus) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetMinVersion() int32 {
	if x != nil && x.MinVersion != nil {
		return *x.MinVersion
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetConnectPort() uint32 {
	if x != nil && x.ConnectPort != nil {
		return *x.ConnectPort
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *CMsgRemoteClientBroadcastStatus) GetEnabledServices() uint32 {
	if x != nil && x.EnabledServices != nil {
		return *x.EnabledServices
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetOstype() int32 {
	if x != nil && x.Ostype != nil {
		return *x.Ostype
	}
	return Default_CMsgRemoteClientBroadcastStatus_Ostype
}

func (x *CMsgRemoteClientBroadcastStatus) GetIs64Bit() bool {
	if x != nil && x.Is64Bit != nil {
		return *x.Is64Bit
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetUsers() []*CMsgRemoteClientBroadcastStatus_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *CMsgRemoteClientBroadcastStatus) GetEuniverse() int32 {
	if x != nil && x.Euniverse != nil {
		return *x.Euniverse
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetScreenLocked() bool {
	if x != nil && x.ScreenLocked != nil {
		return *x.ScreenLocked
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetGamesRunning() bool {
	if x != nil && x.GamesRunning != nil {
		return *x.GamesRunning
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetMacAddresses() []string {
	if x != nil {
		return x.MacAddresses
	}
	return nil
}

func (x *CMsgRemoteClientBroadcastStatus) GetDownloadLanPeerGroup() uint32 {
	if x != nil && x.DownloadLanPeerGroup != nil {
		return *x.DownloadLanPeerGroup
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetBroadcastingActive() bool {
	if x != nil && x.BroadcastingActive != nil {
		return *x.BroadcastingActive
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetVrActive() bool {
	if x != nil && x.VrActive != nil {
		return *x.VrActive
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetContentCachePort() uint32 {
	if x != nil && x.ContentCachePort != nil {
		return *x.ContentCachePort
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetIpAddresses() []string {
	if x != nil {
		return x.IpAddresses
	}
	return nil
}

func (x *CMsgRemoteClientBroadcastStatus) GetPublicIpAddress() string {
	if x != nil && x.PublicIpAddress != nil {
		return *x.PublicIpAddress
	}
	return ""
}

func (x *CMsgRemoteClientBroadcastStatus) GetRemoteplayActive() bool {
	if x != nil && x.RemoteplayActive != nil {
		return *x.RemoteplayActive
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetSupportedServices() uint32 {
	if x != nil && x.SupportedServices != nil {
		return *x.SupportedServices
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetSteamDeck() bool {
	if x != nil && x.SteamDeck != nil {
		return *x.SteamDeck
	}
	return false
}

func (x *CMsgRemoteClientBroadcastStatus) GetSteamVersion() uint64 {
	if x != nil && x.SteamVersion != nil {
		return *x.SteamVersion
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus) GetVrLinkCaps() EVRLinkCaps {
	if x != nil && x.VrLinkCaps != nil {
		return *x.VrLinkCaps
	}
	return Default_CMsgRemoteClientBroadcastStatus_VrLinkCaps
}

func (x *CMsgRemoteClientBroadcastStatus) GetVrLinkInviteClientId() uint64 {
	if x != nil && x.VrLinkInviteClientId != nil {
		return *x.VrLinkInviteClientId
	}
	return 0
}

type CMsgRemoteClientBroadcastDiscovery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeqNum        *uint32                `protobuf:"varint,1,opt,name=seq_num,json=seqNum" json:"seq_num,omitempty"`
	ClientIds     []uint64               `protobuf:"varint,2,rep,name=client_ids,json=clientIds" json:"client_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientBroadcastDiscovery) Reset() {
	*x = CMsgRemoteClientBroadcastDiscovery{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientBroadcastDiscovery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientBroadcastDiscovery) ProtoMessage() {}

func (x *CMsgRemoteClientBroadcastDiscovery) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientBroadcastDiscovery.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientBroadcastDiscovery) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgRemoteClientBroadcastDiscovery) GetSeqNum() uint32 {
	if x != nil && x.SeqNum != nil {
		return *x.SeqNum
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastDiscovery) GetClientIds() []uint64 {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

type CMsgRemoteClientBroadcastClientIDDeconflict struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIds     []uint64               `protobuf:"varint,2,rep,name=client_ids,json=clientIds" json:"client_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientBroadcastClientIDDeconflict) Reset() {
	*x = CMsgRemoteClientBroadcastClientIDDeconflict{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientBroadcastClientIDDeconflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientBroadcastClientIDDeconflict) ProtoMessage() {}

func (x *CMsgRemoteClientBroadcastClientIDDeconflict) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientBroadcastClientIDDeconflict.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientBroadcastClientIDDeconflict) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgRemoteClientBroadcastClientIDDeconflict) GetClientIds() []uint64 {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

type CMsgRemoteDeviceAuthorizationRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DeviceToken      []byte                 `protobuf:"bytes,1,req,name=device_token,json=deviceToken" json:"device_token,omitempty"`
	DeviceName       *string                `protobuf:"bytes,2,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	EncryptedRequest []byte                 `protobuf:"bytes,3,req,name=encrypted_request,json=encryptedRequest" json:"encrypted_request,omitempty"`
	AuthKey          []byte                 `protobuf:"bytes,4,opt,name=auth_key,json=authKey" json:"auth_key,omitempty"`
	RequestId        *uint32                `protobuf:"varint,5,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceAuthorizationRequest) Reset() {
	*x = CMsgRemoteDeviceAuthorizationRequest{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceAuthorizationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceAuthorizationRequest) ProtoMessage() {}

func (x *CMsgRemoteDeviceAuthorizationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceAuthorizationRequest.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceAuthorizationRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgRemoteDeviceAuthorizationRequest) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

func (x *CMsgRemoteDeviceAuthorizationRequest) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *CMsgRemoteDeviceAuthorizationRequest) GetEncryptedRequest() []byte {
	if x != nil {
		return x.EncryptedRequest
	}
	return nil
}

func (x *CMsgRemoteDeviceAuthorizationRequest) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *CMsgRemoteDeviceAuthorizationRequest) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

type CMsgRemoteDeviceAuthorizationCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceAuthorizationCancelRequest) Reset() {
	*x = CMsgRemoteDeviceAuthorizationCancelRequest{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceAuthorizationCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceAuthorizationCancelRequest) ProtoMessage() {}

func (x *CMsgRemoteDeviceAuthorizationCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceAuthorizationCancelRequest.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceAuthorizationCancelRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{5}
}

type CMsgRemoteDeviceAuthorizationResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Result        *ERemoteDeviceAuthorizationResult `protobuf:"varint,1,req,name=result,enum=ERemoteDeviceAuthorizationResult,def=0" json:"result,omitempty"`
	Steamid       *uint64                           `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	AuthKey       []byte                            `protobuf:"bytes,3,opt,name=auth_key,json=authKey" json:"auth_key,omitempty"`
	DeviceToken   []byte                            `protobuf:"bytes,4,opt,name=device_token,json=deviceToken" json:"device_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgRemoteDeviceAuthorizationResponse fields.
const (
	Default_CMsgRemoteDeviceAuthorizationResponse_Result = ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationSuccess
)

func (x *CMsgRemoteDeviceAuthorizationResponse) Reset() {
	*x = CMsgRemoteDeviceAuthorizationResponse{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceAuthorizationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceAuthorizationResponse) ProtoMessage() {}

func (x *CMsgRemoteDeviceAuthorizationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceAuthorizationResponse.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceAuthorizationResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgRemoteDeviceAuthorizationResponse) GetResult() ERemoteDeviceAuthorizationResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgRemoteDeviceAuthorizationResponse_Result
}

func (x *CMsgRemoteDeviceAuthorizationResponse) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgRemoteDeviceAuthorizationResponse) GetAuthKey() []byte {
	if x != nil {
		return x.AuthKey
	}
	return nil
}

func (x *CMsgRemoteDeviceAuthorizationResponse) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

type CMsgRemoteDeviceAuthorizationConfirmed struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Result        *ERemoteDeviceAuthorizationResult `protobuf:"varint,1,req,name=result,enum=ERemoteDeviceAuthorizationResult,def=0" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgRemoteDeviceAuthorizationConfirmed fields.
const (
	Default_CMsgRemoteDeviceAuthorizationConfirmed_Result = ERemoteDeviceAuthorizationResult_k_ERemoteDeviceAuthorizationSuccess
)

func (x *CMsgRemoteDeviceAuthorizationConfirmed) Reset() {
	*x = CMsgRemoteDeviceAuthorizationConfirmed{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceAuthorizationConfirmed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceAuthorizationConfirmed) ProtoMessage() {}

func (x *CMsgRemoteDeviceAuthorizationConfirmed) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceAuthorizationConfirmed.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceAuthorizationConfirmed) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgRemoteDeviceAuthorizationConfirmed) GetResult() ERemoteDeviceAuthorizationResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgRemoteDeviceAuthorizationConfirmed_Result
}

type CMsgRemoteDeviceStreamingRequest struct {
	state                protoimpl.MessageState                              `protogen:"open.v1"`
	RequestId            *uint32                                             `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	MaximumResolutionX   *int32                                              `protobuf:"varint,2,opt,name=maximum_resolution_x,json=maximumResolutionX" json:"maximum_resolution_x,omitempty"`
	MaximumResolutionY   *int32                                              `protobuf:"varint,3,opt,name=maximum_resolution_y,json=maximumResolutionY" json:"maximum_resolution_y,omitempty"`
	AudioChannelCount    *int32                                              `protobuf:"varint,4,opt,name=audio_channel_count,json=audioChannelCount,def=2" json:"audio_channel_count,omitempty"`
	DeviceVersion        *string                                             `protobuf:"bytes,5,opt,name=device_version,json=deviceVersion" json:"device_version,omitempty"`
	StreamDesktop        *bool                                               `protobuf:"varint,6,opt,name=stream_desktop,json=streamDesktop" json:"stream_desktop,omitempty"`
	DeviceToken          []byte                                              `protobuf:"bytes,7,opt,name=device_token,json=deviceToken" json:"device_token,omitempty"`
	Pin                  []byte                                              `protobuf:"bytes,8,opt,name=pin" json:"pin,omitempty"`
	EnableVideoStreaming *bool                                               `protobuf:"varint,9,opt,name=enable_video_streaming,json=enableVideoStreaming,def=1" json:"enable_video_streaming,omitempty"`
	EnableAudioStreaming *bool                                               `protobuf:"varint,10,opt,name=enable_audio_streaming,json=enableAudioStreaming,def=1" json:"enable_audio_streaming,omitempty"`
	EnableInputStreaming *bool                                               `protobuf:"varint,11,opt,name=enable_input_streaming,json=enableInputStreaming,def=1" json:"enable_input_streaming,omitempty"`
	NetworkTest          *bool                                               `protobuf:"varint,12,opt,name=network_test,json=networkTest" json:"network_test,omitempty"`
	ClientId             *uint64                                             `protobuf:"varint,13,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	SupportedTransport   []EStreamTransport                                  `protobuf:"varint,14,rep,name=supported_transport,json=supportedTransport,enum=EStreamTransport" json:"supported_transport,omitempty"`
	Restricted           *bool                                               `protobuf:"varint,15,opt,name=restricted" json:"restricted,omitempty"`
	FormFactor           *EStreamDeviceFormFactor                            `protobuf:"varint,16,opt,name=form_factor,json=formFactor,enum=EStreamDeviceFormFactor,def=0" json:"form_factor,omitempty"`
	GamepadCount         *int32                                              `protobuf:"varint,17,opt,name=gamepad_count,json=gamepadCount" json:"gamepad_count,omitempty"`
	Gamepads             []*CMsgRemoteDeviceStreamingRequest_ReservedGamepad `protobuf:"bytes,18,rep,name=gamepads" json:"gamepads,omitempty"`
	Gameid               *uint64                                             `protobuf:"varint,19,opt,name=gameid" json:"gameid,omitempty"`
	StreamInterface      *EStreamInterface                                   `protobuf:"varint,20,opt,name=stream_interface,json=streamInterface,enum=EStreamInterface,def=0" json:"stream_interface,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

// Default values for CMsgRemoteDeviceStreamingRequest fields.
const (
	Default_CMsgRemoteDeviceStreamingRequest_AudioChannelCount    = int32(2)
	Default_CMsgRemoteDeviceStreamingRequest_EnableVideoStreaming = bool(true)
	Default_CMsgRemoteDeviceStreamingRequest_EnableAudioStreaming = bool(true)
	Default_CMsgRemoteDeviceStreamingRequest_EnableInputStreaming = bool(true)
	Default_CMsgRemoteDeviceStreamingRequest_FormFactor           = EStreamDeviceFormFactor_k_EStreamDeviceFormFactorUnknown
	Default_CMsgRemoteDeviceStreamingRequest_StreamInterface      = EStreamInterface_k_EStreamInterfaceDefault
)

func (x *CMsgRemoteDeviceStreamingRequest) Reset() {
	*x = CMsgRemoteDeviceStreamingRequest{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceStreamingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceStreamingRequest) ProtoMessage() {}

func (x *CMsgRemoteDeviceStreamingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceStreamingRequest.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceStreamingRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgRemoteDeviceStreamingRequest) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest) GetMaximumResolutionX() int32 {
	if x != nil && x.MaximumResolutionX != nil {
		return *x.MaximumResolutionX
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest) GetMaximumResolutionY() int32 {
	if x != nil && x.MaximumResolutionY != nil {
		return *x.MaximumResolutionY
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest) GetAudioChannelCount() int32 {
	if x != nil && x.AudioChannelCount != nil {
		return *x.AudioChannelCount
	}
	return Default_CMsgRemoteDeviceStreamingRequest_AudioChannelCount
}

func (x *CMsgRemoteDeviceStreamingRequest) GetDeviceVersion() string {
	if x != nil && x.DeviceVersion != nil {
		return *x.DeviceVersion
	}
	return ""
}

func (x *CMsgRemoteDeviceStreamingRequest) GetStreamDesktop() bool {
	if x != nil && x.StreamDesktop != nil {
		return *x.StreamDesktop
	}
	return false
}

func (x *CMsgRemoteDeviceStreamingRequest) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

func (x *CMsgRemoteDeviceStreamingRequest) GetPin() []byte {
	if x != nil {
		return x.Pin
	}
	return nil
}

func (x *CMsgRemoteDeviceStreamingRequest) GetEnableVideoStreaming() bool {
	if x != nil && x.EnableVideoStreaming != nil {
		return *x.EnableVideoStreaming
	}
	return Default_CMsgRemoteDeviceStreamingRequest_EnableVideoStreaming
}

func (x *CMsgRemoteDeviceStreamingRequest) GetEnableAudioStreaming() bool {
	if x != nil && x.EnableAudioStreaming != nil {
		return *x.EnableAudioStreaming
	}
	return Default_CMsgRemoteDeviceStreamingRequest_EnableAudioStreaming
}

func (x *CMsgRemoteDeviceStreamingRequest) GetEnableInputStreaming() bool {
	if x != nil && x.EnableInputStreaming != nil {
		return *x.EnableInputStreaming
	}
	return Default_CMsgRemoteDeviceStreamingRequest_EnableInputStreaming
}

func (x *CMsgRemoteDeviceStreamingRequest) GetNetworkTest() bool {
	if x != nil && x.NetworkTest != nil {
		return *x.NetworkTest
	}
	return false
}

func (x *CMsgRemoteDeviceStreamingRequest) GetClientId() uint64 {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest) GetSupportedTransport() []EStreamTransport {
	if x != nil {
		return x.SupportedTransport
	}
	return nil
}

func (x *CMsgRemoteDeviceStreamingRequest) GetRestricted() bool {
	if x != nil && x.Restricted != nil {
		return *x.Restricted
	}
	return false
}

func (x *CMsgRemoteDeviceStreamingRequest) GetFormFactor() EStreamDeviceFormFactor {
	if x != nil && x.FormFactor != nil {
		return *x.FormFactor
	}
	return Default_CMsgRemoteDeviceStreamingRequest_FormFactor
}

func (x *CMsgRemoteDeviceStreamingRequest) GetGamepadCount() int32 {
	if x != nil && x.GamepadCount != nil {
		return *x.GamepadCount
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest) GetGamepads() []*CMsgRemoteDeviceStreamingRequest_ReservedGamepad {
	if x != nil {
		return x.Gamepads
	}
	return nil
}

func (x *CMsgRemoteDeviceStreamingRequest) GetGameid() uint64 {
	if x != nil && x.Gameid != nil {
		return *x.Gameid
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest) GetStreamInterface() EStreamInterface {
	if x != nil && x.StreamInterface != nil {
		return *x.StreamInterface
	}
	return Default_CMsgRemoteDeviceStreamingRequest_StreamInterface
}

type CMsgRemoteDeviceStreamingCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *uint32                `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceStreamingCancelRequest) Reset() {
	*x = CMsgRemoteDeviceStreamingCancelRequest{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceStreamingCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceStreamingCancelRequest) ProtoMessage() {}

func (x *CMsgRemoteDeviceStreamingCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceStreamingCancelRequest.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceStreamingCancelRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgRemoteDeviceStreamingCancelRequest) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

type CMsgRemoteDeviceStreamingProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     *uint32                `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Progress      *float32               `protobuf:"fixed32,2,opt,name=progress" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceStreamingProgress) Reset() {
	*x = CMsgRemoteDeviceStreamingProgress{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceStreamingProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceStreamingProgress) ProtoMessage() {}

func (x *CMsgRemoteDeviceStreamingProgress) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceStreamingProgress.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceStreamingProgress) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgRemoteDeviceStreamingProgress) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingProgress) GetProgress() float32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

type CMsgRemoteDeviceStreamingResponse struct {
	state               protoimpl.MessageState        `protogen:"open.v1"`
	RequestId           *uint32                       `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	Result              *ERemoteDeviceStreamingResult `protobuf:"varint,2,req,name=result,enum=ERemoteDeviceStreamingResult,def=0" json:"result,omitempty"`
	Port                *uint32                       `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	EncryptedSessionKey []byte                        `protobuf:"bytes,4,opt,name=encrypted_session_key,json=encryptedSessionKey" json:"encrypted_session_key,omitempty"`
	Transport           *EStreamTransport             `protobuf:"varint,6,opt,name=transport,enum=EStreamTransport,def=1" json:"transport,omitempty"`
	RelayServer         *string                       `protobuf:"bytes,7,opt,name=relay_server,json=relayServer" json:"relay_server,omitempty"`
	Cert                *string                       `protobuf:"bytes,8,opt,name=cert" json:"cert,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CMsgRemoteDeviceStreamingResponse fields.
const (
	Default_CMsgRemoteDeviceStreamingResponse_Result    = ERemoteDeviceStreamingResult_k_ERemoteDeviceStreamingSuccess
	Default_CMsgRemoteDeviceStreamingResponse_Transport = EStreamTransport_k_EStreamTransportUDP
)

func (x *CMsgRemoteDeviceStreamingResponse) Reset() {
	*x = CMsgRemoteDeviceStreamingResponse{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceStreamingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceStreamingResponse) ProtoMessage() {}

func (x *CMsgRemoteDeviceStreamingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceStreamingResponse.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceStreamingResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgRemoteDeviceStreamingResponse) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingResponse) GetResult() ERemoteDeviceStreamingResult {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return Default_CMsgRemoteDeviceStreamingResponse_Result
}

func (x *CMsgRemoteDeviceStreamingResponse) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingResponse) GetEncryptedSessionKey() []byte {
	if x != nil {
		return x.EncryptedSessionKey
	}
	return nil
}

func (x *CMsgRemoteDeviceStreamingResponse) GetTransport() EStreamTransport {
	if x != nil && x.Transport != nil {
		return *x.Transport
	}
	return Default_CMsgRemoteDeviceStreamingResponse_Transport
}

func (x *CMsgRemoteDeviceStreamingResponse) GetRelayServer() string {
	if x != nil && x.RelayServer != nil {
		return *x.RelayServer
	}
	return ""
}

func (x *CMsgRemoteDeviceStreamingResponse) GetCert() string {
	if x != nil && x.Cert != nil {
		return *x.Cert
	}
	return ""
}

type CMsgRemoteDeviceProofRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Challenge     []byte                 `protobuf:"bytes,1,req,name=challenge" json:"challenge,omitempty"`
	RequestId     *uint32                `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	UpdateSecret  *bool                  `protobuf:"varint,3,opt,name=update_secret,json=updateSecret" json:"update_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceProofRequest) Reset() {
	*x = CMsgRemoteDeviceProofRequest{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceProofRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceProofRequest) ProtoMessage() {}

func (x *CMsgRemoteDeviceProofRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceProofRequest.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceProofRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgRemoteDeviceProofRequest) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *CMsgRemoteDeviceProofRequest) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgRemoteDeviceProofRequest) GetUpdateSecret() bool {
	if x != nil && x.UpdateSecret != nil {
		return *x.UpdateSecret
	}
	return false
}

type CMsgRemoteDeviceProofResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      []byte                 `protobuf:"bytes,1,req,name=response" json:"response,omitempty"`
	RequestId     *uint32                `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	UpdatedSecret *bool                  `protobuf:"varint,3,opt,name=updated_secret,json=updatedSecret" json:"updated_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceProofResponse) Reset() {
	*x = CMsgRemoteDeviceProofResponse{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceProofResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceProofResponse) ProtoMessage() {}

func (x *CMsgRemoteDeviceProofResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceProofResponse.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceProofResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgRemoteDeviceProofResponse) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CMsgRemoteDeviceProofResponse) GetRequestId() uint32 {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return 0
}

func (x *CMsgRemoteDeviceProofResponse) GetUpdatedSecret() bool {
	if x != nil && x.UpdatedSecret != nil {
		return *x.UpdatedSecret
	}
	return false
}

type CMsgRemoteDeviceStreamTransportSignal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         []byte                 `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceStreamTransportSignal) Reset() {
	*x = CMsgRemoteDeviceStreamTransportSignal{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceStreamTransportSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceStreamTransportSignal) ProtoMessage() {}

func (x *CMsgRemoteDeviceStreamTransportSignal) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceStreamTransportSignal.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceStreamTransportSignal) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgRemoteDeviceStreamTransportSignal) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *CMsgRemoteDeviceStreamTransportSignal) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type CMsgRemoteClientBroadcastStatus_User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Steamid       *uint64                `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	AuthKeyId     *uint32                `protobuf:"varint,2,opt,name=auth_key_id,json=authKeyId" json:"auth_key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRemoteClientBroadcastStatus_User) Reset() {
	*x = CMsgRemoteClientBroadcastStatus_User{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteClientBroadcastStatus_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteClientBroadcastStatus_User) ProtoMessage() {}

func (x *CMsgRemoteClientBroadcastStatus_User) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteClientBroadcastStatus_User.ProtoReflect.Descriptor instead.
func (*CMsgRemoteClientBroadcastStatus_User) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CMsgRemoteClientBroadcastStatus_User) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgRemoteClientBroadcastStatus_User) GetAuthKeyId() uint32 {
	if x != nil && x.AuthKeyId != nil {
		return *x.AuthKeyId
	}
	return 0
}

type CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket struct {
	state                protoimpl.MessageState                                `protogen:"open.v1"`
	Password             []byte                                                `protobuf:"bytes,1,opt,name=password" json:"password,omitempty"`
	Identifier           *uint64                                               `protobuf:"varint,2,opt,name=identifier" json:"identifier,omitempty"`
	Payload              []byte                                                `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	Timestamp            *uint32                                               `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	Usage                *CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage `protobuf:"varint,5,opt,name=usage,enum=CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage,def=0" json:"usage,omitempty"`
	DeviceName           *string                                               `protobuf:"bytes,6,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	DeviceModel          *string                                               `protobuf:"bytes,7,opt,name=device_model,json=deviceModel" json:"device_model,omitempty"`
	DeviceSerial         *string                                               `protobuf:"bytes,8,opt,name=device_serial,json=deviceSerial" json:"device_serial,omitempty"`
	DeviceProvisioningId *uint32                                               `protobuf:"varint,9,opt,name=device_provisioning_id,json=deviceProvisioningId" json:"device_provisioning_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

// Default values for CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket fields.
const (
	Default_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket_Usage = CMsgRemoteDeviceAuthorizationRequest_k_EKeyEscrowUsageStreamingDevice
)

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) Reset() {
	*x = CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) ProtoMessage() {}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetIdentifier() uint64 {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return 0
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetUsage() CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage {
	if x != nil && x.Usage != nil {
		return *x.Usage
	}
	return Default_CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket_Usage
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetDeviceSerial() string {
	if x != nil && x.DeviceSerial != nil {
		return *x.DeviceSerial
	}
	return ""
}

func (x *CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket) GetDeviceProvisioningId() uint32 {
	if x != nil && x.DeviceProvisioningId != nil {
		return *x.DeviceProvisioningId
	}
	return 0
}

type CMsgRemoteDeviceStreamingRequest_ReservedGamepad struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ControllerType    *uint32                `protobuf:"varint,1,opt,name=controller_type,json=controllerType" json:"controller_type,omitempty"`
	ControllerSubtype *uint32                `protobuf:"varint,2,opt,name=controller_subtype,json=controllerSubtype" json:"controller_subtype,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgRemoteDeviceStreamingRequest_ReservedGamepad) Reset() {
	*x = CMsgRemoteDeviceStreamingRequest_ReservedGamepad{}
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRemoteDeviceStreamingRequest_ReservedGamepad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRemoteDeviceStreamingRequest_ReservedGamepad) ProtoMessage() {}

func (x *CMsgRemoteDeviceStreamingRequest_ReservedGamepad) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_remoteclient_discovery_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRemoteDeviceStreamingRequest_ReservedGamepad.ProtoReflect.Descriptor instead.
func (*CMsgRemoteDeviceStreamingRequest_ReservedGamepad) Descriptor() ([]byte, []int) {
	return file_steammessages_remoteclient_discovery_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CMsgRemoteDeviceStreamingRequest_ReservedGamepad) GetControllerType() uint32 {
	if x != nil && x.ControllerType != nil {
		return *x.ControllerType
	}
	return 0
}

func (x *CMsgRemoteDeviceStreamingRequest_ReservedGamepad) GetControllerSubtype() uint32 {
	if x != nil && x.ControllerSubtype != nil {
		return *x.ControllerSubtype
	}
	return 0
}

var File_steammessages_remoteclient_discovery_proto protoreflect.FileDescriptor

const file_steammessages_remoteclient_discovery_proto_rawDesc = "" +
	"\n" +
	"*steammessages_remoteclient_discovery.proto\"\x8d\x02\n" +
	"\x1fCMsgRemoteClientBroadcastHeader\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x04R\bclientId\x12[\n" +
	"\bmsg_type\x18\x02 \x01(\x0e2\x1a.ERemoteClientBroadcastMsg:$k_ERemoteClientBroadcastMsgDiscoveryR\amsgType\x12\x1f\n" +
	"\vinstance_id\x18\x03 \x01(\x04R\n" +
	"instanceId\x12,\n" +
	"\x12device_id_OBSOLETE\x18\x04 \x01(\x04R\x10deviceIdOBSOLETE\x12!\n" +
	"\fdevice_token\x18\x05 \x01(\fR\vdeviceToken\"\xc5\b\n" +
	"\x1fCMsgRemoteClientBroadcastStatus\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x05R\aversion\x12\x1f\n" +
	"\vmin_version\x18\x02 \x01(\x05R\n" +
	"minVersion\x12!\n" +
	"\fconnect_port\x18\x03 \x01(\rR\vconnectPort\x12\x1a\n" +
	"\bhostname\x18\x04 \x01(\tR\bhostname\x12)\n" +
	"\x10enabled_services\x18\x06 \x01(\rR\x0fenabledServices\x12\x19\n" +
	"\x06ostype\x18\a \x01(\x05:\x010R\x06ostype\x12\x18\n" +
	"\ais64bit\x18\b \x01(\bR\ais64bit\x12;\n" +
	"\x05users\x18\t \x03(\v2%.CMsgRemoteClientBroadcastStatus.UserR\x05users\x12\x1c\n" +
	"\teuniverse\x18\v \x01(\x05R\teuniverse\x12\x1c\n" +
	"\ttimestamp\x18\f \x01(\rR\ttimestamp\x12#\n" +
	"\rscreen_locked\x18\r \x01(\bR\fscreenLocked\x12#\n" +
	"\rgames_running\x18\x0e \x01(\bR\fgamesRunning\x12#\n" +
	"\rmac_addresses\x18\x0f \x03(\tR\fmacAddresses\x125\n" +
	"\x17download_lan_peer_group\x18\x10 \x01(\rR\x14downloadLanPeerGroup\x12/\n" +
	"\x13broadcasting_active\x18\x11 \x01(\bR\x12broadcastingActive\x12\x1b\n" +
	"\tvr_active\x18\x12 \x01(\bR\bvrActive\x12,\n" +
	"\x12content_cache_port\x18\x13 \x01(\rR\x10contentCachePort\x12!\n" +
	"\fip_addresses\x18\x14 \x03(\tR\vipAddresses\x12*\n" +
	"\x11public_ip_address\x18\x15 \x01(\tR\x0fpublicIpAddress\x12+\n" +
	"\x11remoteplay_active\x18\x16 \x01(\bR\x10remoteplayActive\x12-\n" +
	"\x12supported_services\x18\x17 \x01(\rR\x11supportedServices\x12\x1d\n" +
	"\n" +
	"steam_deck\x18\x18 \x01(\bR\tsteamDeck\x12#\n" +
	"\rsteam_version\x18\x19 \x01(\x04R\fsteamVersion\x12D\n" +
	"\fvr_link_caps\x18\x1a \x01(\x0e2\f.EVRLinkCaps:\x14k_EVRLinkCapsUnknownR\n" +
	"vrLinkCaps\x126\n" +
	"\x18vr_link_invite_client_id\x18\x1b \x01(\x06R\x14vrLinkInviteClientId\x1a@\n" +
	"\x04User\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x06R\asteamid\x12\x1e\n" +
	"\vauth_key_id\x18\x02 \x01(\rR\tauthKeyId\"\\\n" +
	"\"CMsgRemoteClientBroadcastDiscovery\x12\x17\n" +
	"\aseq_num\x18\x01 \x01(\rR\x06seqNum\x12\x1d\n" +
	"\n" +
	"client_ids\x18\x02 \x03(\x04R\tclientIds\"L\n" +
	"+CMsgRemoteClientBroadcastClientIDDeconflict\x12\x1d\n" +
	"\n" +
	"client_ids\x18\x02 \x03(\x04R\tclientIds\"\xa2\x05\n" +
	"$CMsgRemoteDeviceAuthorizationRequest\x12!\n" +
	"\fdevice_token\x18\x01 \x02(\fR\vdeviceToken\x12\x1f\n" +
	"\vdevice_name\x18\x02 \x01(\tR\n" +
	"deviceName\x12+\n" +
	"\x11encrypted_request\x18\x03 \x02(\fR\x10encryptedRequest\x12\x19\n" +
	"\bauth_key\x18\x04 \x01(\fR\aauthKey\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\rR\trequestId\x1a\x95\x03\n" +
	"\x11CKeyEscrow_Ticket\x12\x1a\n" +
	"\bpassword\x18\x01 \x01(\fR\bpassword\x12\x1e\n" +
	"\n" +
	"identifier\x18\x02 \x01(\x04R\n" +
	"identifier\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\rR\ttimestamp\x12m\n" +
	"\x05usage\x18\x05 \x01(\x0e25.CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage: k_EKeyEscrowUsageStreamingDeviceR\x05usage\x12\x1f\n" +
	"\vdevice_name\x18\x06 \x01(\tR\n" +
	"deviceName\x12!\n" +
	"\fdevice_model\x18\a \x01(\tR\vdeviceModel\x12#\n" +
	"\rdevice_serial\x18\b \x01(\tR\fdeviceSerial\x124\n" +
	"\x16device_provisioning_id\x18\t \x01(\rR\x14deviceProvisioningId\"7\n" +
	"\x0fEKeyEscrowUsage\x12$\n" +
	" k_EKeyEscrowUsageStreamingDevice\x10\x00\",\n" +
	"*CMsgRemoteDeviceAuthorizationCancelRequest\"\xdf\x01\n" +
	"%CMsgRemoteDeviceAuthorizationResponse\x12^\n" +
	"\x06result\x18\x01 \x02(\x0e2!.ERemoteDeviceAuthorizationResult:#k_ERemoteDeviceAuthorizationSuccessR\x06result\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\x12\x19\n" +
	"\bauth_key\x18\x03 \x01(\fR\aauthKey\x12!\n" +
	"\fdevice_token\x18\x04 \x01(\fR\vdeviceToken\"\x88\x01\n" +
	"&CMsgRemoteDeviceAuthorizationConfirmed\x12^\n" +
	"\x06result\x18\x01 \x02(\x0e2!.ERemoteDeviceAuthorizationResult:#k_ERemoteDeviceAuthorizationSuccessR\x06result\"\xe0\b\n" +
	" CMsgRemoteDeviceStreamingRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x02(\rR\trequestId\x120\n" +
	"\x14maximum_resolution_x\x18\x02 \x01(\x05R\x12maximumResolutionX\x120\n" +
	"\x14maximum_resolution_y\x18\x03 \x01(\x05R\x12maximumResolutionY\x121\n" +
	"\x13audio_channel_count\x18\x04 \x01(\x05:\x012R\x11audioChannelCount\x12%\n" +
	"\x0edevice_version\x18\x05 \x01(\tR\rdeviceVersion\x12%\n" +
	"\x0estream_desktop\x18\x06 \x01(\bR\rstreamDesktop\x12!\n" +
	"\fdevice_token\x18\a \x01(\fR\vdeviceToken\x12\x10\n" +
	"\x03pin\x18\b \x01(\fR\x03pin\x12:\n" +
	"\x16enable_video_streaming\x18\t \x01(\b:\x04trueR\x14enableVideoStreaming\x12:\n" +
	"\x16enable_audio_streaming\x18\n" +
	" \x01(\b:\x04trueR\x14enableAudioStreaming\x12:\n" +
	"\x16enable_input_streaming\x18\v \x01(\b:\x04trueR\x14enableInputStreaming\x12!\n" +
	"\fnetwork_test\x18\f \x01(\bR\vnetworkTest\x12\x1b\n" +
	"\tclient_id\x18\r \x01(\x04R\bclientId\x12B\n" +
	"\x13supported_transport\x18\x0e \x03(\x0e2\x11.EStreamTransportR\x12supportedTransport\x12\x1e\n" +
	"\n" +
	"restricted\x18\x0f \x01(\bR\n" +
	"restricted\x12[\n" +
	"\vform_factor\x18\x10 \x01(\x0e2\x18.EStreamDeviceFormFactor: k_EStreamDeviceFormFactorUnknownR\n" +
	"formFactor\x12#\n" +
	"\rgamepad_count\x18\x11 \x01(\x05R\fgamepadCount\x12M\n" +
	"\bgamepads\x18\x12 \x03(\v21.CMsgRemoteDeviceStreamingRequest.ReservedGamepadR\bgamepads\x12\x16\n" +
	"\x06gameid\x18\x13 \x01(\x04R\x06gameid\x12W\n" +
	"\x10stream_interface\x18\x14 \x01(\x0e2\x11.EStreamInterface:\x19k_EStreamInterfaceDefaultR\x0fstreamInterface\x1ai\n" +
	"\x0fReservedGamepad\x12'\n" +
	"\x0fcontroller_type\x18\x01 \x01(\rR\x0econtrollerType\x12-\n" +
	"\x12controller_subtype\x18\x02 \x01(\rR\x11controllerSubtype\"G\n" +
	"&CMsgRemoteDeviceStreamingCancelRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x02(\rR\trequestId\"^\n" +
	"!CMsgRemoteDeviceStreamingProgress\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x02(\rR\trequestId\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x02R\bprogress\"\xe1\x02\n" +
	"!CMsgRemoteDeviceStreamingResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x02(\rR\trequestId\x12V\n" +
	"\x06result\x18\x02 \x02(\x0e2\x1d.ERemoteDeviceStreamingResult:\x1fk_ERemoteDeviceStreamingSuccessR\x06result\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x122\n" +
	"\x15encrypted_session_key\x18\x04 \x01(\fR\x13encryptedSessionKey\x12F\n" +
	"\ttransport\x18\x06 \x01(\x0e2\x11.EStreamTransport:\x15k_EStreamTransportUDPR\ttransport\x12!\n" +
	"\frelay_server\x18\a \x01(\tR\vrelayServer\x12\x12\n" +
	"\x04cert\x18\b \x01(\tR\x04cert\"\x80\x01\n" +
	"\x1cCMsgRemoteDeviceProofRequest\x12\x1c\n" +
	"\tchallenge\x18\x01 \x02(\fR\tchallenge\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\rR\trequestId\x12#\n" +
	"\rupdate_secret\x18\x03 \x01(\bR\fupdateSecret\"\x81\x01\n" +
	"\x1dCMsgRemoteDeviceProofResponse\x12\x1a\n" +
	"\bresponse\x18\x01 \x02(\fR\bresponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\rR\trequestId\x12%\n" +
	"\x0eupdated_secret\x18\x03 \x01(\bR\rupdatedSecret\"W\n" +
	"%CMsgRemoteDeviceStreamTransportSignal\x12\x14\n" +
	"\x05token\x18\x01 \x01(\fR\x05token\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload*\xfd\x04\n" +
	"\x19ERemoteClientBroadcastMsg\x12(\n" +
	"$k_ERemoteClientBroadcastMsgDiscovery\x10\x00\x12%\n" +
	"!k_ERemoteClientBroadcastMsgStatus\x10\x01\x12&\n" +
	"\"k_ERemoteClientBroadcastMsgOffline\x10\x02\x12'\n" +
	"#k_ERemoteDeviceAuthorizationRequest\x10\x03\x12(\n" +
	"$k_ERemoteDeviceAuthorizationResponse\x10\x04\x12#\n" +
	"\x1fk_ERemoteDeviceStreamingRequest\x10\x05\x12$\n" +
	" k_ERemoteDeviceStreamingResponse\x10\x06\x12\x1f\n" +
	"\x1bk_ERemoteDeviceProofRequest\x10\a\x12 \n" +
	"\x1ck_ERemoteDeviceProofResponse\x10\b\x12-\n" +
	")k_ERemoteDeviceAuthorizationCancelRequest\x10\t\x12)\n" +
	"%k_ERemoteDeviceStreamingCancelRequest\x10\n" +
	"\x121\n" +
	"-k_ERemoteClientBroadcastMsgClientIDDeconflict\x10\v\x12(\n" +
	"$k_ERemoteDeviceStreamTransportSignal\x10\f\x12$\n" +
	" k_ERemoteDeviceStreamingProgress\x10\r\x12)\n" +
	"%k_ERemoteDeviceAuthorizationConfirmed\x10\x0e*\x80\x02\n" +
	"\x14ERemoteClientService\x12\x1e\n" +
	"\x1ak_ERemoteClientServiceNone\x10\x00\x12'\n" +
	"#k_ERemoteClientServiceRemoteControl\x10\x01\x12'\n" +
	"#k_ERemoteClientServiceGameStreaming\x10\x02\x12%\n" +
	"!k_ERemoteClientServiceSiteLicense\x10\x04\x12&\n" +
	"\"k_ERemoteClientServiceContentCache\x10\b\x12'\n" +
	"#k_ERemoteClientServiceContentServer\x10\x10*\x8d\x01\n" +
	"\vEVRLinkCaps\x12\x18\n" +
	"\x14k_EVRLinkCapsUnknown\x10\x00\x12\x1a\n" +
	"\x16k_EVRLinkCapsAvailable\x10\x01\x12\x1e\n" +
	"\x1ak_EVRLinkCapsUnimplemented\x10\x02\x12(\n" +
	"$k_EVRLinkCapsMissingHardwareEncoding\x10\x03*\x97\x03\n" +
	" ERemoteDeviceAuthorizationResult\x12'\n" +
	"#k_ERemoteDeviceAuthorizationSuccess\x10\x00\x12&\n" +
	"\"k_ERemoteDeviceAuthorizationDenied\x10\x01\x12+\n" +
	"'k_ERemoteDeviceAuthorizationNotLoggedIn\x10\x02\x12'\n" +
	"#k_ERemoteDeviceAuthorizationOffline\x10\x03\x12$\n" +
	" k_ERemoteDeviceAuthorizationBusy\x10\x04\x12*\n" +
	"&k_ERemoteDeviceAuthorizationInProgress\x10\x05\x12(\n" +
	"$k_ERemoteDeviceAuthorizationTimedOut\x10\x06\x12&\n" +
	"\"k_ERemoteDeviceAuthorizationFailed\x10\a\x12(\n" +
	"$k_ERemoteDeviceAuthorizationCanceled\x10\b*\xf8\x01\n" +
	"\x17EStreamDeviceFormFactor\x12$\n" +
	" k_EStreamDeviceFormFactorUnknown\x10\x00\x12\"\n" +
	"\x1ek_EStreamDeviceFormFactorPhone\x10\x01\x12#\n" +
	"\x1fk_EStreamDeviceFormFactorTablet\x10\x02\x12%\n" +
	"!k_EStreamDeviceFormFactorComputer\x10\x03\x12\x1f\n" +
	"\x1bk_EStreamDeviceFormFactorTV\x10\x04\x12&\n" +
	"\"k_EStreamDeviceFormFactorVRHeadset\x10\x05*\xee\x01\n" +
	"\x10EStreamTransport\x12\x1a\n" +
	"\x16k_EStreamTransportNone\x10\x00\x12\x19\n" +
	"\x15k_EStreamTransportUDP\x10\x01\x12\x1e\n" +
	"\x1ak_EStreamTransportUDPRelay\x10\x02\x12%\n" +
	"!k_EStreamTransportWebRTC_OBSOLETE\x10\x03\x12\x19\n" +
	"\x15k_EStreamTransportSDR\x10\x04\x12\x1d\n" +
	"\x19k_EStreamTransportUDP_SNS\x10\x05\x12\"\n" +
	"\x1ek_EStreamTransportUDPRelay_SNS\x10\x06*\xb4\x01\n" +
	"\x10EStreamInterface\x12\x1d\n" +
	"\x19k_EStreamInterfaceDefault\x10\x00\x12!\n" +
	"\x1dk_EStreamInterfaceRecentGames\x10\x01\x12 \n" +
	"\x1ck_EStreamInterfaceBigPicture\x10\x02\x12\x1d\n" +
	"\x19k_EStreamInterfaceDesktop\x10\x03\x12\x1d\n" +
	"\x19k_EStreamInterfaceSteamVR\x10\x04*\xb9\x05\n" +
	"\x1cERemoteDeviceStreamingResult\x12#\n" +
	"\x1fk_ERemoteDeviceStreamingSuccess\x10\x00\x12(\n" +
	"$k_ERemoteDeviceStreamingUnauthorized\x10\x01\x12(\n" +
	"$k_ERemoteDeviceStreamingScreenLocked\x10\x02\x12\"\n" +
	"\x1ek_ERemoteDeviceStreamingFailed\x10\x03\x12 \n" +
	"\x1ck_ERemoteDeviceStreamingBusy\x10\x04\x12&\n" +
	"\"k_ERemoteDeviceStreamingInProgress\x10\x05\x12$\n" +
	" k_ERemoteDeviceStreamingCanceled\x10\x06\x12/\n" +
	"+k_ERemoteDeviceStreamingDriversNotInstalled\x10\a\x12$\n" +
	" k_ERemoteDeviceStreamingDisabled\x10\b\x12.\n" +
	"*k_ERemoteDeviceStreamingBroadcastingActive\x10\t\x12$\n" +
	" k_ERemoteDeviceStreamingVRActive\x10\n" +
	"\x12'\n" +
	"#k_ERemoteDeviceStreamingPINRequired\x10\v\x120\n" +
	",k_ERemoteDeviceStreamingTransportUnavailable\x10\f\x12%\n" +
	"!k_ERemoteDeviceStreamingInvisible\x10\r\x12,\n" +
	"(k_ERemoteDeviceStreamingGameLaunchFailed\x10\x0e\x12/\n" +
	"+k_ERemoteDeviceStreamingSteamVRNotInstalled\x10\x0fB\x02H\x01"

var (
	file_steammessages_remoteclient_discovery_proto_rawDescOnce sync.Once
	file_steammessages_remoteclient_discovery_proto_rawDescData []byte
)

func file_steammessages_remoteclient_discovery_proto_rawDescGZIP() []byte {
	file_steammessages_remoteclient_discovery_proto_rawDescOnce.Do(func() {
		file_steammessages_remoteclient_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_remoteclient_discovery_proto_rawDesc), len(file_steammessages_remoteclient_discovery_proto_rawDesc)))
	})
	return file_steammessages_remoteclient_discovery_proto_rawDescData
}

var file_steammessages_remoteclient_discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 9)
var file_steammessages_remoteclient_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_steammessages_remoteclient_discovery_proto_goTypes = []any{
	(ERemoteClientBroadcastMsg)(0),                                 // 0: ERemoteClientBroadcastMsg
	(ERemoteClientService)(0),                                      // 1: ERemoteClientService
	(EVRLinkCaps)(0),                                               // 2: EVRLinkCaps
	(ERemoteDeviceAuthorizationResult)(0),                          // 3: ERemoteDeviceAuthorizationResult
	(EStreamDeviceFormFactor)(0),                                   // 4: EStreamDeviceFormFactor
	(EStreamTransport)(0),                                          // 5: EStreamTransport
	(EStreamInterface)(0),                                          // 6: EStreamInterface
	(ERemoteDeviceStreamingResult)(0),                              // 7: ERemoteDeviceStreamingResult
	(CMsgRemoteDeviceAuthorizationRequest_EKeyEscrowUsage)(0),      // 8: CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage
	(*CMsgRemoteClientBroadcastHeader)(nil),                        // 9: CMsgRemoteClientBroadcastHeader
	(*CMsgRemoteClientBroadcastStatus)(nil),                        // 10: CMsgRemoteClientBroadcastStatus
	(*CMsgRemoteClientBroadcastDiscovery)(nil),                     // 11: CMsgRemoteClientBroadcastDiscovery
	(*CMsgRemoteClientBroadcastClientIDDeconflict)(nil),            // 12: CMsgRemoteClientBroadcastClientIDDeconflict
	(*CMsgRemoteDeviceAuthorizationRequest)(nil),                   // 13: CMsgRemoteDeviceAuthorizationRequest
	(*CMsgRemoteDeviceAuthorizationCancelRequest)(nil),             // 14: CMsgRemoteDeviceAuthorizationCancelRequest
	(*CMsgRemoteDeviceAuthorizationResponse)(nil),                  // 15: CMsgRemoteDeviceAuthorizationResponse
	(*CMsgRemoteDeviceAuthorizationConfirmed)(nil),                 // 16: CMsgRemoteDeviceAuthorizationConfirmed
	(*CMsgRemoteDeviceStreamingRequest)(nil),                       // 17: CMsgRemoteDeviceStreamingRequest
	(*CMsgRemoteDeviceStreamingCancelRequest)(nil),                 // 18: CMsgRemoteDeviceStreamingCancelRequest
	(*CMsgRemoteDeviceStreamingProgress)(nil),                      // 19: CMsgRemoteDeviceStreamingProgress
	(*CMsgRemoteDeviceStreamingResponse)(nil),                      // 20: CMsgRemoteDeviceStreamingResponse
	(*CMsgRemoteDeviceProofRequest)(nil),                           // 21: CMsgRemoteDeviceProofRequest
	(*CMsgRemoteDeviceProofResponse)(nil),                          // 22: CMsgRemoteDeviceProofResponse
	(*CMsgRemoteDeviceStreamTransportSignal)(nil),                  // 23: CMsgRemoteDeviceStreamTransportSignal
	(*CMsgRemoteClientBroadcastStatus_User)(nil),                   // 24: CMsgRemoteClientBroadcastStatus.User
	(*CMsgRemoteDeviceAuthorizationRequest_CKeyEscrow_Ticket)(nil), // 25: CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket
	(*CMsgRemoteDeviceStreamingRequest_ReservedGamepad)(nil),       // 26: CMsgRemoteDeviceStreamingRequest.ReservedGamepad
}
var file_steammessages_remoteclient_discovery_proto_depIdxs = []int32{
	0,  // 0: CMsgRemoteClientBroadcastHeader.msg_type:type_name -> ERemoteClientBroadcastMsg
	24, // 1: CMsgRemoteClientBroadcastStatus.users:type_name -> CMsgRemoteClientBroadcastStatus.User
	2,  // 2: CMsgRemoteClientBroadcastStatus.vr_link_caps:type_name -> EVRLinkCaps
	3,  // 3: CMsgRemoteDeviceAuthorizationResponse.result:type_name -> ERemoteDeviceAuthorizationResult
	3,  // 4: CMsgRemoteDeviceAuthorizationConfirmed.result:type_name -> ERemoteDeviceAuthorizationResult
	5,  // 5: CMsgRemoteDeviceStreamingRequest.supported_transport:type_name -> EStreamTransport
	4,  // 6: CMsgRemoteDeviceStreamingRequest.form_factor:type_name -> EStreamDeviceFormFactor
	26, // 7: CMsgRemoteDeviceStreamingRequest.gamepads:type_name -> CMsgRemoteDeviceStreamingRequest.ReservedGamepad
	6,  // 8: CMsgRemoteDeviceStreamingRequest.stream_interface:type_name -> EStreamInterface
	7,  // 9: CMsgRemoteDeviceStreamingResponse.result:type_name -> ERemoteDeviceStreamingResult
	5,  // 10: CMsgRemoteDeviceStreamingResponse.transport:type_name -> EStreamTransport
	8,  // 11: CMsgRemoteDeviceAuthorizationRequest.CKeyEscrow_Ticket.usage:type_name -> CMsgRemoteDeviceAuthorizationRequest.EKeyEscrowUsage
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_steammessages_remoteclient_discovery_proto_init() }
func file_steammessages_remoteclient_discovery_proto_init() {
	if File_steammessages_remoteclient_discovery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_remoteclient_discovery_proto_rawDesc), len(file_steammessages_remoteclient_discovery_proto_rawDesc)),
			NumEnums:      9,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_remoteclient_discovery_proto_goTypes,
		DependencyIndexes: file_steammessages_remoteclient_discovery_proto_depIdxs,
		EnumInfos:         file_steammessages_remoteclient_discovery_proto_enumTypes,
		MessageInfos:      file_steammessages_remoteclient_discovery_proto_msgTypes,
	}.Build()
	File_steammessages_remoteclient_discovery_proto = out.File
	file_steammessages_remoteclient_discovery_proto_goTypes = nil
	file_steammessages_remoteclient_discovery_proto_depIdxs = nil
}
