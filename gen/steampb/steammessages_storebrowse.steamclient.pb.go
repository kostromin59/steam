// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_storebrowse.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EStoreItemType int32

const (
	EStoreItemType_k_EStoreItemType_Invalid     EStoreItemType = -1
	EStoreItemType_k_EStoreItemType_App         EStoreItemType = 0
	EStoreItemType_k_EStoreItemType_Package     EStoreItemType = 1
	EStoreItemType_k_EStoreItemType_Bundle      EStoreItemType = 2
	EStoreItemType_k_EStoreItemType_Mtx         EStoreItemType = 3
	EStoreItemType_k_EStoreItemType_Tag         EStoreItemType = 4
	EStoreItemType_k_EStoreItemType_Creator     EStoreItemType = 5
	EStoreItemType_k_EStoreItemType_HubCategory EStoreItemType = 6
)

// Enum value maps for EStoreItemType.
var (
	EStoreItemType_name = map[int32]string{
		-1: "k_EStoreItemType_Invalid",
		0:  "k_EStoreItemType_App",
		1:  "k_EStoreItemType_Package",
		2:  "k_EStoreItemType_Bundle",
		3:  "k_EStoreItemType_Mtx",
		4:  "k_EStoreItemType_Tag",
		5:  "k_EStoreItemType_Creator",
		6:  "k_EStoreItemType_HubCategory",
	}
	EStoreItemType_value = map[string]int32{
		"k_EStoreItemType_Invalid":     -1,
		"k_EStoreItemType_App":         0,
		"k_EStoreItemType_Package":     1,
		"k_EStoreItemType_Bundle":      2,
		"k_EStoreItemType_Mtx":         3,
		"k_EStoreItemType_Tag":         4,
		"k_EStoreItemType_Creator":     5,
		"k_EStoreItemType_HubCategory": 6,
	}
)

func (x EStoreItemType) Enum() *EStoreItemType {
	p := new(EStoreItemType)
	*p = x
	return p
}

func (x EStoreItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStoreItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[0].Descriptor()
}

func (EStoreItemType) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[0]
}

func (x EStoreItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStoreItemType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStoreItemType(num)
	return nil
}

// Deprecated: Use EStoreItemType.Descriptor instead.
func (EStoreItemType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{0}
}

type EStoreAppType int32

const (
	EStoreAppType_k_EStoreAppType_Game        EStoreAppType = 0
	EStoreAppType_k_EStoreAppType_Demo        EStoreAppType = 1
	EStoreAppType_k_EStoreAppType_Mod         EStoreAppType = 2
	EStoreAppType_k_EStoreAppType_Movie       EStoreAppType = 3
	EStoreAppType_k_EStoreAppType_DLC         EStoreAppType = 4
	EStoreAppType_k_EStoreAppType_Guide       EStoreAppType = 5
	EStoreAppType_k_EStoreAppType_Software    EStoreAppType = 6
	EStoreAppType_k_EStoreAppType_Video       EStoreAppType = 7
	EStoreAppType_k_EStoreAppType_Series      EStoreAppType = 8
	EStoreAppType_k_EStoreAppType_Episode     EStoreAppType = 9
	EStoreAppType_k_EStoreAppType_Hardware    EStoreAppType = 10
	EStoreAppType_k_EStoreAppType_Music       EStoreAppType = 11
	EStoreAppType_k_EStoreAppType_Beta        EStoreAppType = 12
	EStoreAppType_k_EStoreAppType_Tool        EStoreAppType = 13
	EStoreAppType_k_EStoreAppType_Advertising EStoreAppType = 14
)

// Enum value maps for EStoreAppType.
var (
	EStoreAppType_name = map[int32]string{
		0:  "k_EStoreAppType_Game",
		1:  "k_EStoreAppType_Demo",
		2:  "k_EStoreAppType_Mod",
		3:  "k_EStoreAppType_Movie",
		4:  "k_EStoreAppType_DLC",
		5:  "k_EStoreAppType_Guide",
		6:  "k_EStoreAppType_Software",
		7:  "k_EStoreAppType_Video",
		8:  "k_EStoreAppType_Series",
		9:  "k_EStoreAppType_Episode",
		10: "k_EStoreAppType_Hardware",
		11: "k_EStoreAppType_Music",
		12: "k_EStoreAppType_Beta",
		13: "k_EStoreAppType_Tool",
		14: "k_EStoreAppType_Advertising",
	}
	EStoreAppType_value = map[string]int32{
		"k_EStoreAppType_Game":        0,
		"k_EStoreAppType_Demo":        1,
		"k_EStoreAppType_Mod":         2,
		"k_EStoreAppType_Movie":       3,
		"k_EStoreAppType_DLC":         4,
		"k_EStoreAppType_Guide":       5,
		"k_EStoreAppType_Software":    6,
		"k_EStoreAppType_Video":       7,
		"k_EStoreAppType_Series":      8,
		"k_EStoreAppType_Episode":     9,
		"k_EStoreAppType_Hardware":    10,
		"k_EStoreAppType_Music":       11,
		"k_EStoreAppType_Beta":        12,
		"k_EStoreAppType_Tool":        13,
		"k_EStoreAppType_Advertising": 14,
	}
)

func (x EStoreAppType) Enum() *EStoreAppType {
	p := new(EStoreAppType)
	*p = x
	return p
}

func (x EStoreAppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStoreAppType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[1].Descriptor()
}

func (EStoreAppType) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[1]
}

func (x EStoreAppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStoreAppType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStoreAppType(num)
	return nil
}

// Deprecated: Use EStoreAppType.Descriptor instead.
func (EStoreAppType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{1}
}

type EUserReviewScore int32

const (
	EUserReviewScore_k_EUserReviewScore_None                   EUserReviewScore = 0
	EUserReviewScore_k_EUserReviewScore_OverwhelminglyNegative EUserReviewScore = 1
	EUserReviewScore_k_EUserReviewScore_VeryNegative           EUserReviewScore = 2
	EUserReviewScore_k_EUserReviewScore_Negative               EUserReviewScore = 3
	EUserReviewScore_k_EUserReviewScore_MostlyNegative         EUserReviewScore = 4
	EUserReviewScore_k_EUserReviewScore_Mixed                  EUserReviewScore = 5
	EUserReviewScore_k_EUserReviewScore_MostlyPositive         EUserReviewScore = 6
	EUserReviewScore_k_EUserReviewScore_Positive               EUserReviewScore = 7
	EUserReviewScore_k_EUserReviewScore_VeryPositive           EUserReviewScore = 8
	EUserReviewScore_k_EUserReviewScore_OverwhelminglyPositive EUserReviewScore = 9
)

// Enum value maps for EUserReviewScore.
var (
	EUserReviewScore_name = map[int32]string{
		0: "k_EUserReviewScore_None",
		1: "k_EUserReviewScore_OverwhelminglyNegative",
		2: "k_EUserReviewScore_VeryNegative",
		3: "k_EUserReviewScore_Negative",
		4: "k_EUserReviewScore_MostlyNegative",
		5: "k_EUserReviewScore_Mixed",
		6: "k_EUserReviewScore_MostlyPositive",
		7: "k_EUserReviewScore_Positive",
		8: "k_EUserReviewScore_VeryPositive",
		9: "k_EUserReviewScore_OverwhelminglyPositive",
	}
	EUserReviewScore_value = map[string]int32{
		"k_EUserReviewScore_None":                   0,
		"k_EUserReviewScore_OverwhelminglyNegative": 1,
		"k_EUserReviewScore_VeryNegative":           2,
		"k_EUserReviewScore_Negative":               3,
		"k_EUserReviewScore_MostlyNegative":         4,
		"k_EUserReviewScore_Mixed":                  5,
		"k_EUserReviewScore_MostlyPositive":         6,
		"k_EUserReviewScore_Positive":               7,
		"k_EUserReviewScore_VeryPositive":           8,
		"k_EUserReviewScore_OverwhelminglyPositive": 9,
	}
)

func (x EUserReviewScore) Enum() *EUserReviewScore {
	p := new(EUserReviewScore)
	*p = x
	return p
}

func (x EUserReviewScore) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EUserReviewScore) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[2].Descriptor()
}

func (EUserReviewScore) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[2]
}

func (x EUserReviewScore) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EUserReviewScore) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EUserReviewScore(num)
	return nil
}

// Deprecated: Use EUserReviewScore.Descriptor instead.
func (EUserReviewScore) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{2}
}

type ETrailerCategory int32

const (
	ETrailerCategory_k_ETrailerCategory_Invalid   ETrailerCategory = 0
	ETrailerCategory_k_ETrailerCategory_Gameplay  ETrailerCategory = 1
	ETrailerCategory_k_ETrailerCategory_Teaser    ETrailerCategory = 2
	ETrailerCategory_k_ETrailerCategory_Cinematic ETrailerCategory = 3
	ETrailerCategory_k_ETrailerCategory_Update    ETrailerCategory = 4
	ETrailerCategory_k_ETrailerCategory_Accolades ETrailerCategory = 5
	ETrailerCategory_k_ETrailerCategory_Interview ETrailerCategory = 6
)

// Enum value maps for ETrailerCategory.
var (
	ETrailerCategory_name = map[int32]string{
		0: "k_ETrailerCategory_Invalid",
		1: "k_ETrailerCategory_Gameplay",
		2: "k_ETrailerCategory_Teaser",
		3: "k_ETrailerCategory_Cinematic",
		4: "k_ETrailerCategory_Update",
		5: "k_ETrailerCategory_Accolades",
		6: "k_ETrailerCategory_Interview",
	}
	ETrailerCategory_value = map[string]int32{
		"k_ETrailerCategory_Invalid":   0,
		"k_ETrailerCategory_Gameplay":  1,
		"k_ETrailerCategory_Teaser":    2,
		"k_ETrailerCategory_Cinematic": 3,
		"k_ETrailerCategory_Update":    4,
		"k_ETrailerCategory_Accolades": 5,
		"k_ETrailerCategory_Interview": 6,
	}
)

func (x ETrailerCategory) Enum() *ETrailerCategory {
	p := new(ETrailerCategory)
	*p = x
	return p
}

func (x ETrailerCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ETrailerCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[3].Descriptor()
}

func (ETrailerCategory) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[3]
}

func (x ETrailerCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ETrailerCategory) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ETrailerCategory(num)
	return nil
}

// Deprecated: Use ETrailerCategory.Descriptor instead.
func (ETrailerCategory) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{3}
}

type EStoreBrowseFilterFailure int32

const (
	EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_None            EStoreBrowseFilterFailure = 0
	EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_Redundant       EStoreBrowseFilterFailure = 10
	EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_NotPreferred    EStoreBrowseFilterFailure = 20
	EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_NotInterested   EStoreBrowseFilterFailure = 30
	EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_UnwantedContent EStoreBrowseFilterFailure = 40
	EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_Unavailable     EStoreBrowseFilterFailure = 50
)

// Enum value maps for EStoreBrowseFilterFailure.
var (
	EStoreBrowseFilterFailure_name = map[int32]string{
		0:  "k_EStoreBrowseFilterFailure_None",
		10: "k_EStoreBrowseFilterFailure_Redundant",
		20: "k_EStoreBrowseFilterFailure_NotPreferred",
		30: "k_EStoreBrowseFilterFailure_NotInterested",
		40: "k_EStoreBrowseFilterFailure_UnwantedContent",
		50: "k_EStoreBrowseFilterFailure_Unavailable",
	}
	EStoreBrowseFilterFailure_value = map[string]int32{
		"k_EStoreBrowseFilterFailure_None":            0,
		"k_EStoreBrowseFilterFailure_Redundant":       10,
		"k_EStoreBrowseFilterFailure_NotPreferred":    20,
		"k_EStoreBrowseFilterFailure_NotInterested":   30,
		"k_EStoreBrowseFilterFailure_UnwantedContent": 40,
		"k_EStoreBrowseFilterFailure_Unavailable":     50,
	}
)

func (x EStoreBrowseFilterFailure) Enum() *EStoreBrowseFilterFailure {
	p := new(EStoreBrowseFilterFailure)
	*p = x
	return p
}

func (x EStoreBrowseFilterFailure) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStoreBrowseFilterFailure) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[4].Descriptor()
}

func (EStoreBrowseFilterFailure) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[4]
}

func (x EStoreBrowseFilterFailure) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStoreBrowseFilterFailure) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStoreBrowseFilterFailure(num)
	return nil
}

// Deprecated: Use EStoreBrowseFilterFailure.Descriptor instead.
func (EStoreBrowseFilterFailure) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4}
}

type EStoreLinkType int32

const (
	EStoreLinkType_k_EStoreLinkType_None      EStoreLinkType = 0
	EStoreLinkType_k_EStoreLinkType_YouTube   EStoreLinkType = 1
	EStoreLinkType_k_EStoreLinkType_Facebook  EStoreLinkType = 2
	EStoreLinkType_k_EStoreLinkType_Twitter   EStoreLinkType = 3
	EStoreLinkType_k_EStoreLinkType_Twitch    EStoreLinkType = 4
	EStoreLinkType_k_EStoreLinkType_Discord   EStoreLinkType = 5
	EStoreLinkType_k_EStoreLinkType_QQ        EStoreLinkType = 6
	EStoreLinkType_k_EStoreLinkType_VK        EStoreLinkType = 7
	EStoreLinkType_k_EStoreLinkType_Bilibili  EStoreLinkType = 8
	EStoreLinkType_k_EStoreLinkType_Weibo     EStoreLinkType = 9
	EStoreLinkType_k_EStoreLinkType_Reddit    EStoreLinkType = 10
	EStoreLinkType_k_EStoreLinkType_Instagram EStoreLinkType = 11
	EStoreLinkType_k_EStoreLinkType_Tumblr    EStoreLinkType = 12
	EStoreLinkType_k_EStoreLinkType_Tieba     EStoreLinkType = 13
	EStoreLinkType_k_EStoreLinkType_Tiktok    EStoreLinkType = 14
	EStoreLinkType_k_EStoreLinkType_Telegram  EStoreLinkType = 15
	EStoreLinkType_k_EStoreLinkType_LinkedIn  EStoreLinkType = 16
	EStoreLinkType_k_EStoreLinkType_WeChat    EStoreLinkType = 17
	EStoreLinkType_k_EStoreLinkType_QQLink    EStoreLinkType = 18
	EStoreLinkType_k_EStoreLinkType_Douyin    EStoreLinkType = 19
	EStoreLinkType_k_EStoreLinkType_Bluesky   EStoreLinkType = 20
	EStoreLinkType_k_EStoreLinkType_Mastodon  EStoreLinkType = 21
	EStoreLinkType_k_EStoreLinkType_Threads   EStoreLinkType = 22
	EStoreLinkType_k_EStoreLinkType_QQChannel EStoreLinkType = 23
	EStoreLinkType_k_EStoreLinkType_MAX       EStoreLinkType = 24
)

// Enum value maps for EStoreLinkType.
var (
	EStoreLinkType_name = map[int32]string{
		0:  "k_EStoreLinkType_None",
		1:  "k_EStoreLinkType_YouTube",
		2:  "k_EStoreLinkType_Facebook",
		3:  "k_EStoreLinkType_Twitter",
		4:  "k_EStoreLinkType_Twitch",
		5:  "k_EStoreLinkType_Discord",
		6:  "k_EStoreLinkType_QQ",
		7:  "k_EStoreLinkType_VK",
		8:  "k_EStoreLinkType_Bilibili",
		9:  "k_EStoreLinkType_Weibo",
		10: "k_EStoreLinkType_Reddit",
		11: "k_EStoreLinkType_Instagram",
		12: "k_EStoreLinkType_Tumblr",
		13: "k_EStoreLinkType_Tieba",
		14: "k_EStoreLinkType_Tiktok",
		15: "k_EStoreLinkType_Telegram",
		16: "k_EStoreLinkType_LinkedIn",
		17: "k_EStoreLinkType_WeChat",
		18: "k_EStoreLinkType_QQLink",
		19: "k_EStoreLinkType_Douyin",
		20: "k_EStoreLinkType_Bluesky",
		21: "k_EStoreLinkType_Mastodon",
		22: "k_EStoreLinkType_Threads",
		23: "k_EStoreLinkType_QQChannel",
		24: "k_EStoreLinkType_MAX",
	}
	EStoreLinkType_value = map[string]int32{
		"k_EStoreLinkType_None":      0,
		"k_EStoreLinkType_YouTube":   1,
		"k_EStoreLinkType_Facebook":  2,
		"k_EStoreLinkType_Twitter":   3,
		"k_EStoreLinkType_Twitch":    4,
		"k_EStoreLinkType_Discord":   5,
		"k_EStoreLinkType_QQ":        6,
		"k_EStoreLinkType_VK":        7,
		"k_EStoreLinkType_Bilibili":  8,
		"k_EStoreLinkType_Weibo":     9,
		"k_EStoreLinkType_Reddit":    10,
		"k_EStoreLinkType_Instagram": 11,
		"k_EStoreLinkType_Tumblr":    12,
		"k_EStoreLinkType_Tieba":     13,
		"k_EStoreLinkType_Tiktok":    14,
		"k_EStoreLinkType_Telegram":  15,
		"k_EStoreLinkType_LinkedIn":  16,
		"k_EStoreLinkType_WeChat":    17,
		"k_EStoreLinkType_QQLink":    18,
		"k_EStoreLinkType_Douyin":    19,
		"k_EStoreLinkType_Bluesky":   20,
		"k_EStoreLinkType_Mastodon":  21,
		"k_EStoreLinkType_Threads":   22,
		"k_EStoreLinkType_QQChannel": 23,
		"k_EStoreLinkType_MAX":       24,
	}
)

func (x EStoreLinkType) Enum() *EStoreLinkType {
	p := new(EStoreLinkType)
	*p = x
	return p
}

func (x EStoreLinkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStoreLinkType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[5].Descriptor()
}

func (EStoreLinkType) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[5]
}

func (x EStoreLinkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStoreLinkType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStoreLinkType(num)
	return nil
}

// Deprecated: Use EStoreLinkType.Descriptor instead.
func (EStoreLinkType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{5}
}

type EStoreCategoryType int32

const (
	EStoreCategoryType_k_EStoreCategoryType_Category          EStoreCategoryType = 0
	EStoreCategoryType_k_EStoreCategoryType_SupportedPlayers  EStoreCategoryType = 1
	EStoreCategoryType_k_EStoreCategoryType_Feature           EStoreCategoryType = 2
	EStoreCategoryType_k_EStoreCategoryType_ControllerSupport EStoreCategoryType = 3
	EStoreCategoryType_k_EStoreCategoryType_CloudGaming       EStoreCategoryType = 4
	EStoreCategoryType_k_EStoreCategoryType_MAX               EStoreCategoryType = 5
)

// Enum value maps for EStoreCategoryType.
var (
	EStoreCategoryType_name = map[int32]string{
		0: "k_EStoreCategoryType_Category",
		1: "k_EStoreCategoryType_SupportedPlayers",
		2: "k_EStoreCategoryType_Feature",
		3: "k_EStoreCategoryType_ControllerSupport",
		4: "k_EStoreCategoryType_CloudGaming",
		5: "k_EStoreCategoryType_MAX",
	}
	EStoreCategoryType_value = map[string]int32{
		"k_EStoreCategoryType_Category":          0,
		"k_EStoreCategoryType_SupportedPlayers":  1,
		"k_EStoreCategoryType_Feature":           2,
		"k_EStoreCategoryType_ControllerSupport": 3,
		"k_EStoreCategoryType_CloudGaming":       4,
		"k_EStoreCategoryType_MAX":               5,
	}
)

func (x EStoreCategoryType) Enum() *EStoreCategoryType {
	p := new(EStoreCategoryType)
	*p = x
	return p
}

func (x EStoreCategoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EStoreCategoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_storebrowse_steamclient_proto_enumTypes[6].Descriptor()
}

func (EStoreCategoryType) Type() protoreflect.EnumType {
	return &file_steammessages_storebrowse_steamclient_proto_enumTypes[6]
}

func (x EStoreCategoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EStoreCategoryType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EStoreCategoryType(num)
	return nil
}

// Deprecated: Use EStoreCategoryType.Descriptor instead.
func (EStoreCategoryType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{6}
}

type StoreItemID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Packageid     *uint32                `protobuf:"varint,2,opt,name=packageid" json:"packageid,omitempty"`
	Bundleid      *uint32                `protobuf:"varint,3,opt,name=bundleid" json:"bundleid,omitempty"`
	Tagid         *uint32                `protobuf:"varint,4,opt,name=tagid" json:"tagid,omitempty"`
	Creatorid     *uint32                `protobuf:"varint,5,opt,name=creatorid" json:"creatorid,omitempty"`
	Hubcategoryid *uint32                `protobuf:"varint,6,opt,name=hubcategoryid" json:"hubcategoryid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItemID) Reset() {
	*x = StoreItemID{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItemID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItemID) ProtoMessage() {}

func (x *StoreItemID) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItemID.ProtoReflect.Descriptor instead.
func (*StoreItemID) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *StoreItemID) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *StoreItemID) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *StoreItemID) GetBundleid() uint32 {
	if x != nil && x.Bundleid != nil {
		return *x.Bundleid
	}
	return 0
}

func (x *StoreItemID) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *StoreItemID) GetCreatorid() uint32 {
	if x != nil && x.Creatorid != nil {
		return *x.Creatorid
	}
	return 0
}

func (x *StoreItemID) GetHubcategoryid() uint32 {
	if x != nil && x.Hubcategoryid != nil {
		return *x.Hubcategoryid
	}
	return 0
}

type StoreBrowseContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Elanguage     *int32                 `protobuf:"varint,2,opt,name=elanguage" json:"elanguage,omitempty"`
	CountryCode   *string                `protobuf:"bytes,3,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	SteamRealm    *int32                 `protobuf:"varint,4,opt,name=steam_realm,json=steamRealm" json:"steam_realm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreBrowseContext) Reset() {
	*x = StoreBrowseContext{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBrowseContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBrowseContext) ProtoMessage() {}

func (x *StoreBrowseContext) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBrowseContext.ProtoReflect.Descriptor instead.
func (*StoreBrowseContext) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *StoreBrowseContext) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *StoreBrowseContext) GetElanguage() int32 {
	if x != nil && x.Elanguage != nil {
		return *x.Elanguage
	}
	return 0
}

func (x *StoreBrowseContext) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *StoreBrowseContext) GetSteamRealm() int32 {
	if x != nil && x.SteamRealm != nil {
		return *x.SteamRealm
	}
	return 0
}

type StoreBrowseItemDataRequest struct {
	state                         protoimpl.MessageState      `protogen:"open.v1"`
	IncludeAssets                 *bool                       `protobuf:"varint,1,opt,name=include_assets,json=includeAssets" json:"include_assets,omitempty"`
	IncludeRelease                *bool                       `protobuf:"varint,2,opt,name=include_release,json=includeRelease" json:"include_release,omitempty"`
	IncludePlatforms              *bool                       `protobuf:"varint,3,opt,name=include_platforms,json=includePlatforms" json:"include_platforms,omitempty"`
	IncludeAllPurchaseOptions     *bool                       `protobuf:"varint,4,opt,name=include_all_purchase_options,json=includeAllPurchaseOptions" json:"include_all_purchase_options,omitempty"`
	IncludeScreenshots            *bool                       `protobuf:"varint,5,opt,name=include_screenshots,json=includeScreenshots" json:"include_screenshots,omitempty"`
	IncludeTrailers               *bool                       `protobuf:"varint,6,opt,name=include_trailers,json=includeTrailers" json:"include_trailers,omitempty"`
	IncludeRatings                *bool                       `protobuf:"varint,7,opt,name=include_ratings,json=includeRatings" json:"include_ratings,omitempty"`
	IncludeTagCount               *int32                      `protobuf:"varint,8,opt,name=include_tag_count,json=includeTagCount" json:"include_tag_count,omitempty"`
	IncludeReviews                *bool                       `protobuf:"varint,9,opt,name=include_reviews,json=includeReviews" json:"include_reviews,omitempty"`
	IncludeBasicInfo              *bool                       `protobuf:"varint,10,opt,name=include_basic_info,json=includeBasicInfo" json:"include_basic_info,omitempty"`
	IncludeSupportedLanguages     *bool                       `protobuf:"varint,11,opt,name=include_supported_languages,json=includeSupportedLanguages" json:"include_supported_languages,omitempty"`
	IncludeFullDescription        *bool                       `protobuf:"varint,12,opt,name=include_full_description,json=includeFullDescription" json:"include_full_description,omitempty"`
	IncludeIncludedItems          *bool                       `protobuf:"varint,13,opt,name=include_included_items,json=includeIncludedItems" json:"include_included_items,omitempty"`
	IncludedItemDataRequest       *StoreBrowseItemDataRequest `protobuf:"bytes,14,opt,name=included_item_data_request,json=includedItemDataRequest" json:"included_item_data_request,omitempty"`
	IncludeAssetsWithoutOverrides *bool                       `protobuf:"varint,15,opt,name=include_assets_without_overrides,json=includeAssetsWithoutOverrides" json:"include_assets_without_overrides,omitempty"`
	ApplyUserFilters              *bool                       `protobuf:"varint,16,opt,name=apply_user_filters,json=applyUserFilters" json:"apply_user_filters,omitempty"`
	IncludeLinks                  *bool                       `protobuf:"varint,17,opt,name=include_links,json=includeLinks" json:"include_links,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *StoreBrowseItemDataRequest) Reset() {
	*x = StoreBrowseItemDataRequest{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBrowseItemDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBrowseItemDataRequest) ProtoMessage() {}

func (x *StoreBrowseItemDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBrowseItemDataRequest.ProtoReflect.Descriptor instead.
func (*StoreBrowseItemDataRequest) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *StoreBrowseItemDataRequest) GetIncludeAssets() bool {
	if x != nil && x.IncludeAssets != nil {
		return *x.IncludeAssets
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeRelease() bool {
	if x != nil && x.IncludeRelease != nil {
		return *x.IncludeRelease
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludePlatforms() bool {
	if x != nil && x.IncludePlatforms != nil {
		return *x.IncludePlatforms
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeAllPurchaseOptions() bool {
	if x != nil && x.IncludeAllPurchaseOptions != nil {
		return *x.IncludeAllPurchaseOptions
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeScreenshots() bool {
	if x != nil && x.IncludeScreenshots != nil {
		return *x.IncludeScreenshots
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeTrailers() bool {
	if x != nil && x.IncludeTrailers != nil {
		return *x.IncludeTrailers
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeRatings() bool {
	if x != nil && x.IncludeRatings != nil {
		return *x.IncludeRatings
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeTagCount() int32 {
	if x != nil && x.IncludeTagCount != nil {
		return *x.IncludeTagCount
	}
	return 0
}

func (x *StoreBrowseItemDataRequest) GetIncludeReviews() bool {
	if x != nil && x.IncludeReviews != nil {
		return *x.IncludeReviews
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeBasicInfo() bool {
	if x != nil && x.IncludeBasicInfo != nil {
		return *x.IncludeBasicInfo
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeSupportedLanguages() bool {
	if x != nil && x.IncludeSupportedLanguages != nil {
		return *x.IncludeSupportedLanguages
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeFullDescription() bool {
	if x != nil && x.IncludeFullDescription != nil {
		return *x.IncludeFullDescription
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeIncludedItems() bool {
	if x != nil && x.IncludeIncludedItems != nil {
		return *x.IncludeIncludedItems
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludedItemDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.IncludedItemDataRequest
	}
	return nil
}

func (x *StoreBrowseItemDataRequest) GetIncludeAssetsWithoutOverrides() bool {
	if x != nil && x.IncludeAssetsWithoutOverrides != nil {
		return *x.IncludeAssetsWithoutOverrides
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetApplyUserFilters() bool {
	if x != nil && x.ApplyUserFilters != nil {
		return *x.ApplyUserFilters
	}
	return false
}

func (x *StoreBrowseItemDataRequest) GetIncludeLinks() bool {
	if x != nil && x.IncludeLinks != nil {
		return *x.IncludeLinks
	}
	return false
}

type CStoreBrowse_GetItems_Request struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Ids           []*StoreItemID              `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	Context       *StoreBrowseContext         `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	DataRequest   *StoreBrowseItemDataRequest `protobuf:"bytes,3,opt,name=data_request,json=dataRequest" json:"data_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetItems_Request) Reset() {
	*x = CStoreBrowse_GetItems_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetItems_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetItems_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetItems_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CStoreBrowse_GetItems_Request) GetIds() []*StoreItemID {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CStoreBrowse_GetItems_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CStoreBrowse_GetItems_Request) GetDataRequest() *StoreBrowseItemDataRequest {
	if x != nil {
		return x.DataRequest
	}
	return nil
}

type StoreItem struct {
	state                           protoimpl.MessageState         `protogen:"open.v1"`
	ItemType                        *EStoreItemType                `protobuf:"varint,1,opt,name=item_type,json=itemType,enum=EStoreItemType,def=-1" json:"item_type,omitempty"`
	Id                              *uint32                        `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	Success                         *uint32                        `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	Visible                         *bool                          `protobuf:"varint,4,opt,name=visible" json:"visible,omitempty"`
	UnvailableForCountryRestriction *bool                          `protobuf:"varint,5,opt,name=unvailable_for_country_restriction,json=unvailableForCountryRestriction" json:"unvailable_for_country_restriction,omitempty"`
	Name                            *string                        `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	StoreUrlPath                    *string                        `protobuf:"bytes,7,opt,name=store_url_path,json=storeUrlPath" json:"store_url_path,omitempty"`
	Appid                           *uint32                        `protobuf:"varint,9,opt,name=appid" json:"appid,omitempty"`
	Type                            *EStoreAppType                 `protobuf:"varint,10,opt,name=type,enum=EStoreAppType,def=0" json:"type,omitempty"`
	IncludedTypes                   []EStoreAppType                `protobuf:"varint,11,rep,name=included_types,json=includedTypes,enum=EStoreAppType" json:"included_types,omitempty"`
	IncludedAppids                  []uint32                       `protobuf:"varint,12,rep,name=included_appids,json=includedAppids" json:"included_appids,omitempty"`
	IsFree                          *bool                          `protobuf:"varint,13,opt,name=is_free,json=isFree" json:"is_free,omitempty"`
	IsEarlyAccess                   *bool                          `protobuf:"varint,14,opt,name=is_early_access,json=isEarlyAccess" json:"is_early_access,omitempty"`
	RelatedItems                    *StoreItem_RelatedItems        `protobuf:"bytes,15,opt,name=related_items,json=relatedItems" json:"related_items,omitempty"`
	IncludedItems                   *StoreItem_IncludedItems       `protobuf:"bytes,16,opt,name=included_items,json=includedItems" json:"included_items,omitempty"`
	ContentDescriptorids            []EContentDescriptorID         `protobuf:"varint,20,rep,name=content_descriptorids,json=contentDescriptorids,enum=EContentDescriptorID" json:"content_descriptorids,omitempty"`
	Tagids                          []uint32                       `protobuf:"varint,21,rep,name=tagids" json:"tagids,omitempty"`
	Categories                      *StoreItem_Categories          `protobuf:"bytes,22,opt,name=categories" json:"categories,omitempty"`
	Reviews                         *StoreItem_Reviews             `protobuf:"bytes,23,opt,name=reviews" json:"reviews,omitempty"`
	BasicInfo                       *StoreItem_BasicInfo           `protobuf:"bytes,24,opt,name=basic_info,json=basicInfo" json:"basic_info,omitempty"`
	Tags                            []*StoreItem_Tag               `protobuf:"bytes,25,rep,name=tags" json:"tags,omitempty"`
	Assets                          *StoreItem_Assets              `protobuf:"bytes,30,opt,name=assets" json:"assets,omitempty"`
	Release                         *StoreItem_ReleaseInfo         `protobuf:"bytes,31,opt,name=release" json:"release,omitempty"`
	Platforms                       *StoreItem_Platforms           `protobuf:"bytes,32,opt,name=platforms" json:"platforms,omitempty"`
	GameRating                      *StoreGameRating               `protobuf:"bytes,33,opt,name=game_rating,json=gameRating" json:"game_rating,omitempty"`
	IsComingSoon                    *bool                          `protobuf:"varint,34,opt,name=is_coming_soon,json=isComingSoon" json:"is_coming_soon,omitempty"`
	BestPurchaseOption              *StoreItem_PurchaseOption      `protobuf:"bytes,40,opt,name=best_purchase_option,json=bestPurchaseOption" json:"best_purchase_option,omitempty"`
	PurchaseOptions                 []*StoreItem_PurchaseOption    `protobuf:"bytes,41,rep,name=purchase_options,json=purchaseOptions" json:"purchase_options,omitempty"`
	Accessories                     []*StoreItem_PurchaseOption    `protobuf:"bytes,42,rep,name=accessories" json:"accessories,omitempty"`
	SelfPurchaseOption              *StoreItem_PurchaseOption      `protobuf:"bytes,43,opt,name=self_purchase_option,json=selfPurchaseOption" json:"self_purchase_option,omitempty"`
	Screenshots                     *StoreItem_Screenshots         `protobuf:"bytes,50,opt,name=screenshots" json:"screenshots,omitempty"`
	Trailers                        *StoreItem_Trailers            `protobuf:"bytes,51,opt,name=trailers" json:"trailers,omitempty"`
	SupportedLanguages              []*StoreItem_SupportedLanguage `protobuf:"bytes,52,rep,name=supported_languages,json=supportedLanguages" json:"supported_languages,omitempty"`
	StoreUrlPathOverride            *string                        `protobuf:"bytes,53,opt,name=store_url_path_override,json=storeUrlPathOverride" json:"store_url_path_override,omitempty"`
	FreeWeekend                     *StoreItem_FreeWeekend         `protobuf:"bytes,54,opt,name=free_weekend,json=freeWeekend" json:"free_weekend,omitempty"`
	Unlisted                        *bool                          `protobuf:"varint,55,opt,name=unlisted" json:"unlisted,omitempty"`
	GameCount                       *uint32                        `protobuf:"varint,56,opt,name=game_count,json=gameCount" json:"game_count,omitempty"`
	InternalName                    *string                        `protobuf:"bytes,57,opt,name=internal_name,json=internalName" json:"internal_name,omitempty"`
	FullDescription                 *string                        `protobuf:"bytes,58,opt,name=full_description,json=fullDescription" json:"full_description,omitempty"`
	IsFreeTemporarily               *bool                          `protobuf:"varint,59,opt,name=is_free_temporarily,json=isFreeTemporarily" json:"is_free_temporarily,omitempty"`
	AssetsWithoutOverrides          *StoreItem_Assets              `protobuf:"bytes,60,opt,name=assets_without_overrides,json=assetsWithoutOverrides" json:"assets_without_overrides,omitempty"`
	UserFilterFailure               *StoreBrowseFilterFailure      `protobuf:"bytes,70,opt,name=user_filter_failure,json=userFilterFailure" json:"user_filter_failure,omitempty"`
	Links                           []*StoreItem_Link              `protobuf:"bytes,71,rep,name=links" json:"links,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

// Default values for StoreItem fields.
const (
	Default_StoreItem_ItemType = EStoreItemType_k_EStoreItemType_Invalid
	Default_StoreItem_Type     = EStoreAppType_k_EStoreAppType_Game
)

func (x *StoreItem) Reset() {
	*x = StoreItem{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem) ProtoMessage() {}

func (x *StoreItem) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem.ProtoReflect.Descriptor instead.
func (*StoreItem) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *StoreItem) GetItemType() EStoreItemType {
	if x != nil && x.ItemType != nil {
		return *x.ItemType
	}
	return Default_StoreItem_ItemType
}

func (x *StoreItem) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *StoreItem) GetSuccess() uint32 {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return 0
}

func (x *StoreItem) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

func (x *StoreItem) GetUnvailableForCountryRestriction() bool {
	if x != nil && x.UnvailableForCountryRestriction != nil {
		return *x.UnvailableForCountryRestriction
	}
	return false
}

func (x *StoreItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *StoreItem) GetStoreUrlPath() string {
	if x != nil && x.StoreUrlPath != nil {
		return *x.StoreUrlPath
	}
	return ""
}

func (x *StoreItem) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *StoreItem) GetType() EStoreAppType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_StoreItem_Type
}

func (x *StoreItem) GetIncludedTypes() []EStoreAppType {
	if x != nil {
		return x.IncludedTypes
	}
	return nil
}

func (x *StoreItem) GetIncludedAppids() []uint32 {
	if x != nil {
		return x.IncludedAppids
	}
	return nil
}

func (x *StoreItem) GetIsFree() bool {
	if x != nil && x.IsFree != nil {
		return *x.IsFree
	}
	return false
}

func (x *StoreItem) GetIsEarlyAccess() bool {
	if x != nil && x.IsEarlyAccess != nil {
		return *x.IsEarlyAccess
	}
	return false
}

func (x *StoreItem) GetRelatedItems() *StoreItem_RelatedItems {
	if x != nil {
		return x.RelatedItems
	}
	return nil
}

func (x *StoreItem) GetIncludedItems() *StoreItem_IncludedItems {
	if x != nil {
		return x.IncludedItems
	}
	return nil
}

func (x *StoreItem) GetContentDescriptorids() []EContentDescriptorID {
	if x != nil {
		return x.ContentDescriptorids
	}
	return nil
}

func (x *StoreItem) GetTagids() []uint32 {
	if x != nil {
		return x.Tagids
	}
	return nil
}

func (x *StoreItem) GetCategories() *StoreItem_Categories {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *StoreItem) GetReviews() *StoreItem_Reviews {
	if x != nil {
		return x.Reviews
	}
	return nil
}

func (x *StoreItem) GetBasicInfo() *StoreItem_BasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *StoreItem) GetTags() []*StoreItem_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *StoreItem) GetAssets() *StoreItem_Assets {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *StoreItem) GetRelease() *StoreItem_ReleaseInfo {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *StoreItem) GetPlatforms() *StoreItem_Platforms {
	if x != nil {
		return x.Platforms
	}
	return nil
}

func (x *StoreItem) GetGameRating() *StoreGameRating {
	if x != nil {
		return x.GameRating
	}
	return nil
}

func (x *StoreItem) GetIsComingSoon() bool {
	if x != nil && x.IsComingSoon != nil {
		return *x.IsComingSoon
	}
	return false
}

func (x *StoreItem) GetBestPurchaseOption() *StoreItem_PurchaseOption {
	if x != nil {
		return x.BestPurchaseOption
	}
	return nil
}

func (x *StoreItem) GetPurchaseOptions() []*StoreItem_PurchaseOption {
	if x != nil {
		return x.PurchaseOptions
	}
	return nil
}

func (x *StoreItem) GetAccessories() []*StoreItem_PurchaseOption {
	if x != nil {
		return x.Accessories
	}
	return nil
}

func (x *StoreItem) GetSelfPurchaseOption() *StoreItem_PurchaseOption {
	if x != nil {
		return x.SelfPurchaseOption
	}
	return nil
}

func (x *StoreItem) GetScreenshots() *StoreItem_Screenshots {
	if x != nil {
		return x.Screenshots
	}
	return nil
}

func (x *StoreItem) GetTrailers() *StoreItem_Trailers {
	if x != nil {
		return x.Trailers
	}
	return nil
}

func (x *StoreItem) GetSupportedLanguages() []*StoreItem_SupportedLanguage {
	if x != nil {
		return x.SupportedLanguages
	}
	return nil
}

func (x *StoreItem) GetStoreUrlPathOverride() string {
	if x != nil && x.StoreUrlPathOverride != nil {
		return *x.StoreUrlPathOverride
	}
	return ""
}

func (x *StoreItem) GetFreeWeekend() *StoreItem_FreeWeekend {
	if x != nil {
		return x.FreeWeekend
	}
	return nil
}

func (x *StoreItem) GetUnlisted() bool {
	if x != nil && x.Unlisted != nil {
		return *x.Unlisted
	}
	return false
}

func (x *StoreItem) GetGameCount() uint32 {
	if x != nil && x.GameCount != nil {
		return *x.GameCount
	}
	return 0
}

func (x *StoreItem) GetInternalName() string {
	if x != nil && x.InternalName != nil {
		return *x.InternalName
	}
	return ""
}

func (x *StoreItem) GetFullDescription() string {
	if x != nil && x.FullDescription != nil {
		return *x.FullDescription
	}
	return ""
}

func (x *StoreItem) GetIsFreeTemporarily() bool {
	if x != nil && x.IsFreeTemporarily != nil {
		return *x.IsFreeTemporarily
	}
	return false
}

func (x *StoreItem) GetAssetsWithoutOverrides() *StoreItem_Assets {
	if x != nil {
		return x.AssetsWithoutOverrides
	}
	return nil
}

func (x *StoreItem) GetUserFilterFailure() *StoreBrowseFilterFailure {
	if x != nil {
		return x.UserFilterFailure
	}
	return nil
}

func (x *StoreItem) GetLinks() []*StoreItem_Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type StoreGameRating struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Type                *string                `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Rating              *string                `protobuf:"bytes,2,opt,name=rating" json:"rating,omitempty"`
	Descriptors         []string               `protobuf:"bytes,3,rep,name=descriptors" json:"descriptors,omitempty"`
	InteractiveElements *string                `protobuf:"bytes,4,opt,name=interactive_elements,json=interactiveElements" json:"interactive_elements,omitempty"`
	RequiredAge         *int32                 `protobuf:"varint,10,opt,name=required_age,json=requiredAge" json:"required_age,omitempty"`
	UseAgeGate          *bool                  `protobuf:"varint,11,opt,name=use_age_gate,json=useAgeGate" json:"use_age_gate,omitempty"`
	ImageUrl            *string                `protobuf:"bytes,20,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	ImageTarget         *string                `protobuf:"bytes,21,opt,name=image_target,json=imageTarget" json:"image_target,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StoreGameRating) Reset() {
	*x = StoreGameRating{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreGameRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreGameRating) ProtoMessage() {}

func (x *StoreGameRating) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreGameRating.ProtoReflect.Descriptor instead.
func (*StoreGameRating) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *StoreGameRating) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *StoreGameRating) GetRating() string {
	if x != nil && x.Rating != nil {
		return *x.Rating
	}
	return ""
}

func (x *StoreGameRating) GetDescriptors() []string {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

func (x *StoreGameRating) GetInteractiveElements() string {
	if x != nil && x.InteractiveElements != nil {
		return *x.InteractiveElements
	}
	return ""
}

func (x *StoreGameRating) GetRequiredAge() int32 {
	if x != nil && x.RequiredAge != nil {
		return *x.RequiredAge
	}
	return 0
}

func (x *StoreGameRating) GetUseAgeGate() bool {
	if x != nil && x.UseAgeGate != nil {
		return *x.UseAgeGate
	}
	return false
}

func (x *StoreGameRating) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *StoreGameRating) GetImageTarget() string {
	if x != nil && x.ImageTarget != nil {
		return *x.ImageTarget
	}
	return ""
}

type StoreBrowseFilterFailure struct {
	state                        protoimpl.MessageState     `protogen:"open.v1"`
	FilterFailure                *EStoreBrowseFilterFailure `protobuf:"varint,1,opt,name=filter_failure,json=filterFailure,enum=EStoreBrowseFilterFailure,def=0" json:"filter_failure,omitempty"`
	AlreadyOwned                 *bool                      `protobuf:"varint,5,opt,name=already_owned,json=alreadyOwned" json:"already_owned,omitempty"`
	OnWishlist                   *bool                      `protobuf:"varint,6,opt,name=on_wishlist,json=onWishlist" json:"on_wishlist,omitempty"`
	Ignored                      *bool                      `protobuf:"varint,7,opt,name=ignored" json:"ignored,omitempty"`
	NotInUsersLanguage           *bool                      `protobuf:"varint,10,opt,name=not_in_users_language,json=notInUsersLanguage" json:"not_in_users_language,omitempty"`
	NotOnUsersPlatform           *bool                      `protobuf:"varint,11,opt,name=not_on_users_platform,json=notOnUsersPlatform" json:"not_on_users_platform,omitempty"`
	DemoForOwnedGame             *bool                      `protobuf:"varint,12,opt,name=demo_for_owned_game,json=demoForOwnedGame" json:"demo_for_owned_game,omitempty"`
	DlcForUnownedGame            *bool                      `protobuf:"varint,13,opt,name=dlc_for_unowned_game,json=dlcForUnownedGame" json:"dlc_for_unowned_game,omitempty"`
	NonpreferredProductType      *bool                      `protobuf:"varint,20,opt,name=nonpreferred_product_type,json=nonpreferredProductType" json:"nonpreferred_product_type,omitempty"`
	ExcludedTagids               []uint32                   `protobuf:"varint,21,rep,name=excluded_tagids,json=excludedTagids" json:"excluded_tagids,omitempty"`
	ExcludedContentDescriptorids []EContentDescriptorID     `protobuf:"varint,30,rep,name=excluded_content_descriptorids,json=excludedContentDescriptorids,enum=EContentDescriptorID" json:"excluded_content_descriptorids,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

// Default values for StoreBrowseFilterFailure fields.
const (
	Default_StoreBrowseFilterFailure_FilterFailure = EStoreBrowseFilterFailure_k_EStoreBrowseFilterFailure_None
)

func (x *StoreBrowseFilterFailure) Reset() {
	*x = StoreBrowseFilterFailure{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBrowseFilterFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBrowseFilterFailure) ProtoMessage() {}

func (x *StoreBrowseFilterFailure) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBrowseFilterFailure.ProtoReflect.Descriptor instead.
func (*StoreBrowseFilterFailure) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{6}
}

func (x *StoreBrowseFilterFailure) GetFilterFailure() EStoreBrowseFilterFailure {
	if x != nil && x.FilterFailure != nil {
		return *x.FilterFailure
	}
	return Default_StoreBrowseFilterFailure_FilterFailure
}

func (x *StoreBrowseFilterFailure) GetAlreadyOwned() bool {
	if x != nil && x.AlreadyOwned != nil {
		return *x.AlreadyOwned
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetOnWishlist() bool {
	if x != nil && x.OnWishlist != nil {
		return *x.OnWishlist
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetIgnored() bool {
	if x != nil && x.Ignored != nil {
		return *x.Ignored
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetNotInUsersLanguage() bool {
	if x != nil && x.NotInUsersLanguage != nil {
		return *x.NotInUsersLanguage
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetNotOnUsersPlatform() bool {
	if x != nil && x.NotOnUsersPlatform != nil {
		return *x.NotOnUsersPlatform
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetDemoForOwnedGame() bool {
	if x != nil && x.DemoForOwnedGame != nil {
		return *x.DemoForOwnedGame
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetDlcForUnownedGame() bool {
	if x != nil && x.DlcForUnownedGame != nil {
		return *x.DlcForUnownedGame
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetNonpreferredProductType() bool {
	if x != nil && x.NonpreferredProductType != nil {
		return *x.NonpreferredProductType
	}
	return false
}

func (x *StoreBrowseFilterFailure) GetExcludedTagids() []uint32 {
	if x != nil {
		return x.ExcludedTagids
	}
	return nil
}

func (x *StoreBrowseFilterFailure) GetExcludedContentDescriptorids() []EContentDescriptorID {
	if x != nil {
		return x.ExcludedContentDescriptorids
	}
	return nil
}

type CStoreBrowse_GetItems_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StoreItems    []*StoreItem           `protobuf:"bytes,1,rep,name=store_items,json=storeItems" json:"store_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetItems_Response) Reset() {
	*x = CStoreBrowse_GetItems_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetItems_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetItems_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetItems_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetItems_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetItems_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{7}
}

func (x *CStoreBrowse_GetItems_Response) GetStoreItems() []*StoreItem {
	if x != nil {
		return x.StoreItems
	}
	return nil
}

type CStoreBrowse_GetStoreCategories_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      *string                `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Elanguage     *int32                 `protobuf:"varint,2,opt,name=elanguage,def=-1" json:"elanguage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CStoreBrowse_GetStoreCategories_Request fields.
const (
	Default_CStoreBrowse_GetStoreCategories_Request_Elanguage = int32(-1)
)

func (x *CStoreBrowse_GetStoreCategories_Request) Reset() {
	*x = CStoreBrowse_GetStoreCategories_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetStoreCategories_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetStoreCategories_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetStoreCategories_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetStoreCategories_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetStoreCategories_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{8}
}

func (x *CStoreBrowse_GetStoreCategories_Request) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *CStoreBrowse_GetStoreCategories_Request) GetElanguage() int32 {
	if x != nil && x.Elanguage != nil {
		return *x.Elanguage
	}
	return Default_CStoreBrowse_GetStoreCategories_Request_Elanguage
}

type CStoreBrowse_GetStoreCategories_Response struct {
	state         protoimpl.MessageState                               `protogen:"open.v1"`
	Categories    []*CStoreBrowse_GetStoreCategories_Response_Category `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetStoreCategories_Response) Reset() {
	*x = CStoreBrowse_GetStoreCategories_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetStoreCategories_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetStoreCategories_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetStoreCategories_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetStoreCategories_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetStoreCategories_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{9}
}

func (x *CStoreBrowse_GetStoreCategories_Response) GetCategories() []*CStoreBrowse_GetStoreCategories_Response_Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

type CStoreBrowse_GetContentHubConfig_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Context       *StoreBrowseContext    `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetContentHubConfig_Request) Reset() {
	*x = CStoreBrowse_GetContentHubConfig_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetContentHubConfig_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetContentHubConfig_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetContentHubConfig_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetContentHubConfig_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetContentHubConfig_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{10}
}

func (x *CStoreBrowse_GetContentHubConfig_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type CStoreBrowse_GetContentHubConfig_Response struct {
	state         protoimpl.MessageState                                        `protogen:"open.v1"`
	Hubconfigs    []*CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig `protobuf:"bytes,1,rep,name=hubconfigs" json:"hubconfigs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetContentHubConfig_Response) Reset() {
	*x = CStoreBrowse_GetContentHubConfig_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetContentHubConfig_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetContentHubConfig_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetContentHubConfig_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetContentHubConfig_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetContentHubConfig_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{11}
}

func (x *CStoreBrowse_GetContentHubConfig_Response) GetHubconfigs() []*CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig {
	if x != nil {
		return x.Hubconfigs
	}
	return nil
}

type CStoreBrowse_GetPriceStops_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountryCode   *string                `protobuf:"bytes,1,opt,name=country_code,json=countryCode" json:"country_code,omitempty"`
	CurrencyCode  *string                `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetPriceStops_Request) Reset() {
	*x = CStoreBrowse_GetPriceStops_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetPriceStops_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetPriceStops_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetPriceStops_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetPriceStops_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetPriceStops_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{12}
}

func (x *CStoreBrowse_GetPriceStops_Request) GetCountryCode() string {
	if x != nil && x.CountryCode != nil {
		return *x.CountryCode
	}
	return ""
}

func (x *CStoreBrowse_GetPriceStops_Request) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

type CStoreBrowse_GetPriceStops_Response struct {
	state         protoimpl.MessageState                           `protogen:"open.v1"`
	PriceStops    []*CStoreBrowse_GetPriceStops_Response_PriceStop `protobuf:"bytes,1,rep,name=price_stops,json=priceStops" json:"price_stops,omitempty"`
	CurrencyCode  *string                                          `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode" json:"currency_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetPriceStops_Response) Reset() {
	*x = CStoreBrowse_GetPriceStops_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetPriceStops_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetPriceStops_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetPriceStops_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetPriceStops_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetPriceStops_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{13}
}

func (x *CStoreBrowse_GetPriceStops_Response) GetPriceStops() []*CStoreBrowse_GetPriceStops_Response_PriceStop {
	if x != nil {
		return x.PriceStops
	}
	return nil
}

func (x *CStoreBrowse_GetPriceStops_Response) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

type CStoreBrowse_GetDLCForApps_Request struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Context         *StoreBrowseContext    `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	StorePageFilter *CStorePageFilter      `protobuf:"bytes,2,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
	Appids          []*StoreItemID         `protobuf:"bytes,3,rep,name=appids" json:"appids,omitempty"`
	Steamid         *uint64                `protobuf:"varint,4,opt,name=steamid" json:"steamid,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForApps_Request) Reset() {
	*x = CStoreBrowse_GetDLCForApps_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForApps_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForApps_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForApps_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForApps_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForApps_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{14}
}

func (x *CStoreBrowse_GetDLCForApps_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CStoreBrowse_GetDLCForApps_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

func (x *CStoreBrowse_GetDLCForApps_Request) GetAppids() []*StoreItemID {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CStoreBrowse_GetDLCForApps_Request) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

type CStoreBrowse_GetDLCForApps_Response struct {
	state         protoimpl.MessageState                                `protogen:"open.v1"`
	DlcData       []*CStoreBrowse_GetDLCForApps_Response_DLCData        `protobuf:"bytes,1,rep,name=dlc_data,json=dlcData" json:"dlc_data,omitempty"`
	Playtime      []*CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp `protobuf:"bytes,2,rep,name=playtime" json:"playtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForApps_Response) Reset() {
	*x = CStoreBrowse_GetDLCForApps_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForApps_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForApps_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForApps_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForApps_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForApps_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{15}
}

func (x *CStoreBrowse_GetDLCForApps_Response) GetDlcData() []*CStoreBrowse_GetDLCForApps_Response_DLCData {
	if x != nil {
		return x.DlcData
	}
	return nil
}

func (x *CStoreBrowse_GetDLCForApps_Response) GetPlaytime() []*CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp {
	if x != nil {
		return x.Playtime
	}
	return nil
}

type CStoreBrowse_GetDLCForAppsSolr_Request struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Context         *StoreBrowseContext    `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Appids          []uint32               `protobuf:"varint,2,rep,name=appids" json:"appids,omitempty"`
	Flavor          *string                `protobuf:"bytes,3,opt,name=flavor" json:"flavor,omitempty"`
	Count           *uint32                `protobuf:"varint,4,opt,name=count" json:"count,omitempty"`
	StorePageFilter *CStorePageFilter      `protobuf:"bytes,5,opt,name=store_page_filter,json=storePageFilter" json:"store_page_filter,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) Reset() {
	*x = CStoreBrowse_GetDLCForAppsSolr_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForAppsSolr_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForAppsSolr_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForAppsSolr_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{16}
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) GetAppids() []uint32 {
	if x != nil {
		return x.Appids
	}
	return nil
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) GetFlavor() string {
	if x != nil && x.Flavor != nil {
		return *x.Flavor
	}
	return ""
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Request) GetStorePageFilter() *CStorePageFilter {
	if x != nil {
		return x.StorePageFilter
	}
	return nil
}

type CStoreBrowse_GetDLCForAppsSolr_Response struct {
	state         protoimpl.MessageState                             `protogen:"open.v1"`
	DlcLists      []*CStoreBrowse_GetDLCForAppsSolr_Response_DLCList `protobuf:"bytes,1,rep,name=dlc_lists,json=dlcLists" json:"dlc_lists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response) Reset() {
	*x = CStoreBrowse_GetDLCForAppsSolr_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForAppsSolr_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForAppsSolr_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForAppsSolr_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{17}
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response) GetDlcLists() []*CStoreBrowse_GetDLCForAppsSolr_Response_DLCList {
	if x != nil {
		return x.DlcLists
	}
	return nil
}

type CStoreBrowse_GetHardwareItems_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Packageid     []uint32               `protobuf:"varint,1,rep,name=packageid" json:"packageid,omitempty"`
	Context       *StoreBrowseContext    `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetHardwareItems_Request) Reset() {
	*x = CStoreBrowse_GetHardwareItems_Request{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetHardwareItems_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetHardwareItems_Request) ProtoMessage() {}

func (x *CStoreBrowse_GetHardwareItems_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetHardwareItems_Request.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetHardwareItems_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{18}
}

func (x *CStoreBrowse_GetHardwareItems_Request) GetPackageid() []uint32 {
	if x != nil {
		return x.Packageid
	}
	return nil
}

func (x *CStoreBrowse_GetHardwareItems_Request) GetContext() *StoreBrowseContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type CHardwarePackageDetails struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	Packageid                            *uint32                `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	InventoryAvailable                   *bool                  `protobuf:"varint,3,opt,name=inventory_available,json=inventoryAvailable" json:"inventory_available,omitempty"`
	HighPendingOrders                    *bool                  `protobuf:"varint,4,opt,name=high_pending_orders,json=highPendingOrders" json:"high_pending_orders,omitempty"`
	AccountRestrictedFromPurchasing      *bool                  `protobuf:"varint,5,opt,name=account_restricted_from_purchasing,json=accountRestrictedFromPurchasing" json:"account_restricted_from_purchasing,omitempty"`
	RequiresReservation                  *bool                  `protobuf:"varint,6,opt,name=requires_reservation,json=requiresReservation" json:"requires_reservation,omitempty"`
	RtimeEstimatedNotification           *uint32                `protobuf:"varint,7,opt,name=rtime_estimated_notification,json=rtimeEstimatedNotification" json:"rtime_estimated_notification,omitempty"`
	NotificatonToken                     *string                `protobuf:"bytes,8,opt,name=notificaton_token,json=notificatonToken" json:"notificaton_token,omitempty"`
	ReservationState                     *int32                 `protobuf:"varint,9,opt,name=reservation_state,json=reservationState" json:"reservation_state,omitempty"`
	Expired                              *bool                  `protobuf:"varint,10,opt,name=expired" json:"expired,omitempty"`
	TimeExpires                          *uint32                `protobuf:"varint,11,opt,name=time_expires,json=timeExpires" json:"time_expires,omitempty"`
	TimeReserved                         *uint32                `protobuf:"varint,12,opt,name=time_reserved,json=timeReserved" json:"time_reserved,omitempty"`
	AllowQuantityPurchase                *bool                  `protobuf:"varint,13,opt,name=allow_quantity_purchase,json=allowQuantityPurchase" json:"allow_quantity_purchase,omitempty"`
	MaxQuantityPerPurchase               *int32                 `protobuf:"varint,14,opt,name=max_quantity_per_purchase,json=maxQuantityPerPurchase" json:"max_quantity_per_purchase,omitempty"`
	AllowPurchaseInCountry               *bool                  `protobuf:"varint,15,opt,name=allow_purchase_in_country,json=allowPurchaseInCountry" json:"allow_purchase_in_country,omitempty"`
	EstimatedDeliverySoonestBusinessDays *uint32                `protobuf:"varint,17,opt,name=estimated_delivery_soonest_business_days,json=estimatedDeliverySoonestBusinessDays" json:"estimated_delivery_soonest_business_days,omitempty"`
	EstimatedDeliveryLatestBusinessDays  *uint32                `protobuf:"varint,18,opt,name=estimated_delivery_latest_business_days,json=estimatedDeliveryLatestBusinessDays" json:"estimated_delivery_latest_business_days,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *CHardwarePackageDetails) Reset() {
	*x = CHardwarePackageDetails{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CHardwarePackageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CHardwarePackageDetails) ProtoMessage() {}

func (x *CHardwarePackageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CHardwarePackageDetails.ProtoReflect.Descriptor instead.
func (*CHardwarePackageDetails) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{19}
}

func (x *CHardwarePackageDetails) GetPackageid() uint32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *CHardwarePackageDetails) GetInventoryAvailable() bool {
	if x != nil && x.InventoryAvailable != nil {
		return *x.InventoryAvailable
	}
	return false
}

func (x *CHardwarePackageDetails) GetHighPendingOrders() bool {
	if x != nil && x.HighPendingOrders != nil {
		return *x.HighPendingOrders
	}
	return false
}

func (x *CHardwarePackageDetails) GetAccountRestrictedFromPurchasing() bool {
	if x != nil && x.AccountRestrictedFromPurchasing != nil {
		return *x.AccountRestrictedFromPurchasing
	}
	return false
}

func (x *CHardwarePackageDetails) GetRequiresReservation() bool {
	if x != nil && x.RequiresReservation != nil {
		return *x.RequiresReservation
	}
	return false
}

func (x *CHardwarePackageDetails) GetRtimeEstimatedNotification() uint32 {
	if x != nil && x.RtimeEstimatedNotification != nil {
		return *x.RtimeEstimatedNotification
	}
	return 0
}

func (x *CHardwarePackageDetails) GetNotificatonToken() string {
	if x != nil && x.NotificatonToken != nil {
		return *x.NotificatonToken
	}
	return ""
}

func (x *CHardwarePackageDetails) GetReservationState() int32 {
	if x != nil && x.ReservationState != nil {
		return *x.ReservationState
	}
	return 0
}

func (x *CHardwarePackageDetails) GetExpired() bool {
	if x != nil && x.Expired != nil {
		return *x.Expired
	}
	return false
}

func (x *CHardwarePackageDetails) GetTimeExpires() uint32 {
	if x != nil && x.TimeExpires != nil {
		return *x.TimeExpires
	}
	return 0
}

func (x *CHardwarePackageDetails) GetTimeReserved() uint32 {
	if x != nil && x.TimeReserved != nil {
		return *x.TimeReserved
	}
	return 0
}

func (x *CHardwarePackageDetails) GetAllowQuantityPurchase() bool {
	if x != nil && x.AllowQuantityPurchase != nil {
		return *x.AllowQuantityPurchase
	}
	return false
}

func (x *CHardwarePackageDetails) GetMaxQuantityPerPurchase() int32 {
	if x != nil && x.MaxQuantityPerPurchase != nil {
		return *x.MaxQuantityPerPurchase
	}
	return 0
}

func (x *CHardwarePackageDetails) GetAllowPurchaseInCountry() bool {
	if x != nil && x.AllowPurchaseInCountry != nil {
		return *x.AllowPurchaseInCountry
	}
	return false
}

func (x *CHardwarePackageDetails) GetEstimatedDeliverySoonestBusinessDays() uint32 {
	if x != nil && x.EstimatedDeliverySoonestBusinessDays != nil {
		return *x.EstimatedDeliverySoonestBusinessDays
	}
	return 0
}

func (x *CHardwarePackageDetails) GetEstimatedDeliveryLatestBusinessDays() uint32 {
	if x != nil && x.EstimatedDeliveryLatestBusinessDays != nil {
		return *x.EstimatedDeliveryLatestBusinessDays
	}
	return 0
}

type CStoreBrowse_GetHardwareItems_Response struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Details       []*CHardwarePackageDetails `protobuf:"bytes,1,rep,name=details" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetHardwareItems_Response) Reset() {
	*x = CStoreBrowse_GetHardwareItems_Response{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetHardwareItems_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetHardwareItems_Response) ProtoMessage() {}

func (x *CStoreBrowse_GetHardwareItems_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetHardwareItems_Response.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetHardwareItems_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{20}
}

func (x *CStoreBrowse_GetHardwareItems_Response) GetDetails() []*CHardwarePackageDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type StoreItem_RelatedItems struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ParentAppid         *uint32                `protobuf:"varint,1,opt,name=parent_appid,json=parentAppid" json:"parent_appid,omitempty"`
	DemoAppid           []uint32               `protobuf:"varint,2,rep,name=demo_appid,json=demoAppid" json:"demo_appid,omitempty"`
	StandaloneDemoAppid []uint32               `protobuf:"varint,3,rep,name=standalone_demo_appid,json=standaloneDemoAppid" json:"standalone_demo_appid,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StoreItem_RelatedItems) Reset() {
	*x = StoreItem_RelatedItems{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_RelatedItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_RelatedItems) ProtoMessage() {}

func (x *StoreItem_RelatedItems) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_RelatedItems.ProtoReflect.Descriptor instead.
func (*StoreItem_RelatedItems) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 0}
}

func (x *StoreItem_RelatedItems) GetParentAppid() uint32 {
	if x != nil && x.ParentAppid != nil {
		return *x.ParentAppid
	}
	return 0
}

func (x *StoreItem_RelatedItems) GetDemoAppid() []uint32 {
	if x != nil {
		return x.DemoAppid
	}
	return nil
}

func (x *StoreItem_RelatedItems) GetStandaloneDemoAppid() []uint32 {
	if x != nil {
		return x.StandaloneDemoAppid
	}
	return nil
}

type StoreItem_IncludedItems struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	IncludedApps     []*StoreItem           `protobuf:"bytes,1,rep,name=included_apps,json=includedApps" json:"included_apps,omitempty"`
	IncludedPackages []*StoreItem           `protobuf:"bytes,2,rep,name=included_packages,json=includedPackages" json:"included_packages,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StoreItem_IncludedItems) Reset() {
	*x = StoreItem_IncludedItems{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_IncludedItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_IncludedItems) ProtoMessage() {}

func (x *StoreItem_IncludedItems) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_IncludedItems.ProtoReflect.Descriptor instead.
func (*StoreItem_IncludedItems) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 1}
}

func (x *StoreItem_IncludedItems) GetIncludedApps() []*StoreItem {
	if x != nil {
		return x.IncludedApps
	}
	return nil
}

func (x *StoreItem_IncludedItems) GetIncludedPackages() []*StoreItem {
	if x != nil {
		return x.IncludedPackages
	}
	return nil
}

type StoreItem_Categories struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	SupportedPlayerCategoryids []uint32               `protobuf:"varint,2,rep,name=supported_player_categoryids,json=supportedPlayerCategoryids" json:"supported_player_categoryids,omitempty"`
	FeatureCategoryids         []uint32               `protobuf:"varint,3,rep,name=feature_categoryids,json=featureCategoryids" json:"feature_categoryids,omitempty"`
	ControllerCategoryids      []uint32               `protobuf:"varint,4,rep,name=controller_categoryids,json=controllerCategoryids" json:"controller_categoryids,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *StoreItem_Categories) Reset() {
	*x = StoreItem_Categories{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Categories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Categories) ProtoMessage() {}

func (x *StoreItem_Categories) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Categories.ProtoReflect.Descriptor instead.
func (*StoreItem_Categories) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 2}
}

func (x *StoreItem_Categories) GetSupportedPlayerCategoryids() []uint32 {
	if x != nil {
		return x.SupportedPlayerCategoryids
	}
	return nil
}

func (x *StoreItem_Categories) GetFeatureCategoryids() []uint32 {
	if x != nil {
		return x.FeatureCategoryids
	}
	return nil
}

func (x *StoreItem_Categories) GetControllerCategoryids() []uint32 {
	if x != nil {
		return x.ControllerCategoryids
	}
	return nil
}

type StoreItem_Reviews struct {
	state             protoimpl.MessageState                `protogen:"open.v1"`
	SummaryFiltered   *StoreItem_Reviews_StoreReviewSummary `protobuf:"bytes,1,opt,name=summary_filtered,json=summaryFiltered" json:"summary_filtered,omitempty"`
	SummaryUnfiltered *StoreItem_Reviews_StoreReviewSummary `protobuf:"bytes,2,opt,name=summary_unfiltered,json=summaryUnfiltered" json:"summary_unfiltered,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StoreItem_Reviews) Reset() {
	*x = StoreItem_Reviews{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Reviews) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Reviews) ProtoMessage() {}

func (x *StoreItem_Reviews) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Reviews.ProtoReflect.Descriptor instead.
func (*StoreItem_Reviews) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 3}
}

func (x *StoreItem_Reviews) GetSummaryFiltered() *StoreItem_Reviews_StoreReviewSummary {
	if x != nil {
		return x.SummaryFiltered
	}
	return nil
}

func (x *StoreItem_Reviews) GetSummaryUnfiltered() *StoreItem_Reviews_StoreReviewSummary {
	if x != nil {
		return x.SummaryUnfiltered
	}
	return nil
}

type StoreItem_BasicInfo struct {
	state            protoimpl.MessageState                 `protogen:"open.v1"`
	ShortDescription *string                                `protobuf:"bytes,1,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	Publishers       []*StoreItem_BasicInfo_CreatorHomeLink `protobuf:"bytes,2,rep,name=publishers" json:"publishers,omitempty"`
	Developers       []*StoreItem_BasicInfo_CreatorHomeLink `protobuf:"bytes,3,rep,name=developers" json:"developers,omitempty"`
	Franchises       []*StoreItem_BasicInfo_CreatorHomeLink `protobuf:"bytes,4,rep,name=franchises" json:"franchises,omitempty"`
	CapsuleHeadline  *string                                `protobuf:"bytes,5,opt,name=capsule_headline,json=capsuleHeadline" json:"capsule_headline,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StoreItem_BasicInfo) Reset() {
	*x = StoreItem_BasicInfo{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_BasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_BasicInfo) ProtoMessage() {}

func (x *StoreItem_BasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_BasicInfo.ProtoReflect.Descriptor instead.
func (*StoreItem_BasicInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 4}
}

func (x *StoreItem_BasicInfo) GetShortDescription() string {
	if x != nil && x.ShortDescription != nil {
		return *x.ShortDescription
	}
	return ""
}

func (x *StoreItem_BasicInfo) GetPublishers() []*StoreItem_BasicInfo_CreatorHomeLink {
	if x != nil {
		return x.Publishers
	}
	return nil
}

func (x *StoreItem_BasicInfo) GetDevelopers() []*StoreItem_BasicInfo_CreatorHomeLink {
	if x != nil {
		return x.Developers
	}
	return nil
}

func (x *StoreItem_BasicInfo) GetFranchises() []*StoreItem_BasicInfo_CreatorHomeLink {
	if x != nil {
		return x.Franchises
	}
	return nil
}

func (x *StoreItem_BasicInfo) GetCapsuleHeadline() string {
	if x != nil && x.CapsuleHeadline != nil {
		return *x.CapsuleHeadline
	}
	return ""
}

type StoreItem_Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tagid         *uint32                `protobuf:"varint,1,opt,name=tagid" json:"tagid,omitempty"`
	Weight        *uint32                `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItem_Tag) Reset() {
	*x = StoreItem_Tag{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Tag) ProtoMessage() {}

func (x *StoreItem_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Tag.ProtoReflect.Descriptor instead.
func (*StoreItem_Tag) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 5}
}

func (x *StoreItem_Tag) GetTagid() uint32 {
	if x != nil && x.Tagid != nil {
		return *x.Tagid
	}
	return 0
}

func (x *StoreItem_Tag) GetWeight() uint32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

type StoreItem_Assets struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	AssetUrlFormat     *string                `protobuf:"bytes,1,opt,name=asset_url_format,json=assetUrlFormat" json:"asset_url_format,omitempty"`
	MainCapsule        *string                `protobuf:"bytes,2,opt,name=main_capsule,json=mainCapsule" json:"main_capsule,omitempty"`
	SmallCapsule       *string                `protobuf:"bytes,3,opt,name=small_capsule,json=smallCapsule" json:"small_capsule,omitempty"`
	Header             *string                `protobuf:"bytes,4,opt,name=header" json:"header,omitempty"`
	PackageHeader      *string                `protobuf:"bytes,5,opt,name=package_header,json=packageHeader" json:"package_header,omitempty"`
	PageBackground     *string                `protobuf:"bytes,6,opt,name=page_background,json=pageBackground" json:"page_background,omitempty"`
	HeroCapsule        *string                `protobuf:"bytes,7,opt,name=hero_capsule,json=heroCapsule" json:"hero_capsule,omitempty"`
	HeroCapsule_2X     *string                `protobuf:"bytes,8,opt,name=hero_capsule_2x,json=heroCapsule2x" json:"hero_capsule_2x,omitempty"`
	LibraryCapsule     *string                `protobuf:"bytes,9,opt,name=library_capsule,json=libraryCapsule" json:"library_capsule,omitempty"`
	LibraryCapsule_2X  *string                `protobuf:"bytes,10,opt,name=library_capsule_2x,json=libraryCapsule2x" json:"library_capsule_2x,omitempty"`
	LibraryHero        *string                `protobuf:"bytes,11,opt,name=library_hero,json=libraryHero" json:"library_hero,omitempty"`
	LibraryHero_2X     *string                `protobuf:"bytes,12,opt,name=library_hero_2x,json=libraryHero2x" json:"library_hero_2x,omitempty"`
	CommunityIcon      *string                `protobuf:"bytes,13,opt,name=community_icon,json=communityIcon" json:"community_icon,omitempty"`
	ClanAvatar         *string                `protobuf:"bytes,14,opt,name=clan_avatar,json=clanAvatar" json:"clan_avatar,omitempty"`
	PageBackgroundPath *string                `protobuf:"bytes,15,opt,name=page_background_path,json=pageBackgroundPath" json:"page_background_path,omitempty"`
	RawPageBackground  *string                `protobuf:"bytes,16,opt,name=raw_page_background,json=rawPageBackground" json:"raw_page_background,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *StoreItem_Assets) Reset() {
	*x = StoreItem_Assets{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Assets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Assets) ProtoMessage() {}

func (x *StoreItem_Assets) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Assets.ProtoReflect.Descriptor instead.
func (*StoreItem_Assets) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 6}
}

func (x *StoreItem_Assets) GetAssetUrlFormat() string {
	if x != nil && x.AssetUrlFormat != nil {
		return *x.AssetUrlFormat
	}
	return ""
}

func (x *StoreItem_Assets) GetMainCapsule() string {
	if x != nil && x.MainCapsule != nil {
		return *x.MainCapsule
	}
	return ""
}

func (x *StoreItem_Assets) GetSmallCapsule() string {
	if x != nil && x.SmallCapsule != nil {
		return *x.SmallCapsule
	}
	return ""
}

func (x *StoreItem_Assets) GetHeader() string {
	if x != nil && x.Header != nil {
		return *x.Header
	}
	return ""
}

func (x *StoreItem_Assets) GetPackageHeader() string {
	if x != nil && x.PackageHeader != nil {
		return *x.PackageHeader
	}
	return ""
}

func (x *StoreItem_Assets) GetPageBackground() string {
	if x != nil && x.PageBackground != nil {
		return *x.PageBackground
	}
	return ""
}

func (x *StoreItem_Assets) GetHeroCapsule() string {
	if x != nil && x.HeroCapsule != nil {
		return *x.HeroCapsule
	}
	return ""
}

func (x *StoreItem_Assets) GetHeroCapsule_2X() string {
	if x != nil && x.HeroCapsule_2X != nil {
		return *x.HeroCapsule_2X
	}
	return ""
}

func (x *StoreItem_Assets) GetLibraryCapsule() string {
	if x != nil && x.LibraryCapsule != nil {
		return *x.LibraryCapsule
	}
	return ""
}

func (x *StoreItem_Assets) GetLibraryCapsule_2X() string {
	if x != nil && x.LibraryCapsule_2X != nil {
		return *x.LibraryCapsule_2X
	}
	return ""
}

func (x *StoreItem_Assets) GetLibraryHero() string {
	if x != nil && x.LibraryHero != nil {
		return *x.LibraryHero
	}
	return ""
}

func (x *StoreItem_Assets) GetLibraryHero_2X() string {
	if x != nil && x.LibraryHero_2X != nil {
		return *x.LibraryHero_2X
	}
	return ""
}

func (x *StoreItem_Assets) GetCommunityIcon() string {
	if x != nil && x.CommunityIcon != nil {
		return *x.CommunityIcon
	}
	return ""
}

func (x *StoreItem_Assets) GetClanAvatar() string {
	if x != nil && x.ClanAvatar != nil {
		return *x.ClanAvatar
	}
	return ""
}

func (x *StoreItem_Assets) GetPageBackgroundPath() string {
	if x != nil && x.PageBackgroundPath != nil {
		return *x.PageBackgroundPath
	}
	return ""
}

func (x *StoreItem_Assets) GetRawPageBackground() string {
	if x != nil && x.RawPageBackground != nil {
		return *x.RawPageBackground
	}
	return ""
}

type StoreItem_ReleaseInfo struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	SteamReleaseDate         *uint32                `protobuf:"varint,1,opt,name=steam_release_date,json=steamReleaseDate" json:"steam_release_date,omitempty"`
	OriginalReleaseDate      *uint32                `protobuf:"varint,2,opt,name=original_release_date,json=originalReleaseDate" json:"original_release_date,omitempty"`
	OriginalSteamReleaseDate *uint32                `protobuf:"varint,3,opt,name=original_steam_release_date,json=originalSteamReleaseDate" json:"original_steam_release_date,omitempty"`
	IsComingSoon             *bool                  `protobuf:"varint,4,opt,name=is_coming_soon,json=isComingSoon" json:"is_coming_soon,omitempty"`
	IsPreload                *bool                  `protobuf:"varint,5,opt,name=is_preload,json=isPreload" json:"is_preload,omitempty"`
	CustomReleaseDateMessage *string                `protobuf:"bytes,6,opt,name=custom_release_date_message,json=customReleaseDateMessage" json:"custom_release_date_message,omitempty"`
	IsAbridgedReleaseDate    *bool                  `protobuf:"varint,7,opt,name=is_abridged_release_date,json=isAbridgedReleaseDate" json:"is_abridged_release_date,omitempty"`
	ComingSoonDisplay        *string                `protobuf:"bytes,8,opt,name=coming_soon_display,json=comingSoonDisplay" json:"coming_soon_display,omitempty"`
	IsEarlyAccess            *bool                  `protobuf:"varint,10,opt,name=is_early_access,json=isEarlyAccess" json:"is_early_access,omitempty"`
	MacReleaseDate           *uint32                `protobuf:"varint,20,opt,name=mac_release_date,json=macReleaseDate" json:"mac_release_date,omitempty"`
	LinuxReleaseDate         *uint32                `protobuf:"varint,21,opt,name=linux_release_date,json=linuxReleaseDate" json:"linux_release_date,omitempty"`
	LimitedLaunchActive      *bool                  `protobuf:"varint,22,opt,name=limited_launch_active,json=limitedLaunchActive" json:"limited_launch_active,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *StoreItem_ReleaseInfo) Reset() {
	*x = StoreItem_ReleaseInfo{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_ReleaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_ReleaseInfo) ProtoMessage() {}

func (x *StoreItem_ReleaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_ReleaseInfo.ProtoReflect.Descriptor instead.
func (*StoreItem_ReleaseInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 7}
}

func (x *StoreItem_ReleaseInfo) GetSteamReleaseDate() uint32 {
	if x != nil && x.SteamReleaseDate != nil {
		return *x.SteamReleaseDate
	}
	return 0
}

func (x *StoreItem_ReleaseInfo) GetOriginalReleaseDate() uint32 {
	if x != nil && x.OriginalReleaseDate != nil {
		return *x.OriginalReleaseDate
	}
	return 0
}

func (x *StoreItem_ReleaseInfo) GetOriginalSteamReleaseDate() uint32 {
	if x != nil && x.OriginalSteamReleaseDate != nil {
		return *x.OriginalSteamReleaseDate
	}
	return 0
}

func (x *StoreItem_ReleaseInfo) GetIsComingSoon() bool {
	if x != nil && x.IsComingSoon != nil {
		return *x.IsComingSoon
	}
	return false
}

func (x *StoreItem_ReleaseInfo) GetIsPreload() bool {
	if x != nil && x.IsPreload != nil {
		return *x.IsPreload
	}
	return false
}

func (x *StoreItem_ReleaseInfo) GetCustomReleaseDateMessage() string {
	if x != nil && x.CustomReleaseDateMessage != nil {
		return *x.CustomReleaseDateMessage
	}
	return ""
}

func (x *StoreItem_ReleaseInfo) GetIsAbridgedReleaseDate() bool {
	if x != nil && x.IsAbridgedReleaseDate != nil {
		return *x.IsAbridgedReleaseDate
	}
	return false
}

func (x *StoreItem_ReleaseInfo) GetComingSoonDisplay() string {
	if x != nil && x.ComingSoonDisplay != nil {
		return *x.ComingSoonDisplay
	}
	return ""
}

func (x *StoreItem_ReleaseInfo) GetIsEarlyAccess() bool {
	if x != nil && x.IsEarlyAccess != nil {
		return *x.IsEarlyAccess
	}
	return false
}

func (x *StoreItem_ReleaseInfo) GetMacReleaseDate() uint32 {
	if x != nil && x.MacReleaseDate != nil {
		return *x.MacReleaseDate
	}
	return 0
}

func (x *StoreItem_ReleaseInfo) GetLinuxReleaseDate() uint32 {
	if x != nil && x.LinuxReleaseDate != nil {
		return *x.LinuxReleaseDate
	}
	return 0
}

func (x *StoreItem_ReleaseInfo) GetLimitedLaunchActive() bool {
	if x != nil && x.LimitedLaunchActive != nil {
		return *x.LimitedLaunchActive
	}
	return false
}

type StoreItem_Platforms struct {
	state                   protoimpl.MessageState           `protogen:"open.v1"`
	Windows                 *bool                            `protobuf:"varint,1,opt,name=windows" json:"windows,omitempty"`
	Mac                     *bool                            `protobuf:"varint,2,opt,name=mac" json:"mac,omitempty"`
	SteamosLinux            *bool                            `protobuf:"varint,3,opt,name=steamos_linux,json=steamosLinux" json:"steamos_linux,omitempty"`
	VrSupport               *StoreItem_Platforms_VRSupport   `protobuf:"bytes,10,opt,name=vr_support,json=vrSupport" json:"vr_support,omitempty"`
	SteamDeckCompatCategory *ESteamDeckCompatibilityCategory `protobuf:"varint,11,opt,name=steam_deck_compat_category,json=steamDeckCompatCategory,enum=ESteamDeckCompatibilityCategory,def=0" json:"steam_deck_compat_category,omitempty"`
	SteamOsCompatCategory   *ESteamOSCompatibilityCategory   `protobuf:"varint,12,opt,name=steam_os_compat_category,json=steamOsCompatCategory,enum=ESteamOSCompatibilityCategory,def=0" json:"steam_os_compat_category,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

// Default values for StoreItem_Platforms fields.
const (
	Default_StoreItem_Platforms_SteamDeckCompatCategory = ESteamDeckCompatibilityCategory_k_ESteamDeckCompatibilityCategory_Unknown
	Default_StoreItem_Platforms_SteamOsCompatCategory   = ESteamOSCompatibilityCategory_k_ESteamOSCompatibilityCategory_Unknown
)

func (x *StoreItem_Platforms) Reset() {
	*x = StoreItem_Platforms{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Platforms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Platforms) ProtoMessage() {}

func (x *StoreItem_Platforms) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Platforms.ProtoReflect.Descriptor instead.
func (*StoreItem_Platforms) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 8}
}

func (x *StoreItem_Platforms) GetWindows() bool {
	if x != nil && x.Windows != nil {
		return *x.Windows
	}
	return false
}

func (x *StoreItem_Platforms) GetMac() bool {
	if x != nil && x.Mac != nil {
		return *x.Mac
	}
	return false
}

func (x *StoreItem_Platforms) GetSteamosLinux() bool {
	if x != nil && x.SteamosLinux != nil {
		return *x.SteamosLinux
	}
	return false
}

func (x *StoreItem_Platforms) GetVrSupport() *StoreItem_Platforms_VRSupport {
	if x != nil {
		return x.VrSupport
	}
	return nil
}

func (x *StoreItem_Platforms) GetSteamDeckCompatCategory() ESteamDeckCompatibilityCategory {
	if x != nil && x.SteamDeckCompatCategory != nil {
		return *x.SteamDeckCompatCategory
	}
	return Default_StoreItem_Platforms_SteamDeckCompatCategory
}

func (x *StoreItem_Platforms) GetSteamOsCompatCategory() ESteamOSCompatibilityCategory {
	if x != nil && x.SteamOsCompatCategory != nil {
		return *x.SteamOsCompatCategory
	}
	return Default_StoreItem_Platforms_SteamOsCompatCategory
}

type StoreItem_PurchaseOption struct {
	state                              protoimpl.MessageState                   `protogen:"open.v1"`
	Packageid                          *int32                                   `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	Bundleid                           *int32                                   `protobuf:"varint,2,opt,name=bundleid" json:"bundleid,omitempty"`
	PurchaseOptionName                 *string                                  `protobuf:"bytes,3,opt,name=purchase_option_name,json=purchaseOptionName" json:"purchase_option_name,omitempty"`
	FinalPriceInCents                  *int64                                   `protobuf:"varint,5,opt,name=final_price_in_cents,json=finalPriceInCents" json:"final_price_in_cents,omitempty"`
	OriginalPriceInCents               *int64                                   `protobuf:"varint,6,opt,name=original_price_in_cents,json=originalPriceInCents" json:"original_price_in_cents,omitempty"`
	FormattedFinalPrice                *string                                  `protobuf:"bytes,8,opt,name=formatted_final_price,json=formattedFinalPrice" json:"formatted_final_price,omitempty"`
	FormattedOriginalPrice             *string                                  `protobuf:"bytes,9,opt,name=formatted_original_price,json=formattedOriginalPrice" json:"formatted_original_price,omitempty"`
	DiscountPct                        *int32                                   `protobuf:"varint,10,opt,name=discount_pct,json=discountPct" json:"discount_pct,omitempty"`
	BundleDiscountPct                  *int32                                   `protobuf:"varint,12,opt,name=bundle_discount_pct,json=bundleDiscountPct" json:"bundle_discount_pct,omitempty"`
	IsFreeToKeep                       *bool                                    `protobuf:"varint,13,opt,name=is_free_to_keep,json=isFreeToKeep" json:"is_free_to_keep,omitempty"`
	PriceBeforeBundleDiscount          *int64                                   `protobuf:"varint,14,opt,name=price_before_bundle_discount,json=priceBeforeBundleDiscount" json:"price_before_bundle_discount,omitempty"`
	FormattedPriceBeforeBundleDiscount *string                                  `protobuf:"bytes,15,opt,name=formatted_price_before_bundle_discount,json=formattedPriceBeforeBundleDiscount" json:"formatted_price_before_bundle_discount,omitempty"`
	ActiveDiscounts                    []*StoreItem_PurchaseOption_Discount     `protobuf:"bytes,20,rep,name=active_discounts,json=activeDiscounts" json:"active_discounts,omitempty"`
	UserCanPurchaseAsGift              *bool                                    `protobuf:"varint,31,opt,name=user_can_purchase_as_gift,json=userCanPurchaseAsGift" json:"user_can_purchase_as_gift,omitempty"`
	IsCommercialLicense                *bool                                    `protobuf:"varint,40,opt,name=is_commercial_license,json=isCommercialLicense" json:"is_commercial_license,omitempty"`
	ShouldSuppressDiscountPct          *bool                                    `protobuf:"varint,41,opt,name=should_suppress_discount_pct,json=shouldSuppressDiscountPct" json:"should_suppress_discount_pct,omitempty"`
	HideDiscountPctForCompliance       *bool                                    `protobuf:"varint,42,opt,name=hide_discount_pct_for_compliance,json=hideDiscountPctForCompliance,def=0" json:"hide_discount_pct_for_compliance,omitempty"`
	IncludedGameCount                  *int32                                   `protobuf:"varint,43,opt,name=included_game_count,json=includedGameCount,def=1" json:"included_game_count,omitempty"`
	LowestRecentPriceInCents           *int64                                   `protobuf:"varint,44,opt,name=lowest_recent_price_in_cents,json=lowestRecentPriceInCents" json:"lowest_recent_price_in_cents,omitempty"`
	RequiresShipping                   *bool                                    `protobuf:"varint,45,opt,name=requires_shipping,json=requiresShipping" json:"requires_shipping,omitempty"`
	RecurrenceInfo                     *StoreItem_PurchaseOption_RecurrenceInfo `protobuf:"bytes,46,opt,name=recurrence_info,json=recurrenceInfo" json:"recurrence_info,omitempty"`
	FreeToKeepEnds                     *uint32                                  `protobuf:"varint,47,opt,name=free_to_keep_ends,json=freeToKeepEnds" json:"free_to_keep_ends,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

// Default values for StoreItem_PurchaseOption fields.
const (
	Default_StoreItem_PurchaseOption_HideDiscountPctForCompliance = bool(false)
	Default_StoreItem_PurchaseOption_IncludedGameCount            = int32(1)
)

func (x *StoreItem_PurchaseOption) Reset() {
	*x = StoreItem_PurchaseOption{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_PurchaseOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_PurchaseOption) ProtoMessage() {}

func (x *StoreItem_PurchaseOption) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_PurchaseOption.ProtoReflect.Descriptor instead.
func (*StoreItem_PurchaseOption) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 9}
}

func (x *StoreItem_PurchaseOption) GetPackageid() int32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetBundleid() int32 {
	if x != nil && x.Bundleid != nil {
		return *x.Bundleid
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetPurchaseOptionName() string {
	if x != nil && x.PurchaseOptionName != nil {
		return *x.PurchaseOptionName
	}
	return ""
}

func (x *StoreItem_PurchaseOption) GetFinalPriceInCents() int64 {
	if x != nil && x.FinalPriceInCents != nil {
		return *x.FinalPriceInCents
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetOriginalPriceInCents() int64 {
	if x != nil && x.OriginalPriceInCents != nil {
		return *x.OriginalPriceInCents
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetFormattedFinalPrice() string {
	if x != nil && x.FormattedFinalPrice != nil {
		return *x.FormattedFinalPrice
	}
	return ""
}

func (x *StoreItem_PurchaseOption) GetFormattedOriginalPrice() string {
	if x != nil && x.FormattedOriginalPrice != nil {
		return *x.FormattedOriginalPrice
	}
	return ""
}

func (x *StoreItem_PurchaseOption) GetDiscountPct() int32 {
	if x != nil && x.DiscountPct != nil {
		return *x.DiscountPct
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetBundleDiscountPct() int32 {
	if x != nil && x.BundleDiscountPct != nil {
		return *x.BundleDiscountPct
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetIsFreeToKeep() bool {
	if x != nil && x.IsFreeToKeep != nil {
		return *x.IsFreeToKeep
	}
	return false
}

func (x *StoreItem_PurchaseOption) GetPriceBeforeBundleDiscount() int64 {
	if x != nil && x.PriceBeforeBundleDiscount != nil {
		return *x.PriceBeforeBundleDiscount
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetFormattedPriceBeforeBundleDiscount() string {
	if x != nil && x.FormattedPriceBeforeBundleDiscount != nil {
		return *x.FormattedPriceBeforeBundleDiscount
	}
	return ""
}

func (x *StoreItem_PurchaseOption) GetActiveDiscounts() []*StoreItem_PurchaseOption_Discount {
	if x != nil {
		return x.ActiveDiscounts
	}
	return nil
}

func (x *StoreItem_PurchaseOption) GetUserCanPurchaseAsGift() bool {
	if x != nil && x.UserCanPurchaseAsGift != nil {
		return *x.UserCanPurchaseAsGift
	}
	return false
}

func (x *StoreItem_PurchaseOption) GetIsCommercialLicense() bool {
	if x != nil && x.IsCommercialLicense != nil {
		return *x.IsCommercialLicense
	}
	return false
}

func (x *StoreItem_PurchaseOption) GetShouldSuppressDiscountPct() bool {
	if x != nil && x.ShouldSuppressDiscountPct != nil {
		return *x.ShouldSuppressDiscountPct
	}
	return false
}

func (x *StoreItem_PurchaseOption) GetHideDiscountPctForCompliance() bool {
	if x != nil && x.HideDiscountPctForCompliance != nil {
		return *x.HideDiscountPctForCompliance
	}
	return Default_StoreItem_PurchaseOption_HideDiscountPctForCompliance
}

func (x *StoreItem_PurchaseOption) GetIncludedGameCount() int32 {
	if x != nil && x.IncludedGameCount != nil {
		return *x.IncludedGameCount
	}
	return Default_StoreItem_PurchaseOption_IncludedGameCount
}

func (x *StoreItem_PurchaseOption) GetLowestRecentPriceInCents() int64 {
	if x != nil && x.LowestRecentPriceInCents != nil {
		return *x.LowestRecentPriceInCents
	}
	return 0
}

func (x *StoreItem_PurchaseOption) GetRequiresShipping() bool {
	if x != nil && x.RequiresShipping != nil {
		return *x.RequiresShipping
	}
	return false
}

func (x *StoreItem_PurchaseOption) GetRecurrenceInfo() *StoreItem_PurchaseOption_RecurrenceInfo {
	if x != nil {
		return x.RecurrenceInfo
	}
	return nil
}

func (x *StoreItem_PurchaseOption) GetFreeToKeepEnds() uint32 {
	if x != nil && x.FreeToKeepEnds != nil {
		return *x.FreeToKeepEnds
	}
	return 0
}

type StoreItem_Screenshots struct {
	state                    protoimpl.MessageState              `protogen:"open.v1"`
	AllAgesScreenshots       []*StoreItem_Screenshots_Screenshot `protobuf:"bytes,2,rep,name=all_ages_screenshots,json=allAgesScreenshots" json:"all_ages_screenshots,omitempty"`
	MatureContentScreenshots []*StoreItem_Screenshots_Screenshot `protobuf:"bytes,3,rep,name=mature_content_screenshots,json=matureContentScreenshots" json:"mature_content_screenshots,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *StoreItem_Screenshots) Reset() {
	*x = StoreItem_Screenshots{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Screenshots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Screenshots) ProtoMessage() {}

func (x *StoreItem_Screenshots) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Screenshots.ProtoReflect.Descriptor instead.
func (*StoreItem_Screenshots) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 10}
}

func (x *StoreItem_Screenshots) GetAllAgesScreenshots() []*StoreItem_Screenshots_Screenshot {
	if x != nil {
		return x.AllAgesScreenshots
	}
	return nil
}

func (x *StoreItem_Screenshots) GetMatureContentScreenshots() []*StoreItem_Screenshots_Screenshot {
	if x != nil {
		return x.MatureContentScreenshots
	}
	return nil
}

type StoreItem_Trailers struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Highlights    []*StoreItem_Trailers_Trailer `protobuf:"bytes,1,rep,name=highlights" json:"highlights,omitempty"`
	OtherTrailers []*StoreItem_Trailers_Trailer `protobuf:"bytes,2,rep,name=other_trailers,json=otherTrailers" json:"other_trailers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItem_Trailers) Reset() {
	*x = StoreItem_Trailers{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Trailers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Trailers) ProtoMessage() {}

func (x *StoreItem_Trailers) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Trailers.ProtoReflect.Descriptor instead.
func (*StoreItem_Trailers) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 11}
}

func (x *StoreItem_Trailers) GetHighlights() []*StoreItem_Trailers_Trailer {
	if x != nil {
		return x.Highlights
	}
	return nil
}

func (x *StoreItem_Trailers) GetOtherTrailers() []*StoreItem_Trailers_Trailer {
	if x != nil {
		return x.OtherTrailers
	}
	return nil
}

type StoreItem_SupportedLanguage struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Elanguage           *int32                 `protobuf:"varint,1,opt,name=elanguage,def=-1" json:"elanguage,omitempty"`
	Eadditionallanguage *int32                 `protobuf:"varint,5,opt,name=eadditionallanguage,def=-1" json:"eadditionallanguage,omitempty"`
	Supported           *bool                  `protobuf:"varint,2,opt,name=supported" json:"supported,omitempty"`
	FullAudio           *bool                  `protobuf:"varint,3,opt,name=full_audio,json=fullAudio" json:"full_audio,omitempty"`
	Subtitles           *bool                  `protobuf:"varint,4,opt,name=subtitles" json:"subtitles,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for StoreItem_SupportedLanguage fields.
const (
	Default_StoreItem_SupportedLanguage_Elanguage           = int32(-1)
	Default_StoreItem_SupportedLanguage_Eadditionallanguage = int32(-1)
)

func (x *StoreItem_SupportedLanguage) Reset() {
	*x = StoreItem_SupportedLanguage{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_SupportedLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_SupportedLanguage) ProtoMessage() {}

func (x *StoreItem_SupportedLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_SupportedLanguage.ProtoReflect.Descriptor instead.
func (*StoreItem_SupportedLanguage) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 12}
}

func (x *StoreItem_SupportedLanguage) GetElanguage() int32 {
	if x != nil && x.Elanguage != nil {
		return *x.Elanguage
	}
	return Default_StoreItem_SupportedLanguage_Elanguage
}

func (x *StoreItem_SupportedLanguage) GetEadditionallanguage() int32 {
	if x != nil && x.Eadditionallanguage != nil {
		return *x.Eadditionallanguage
	}
	return Default_StoreItem_SupportedLanguage_Eadditionallanguage
}

func (x *StoreItem_SupportedLanguage) GetSupported() bool {
	if x != nil && x.Supported != nil {
		return *x.Supported
	}
	return false
}

func (x *StoreItem_SupportedLanguage) GetFullAudio() bool {
	if x != nil && x.FullAudio != nil {
		return *x.FullAudio
	}
	return false
}

func (x *StoreItem_SupportedLanguage) GetSubtitles() bool {
	if x != nil && x.Subtitles != nil {
		return *x.Subtitles
	}
	return false
}

type StoreItem_FreeWeekend struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *uint32                `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime       *uint32                `protobuf:"varint,2,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Text          *string                `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItem_FreeWeekend) Reset() {
	*x = StoreItem_FreeWeekend{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_FreeWeekend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_FreeWeekend) ProtoMessage() {}

func (x *StoreItem_FreeWeekend) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_FreeWeekend.ProtoReflect.Descriptor instead.
func (*StoreItem_FreeWeekend) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 13}
}

func (x *StoreItem_FreeWeekend) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *StoreItem_FreeWeekend) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *StoreItem_FreeWeekend) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type StoreItem_Link struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LinkType      *EStoreLinkType        `protobuf:"varint,1,opt,name=link_type,json=linkType,enum=EStoreLinkType,def=0" json:"link_type,omitempty"`
	Url           *string                `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Text          *string                `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for StoreItem_Link fields.
const (
	Default_StoreItem_Link_LinkType = EStoreLinkType_k_EStoreLinkType_None
)

func (x *StoreItem_Link) Reset() {
	*x = StoreItem_Link{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Link) ProtoMessage() {}

func (x *StoreItem_Link) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Link.ProtoReflect.Descriptor instead.
func (*StoreItem_Link) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 14}
}

func (x *StoreItem_Link) GetLinkType() EStoreLinkType {
	if x != nil && x.LinkType != nil {
		return *x.LinkType
	}
	return Default_StoreItem_Link_LinkType
}

func (x *StoreItem_Link) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *StoreItem_Link) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type StoreItem_Reviews_StoreReviewSummary struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReviewCount      *uint32                `protobuf:"varint,1,opt,name=review_count,json=reviewCount" json:"review_count,omitempty"`
	PercentPositive  *int32                 `protobuf:"varint,2,opt,name=percent_positive,json=percentPositive" json:"percent_positive,omitempty"`
	ReviewScore      *EUserReviewScore      `protobuf:"varint,3,opt,name=review_score,json=reviewScore,enum=EUserReviewScore,def=0" json:"review_score,omitempty"`
	ReviewScoreLabel *string                `protobuf:"bytes,4,opt,name=review_score_label,json=reviewScoreLabel" json:"review_score_label,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for StoreItem_Reviews_StoreReviewSummary fields.
const (
	Default_StoreItem_Reviews_StoreReviewSummary_ReviewScore = EUserReviewScore_k_EUserReviewScore_None
)

func (x *StoreItem_Reviews_StoreReviewSummary) Reset() {
	*x = StoreItem_Reviews_StoreReviewSummary{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Reviews_StoreReviewSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Reviews_StoreReviewSummary) ProtoMessage() {}

func (x *StoreItem_Reviews_StoreReviewSummary) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Reviews_StoreReviewSummary.ProtoReflect.Descriptor instead.
func (*StoreItem_Reviews_StoreReviewSummary) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 3, 0}
}

func (x *StoreItem_Reviews_StoreReviewSummary) GetReviewCount() uint32 {
	if x != nil && x.ReviewCount != nil {
		return *x.ReviewCount
	}
	return 0
}

func (x *StoreItem_Reviews_StoreReviewSummary) GetPercentPositive() int32 {
	if x != nil && x.PercentPositive != nil {
		return *x.PercentPositive
	}
	return 0
}

func (x *StoreItem_Reviews_StoreReviewSummary) GetReviewScore() EUserReviewScore {
	if x != nil && x.ReviewScore != nil {
		return *x.ReviewScore
	}
	return Default_StoreItem_Reviews_StoreReviewSummary_ReviewScore
}

func (x *StoreItem_Reviews_StoreReviewSummary) GetReviewScoreLabel() string {
	if x != nil && x.ReviewScoreLabel != nil {
		return *x.ReviewScoreLabel
	}
	return ""
}

type StoreItem_BasicInfo_CreatorHomeLink struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Name                 *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	CreatorClanAccountId *uint32                `protobuf:"varint,2,opt,name=creator_clan_account_id,json=creatorClanAccountId" json:"creator_clan_account_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *StoreItem_BasicInfo_CreatorHomeLink) Reset() {
	*x = StoreItem_BasicInfo_CreatorHomeLink{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_BasicInfo_CreatorHomeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_BasicInfo_CreatorHomeLink) ProtoMessage() {}

func (x *StoreItem_BasicInfo_CreatorHomeLink) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_BasicInfo_CreatorHomeLink.ProtoReflect.Descriptor instead.
func (*StoreItem_BasicInfo_CreatorHomeLink) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 4, 0}
}

func (x *StoreItem_BasicInfo_CreatorHomeLink) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *StoreItem_BasicInfo_CreatorHomeLink) GetCreatorClanAccountId() uint32 {
	if x != nil && x.CreatorClanAccountId != nil {
		return *x.CreatorClanAccountId
	}
	return 0
}

type StoreItem_Platforms_VRSupport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vrhmd         *bool                  `protobuf:"varint,1,opt,name=vrhmd" json:"vrhmd,omitempty"`
	VrhmdOnly     *bool                  `protobuf:"varint,2,opt,name=vrhmd_only,json=vrhmdOnly" json:"vrhmd_only,omitempty"`
	HtcVive       *bool                  `protobuf:"varint,40,opt,name=htc_vive,json=htcVive" json:"htc_vive,omitempty"`
	OculusRift    *bool                  `protobuf:"varint,41,opt,name=oculus_rift,json=oculusRift" json:"oculus_rift,omitempty"`
	WindowsMr     *bool                  `protobuf:"varint,42,opt,name=windows_mr,json=windowsMr" json:"windows_mr,omitempty"`
	ValveIndex    *bool                  `protobuf:"varint,43,opt,name=valve_index,json=valveIndex" json:"valve_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItem_Platforms_VRSupport) Reset() {
	*x = StoreItem_Platforms_VRSupport{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Platforms_VRSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Platforms_VRSupport) ProtoMessage() {}

func (x *StoreItem_Platforms_VRSupport) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Platforms_VRSupport.ProtoReflect.Descriptor instead.
func (*StoreItem_Platforms_VRSupport) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 8, 0}
}

func (x *StoreItem_Platforms_VRSupport) GetVrhmd() bool {
	if x != nil && x.Vrhmd != nil {
		return *x.Vrhmd
	}
	return false
}

func (x *StoreItem_Platforms_VRSupport) GetVrhmdOnly() bool {
	if x != nil && x.VrhmdOnly != nil {
		return *x.VrhmdOnly
	}
	return false
}

func (x *StoreItem_Platforms_VRSupport) GetHtcVive() bool {
	if x != nil && x.HtcVive != nil {
		return *x.HtcVive
	}
	return false
}

func (x *StoreItem_Platforms_VRSupport) GetOculusRift() bool {
	if x != nil && x.OculusRift != nil {
		return *x.OculusRift
	}
	return false
}

func (x *StoreItem_Platforms_VRSupport) GetWindowsMr() bool {
	if x != nil && x.WindowsMr != nil {
		return *x.WindowsMr
	}
	return false
}

func (x *StoreItem_Platforms_VRSupport) GetValveIndex() bool {
	if x != nil && x.ValveIndex != nil {
		return *x.ValveIndex
	}
	return false
}

type StoreItem_PurchaseOption_Discount struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	DiscountAmount      *int64                 `protobuf:"varint,1,opt,name=discount_amount,json=discountAmount" json:"discount_amount,omitempty"`
	DiscountDescription *string                `protobuf:"bytes,2,opt,name=discount_description,json=discountDescription" json:"discount_description,omitempty"`
	DiscountEndDate     *uint32                `protobuf:"varint,3,opt,name=discount_end_date,json=discountEndDate" json:"discount_end_date,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StoreItem_PurchaseOption_Discount) Reset() {
	*x = StoreItem_PurchaseOption_Discount{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_PurchaseOption_Discount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_PurchaseOption_Discount) ProtoMessage() {}

func (x *StoreItem_PurchaseOption_Discount) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_PurchaseOption_Discount.ProtoReflect.Descriptor instead.
func (*StoreItem_PurchaseOption_Discount) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 9, 0}
}

func (x *StoreItem_PurchaseOption_Discount) GetDiscountAmount() int64 {
	if x != nil && x.DiscountAmount != nil {
		return *x.DiscountAmount
	}
	return 0
}

func (x *StoreItem_PurchaseOption_Discount) GetDiscountDescription() string {
	if x != nil && x.DiscountDescription != nil {
		return *x.DiscountDescription
	}
	return ""
}

func (x *StoreItem_PurchaseOption_Discount) GetDiscountEndDate() uint32 {
	if x != nil && x.DiscountEndDate != nil {
		return *x.DiscountEndDate
	}
	return 0
}

type StoreItem_PurchaseOption_RecurrenceInfo struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Packageid             *int32                 `protobuf:"varint,1,opt,name=packageid" json:"packageid,omitempty"`
	BillingAgreementType  *int32                 `protobuf:"varint,2,opt,name=billing_agreement_type,json=billingAgreementType" json:"billing_agreement_type,omitempty"`
	RenewalTimeUnit       *int32                 `protobuf:"varint,3,opt,name=renewal_time_unit,json=renewalTimeUnit" json:"renewal_time_unit,omitempty"`
	RenewalTimePeriod     *int32                 `protobuf:"varint,4,opt,name=renewal_time_period,json=renewalTimePeriod" json:"renewal_time_period,omitempty"`
	RenewalPriceInCents   *int64                 `protobuf:"varint,5,opt,name=renewal_price_in_cents,json=renewalPriceInCents" json:"renewal_price_in_cents,omitempty"`
	FormattedRenewalPrice *string                `protobuf:"bytes,6,opt,name=formatted_renewal_price,json=formattedRenewalPrice" json:"formatted_renewal_price,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) Reset() {
	*x = StoreItem_PurchaseOption_RecurrenceInfo{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_PurchaseOption_RecurrenceInfo) ProtoMessage() {}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_PurchaseOption_RecurrenceInfo.ProtoReflect.Descriptor instead.
func (*StoreItem_PurchaseOption_RecurrenceInfo) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 9, 1}
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) GetPackageid() int32 {
	if x != nil && x.Packageid != nil {
		return *x.Packageid
	}
	return 0
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) GetBillingAgreementType() int32 {
	if x != nil && x.BillingAgreementType != nil {
		return *x.BillingAgreementType
	}
	return 0
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) GetRenewalTimeUnit() int32 {
	if x != nil && x.RenewalTimeUnit != nil {
		return *x.RenewalTimeUnit
	}
	return 0
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) GetRenewalTimePeriod() int32 {
	if x != nil && x.RenewalTimePeriod != nil {
		return *x.RenewalTimePeriod
	}
	return 0
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) GetRenewalPriceInCents() int64 {
	if x != nil && x.RenewalPriceInCents != nil {
		return *x.RenewalPriceInCents
	}
	return 0
}

func (x *StoreItem_PurchaseOption_RecurrenceInfo) GetFormattedRenewalPrice() string {
	if x != nil && x.FormattedRenewalPrice != nil {
		return *x.FormattedRenewalPrice
	}
	return ""
}

type StoreItem_Screenshots_Screenshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      *string                `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Ordinal       *int32                 `protobuf:"varint,2,opt,name=ordinal" json:"ordinal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItem_Screenshots_Screenshot) Reset() {
	*x = StoreItem_Screenshots_Screenshot{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Screenshots_Screenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Screenshots_Screenshot) ProtoMessage() {}

func (x *StoreItem_Screenshots_Screenshot) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Screenshots_Screenshot.ProtoReflect.Descriptor instead.
func (*StoreItem_Screenshots_Screenshot) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 10, 0}
}

func (x *StoreItem_Screenshots_Screenshot) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *StoreItem_Screenshots_Screenshot) GetOrdinal() int32 {
	if x != nil && x.Ordinal != nil {
		return *x.Ordinal
	}
	return 0
}

type StoreItem_Trailers_VideoSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      *string                `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreItem_Trailers_VideoSource) Reset() {
	*x = StoreItem_Trailers_VideoSource{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Trailers_VideoSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Trailers_VideoSource) ProtoMessage() {}

func (x *StoreItem_Trailers_VideoSource) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Trailers_VideoSource.ProtoReflect.Descriptor instead.
func (*StoreItem_Trailers_VideoSource) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 11, 0}
}

func (x *StoreItem_Trailers_VideoSource) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *StoreItem_Trailers_VideoSource) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

type StoreItem_Trailers_Trailer struct {
	state            protoimpl.MessageState            `protogen:"open.v1"`
	TrailerName      *string                           `protobuf:"bytes,1,opt,name=trailer_name,json=trailerName" json:"trailer_name,omitempty"`
	TrailerUrlFormat *string                           `protobuf:"bytes,2,opt,name=trailer_url_format,json=trailerUrlFormat" json:"trailer_url_format,omitempty"`
	TrailerCategory  *ETrailerCategory                 `protobuf:"varint,13,opt,name=trailer_category,json=trailerCategory,enum=ETrailerCategory,def=0" json:"trailer_category,omitempty"`
	Trailer_480P     []*StoreItem_Trailers_VideoSource `protobuf:"bytes,3,rep,name=trailer_480p,json=trailer480p" json:"trailer_480p,omitempty"`
	TrailerMax       []*StoreItem_Trailers_VideoSource `protobuf:"bytes,4,rep,name=trailer_max,json=trailerMax" json:"trailer_max,omitempty"`
	Microtrailer     []*StoreItem_Trailers_VideoSource `protobuf:"bytes,5,rep,name=microtrailer" json:"microtrailer,omitempty"`
	ScreenshotMedium *string                           `protobuf:"bytes,10,opt,name=screenshot_medium,json=screenshotMedium" json:"screenshot_medium,omitempty"`
	ScreenshotFull   *string                           `protobuf:"bytes,11,opt,name=screenshot_full,json=screenshotFull" json:"screenshot_full,omitempty"`
	TrailerBaseId    *int32                            `protobuf:"varint,12,opt,name=trailer_base_id,json=trailerBaseId" json:"trailer_base_id,omitempty"`
	AllAges          *bool                             `protobuf:"varint,14,opt,name=all_ages,json=allAges" json:"all_ages,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

// Default values for StoreItem_Trailers_Trailer fields.
const (
	Default_StoreItem_Trailers_Trailer_TrailerCategory = ETrailerCategory_k_ETrailerCategory_Invalid
)

func (x *StoreItem_Trailers_Trailer) Reset() {
	*x = StoreItem_Trailers_Trailer{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreItem_Trailers_Trailer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreItem_Trailers_Trailer) ProtoMessage() {}

func (x *StoreItem_Trailers_Trailer) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreItem_Trailers_Trailer.ProtoReflect.Descriptor instead.
func (*StoreItem_Trailers_Trailer) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{4, 11, 1}
}

func (x *StoreItem_Trailers_Trailer) GetTrailerName() string {
	if x != nil && x.TrailerName != nil {
		return *x.TrailerName
	}
	return ""
}

func (x *StoreItem_Trailers_Trailer) GetTrailerUrlFormat() string {
	if x != nil && x.TrailerUrlFormat != nil {
		return *x.TrailerUrlFormat
	}
	return ""
}

func (x *StoreItem_Trailers_Trailer) GetTrailerCategory() ETrailerCategory {
	if x != nil && x.TrailerCategory != nil {
		return *x.TrailerCategory
	}
	return Default_StoreItem_Trailers_Trailer_TrailerCategory
}

func (x *StoreItem_Trailers_Trailer) GetTrailer_480P() []*StoreItem_Trailers_VideoSource {
	if x != nil {
		return x.Trailer_480P
	}
	return nil
}

func (x *StoreItem_Trailers_Trailer) GetTrailerMax() []*StoreItem_Trailers_VideoSource {
	if x != nil {
		return x.TrailerMax
	}
	return nil
}

func (x *StoreItem_Trailers_Trailer) GetMicrotrailer() []*StoreItem_Trailers_VideoSource {
	if x != nil {
		return x.Microtrailer
	}
	return nil
}

func (x *StoreItem_Trailers_Trailer) GetScreenshotMedium() string {
	if x != nil && x.ScreenshotMedium != nil {
		return *x.ScreenshotMedium
	}
	return ""
}

func (x *StoreItem_Trailers_Trailer) GetScreenshotFull() string {
	if x != nil && x.ScreenshotFull != nil {
		return *x.ScreenshotFull
	}
	return ""
}

func (x *StoreItem_Trailers_Trailer) GetTrailerBaseId() int32 {
	if x != nil && x.TrailerBaseId != nil {
		return *x.TrailerBaseId
	}
	return 0
}

func (x *StoreItem_Trailers_Trailer) GetAllAges() bool {
	if x != nil && x.AllAges != nil {
		return *x.AllAges
	}
	return false
}

type CStoreBrowse_GetStoreCategories_Response_Category struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categoryid    *uint32                `protobuf:"varint,1,opt,name=categoryid" json:"categoryid,omitempty"`
	Type          *EStoreCategoryType    `protobuf:"varint,2,opt,name=type,enum=EStoreCategoryType,def=0" json:"type,omitempty"`
	InternalName  *string                `protobuf:"bytes,3,opt,name=internal_name,json=internalName" json:"internal_name,omitempty"`
	DisplayName   *string                `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,5,opt,name=image_url,json=imageUrl" json:"image_url,omitempty"`
	ShowInSearch  *bool                  `protobuf:"varint,6,opt,name=show_in_search,json=showInSearch" json:"show_in_search,omitempty"`
	Computed      *bool                  `protobuf:"varint,7,opt,name=computed" json:"computed,omitempty"`
	EditUrl       *string                `protobuf:"bytes,8,opt,name=edit_url,json=editUrl" json:"edit_url,omitempty"`
	EditSortOrder *uint32                `protobuf:"varint,9,opt,name=edit_sort_order,json=editSortOrder" json:"edit_sort_order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CStoreBrowse_GetStoreCategories_Response_Category fields.
const (
	Default_CStoreBrowse_GetStoreCategories_Response_Category_Type = EStoreCategoryType_k_EStoreCategoryType_Category
)

func (x *CStoreBrowse_GetStoreCategories_Response_Category) Reset() {
	*x = CStoreBrowse_GetStoreCategories_Response_Category{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetStoreCategories_Response_Category) ProtoMessage() {}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetStoreCategories_Response_Category.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetStoreCategories_Response_Category) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetCategoryid() uint32 {
	if x != nil && x.Categoryid != nil {
		return *x.Categoryid
	}
	return 0
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetType() EStoreCategoryType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CStoreBrowse_GetStoreCategories_Response_Category_Type
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetInternalName() string {
	if x != nil && x.InternalName != nil {
		return *x.InternalName
	}
	return ""
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetShowInSearch() bool {
	if x != nil && x.ShowInSearch != nil {
		return *x.ShowInSearch
	}
	return false
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetComputed() bool {
	if x != nil && x.Computed != nil {
		return *x.Computed
	}
	return false
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetEditUrl() string {
	if x != nil && x.EditUrl != nil {
		return *x.EditUrl
	}
	return ""
}

func (x *CStoreBrowse_GetStoreCategories_Response_Category) GetEditSortOrder() uint32 {
	if x != nil && x.EditSortOrder != nil {
		return *x.EditSortOrder
	}
	return 0
}

type CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hubcategoryid *uint32                `protobuf:"varint,1,opt,name=hubcategoryid" json:"hubcategoryid,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Handle        *string                `protobuf:"bytes,3,opt,name=handle" json:"handle,omitempty"`
	DisplayName   *string                `protobuf:"bytes,4,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	UrlPath       *string                `protobuf:"bytes,5,opt,name=url_path,json=urlPath" json:"url_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) Reset() {
	*x = CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) ProtoMessage() {}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{11, 0}
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) GetHubcategoryid() uint32 {
	if x != nil && x.Hubcategoryid != nil {
		return *x.Hubcategoryid
	}
	return 0
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) GetHandle() string {
	if x != nil && x.Handle != nil {
		return *x.Handle
	}
	return ""
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig) GetUrlPath() string {
	if x != nil && x.UrlPath != nil {
		return *x.UrlPath
	}
	return ""
}

type CStoreBrowse_GetPriceStops_Response_PriceStop struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FormattedAmount *string                `protobuf:"bytes,1,opt,name=formatted_amount,json=formattedAmount" json:"formatted_amount,omitempty"`
	AmountInCents   *int64                 `protobuf:"varint,2,opt,name=amount_in_cents,json=amountInCents" json:"amount_in_cents,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CStoreBrowse_GetPriceStops_Response_PriceStop) Reset() {
	*x = CStoreBrowse_GetPriceStops_Response_PriceStop{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetPriceStops_Response_PriceStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetPriceStops_Response_PriceStop) ProtoMessage() {}

func (x *CStoreBrowse_GetPriceStops_Response_PriceStop) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetPriceStops_Response_PriceStop.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetPriceStops_Response_PriceStop) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{13, 0}
}

func (x *CStoreBrowse_GetPriceStops_Response_PriceStop) GetFormattedAmount() string {
	if x != nil && x.FormattedAmount != nil {
		return *x.FormattedAmount
	}
	return ""
}

func (x *CStoreBrowse_GetPriceStops_Response_PriceStop) GetAmountInCents() int64 {
	if x != nil && x.AmountInCents != nil {
		return *x.AmountInCents
	}
	return 0
}

type CStoreBrowse_GetDLCForApps_Response_DLCData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Parentappid   *uint32                `protobuf:"varint,2,opt,name=parentappid" json:"parentappid,omitempty"`
	ReleaseDate   *uint32                `protobuf:"varint,3,opt,name=release_date,json=releaseDate" json:"release_date,omitempty"`
	ComingSoon    *bool                  `protobuf:"varint,4,opt,name=coming_soon,json=comingSoon" json:"coming_soon,omitempty"`
	Price         *int64                 `protobuf:"varint,5,opt,name=price" json:"price,omitempty"`
	Discount      *uint32                `protobuf:"varint,6,opt,name=discount" json:"discount,omitempty"`
	Free          *bool                  `protobuf:"varint,7,opt,name=free" json:"free,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) Reset() {
	*x = CStoreBrowse_GetDLCForApps_Response_DLCData{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForApps_Response_DLCData) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForApps_Response_DLCData.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForApps_Response_DLCData) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetParentappid() uint32 {
	if x != nil && x.Parentappid != nil {
		return *x.Parentappid
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetReleaseDate() uint32 {
	if x != nil && x.ReleaseDate != nil {
		return *x.ReleaseDate
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetComingSoon() bool {
	if x != nil && x.ComingSoon != nil {
		return *x.ComingSoon
	}
	return false
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetPrice() int64 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetDiscount() uint32 {
	if x != nil && x.Discount != nil {
		return *x.Discount
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_DLCData) GetFree() bool {
	if x != nil && x.Free != nil {
		return *x.Free
	}
	return false
}

type CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Playtime      *uint32                `protobuf:"varint,2,opt,name=playtime" json:"playtime,omitempty"`
	LastPlayed    *uint32                `protobuf:"varint,3,opt,name=last_played,json=lastPlayed" json:"last_played,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) Reset() {
	*x = CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{15, 1}
}

func (x *CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) GetPlaytime() uint32 {
	if x != nil && x.Playtime != nil {
		return *x.Playtime
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp) GetLastPlayed() uint32 {
	if x != nil && x.LastPlayed != nil {
		return *x.LastPlayed
	}
	return 0
}

type CStoreBrowse_GetDLCForAppsSolr_Response_DLCList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentAppid   *uint32                `protobuf:"varint,1,opt,name=parent_appid,json=parentAppid" json:"parent_appid,omitempty"`
	DlcAppids     []uint32               `protobuf:"varint,2,rep,name=dlc_appids,json=dlcAppids" json:"dlc_appids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) Reset() {
	*x = CStoreBrowse_GetDLCForAppsSolr_Response_DLCList{}
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) ProtoMessage() {}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_storebrowse_steamclient_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CStoreBrowse_GetDLCForAppsSolr_Response_DLCList.ProtoReflect.Descriptor instead.
func (*CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) Descriptor() ([]byte, []int) {
	return file_steammessages_storebrowse_steamclient_proto_rawDescGZIP(), []int{17, 0}
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) GetParentAppid() uint32 {
	if x != nil && x.ParentAppid != nil {
		return *x.ParentAppid
	}
	return 0
}

func (x *CStoreBrowse_GetDLCForAppsSolr_Response_DLCList) GetDlcAppids() []uint32 {
	if x != nil {
		return x.DlcAppids
	}
	return nil
}

var File_steammessages_storebrowse_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_storebrowse_steamclient_proto_rawDesc = "" +
	"\n" +
	"+steammessages_storebrowse.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\x1a\x17enums_productinfo.proto\x1a\venums.proto\x1a\x11contenthubs.proto\"\xb7\x01\n" +
	"\vStoreItemID\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1c\n" +
	"\tpackageid\x18\x02 \x01(\rR\tpackageid\x12\x1a\n" +
	"\bbundleid\x18\x03 \x01(\rR\bbundleid\x12\x14\n" +
	"\x05tagid\x18\x04 \x01(\rR\x05tagid\x12\x1c\n" +
	"\tcreatorid\x18\x05 \x01(\rR\tcreatorid\x12$\n" +
	"\rhubcategoryid\x18\x06 \x01(\rR\rhubcategoryid\"\x92\x01\n" +
	"\x12StoreBrowseContext\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x1c\n" +
	"\telanguage\x18\x02 \x01(\x05R\telanguage\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12\x1f\n" +
	"\vsteam_realm\x18\x04 \x01(\x05R\n" +
	"steamRealm\"\x88\a\n" +
	"\x1aStoreBrowseItemDataRequest\x12%\n" +
	"\x0einclude_assets\x18\x01 \x01(\bR\rincludeAssets\x12'\n" +
	"\x0finclude_release\x18\x02 \x01(\bR\x0eincludeRelease\x12+\n" +
	"\x11include_platforms\x18\x03 \x01(\bR\x10includePlatforms\x12?\n" +
	"\x1cinclude_all_purchase_options\x18\x04 \x01(\bR\x19includeAllPurchaseOptions\x12/\n" +
	"\x13include_screenshots\x18\x05 \x01(\bR\x12includeScreenshots\x12)\n" +
	"\x10include_trailers\x18\x06 \x01(\bR\x0fincludeTrailers\x12'\n" +
	"\x0finclude_ratings\x18\a \x01(\bR\x0eincludeRatings\x12*\n" +
	"\x11include_tag_count\x18\b \x01(\x05R\x0fincludeTagCount\x12'\n" +
	"\x0finclude_reviews\x18\t \x01(\bR\x0eincludeReviews\x12,\n" +
	"\x12include_basic_info\x18\n" +
	" \x01(\bR\x10includeBasicInfo\x12>\n" +
	"\x1binclude_supported_languages\x18\v \x01(\bR\x19includeSupportedLanguages\x128\n" +
	"\x18include_full_description\x18\f \x01(\bR\x16includeFullDescription\x124\n" +
	"\x16include_included_items\x18\r \x01(\bR\x14includeIncludedItems\x12X\n" +
	"\x1aincluded_item_data_request\x18\x0e \x01(\v2\x1b.StoreBrowseItemDataRequestR\x17includedItemDataRequest\x12G\n" +
	" include_assets_without_overrides\x18\x0f \x01(\bR\x1dincludeAssetsWithoutOverrides\x12,\n" +
	"\x12apply_user_filters\x18\x10 \x01(\bR\x10applyUserFilters\x12#\n" +
	"\rinclude_links\x18\x11 \x01(\bR\fincludeLinks\"\xae\x01\n" +
	"\x1dCStoreBrowse_GetItems_Request\x12\x1e\n" +
	"\x03ids\x18\x01 \x03(\v2\f.StoreItemIDR\x03ids\x12-\n" +
	"\acontext\x18\x02 \x01(\v2\x13.StoreBrowseContextR\acontext\x12>\n" +
	"\fdata_request\x18\x03 \x01(\v2\x1b.StoreBrowseItemDataRequestR\vdataRequest\"\xd1A\n" +
	"\tStoreItem\x12F\n" +
	"\titem_type\x18\x01 \x01(\x0e2\x0f.EStoreItemType:\x18k_EStoreItemType_InvalidR\bitemType\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\rR\x02id\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\rR\asuccess\x12\x18\n" +
	"\avisible\x18\x04 \x01(\bR\avisible\x12K\n" +
	"\"unvailable_for_country_restriction\x18\x05 \x01(\bR\x1funvailableForCountryRestriction\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12$\n" +
	"\x0estore_url_path\x18\a \x01(\tR\fstoreUrlPath\x12\x14\n" +
	"\x05appid\x18\t \x01(\rR\x05appid\x128\n" +
	"\x04type\x18\n" +
	" \x01(\x0e2\x0e.EStoreAppType:\x14k_EStoreAppType_GameR\x04type\x125\n" +
	"\x0eincluded_types\x18\v \x03(\x0e2\x0e.EStoreAppTypeR\rincludedTypes\x12'\n" +
	"\x0fincluded_appids\x18\f \x03(\rR\x0eincludedAppids\x12\x17\n" +
	"\ais_free\x18\r \x01(\bR\x06isFree\x12&\n" +
	"\x0fis_early_access\x18\x0e \x01(\bR\risEarlyAccess\x12<\n" +
	"\rrelated_items\x18\x0f \x01(\v2\x17.StoreItem.RelatedItemsR\frelatedItems\x12?\n" +
	"\x0eincluded_items\x18\x10 \x01(\v2\x18.StoreItem.IncludedItemsR\rincludedItems\x12J\n" +
	"\x15content_descriptorids\x18\x14 \x03(\x0e2\x15.EContentDescriptorIDR\x14contentDescriptorids\x12\x16\n" +
	"\x06tagids\x18\x15 \x03(\rR\x06tagids\x125\n" +
	"\n" +
	"categories\x18\x16 \x01(\v2\x15.StoreItem.CategoriesR\n" +
	"categories\x12,\n" +
	"\areviews\x18\x17 \x01(\v2\x12.StoreItem.ReviewsR\areviews\x123\n" +
	"\n" +
	"basic_info\x18\x18 \x01(\v2\x14.StoreItem.BasicInfoR\tbasicInfo\x12\"\n" +
	"\x04tags\x18\x19 \x03(\v2\x0e.StoreItem.TagR\x04tags\x12)\n" +
	"\x06assets\x18\x1e \x01(\v2\x11.StoreItem.AssetsR\x06assets\x120\n" +
	"\arelease\x18\x1f \x01(\v2\x16.StoreItem.ReleaseInfoR\arelease\x122\n" +
	"\tplatforms\x18  \x01(\v2\x14.StoreItem.PlatformsR\tplatforms\x121\n" +
	"\vgame_rating\x18! \x01(\v2\x10.StoreGameRatingR\n" +
	"gameRating\x12$\n" +
	"\x0eis_coming_soon\x18\" \x01(\bR\fisComingSoon\x12K\n" +
	"\x14best_purchase_option\x18( \x01(\v2\x19.StoreItem.PurchaseOptionR\x12bestPurchaseOption\x12D\n" +
	"\x10purchase_options\x18) \x03(\v2\x19.StoreItem.PurchaseOptionR\x0fpurchaseOptions\x12;\n" +
	"\vaccessories\x18* \x03(\v2\x19.StoreItem.PurchaseOptionR\vaccessories\x12K\n" +
	"\x14self_purchase_option\x18+ \x01(\v2\x19.StoreItem.PurchaseOptionR\x12selfPurchaseOption\x128\n" +
	"\vscreenshots\x182 \x01(\v2\x16.StoreItem.ScreenshotsR\vscreenshots\x12/\n" +
	"\btrailers\x183 \x01(\v2\x13.StoreItem.TrailersR\btrailers\x12M\n" +
	"\x13supported_languages\x184 \x03(\v2\x1c.StoreItem.SupportedLanguageR\x12supportedLanguages\x125\n" +
	"\x17store_url_path_override\x185 \x01(\tR\x14storeUrlPathOverride\x129\n" +
	"\ffree_weekend\x186 \x01(\v2\x16.StoreItem.FreeWeekendR\vfreeWeekend\x12\x1a\n" +
	"\bunlisted\x187 \x01(\bR\bunlisted\x12\x1d\n" +
	"\n" +
	"game_count\x188 \x01(\rR\tgameCount\x12#\n" +
	"\rinternal_name\x189 \x01(\tR\finternalName\x12)\n" +
	"\x10full_description\x18: \x01(\tR\x0ffullDescription\x12.\n" +
	"\x13is_free_temporarily\x18; \x01(\bR\x11isFreeTemporarily\x12K\n" +
	"\x18assets_without_overrides\x18< \x01(\v2\x11.StoreItem.AssetsR\x16assetsWithoutOverrides\x12I\n" +
	"\x13user_filter_failure\x18F \x01(\v2\x19.StoreBrowseFilterFailureR\x11userFilterFailure\x12%\n" +
	"\x05links\x18G \x03(\v2\x0f.StoreItem.LinkR\x05links\x1a\x84\x01\n" +
	"\fRelatedItems\x12!\n" +
	"\fparent_appid\x18\x01 \x01(\rR\vparentAppid\x12\x1d\n" +
	"\n" +
	"demo_appid\x18\x02 \x03(\rR\tdemoAppid\x122\n" +
	"\x15standalone_demo_appid\x18\x03 \x03(\rR\x13standaloneDemoAppid\x1ay\n" +
	"\rIncludedItems\x12/\n" +
	"\rincluded_apps\x18\x01 \x03(\v2\n" +
	".StoreItemR\fincludedApps\x127\n" +
	"\x11included_packages\x18\x02 \x03(\v2\n" +
	".StoreItemR\x10includedPackages\x1a\xb6\x01\n" +
	"\n" +
	"Categories\x12@\n" +
	"\x1csupported_player_categoryids\x18\x02 \x03(\rR\x1asupportedPlayerCategoryids\x12/\n" +
	"\x13feature_categoryids\x18\x03 \x03(\rR\x12featureCategoryids\x125\n" +
	"\x16controller_categoryids\x18\x04 \x03(\rR\x15controllerCategoryids\x1a\x93\x03\n" +
	"\aReviews\x12P\n" +
	"\x10summary_filtered\x18\x01 \x01(\v2%.StoreItem.Reviews.StoreReviewSummaryR\x0fsummaryFiltered\x12T\n" +
	"\x12summary_unfiltered\x18\x02 \x01(\v2%.StoreItem.Reviews.StoreReviewSummaryR\x11summaryUnfiltered\x1a\xdf\x01\n" +
	"\x12StoreReviewSummary\x12!\n" +
	"\freview_count\x18\x01 \x01(\rR\vreviewCount\x12)\n" +
	"\x10percent_positive\x18\x02 \x01(\x05R\x0fpercentPositive\x12M\n" +
	"\freview_score\x18\x03 \x01(\x0e2\x11.EUserReviewScore:\x17k_EUserReviewScore_NoneR\vreviewScore\x12,\n" +
	"\x12review_score_label\x18\x04 \x01(\tR\x10reviewScoreLabel\x1a\x93\x03\n" +
	"\tBasicInfo\x12+\n" +
	"\x11short_description\x18\x01 \x01(\tR\x10shortDescription\x12D\n" +
	"\n" +
	"publishers\x18\x02 \x03(\v2$.StoreItem.BasicInfo.CreatorHomeLinkR\n" +
	"publishers\x12D\n" +
	"\n" +
	"developers\x18\x03 \x03(\v2$.StoreItem.BasicInfo.CreatorHomeLinkR\n" +
	"developers\x12D\n" +
	"\n" +
	"franchises\x18\x04 \x03(\v2$.StoreItem.BasicInfo.CreatorHomeLinkR\n" +
	"franchises\x12)\n" +
	"\x10capsule_headline\x18\x05 \x01(\tR\x0fcapsuleHeadline\x1a\\\n" +
	"\x0fCreatorHomeLink\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x125\n" +
	"\x17creator_clan_account_id\x18\x02 \x01(\rR\x14creatorClanAccountId\x1a3\n" +
	"\x03Tag\x12\x14\n" +
	"\x05tagid\x18\x01 \x01(\rR\x05tagid\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\rR\x06weight\x1a\xf9\x04\n" +
	"\x06Assets\x12(\n" +
	"\x10asset_url_format\x18\x01 \x01(\tR\x0eassetUrlFormat\x12!\n" +
	"\fmain_capsule\x18\x02 \x01(\tR\vmainCapsule\x12#\n" +
	"\rsmall_capsule\x18\x03 \x01(\tR\fsmallCapsule\x12\x16\n" +
	"\x06header\x18\x04 \x01(\tR\x06header\x12%\n" +
	"\x0epackage_header\x18\x05 \x01(\tR\rpackageHeader\x12'\n" +
	"\x0fpage_background\x18\x06 \x01(\tR\x0epageBackground\x12!\n" +
	"\fhero_capsule\x18\a \x01(\tR\vheroCapsule\x12&\n" +
	"\x0fhero_capsule_2x\x18\b \x01(\tR\rheroCapsule2x\x12'\n" +
	"\x0flibrary_capsule\x18\t \x01(\tR\x0elibraryCapsule\x12,\n" +
	"\x12library_capsule_2x\x18\n" +
	" \x01(\tR\x10libraryCapsule2x\x12!\n" +
	"\flibrary_hero\x18\v \x01(\tR\vlibraryHero\x12&\n" +
	"\x0flibrary_hero_2x\x18\f \x01(\tR\rlibraryHero2x\x12%\n" +
	"\x0ecommunity_icon\x18\r \x01(\tR\rcommunityIcon\x12\x1f\n" +
	"\vclan_avatar\x18\x0e \x01(\tR\n" +
	"clanAvatar\x120\n" +
	"\x14page_background_path\x18\x0f \x01(\tR\x12pageBackgroundPath\x12.\n" +
	"\x13raw_page_background\x18\x10 \x01(\tR\x11rawPageBackground\x1a\xcf\x04\n" +
	"\vReleaseInfo\x12,\n" +
	"\x12steam_release_date\x18\x01 \x01(\rR\x10steamReleaseDate\x122\n" +
	"\x15original_release_date\x18\x02 \x01(\rR\x13originalReleaseDate\x12=\n" +
	"\x1boriginal_steam_release_date\x18\x03 \x01(\rR\x18originalSteamReleaseDate\x12$\n" +
	"\x0eis_coming_soon\x18\x04 \x01(\bR\fisComingSoon\x12\x1d\n" +
	"\n" +
	"is_preload\x18\x05 \x01(\bR\tisPreload\x12=\n" +
	"\x1bcustom_release_date_message\x18\x06 \x01(\tR\x18customReleaseDateMessage\x127\n" +
	"\x18is_abridged_release_date\x18\a \x01(\bR\x15isAbridgedReleaseDate\x12.\n" +
	"\x13coming_soon_display\x18\b \x01(\tR\x11comingSoonDisplay\x12&\n" +
	"\x0fis_early_access\x18\n" +
	" \x01(\bR\risEarlyAccess\x12(\n" +
	"\x10mac_release_date\x18\x14 \x01(\rR\x0emacReleaseDate\x12,\n" +
	"\x12linux_release_date\x18\x15 \x01(\rR\x10linuxReleaseDate\x122\n" +
	"\x15limited_launch_active\x18\x16 \x01(\bR\x13limitedLaunchActive\x1a\xe8\x04\n" +
	"\tPlatforms\x12\x18\n" +
	"\awindows\x18\x01 \x01(\bR\awindows\x12\x10\n" +
	"\x03mac\x18\x02 \x01(\bR\x03mac\x12#\n" +
	"\rsteamos_linux\x18\x03 \x01(\bR\fsteamosLinux\x12=\n" +
	"\n" +
	"vr_support\x18\n" +
	" \x01(\v2\x1e.StoreItem.Platforms.VRSupportR\tvrSupport\x12\x88\x01\n" +
	"\x1asteam_deck_compat_category\x18\v \x01(\x0e2 .ESteamDeckCompatibilityCategory:)k_ESteamDeckCompatibilityCategory_UnknownR\x17steamDeckCompatCategory\x12\x80\x01\n" +
	"\x18steam_os_compat_category\x18\f \x01(\x0e2\x1e.ESteamOSCompatibilityCategory:'k_ESteamOSCompatibilityCategory_UnknownR\x15steamOsCompatCategory\x1a\xbc\x01\n" +
	"\tVRSupport\x12\x14\n" +
	"\x05vrhmd\x18\x01 \x01(\bR\x05vrhmd\x12\x1d\n" +
	"\n" +
	"vrhmd_only\x18\x02 \x01(\bR\tvrhmdOnly\x12\x19\n" +
	"\bhtc_vive\x18( \x01(\bR\ahtcVive\x12\x1f\n" +
	"\voculus_rift\x18) \x01(\bR\n" +
	"oculusRift\x12\x1d\n" +
	"\n" +
	"windows_mr\x18* \x01(\bR\twindowsMr\x12\x1f\n" +
	"\vvalve_index\x18+ \x01(\bR\n" +
	"valveIndex\x1a\x91\r\n" +
	"\x0ePurchaseOption\x12\x1c\n" +
	"\tpackageid\x18\x01 \x01(\x05R\tpackageid\x12\x1a\n" +
	"\bbundleid\x18\x02 \x01(\x05R\bbundleid\x120\n" +
	"\x14purchase_option_name\x18\x03 \x01(\tR\x12purchaseOptionName\x12/\n" +
	"\x14final_price_in_cents\x18\x05 \x01(\x03R\x11finalPriceInCents\x125\n" +
	"\x17original_price_in_cents\x18\x06 \x01(\x03R\x14originalPriceInCents\x122\n" +
	"\x15formatted_final_price\x18\b \x01(\tR\x13formattedFinalPrice\x128\n" +
	"\x18formatted_original_price\x18\t \x01(\tR\x16formattedOriginalPrice\x12!\n" +
	"\fdiscount_pct\x18\n" +
	" \x01(\x05R\vdiscountPct\x12.\n" +
	"\x13bundle_discount_pct\x18\f \x01(\x05R\x11bundleDiscountPct\x12%\n" +
	"\x0fis_free_to_keep\x18\r \x01(\bR\fisFreeToKeep\x12?\n" +
	"\x1cprice_before_bundle_discount\x18\x0e \x01(\x03R\x19priceBeforeBundleDiscount\x12R\n" +
	"&formatted_price_before_bundle_discount\x18\x0f \x01(\tR\"formattedPriceBeforeBundleDiscount\x12M\n" +
	"\x10active_discounts\x18\x14 \x03(\v2\".StoreItem.PurchaseOption.DiscountR\x0factiveDiscounts\x128\n" +
	"\x19user_can_purchase_as_gift\x18\x1f \x01(\bR\x15userCanPurchaseAsGift\x122\n" +
	"\x15is_commercial_license\x18( \x01(\bR\x13isCommercialLicense\x12?\n" +
	"\x1cshould_suppress_discount_pct\x18) \x01(\bR\x19shouldSuppressDiscountPct\x12M\n" +
	" hide_discount_pct_for_compliance\x18* \x01(\b:\x05falseR\x1chideDiscountPctForCompliance\x121\n" +
	"\x13included_game_count\x18+ \x01(\x05:\x011R\x11includedGameCount\x12>\n" +
	"\x1clowest_recent_price_in_cents\x18, \x01(\x03R\x18lowestRecentPriceInCents\x12+\n" +
	"\x11requires_shipping\x18- \x01(\bR\x10requiresShipping\x12Q\n" +
	"\x0frecurrence_info\x18. \x01(\v2(.StoreItem.PurchaseOption.RecurrenceInfoR\x0erecurrenceInfo\x12)\n" +
	"\x11free_to_keep_ends\x18/ \x01(\rR\x0efreeToKeepEnds\x1a\x92\x01\n" +
	"\bDiscount\x12'\n" +
	"\x0fdiscount_amount\x18\x01 \x01(\x03R\x0ediscountAmount\x121\n" +
	"\x14discount_description\x18\x02 \x01(\tR\x13discountDescription\x12*\n" +
	"\x11discount_end_date\x18\x03 \x01(\rR\x0fdiscountEndDate\x1a\xad\x02\n" +
	"\x0eRecurrenceInfo\x12\x1c\n" +
	"\tpackageid\x18\x01 \x01(\x05R\tpackageid\x124\n" +
	"\x16billing_agreement_type\x18\x02 \x01(\x05R\x14billingAgreementType\x12*\n" +
	"\x11renewal_time_unit\x18\x03 \x01(\x05R\x0frenewalTimeUnit\x12.\n" +
	"\x13renewal_time_period\x18\x04 \x01(\x05R\x11renewalTimePeriod\x123\n" +
	"\x16renewal_price_in_cents\x18\x05 \x01(\x03R\x13renewalPriceInCents\x126\n" +
	"\x17formatted_renewal_price\x18\x06 \x01(\tR\x15formattedRenewalPrice\x1a\x87\x02\n" +
	"\vScreenshots\x12S\n" +
	"\x14all_ages_screenshots\x18\x02 \x03(\v2!.StoreItem.Screenshots.ScreenshotR\x12allAgesScreenshots\x12_\n" +
	"\x1amature_content_screenshots\x18\x03 \x03(\v2!.StoreItem.Screenshots.ScreenshotR\x18matureContentScreenshots\x1aB\n" +
	"\n" +
	"Screenshot\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x18\n" +
	"\aordinal\x18\x02 \x01(\x05R\aordinal\x1a\xe5\x05\n" +
	"\bTrailers\x12;\n" +
	"\n" +
	"highlights\x18\x01 \x03(\v2\x1b.StoreItem.Trailers.TrailerR\n" +
	"highlights\x12B\n" +
	"\x0eother_trailers\x18\x02 \x03(\v2\x1b.StoreItem.Trailers.TrailerR\rotherTrailers\x1a=\n" +
	"\vVideoSource\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x1a\x98\x04\n" +
	"\aTrailer\x12!\n" +
	"\ftrailer_name\x18\x01 \x01(\tR\vtrailerName\x12,\n" +
	"\x12trailer_url_format\x18\x02 \x01(\tR\x10trailerUrlFormat\x12X\n" +
	"\x10trailer_category\x18\r \x01(\x0e2\x11.ETrailerCategory:\x1ak_ETrailerCategory_InvalidR\x0ftrailerCategory\x12B\n" +
	"\ftrailer_480p\x18\x03 \x03(\v2\x1f.StoreItem.Trailers.VideoSourceR\vtrailer480p\x12@\n" +
	"\vtrailer_max\x18\x04 \x03(\v2\x1f.StoreItem.Trailers.VideoSourceR\n" +
	"trailerMax\x12C\n" +
	"\fmicrotrailer\x18\x05 \x03(\v2\x1f.StoreItem.Trailers.VideoSourceR\fmicrotrailer\x12+\n" +
	"\x11screenshot_medium\x18\n" +
	" \x01(\tR\x10screenshotMedium\x12'\n" +
	"\x0fscreenshot_full\x18\v \x01(\tR\x0escreenshotFull\x12&\n" +
	"\x0ftrailer_base_id\x18\f \x01(\x05R\rtrailerBaseId\x12\x19\n" +
	"\ball_ages\x18\x0e \x01(\bR\aallAges\x1a\xc6\x01\n" +
	"\x11SupportedLanguage\x12 \n" +
	"\telanguage\x18\x01 \x01(\x05:\x02-1R\telanguage\x124\n" +
	"\x13eadditionallanguage\x18\x05 \x01(\x05:\x02-1R\x13eadditionallanguage\x12\x1c\n" +
	"\tsupported\x18\x02 \x01(\bR\tsupported\x12\x1d\n" +
	"\n" +
	"full_audio\x18\x03 \x01(\bR\tfullAudio\x12\x1c\n" +
	"\tsubtitles\x18\x04 \x01(\bR\tsubtitles\x1a[\n" +
	"\vFreeWeekend\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\rR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\rR\aendTime\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\x1aq\n" +
	"\x04Link\x12C\n" +
	"\tlink_type\x18\x01 \x01(\x0e2\x0f.EStoreLinkType:\x15k_EStoreLinkType_NoneR\blinkType\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\"\x97\x02\n" +
	"\x0fStoreGameRating\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x16\n" +
	"\x06rating\x18\x02 \x01(\tR\x06rating\x12 \n" +
	"\vdescriptors\x18\x03 \x03(\tR\vdescriptors\x121\n" +
	"\x14interactive_elements\x18\x04 \x01(\tR\x13interactiveElements\x12!\n" +
	"\frequired_age\x18\n" +
	" \x01(\x05R\vrequiredAge\x12 \n" +
	"\fuse_age_gate\x18\v \x01(\bR\n" +
	"useAgeGate\x12\x1b\n" +
	"\timage_url\x18\x14 \x01(\tR\bimageUrl\x12!\n" +
	"\fimage_target\x18\x15 \x01(\tR\vimageTarget\"\xe7\x04\n" +
	"\x18StoreBrowseFilterFailure\x12c\n" +
	"\x0efilter_failure\x18\x01 \x01(\x0e2\x1a.EStoreBrowseFilterFailure: k_EStoreBrowseFilterFailure_NoneR\rfilterFailure\x12#\n" +
	"\ralready_owned\x18\x05 \x01(\bR\falreadyOwned\x12\x1f\n" +
	"\von_wishlist\x18\x06 \x01(\bR\n" +
	"onWishlist\x12\x18\n" +
	"\aignored\x18\a \x01(\bR\aignored\x121\n" +
	"\x15not_in_users_language\x18\n" +
	" \x01(\bR\x12notInUsersLanguage\x121\n" +
	"\x15not_on_users_platform\x18\v \x01(\bR\x12notOnUsersPlatform\x12-\n" +
	"\x13demo_for_owned_game\x18\f \x01(\bR\x10demoForOwnedGame\x12/\n" +
	"\x14dlc_for_unowned_game\x18\r \x01(\bR\x11dlcForUnownedGame\x12:\n" +
	"\x19nonpreferred_product_type\x18\x14 \x01(\bR\x17nonpreferredProductType\x12'\n" +
	"\x0fexcluded_tagids\x18\x15 \x03(\rR\x0eexcludedTagids\x12[\n" +
	"\x1eexcluded_content_descriptorids\x18\x1e \x03(\x0e2\x15.EContentDescriptorIDR\x1cexcludedContentDescriptorids\"M\n" +
	"\x1eCStoreBrowse_GetItems_Response\x12+\n" +
	"\vstore_items\x18\x01 \x03(\v2\n" +
	".StoreItemR\n" +
	"storeItems\"g\n" +
	"'CStoreBrowse_GetStoreCategories_Request\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12 \n" +
	"\telanguage\x18\x02 \x01(\x05:\x02-1R\telanguage\"\xdd\x03\n" +
	"(CStoreBrowse_GetStoreCategories_Response\x12R\n" +
	"\n" +
	"categories\x18\x01 \x03(\v22.CStoreBrowse_GetStoreCategories_Response.CategoryR\n" +
	"categories\x1a\xdc\x02\n" +
	"\bCategory\x12\x1e\n" +
	"\n" +
	"categoryid\x18\x01 \x01(\rR\n" +
	"categoryid\x12F\n" +
	"\x04type\x18\x02 \x01(\x0e2\x13.EStoreCategoryType:\x1dk_EStoreCategoryType_CategoryR\x04type\x12#\n" +
	"\rinternal_name\x18\x03 \x01(\tR\finternalName\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\x12\x1b\n" +
	"\timage_url\x18\x05 \x01(\tR\bimageUrl\x12$\n" +
	"\x0eshow_in_search\x18\x06 \x01(\bR\fshowInSearch\x12\x1a\n" +
	"\bcomputed\x18\a \x01(\bR\bcomputed\x12\x19\n" +
	"\bedit_url\x18\b \x01(\tR\aeditUrl\x12&\n" +
	"\x0fedit_sort_order\x18\t \x01(\rR\reditSortOrder\"Y\n" +
	"(CStoreBrowse_GetContentHubConfig_Request\x12-\n" +
	"\acontext\x18\x01 \x01(\v2\x13.StoreBrowseContextR\acontext\"\xad\x02\n" +
	")CStoreBrowse_GetContentHubConfig_Response\x12[\n" +
	"\n" +
	"hubconfigs\x18\x01 \x03(\v2;.CStoreBrowse_GetContentHubConfig_Response.ContentHubConfigR\n" +
	"hubconfigs\x1a\xa2\x01\n" +
	"\x10ContentHubConfig\x12$\n" +
	"\rhubcategoryid\x18\x01 \x01(\rR\rhubcategoryid\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06handle\x18\x03 \x01(\tR\x06handle\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\x12\x19\n" +
	"\burl_path\x18\x05 \x01(\tR\aurlPath\"l\n" +
	"\"CStoreBrowse_GetPriceStops_Request\x12!\n" +
	"\fcountry_code\x18\x01 \x01(\tR\vcountryCode\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\"\xfb\x01\n" +
	"#CStoreBrowse_GetPriceStops_Response\x12O\n" +
	"\vprice_stops\x18\x01 \x03(\v2..CStoreBrowse_GetPriceStops_Response.PriceStopR\n" +
	"priceStops\x12#\n" +
	"\rcurrency_code\x18\x02 \x01(\tR\fcurrencyCode\x1a^\n" +
	"\tPriceStop\x12)\n" +
	"\x10formatted_amount\x18\x01 \x01(\tR\x0fformattedAmount\x12&\n" +
	"\x0famount_in_cents\x18\x02 \x01(\x03R\ramountInCents\"\xd2\x01\n" +
	"\"CStoreBrowse_GetDLCForApps_Request\x12-\n" +
	"\acontext\x18\x01 \x01(\v2\x13.StoreBrowseContextR\acontext\x12=\n" +
	"\x11store_page_filter\x18\x02 \x01(\v2\x11.CStorePageFilterR\x0fstorePageFilter\x12$\n" +
	"\x06appids\x18\x03 \x03(\v2\f.StoreItemIDR\x06appids\x12\x18\n" +
	"\asteamid\x18\x04 \x01(\x04R\asteamid\"\xf2\x03\n" +
	"#CStoreBrowse_GetDLCForApps_Response\x12G\n" +
	"\bdlc_data\x18\x01 \x03(\v2,.CStoreBrowse_GetDLCForApps_Response.DLCDataR\adlcData\x12O\n" +
	"\bplaytime\x18\x02 \x03(\v23.CStoreBrowse_GetDLCForApps_Response.PlaytimeForAppR\bplaytime\x1a\xcb\x01\n" +
	"\aDLCData\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12 \n" +
	"\vparentappid\x18\x02 \x01(\rR\vparentappid\x12!\n" +
	"\frelease_date\x18\x03 \x01(\rR\vreleaseDate\x12\x1f\n" +
	"\vcoming_soon\x18\x04 \x01(\bR\n" +
	"comingSoon\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x03R\x05price\x12\x1a\n" +
	"\bdiscount\x18\x06 \x01(\rR\bdiscount\x12\x12\n" +
	"\x04free\x18\a \x01(\bR\x04free\x1ac\n" +
	"\x0ePlaytimeForApp\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1a\n" +
	"\bplaytime\x18\x02 \x01(\rR\bplaytime\x12\x1f\n" +
	"\vlast_played\x18\x03 \x01(\rR\n" +
	"lastPlayed\"\xdc\x01\n" +
	"&CStoreBrowse_GetDLCForAppsSolr_Request\x12-\n" +
	"\acontext\x18\x01 \x01(\v2\x13.StoreBrowseContextR\acontext\x12\x16\n" +
	"\x06appids\x18\x02 \x03(\rR\x06appids\x12\x16\n" +
	"\x06flavor\x18\x03 \x01(\tR\x06flavor\x12\x14\n" +
	"\x05count\x18\x04 \x01(\rR\x05count\x12=\n" +
	"\x11store_page_filter\x18\x05 \x01(\v2\x11.CStorePageFilterR\x0fstorePageFilter\"\xc5\x01\n" +
	"'CStoreBrowse_GetDLCForAppsSolr_Response\x12M\n" +
	"\tdlc_lists\x18\x01 \x03(\v20.CStoreBrowse_GetDLCForAppsSolr_Response.DLCListR\bdlcLists\x1aK\n" +
	"\aDLCList\x12!\n" +
	"\fparent_appid\x18\x01 \x01(\rR\vparentAppid\x12\x1d\n" +
	"\n" +
	"dlc_appids\x18\x02 \x03(\rR\tdlcAppids\"t\n" +
	"%CStoreBrowse_GetHardwareItems_Request\x12\x1c\n" +
	"\tpackageid\x18\x01 \x03(\rR\tpackageid\x12-\n" +
	"\acontext\x18\x02 \x01(\v2\x13.StoreBrowseContextR\acontext\"\xf2\x06\n" +
	"\x17CHardwarePackageDetails\x12\x1c\n" +
	"\tpackageid\x18\x01 \x01(\rR\tpackageid\x12/\n" +
	"\x13inventory_available\x18\x03 \x01(\bR\x12inventoryAvailable\x12.\n" +
	"\x13high_pending_orders\x18\x04 \x01(\bR\x11highPendingOrders\x12K\n" +
	"\"account_restricted_from_purchasing\x18\x05 \x01(\bR\x1faccountRestrictedFromPurchasing\x121\n" +
	"\x14requires_reservation\x18\x06 \x01(\bR\x13requiresReservation\x12@\n" +
	"\x1crtime_estimated_notification\x18\a \x01(\rR\x1artimeEstimatedNotification\x12+\n" +
	"\x11notificaton_token\x18\b \x01(\tR\x10notificatonToken\x12+\n" +
	"\x11reservation_state\x18\t \x01(\x05R\x10reservationState\x12\x18\n" +
	"\aexpired\x18\n" +
	" \x01(\bR\aexpired\x12!\n" +
	"\ftime_expires\x18\v \x01(\rR\vtimeExpires\x12#\n" +
	"\rtime_reserved\x18\f \x01(\rR\ftimeReserved\x126\n" +
	"\x17allow_quantity_purchase\x18\r \x01(\bR\x15allowQuantityPurchase\x129\n" +
	"\x19max_quantity_per_purchase\x18\x0e \x01(\x05R\x16maxQuantityPerPurchase\x129\n" +
	"\x19allow_purchase_in_country\x18\x0f \x01(\bR\x16allowPurchaseInCountry\x12V\n" +
	"(estimated_delivery_soonest_business_days\x18\x11 \x01(\rR$estimatedDeliverySoonestBusinessDays\x12T\n" +
	"'estimated_delivery_latest_business_days\x18\x12 \x01(\rR#estimatedDeliveryLatestBusinessDays\"\\\n" +
	"&CStoreBrowse_GetHardwareItems_Response\x122\n" +
	"\adetails\x18\x01 \x03(\v2\x18.CHardwarePackageDetailsR\adetails*\x80\x02\n" +
	"\x0eEStoreItemType\x12%\n" +
	"\x18k_EStoreItemType_Invalid\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x18\n" +
	"\x14k_EStoreItemType_App\x10\x00\x12\x1c\n" +
	"\x18k_EStoreItemType_Package\x10\x01\x12\x1b\n" +
	"\x17k_EStoreItemType_Bundle\x10\x02\x12\x18\n" +
	"\x14k_EStoreItemType_Mtx\x10\x03\x12\x18\n" +
	"\x14k_EStoreItemType_Tag\x10\x04\x12\x1c\n" +
	"\x18k_EStoreItemType_Creator\x10\x05\x12 \n" +
	"\x1ck_EStoreItemType_HubCategory\x10\x06*\xab\x03\n" +
	"\rEStoreAppType\x12\x18\n" +
	"\x14k_EStoreAppType_Game\x10\x00\x12\x18\n" +
	"\x14k_EStoreAppType_Demo\x10\x01\x12\x17\n" +
	"\x13k_EStoreAppType_Mod\x10\x02\x12\x19\n" +
	"\x15k_EStoreAppType_Movie\x10\x03\x12\x17\n" +
	"\x13k_EStoreAppType_DLC\x10\x04\x12\x19\n" +
	"\x15k_EStoreAppType_Guide\x10\x05\x12\x1c\n" +
	"\x18k_EStoreAppType_Software\x10\x06\x12\x19\n" +
	"\x15k_EStoreAppType_Video\x10\a\x12\x1a\n" +
	"\x16k_EStoreAppType_Series\x10\b\x12\x1b\n" +
	"\x17k_EStoreAppType_Episode\x10\t\x12\x1c\n" +
	"\x18k_EStoreAppType_Hardware\x10\n" +
	"\x12\x19\n" +
	"\x15k_EStoreAppType_Music\x10\v\x12\x18\n" +
	"\x14k_EStoreAppType_Beta\x10\f\x12\x18\n" +
	"\x14k_EStoreAppType_Tool\x10\r\x12\x1f\n" +
	"\x1bk_EStoreAppType_Advertising\x10\x0e*\x85\x03\n" +
	"\x10EUserReviewScore\x12\x1b\n" +
	"\x17k_EUserReviewScore_None\x10\x00\x12-\n" +
	")k_EUserReviewScore_OverwhelminglyNegative\x10\x01\x12#\n" +
	"\x1fk_EUserReviewScore_VeryNegative\x10\x02\x12\x1f\n" +
	"\x1bk_EUserReviewScore_Negative\x10\x03\x12%\n" +
	"!k_EUserReviewScore_MostlyNegative\x10\x04\x12\x1c\n" +
	"\x18k_EUserReviewScore_Mixed\x10\x05\x12%\n" +
	"!k_EUserReviewScore_MostlyPositive\x10\x06\x12\x1f\n" +
	"\x1bk_EUserReviewScore_Positive\x10\a\x12#\n" +
	"\x1fk_EUserReviewScore_VeryPositive\x10\b\x12-\n" +
	")k_EUserReviewScore_OverwhelminglyPositive\x10\t*\xf7\x01\n" +
	"\x10ETrailerCategory\x12\x1e\n" +
	"\x1ak_ETrailerCategory_Invalid\x10\x00\x12\x1f\n" +
	"\x1bk_ETrailerCategory_Gameplay\x10\x01\x12\x1d\n" +
	"\x19k_ETrailerCategory_Teaser\x10\x02\x12 \n" +
	"\x1ck_ETrailerCategory_Cinematic\x10\x03\x12\x1d\n" +
	"\x19k_ETrailerCategory_Update\x10\x04\x12 \n" +
	"\x1ck_ETrailerCategory_Accolades\x10\x05\x12 \n" +
	"\x1ck_ETrailerCategory_Interview\x10\x06*\xa7\x02\n" +
	"\x19EStoreBrowseFilterFailure\x12$\n" +
	" k_EStoreBrowseFilterFailure_None\x10\x00\x12)\n" +
	"%k_EStoreBrowseFilterFailure_Redundant\x10\n" +
	"\x12,\n" +
	"(k_EStoreBrowseFilterFailure_NotPreferred\x10\x14\x12-\n" +
	")k_EStoreBrowseFilterFailure_NotInterested\x10\x1e\x12/\n" +
	"+k_EStoreBrowseFilterFailure_UnwantedContent\x10(\x12+\n" +
	"'k_EStoreBrowseFilterFailure_Unavailable\x102*\xeb\x05\n" +
	"\x0eEStoreLinkType\x12\x19\n" +
	"\x15k_EStoreLinkType_None\x10\x00\x12\x1c\n" +
	"\x18k_EStoreLinkType_YouTube\x10\x01\x12\x1d\n" +
	"\x19k_EStoreLinkType_Facebook\x10\x02\x12\x1c\n" +
	"\x18k_EStoreLinkType_Twitter\x10\x03\x12\x1b\n" +
	"\x17k_EStoreLinkType_Twitch\x10\x04\x12\x1c\n" +
	"\x18k_EStoreLinkType_Discord\x10\x05\x12\x17\n" +
	"\x13k_EStoreLinkType_QQ\x10\x06\x12\x17\n" +
	"\x13k_EStoreLinkType_VK\x10\a\x12\x1d\n" +
	"\x19k_EStoreLinkType_Bilibili\x10\b\x12\x1a\n" +
	"\x16k_EStoreLinkType_Weibo\x10\t\x12\x1b\n" +
	"\x17k_EStoreLinkType_Reddit\x10\n" +
	"\x12\x1e\n" +
	"\x1ak_EStoreLinkType_Instagram\x10\v\x12\x1b\n" +
	"\x17k_EStoreLinkType_Tumblr\x10\f\x12\x1a\n" +
	"\x16k_EStoreLinkType_Tieba\x10\r\x12\x1b\n" +
	"\x17k_EStoreLinkType_Tiktok\x10\x0e\x12\x1d\n" +
	"\x19k_EStoreLinkType_Telegram\x10\x0f\x12\x1d\n" +
	"\x19k_EStoreLinkType_LinkedIn\x10\x10\x12\x1b\n" +
	"\x17k_EStoreLinkType_WeChat\x10\x11\x12\x1b\n" +
	"\x17k_EStoreLinkType_QQLink\x10\x12\x12\x1b\n" +
	"\x17k_EStoreLinkType_Douyin\x10\x13\x12\x1c\n" +
	"\x18k_EStoreLinkType_Bluesky\x10\x14\x12\x1d\n" +
	"\x19k_EStoreLinkType_Mastodon\x10\x15\x12\x1c\n" +
	"\x18k_EStoreLinkType_Threads\x10\x16\x12\x1e\n" +
	"\x1ak_EStoreLinkType_QQChannel\x10\x17\x12\x18\n" +
	"\x14k_EStoreLinkType_MAX\x10\x18*\xf4\x01\n" +
	"\x12EStoreCategoryType\x12!\n" +
	"\x1dk_EStoreCategoryType_Category\x10\x00\x12)\n" +
	"%k_EStoreCategoryType_SupportedPlayers\x10\x01\x12 \n" +
	"\x1ck_EStoreCategoryType_Feature\x10\x02\x12*\n" +
	"&k_EStoreCategoryType_ControllerSupport\x10\x03\x12$\n" +
	" k_EStoreCategoryType_CloudGaming\x10\x04\x12\x1c\n" +
	"\x18k_EStoreCategoryType_MAX\x10\x052\xb8\x05\n" +
	"\vStoreBrowse\x12K\n" +
	"\bGetItems\x12\x1e.CStoreBrowse_GetItems_Request\x1a\x1f.CStoreBrowse_GetItems_Response\x12i\n" +
	"\x12GetStoreCategories\x12(.CStoreBrowse_GetStoreCategories_Request\x1a).CStoreBrowse_GetStoreCategories_Response\x12l\n" +
	"\x13GetContentHubConfig\x12).CStoreBrowse_GetContentHubConfig_Request\x1a*.CStoreBrowse_GetContentHubConfig_Response\x12Z\n" +
	"\rGetPriceStops\x12#.CStoreBrowse_GetPriceStops_Request\x1a$.CStoreBrowse_GetPriceStops_Response\x12Z\n" +
	"\rGetDLCForApps\x12#.CStoreBrowse_GetDLCForApps_Request\x1a$.CStoreBrowse_GetDLCForApps_Response\x12f\n" +
	"\x11GetDLCForAppsSolr\x12'.CStoreBrowse_GetDLCForAppsSolr_Request\x1a(.CStoreBrowse_GetDLCForAppsSolr_Response\x12c\n" +
	"\x10GetHardwareItems\x12&.CStoreBrowse_GetHardwareItems_Request\x1a'.CStoreBrowse_GetHardwareItems_ResponseB\x03\x80\x01\x01"

var (
	file_steammessages_storebrowse_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_storebrowse_steamclient_proto_rawDescData []byte
)

func file_steammessages_storebrowse_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_storebrowse_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_storebrowse_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_storebrowse_steamclient_proto_rawDesc), len(file_steammessages_storebrowse_steamclient_proto_rawDesc)))
	})
	return file_steammessages_storebrowse_steamclient_proto_rawDescData
}

var file_steammessages_storebrowse_steamclient_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_steammessages_storebrowse_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_steammessages_storebrowse_steamclient_proto_goTypes = []any{
	(EStoreItemType)(0),                                                // 0: EStoreItemType
	(EStoreAppType)(0),                                                 // 1: EStoreAppType
	(EUserReviewScore)(0),                                              // 2: EUserReviewScore
	(ETrailerCategory)(0),                                              // 3: ETrailerCategory
	(EStoreBrowseFilterFailure)(0),                                     // 4: EStoreBrowseFilterFailure
	(EStoreLinkType)(0),                                                // 5: EStoreLinkType
	(EStoreCategoryType)(0),                                            // 6: EStoreCategoryType
	(*StoreItemID)(nil),                                                // 7: StoreItemID
	(*StoreBrowseContext)(nil),                                         // 8: StoreBrowseContext
	(*StoreBrowseItemDataRequest)(nil),                                 // 9: StoreBrowseItemDataRequest
	(*CStoreBrowse_GetItems_Request)(nil),                              // 10: CStoreBrowse_GetItems_Request
	(*StoreItem)(nil),                                                  // 11: StoreItem
	(*StoreGameRating)(nil),                                            // 12: StoreGameRating
	(*StoreBrowseFilterFailure)(nil),                                   // 13: StoreBrowseFilterFailure
	(*CStoreBrowse_GetItems_Response)(nil),                             // 14: CStoreBrowse_GetItems_Response
	(*CStoreBrowse_GetStoreCategories_Request)(nil),                    // 15: CStoreBrowse_GetStoreCategories_Request
	(*CStoreBrowse_GetStoreCategories_Response)(nil),                   // 16: CStoreBrowse_GetStoreCategories_Response
	(*CStoreBrowse_GetContentHubConfig_Request)(nil),                   // 17: CStoreBrowse_GetContentHubConfig_Request
	(*CStoreBrowse_GetContentHubConfig_Response)(nil),                  // 18: CStoreBrowse_GetContentHubConfig_Response
	(*CStoreBrowse_GetPriceStops_Request)(nil),                         // 19: CStoreBrowse_GetPriceStops_Request
	(*CStoreBrowse_GetPriceStops_Response)(nil),                        // 20: CStoreBrowse_GetPriceStops_Response
	(*CStoreBrowse_GetDLCForApps_Request)(nil),                         // 21: CStoreBrowse_GetDLCForApps_Request
	(*CStoreBrowse_GetDLCForApps_Response)(nil),                        // 22: CStoreBrowse_GetDLCForApps_Response
	(*CStoreBrowse_GetDLCForAppsSolr_Request)(nil),                     // 23: CStoreBrowse_GetDLCForAppsSolr_Request
	(*CStoreBrowse_GetDLCForAppsSolr_Response)(nil),                    // 24: CStoreBrowse_GetDLCForAppsSolr_Response
	(*CStoreBrowse_GetHardwareItems_Request)(nil),                      // 25: CStoreBrowse_GetHardwareItems_Request
	(*CHardwarePackageDetails)(nil),                                    // 26: CHardwarePackageDetails
	(*CStoreBrowse_GetHardwareItems_Response)(nil),                     // 27: CStoreBrowse_GetHardwareItems_Response
	(*StoreItem_RelatedItems)(nil),                                     // 28: StoreItem.RelatedItems
	(*StoreItem_IncludedItems)(nil),                                    // 29: StoreItem.IncludedItems
	(*StoreItem_Categories)(nil),                                       // 30: StoreItem.Categories
	(*StoreItem_Reviews)(nil),                                          // 31: StoreItem.Reviews
	(*StoreItem_BasicInfo)(nil),                                        // 32: StoreItem.BasicInfo
	(*StoreItem_Tag)(nil),                                              // 33: StoreItem.Tag
	(*StoreItem_Assets)(nil),                                           // 34: StoreItem.Assets
	(*StoreItem_ReleaseInfo)(nil),                                      // 35: StoreItem.ReleaseInfo
	(*StoreItem_Platforms)(nil),                                        // 36: StoreItem.Platforms
	(*StoreItem_PurchaseOption)(nil),                                   // 37: StoreItem.PurchaseOption
	(*StoreItem_Screenshots)(nil),                                      // 38: StoreItem.Screenshots
	(*StoreItem_Trailers)(nil),                                         // 39: StoreItem.Trailers
	(*StoreItem_SupportedLanguage)(nil),                                // 40: StoreItem.SupportedLanguage
	(*StoreItem_FreeWeekend)(nil),                                      // 41: StoreItem.FreeWeekend
	(*StoreItem_Link)(nil),                                             // 42: StoreItem.Link
	(*StoreItem_Reviews_StoreReviewSummary)(nil),                       // 43: StoreItem.Reviews.StoreReviewSummary
	(*StoreItem_BasicInfo_CreatorHomeLink)(nil),                        // 44: StoreItem.BasicInfo.CreatorHomeLink
	(*StoreItem_Platforms_VRSupport)(nil),                              // 45: StoreItem.Platforms.VRSupport
	(*StoreItem_PurchaseOption_Discount)(nil),                          // 46: StoreItem.PurchaseOption.Discount
	(*StoreItem_PurchaseOption_RecurrenceInfo)(nil),                    // 47: StoreItem.PurchaseOption.RecurrenceInfo
	(*StoreItem_Screenshots_Screenshot)(nil),                           // 48: StoreItem.Screenshots.Screenshot
	(*StoreItem_Trailers_VideoSource)(nil),                             // 49: StoreItem.Trailers.VideoSource
	(*StoreItem_Trailers_Trailer)(nil),                                 // 50: StoreItem.Trailers.Trailer
	(*CStoreBrowse_GetStoreCategories_Response_Category)(nil),          // 51: CStoreBrowse_GetStoreCategories_Response.Category
	(*CStoreBrowse_GetContentHubConfig_Response_ContentHubConfig)(nil), // 52: CStoreBrowse_GetContentHubConfig_Response.ContentHubConfig
	(*CStoreBrowse_GetPriceStops_Response_PriceStop)(nil),              // 53: CStoreBrowse_GetPriceStops_Response.PriceStop
	(*CStoreBrowse_GetDLCForApps_Response_DLCData)(nil),                // 54: CStoreBrowse_GetDLCForApps_Response.DLCData
	(*CStoreBrowse_GetDLCForApps_Response_PlaytimeForApp)(nil),         // 55: CStoreBrowse_GetDLCForApps_Response.PlaytimeForApp
	(*CStoreBrowse_GetDLCForAppsSolr_Response_DLCList)(nil),            // 56: CStoreBrowse_GetDLCForAppsSolr_Response.DLCList
	(EContentDescriptorID)(0),                                          // 57: EContentDescriptorID
	(*CStorePageFilter)(nil),                                           // 58: CStorePageFilter
	(ESteamDeckCompatibilityCategory)(0),                               // 59: ESteamDeckCompatibilityCategory
	(ESteamOSCompatibilityCategory)(0),                                 // 60: ESteamOSCompatibilityCategory
}
var file_steammessages_storebrowse_steamclient_proto_depIdxs = []int32{
	9,  // 0: StoreBrowseItemDataRequest.included_item_data_request:type_name -> StoreBrowseItemDataRequest
	7,  // 1: CStoreBrowse_GetItems_Request.ids:type_name -> StoreItemID
	8,  // 2: CStoreBrowse_GetItems_Request.context:type_name -> StoreBrowseContext
	9,  // 3: CStoreBrowse_GetItems_Request.data_request:type_name -> StoreBrowseItemDataRequest
	0,  // 4: StoreItem.item_type:type_name -> EStoreItemType
	1,  // 5: StoreItem.type:type_name -> EStoreAppType
	1,  // 6: StoreItem.included_types:type_name -> EStoreAppType
	28, // 7: StoreItem.related_items:type_name -> StoreItem.RelatedItems
	29, // 8: StoreItem.included_items:type_name -> StoreItem.IncludedItems
	57, // 9: StoreItem.content_descriptorids:type_name -> EContentDescriptorID
	30, // 10: StoreItem.categories:type_name -> StoreItem.Categories
	31, // 11: StoreItem.reviews:type_name -> StoreItem.Reviews
	32, // 12: StoreItem.basic_info:type_name -> StoreItem.BasicInfo
	33, // 13: StoreItem.tags:type_name -> StoreItem.Tag
	34, // 14: StoreItem.assets:type_name -> StoreItem.Assets
	35, // 15: StoreItem.release:type_name -> StoreItem.ReleaseInfo
	36, // 16: StoreItem.platforms:type_name -> StoreItem.Platforms
	12, // 17: StoreItem.game_rating:type_name -> StoreGameRating
	37, // 18: StoreItem.best_purchase_option:type_name -> StoreItem.PurchaseOption
	37, // 19: StoreItem.purchase_options:type_name -> StoreItem.PurchaseOption
	37, // 20: StoreItem.accessories:type_name -> StoreItem.PurchaseOption
	37, // 21: StoreItem.self_purchase_option:type_name -> StoreItem.PurchaseOption
	38, // 22: StoreItem.screenshots:type_name -> StoreItem.Screenshots
	39, // 23: StoreItem.trailers:type_name -> StoreItem.Trailers
	40, // 24: StoreItem.supported_languages:type_name -> StoreItem.SupportedLanguage
	41, // 25: StoreItem.free_weekend:type_name -> StoreItem.FreeWeekend
	34, // 26: StoreItem.assets_without_overrides:type_name -> StoreItem.Assets
	13, // 27: StoreItem.user_filter_failure:type_name -> StoreBrowseFilterFailure
	42, // 28: StoreItem.links:type_name -> StoreItem.Link
	4,  // 29: StoreBrowseFilterFailure.filter_failure:type_name -> EStoreBrowseFilterFailure
	57, // 30: StoreBrowseFilterFailure.excluded_content_descriptorids:type_name -> EContentDescriptorID
	11, // 31: CStoreBrowse_GetItems_Response.store_items:type_name -> StoreItem
	51, // 32: CStoreBrowse_GetStoreCategories_Response.categories:type_name -> CStoreBrowse_GetStoreCategories_Response.Category
	8,  // 33: CStoreBrowse_GetContentHubConfig_Request.context:type_name -> StoreBrowseContext
	52, // 34: CStoreBrowse_GetContentHubConfig_Response.hubconfigs:type_name -> CStoreBrowse_GetContentHubConfig_Response.ContentHubConfig
	53, // 35: CStoreBrowse_GetPriceStops_Response.price_stops:type_name -> CStoreBrowse_GetPriceStops_Response.PriceStop
	8,  // 36: CStoreBrowse_GetDLCForApps_Request.context:type_name -> StoreBrowseContext
	58, // 37: CStoreBrowse_GetDLCForApps_Request.store_page_filter:type_name -> CStorePageFilter
	7,  // 38: CStoreBrowse_GetDLCForApps_Request.appids:type_name -> StoreItemID
	54, // 39: CStoreBrowse_GetDLCForApps_Response.dlc_data:type_name -> CStoreBrowse_GetDLCForApps_Response.DLCData
	55, // 40: CStoreBrowse_GetDLCForApps_Response.playtime:type_name -> CStoreBrowse_GetDLCForApps_Response.PlaytimeForApp
	8,  // 41: CStoreBrowse_GetDLCForAppsSolr_Request.context:type_name -> StoreBrowseContext
	58, // 42: CStoreBrowse_GetDLCForAppsSolr_Request.store_page_filter:type_name -> CStorePageFilter
	56, // 43: CStoreBrowse_GetDLCForAppsSolr_Response.dlc_lists:type_name -> CStoreBrowse_GetDLCForAppsSolr_Response.DLCList
	8,  // 44: CStoreBrowse_GetHardwareItems_Request.context:type_name -> StoreBrowseContext
	26, // 45: CStoreBrowse_GetHardwareItems_Response.details:type_name -> CHardwarePackageDetails
	11, // 46: StoreItem.IncludedItems.included_apps:type_name -> StoreItem
	11, // 47: StoreItem.IncludedItems.included_packages:type_name -> StoreItem
	43, // 48: StoreItem.Reviews.summary_filtered:type_name -> StoreItem.Reviews.StoreReviewSummary
	43, // 49: StoreItem.Reviews.summary_unfiltered:type_name -> StoreItem.Reviews.StoreReviewSummary
	44, // 50: StoreItem.BasicInfo.publishers:type_name -> StoreItem.BasicInfo.CreatorHomeLink
	44, // 51: StoreItem.BasicInfo.developers:type_name -> StoreItem.BasicInfo.CreatorHomeLink
	44, // 52: StoreItem.BasicInfo.franchises:type_name -> StoreItem.BasicInfo.CreatorHomeLink
	45, // 53: StoreItem.Platforms.vr_support:type_name -> StoreItem.Platforms.VRSupport
	59, // 54: StoreItem.Platforms.steam_deck_compat_category:type_name -> ESteamDeckCompatibilityCategory
	60, // 55: StoreItem.Platforms.steam_os_compat_category:type_name -> ESteamOSCompatibilityCategory
	46, // 56: StoreItem.PurchaseOption.active_discounts:type_name -> StoreItem.PurchaseOption.Discount
	47, // 57: StoreItem.PurchaseOption.recurrence_info:type_name -> StoreItem.PurchaseOption.RecurrenceInfo
	48, // 58: StoreItem.Screenshots.all_ages_screenshots:type_name -> StoreItem.Screenshots.Screenshot
	48, // 59: StoreItem.Screenshots.mature_content_screenshots:type_name -> StoreItem.Screenshots.Screenshot
	50, // 60: StoreItem.Trailers.highlights:type_name -> StoreItem.Trailers.Trailer
	50, // 61: StoreItem.Trailers.other_trailers:type_name -> StoreItem.Trailers.Trailer
	5,  // 62: StoreItem.Link.link_type:type_name -> EStoreLinkType
	2,  // 63: StoreItem.Reviews.StoreReviewSummary.review_score:type_name -> EUserReviewScore
	3,  // 64: StoreItem.Trailers.Trailer.trailer_category:type_name -> ETrailerCategory
	49, // 65: StoreItem.Trailers.Trailer.trailer_480p:type_name -> StoreItem.Trailers.VideoSource
	49, // 66: StoreItem.Trailers.Trailer.trailer_max:type_name -> StoreItem.Trailers.VideoSource
	49, // 67: StoreItem.Trailers.Trailer.microtrailer:type_name -> StoreItem.Trailers.VideoSource
	6,  // 68: CStoreBrowse_GetStoreCategories_Response.Category.type:type_name -> EStoreCategoryType
	10, // 69: StoreBrowse.GetItems:input_type -> CStoreBrowse_GetItems_Request
	15, // 70: StoreBrowse.GetStoreCategories:input_type -> CStoreBrowse_GetStoreCategories_Request
	17, // 71: StoreBrowse.GetContentHubConfig:input_type -> CStoreBrowse_GetContentHubConfig_Request
	19, // 72: StoreBrowse.GetPriceStops:input_type -> CStoreBrowse_GetPriceStops_Request
	21, // 73: StoreBrowse.GetDLCForApps:input_type -> CStoreBrowse_GetDLCForApps_Request
	23, // 74: StoreBrowse.GetDLCForAppsSolr:input_type -> CStoreBrowse_GetDLCForAppsSolr_Request
	25, // 75: StoreBrowse.GetHardwareItems:input_type -> CStoreBrowse_GetHardwareItems_Request
	14, // 76: StoreBrowse.GetItems:output_type -> CStoreBrowse_GetItems_Response
	16, // 77: StoreBrowse.GetStoreCategories:output_type -> CStoreBrowse_GetStoreCategories_Response
	18, // 78: StoreBrowse.GetContentHubConfig:output_type -> CStoreBrowse_GetContentHubConfig_Response
	20, // 79: StoreBrowse.GetPriceStops:output_type -> CStoreBrowse_GetPriceStops_Response
	22, // 80: StoreBrowse.GetDLCForApps:output_type -> CStoreBrowse_GetDLCForApps_Response
	24, // 81: StoreBrowse.GetDLCForAppsSolr:output_type -> CStoreBrowse_GetDLCForAppsSolr_Response
	27, // 82: StoreBrowse.GetHardwareItems:output_type -> CStoreBrowse_GetHardwareItems_Response
	76, // [76:83] is the sub-list for method output_type
	69, // [69:76] is the sub-list for method input_type
	69, // [69:69] is the sub-list for extension type_name
	69, // [69:69] is the sub-list for extension extendee
	0,  // [0:69] is the sub-list for field type_name
}

func init() { file_steammessages_storebrowse_steamclient_proto_init() }
func file_steammessages_storebrowse_steamclient_proto_init() {
	if File_steammessages_storebrowse_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	file_enums_productinfo_proto_init()
	file_enums_proto_init()
	file_contenthubs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_storebrowse_steamclient_proto_rawDesc), len(file_steammessages_storebrowse_steamclient_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_storebrowse_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_storebrowse_steamclient_proto_depIdxs,
		EnumInfos:         file_steammessages_storebrowse_steamclient_proto_enumTypes,
		MessageInfos:      file_steammessages_storebrowse_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_storebrowse_steamclient_proto = out.File
	file_steammessages_storebrowse_steamclient_proto_goTypes = nil
	file_steammessages_storebrowse_steamclient_proto_depIdxs = nil
}
