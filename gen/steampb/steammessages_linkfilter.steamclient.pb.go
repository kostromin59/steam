// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_linkfilter.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CCommunity_GetLinkFilterHashPrefixes_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HitType       *uint32                `protobuf:"varint,1,opt,name=hit_type,json=hitType" json:"hit_type,omitempty"`
	Count         *uint32                `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Start         *uint64                `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Request) Reset() {
	*x = CCommunity_GetLinkFilterHashPrefixes_Request{}
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetLinkFilterHashPrefixes_Request) ProtoMessage() {}

func (x *CCommunity_GetLinkFilterHashPrefixes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetLinkFilterHashPrefixes_Request.ProtoReflect.Descriptor instead.
func (*CCommunity_GetLinkFilterHashPrefixes_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_linkfilter_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Request) GetHitType() uint32 {
	if x != nil && x.HitType != nil {
		return *x.HitType
	}
	return 0
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Request) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Request) GetStart() uint64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

type CCommunity_GetLinkFilterHashPrefixes_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HashPrefixes  []uint32               `protobuf:"varint,1,rep,name=hash_prefixes,json=hashPrefixes" json:"hash_prefixes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Response) Reset() {
	*x = CCommunity_GetLinkFilterHashPrefixes_Response{}
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetLinkFilterHashPrefixes_Response) ProtoMessage() {}

func (x *CCommunity_GetLinkFilterHashPrefixes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetLinkFilterHashPrefixes_Response.ProtoReflect.Descriptor instead.
func (*CCommunity_GetLinkFilterHashPrefixes_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_linkfilter_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CCommunity_GetLinkFilterHashPrefixes_Response) GetHashPrefixes() []uint32 {
	if x != nil {
		return x.HashPrefixes
	}
	return nil
}

type CCommunity_GetLinkFilterHashes_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HitType       *uint32                `protobuf:"varint,1,opt,name=hit_type,json=hitType" json:"hit_type,omitempty"`
	Count         *uint32                `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Start         *uint64                `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCommunity_GetLinkFilterHashes_Request) Reset() {
	*x = CCommunity_GetLinkFilterHashes_Request{}
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCommunity_GetLinkFilterHashes_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetLinkFilterHashes_Request) ProtoMessage() {}

func (x *CCommunity_GetLinkFilterHashes_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetLinkFilterHashes_Request.ProtoReflect.Descriptor instead.
func (*CCommunity_GetLinkFilterHashes_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_linkfilter_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CCommunity_GetLinkFilterHashes_Request) GetHitType() uint32 {
	if x != nil && x.HitType != nil {
		return *x.HitType
	}
	return 0
}

func (x *CCommunity_GetLinkFilterHashes_Request) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CCommunity_GetLinkFilterHashes_Request) GetStart() uint64 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

type CCommunity_GetLinkFilterHashes_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hashes        [][]byte               `protobuf:"bytes,1,rep,name=hashes" json:"hashes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCommunity_GetLinkFilterHashes_Response) Reset() {
	*x = CCommunity_GetLinkFilterHashes_Response{}
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCommunity_GetLinkFilterHashes_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetLinkFilterHashes_Response) ProtoMessage() {}

func (x *CCommunity_GetLinkFilterHashes_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetLinkFilterHashes_Response.ProtoReflect.Descriptor instead.
func (*CCommunity_GetLinkFilterHashes_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_linkfilter_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CCommunity_GetLinkFilterHashes_Response) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

type CCommunity_GetLinkFilterListVersion_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HitType       *uint32                `protobuf:"varint,1,opt,name=hit_type,json=hitType" json:"hit_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCommunity_GetLinkFilterListVersion_Request) Reset() {
	*x = CCommunity_GetLinkFilterListVersion_Request{}
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCommunity_GetLinkFilterListVersion_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetLinkFilterListVersion_Request) ProtoMessage() {}

func (x *CCommunity_GetLinkFilterListVersion_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetLinkFilterListVersion_Request.ProtoReflect.Descriptor instead.
func (*CCommunity_GetLinkFilterListVersion_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_linkfilter_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CCommunity_GetLinkFilterListVersion_Request) GetHitType() uint32 {
	if x != nil && x.HitType != nil {
		return *x.HitType
	}
	return 0
}

type CCommunity_GetLinkFilterListVersion_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *string                `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Count         *uint64                `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCommunity_GetLinkFilterListVersion_Response) Reset() {
	*x = CCommunity_GetLinkFilterListVersion_Response{}
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCommunity_GetLinkFilterListVersion_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCommunity_GetLinkFilterListVersion_Response) ProtoMessage() {}

func (x *CCommunity_GetLinkFilterListVersion_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_linkfilter_steamclient_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCommunity_GetLinkFilterListVersion_Response.ProtoReflect.Descriptor instead.
func (*CCommunity_GetLinkFilterListVersion_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_linkfilter_steamclient_proto_rawDescGZIP(), []int{5}
}

func (x *CCommunity_GetLinkFilterListVersion_Response) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *CCommunity_GetLinkFilterListVersion_Response) GetCount() uint64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

var File_steammessages_linkfilter_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_linkfilter_steamclient_proto_rawDesc = "" +
	"\n" +
	"*steammessages_linkfilter.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\"u\n" +
	",CCommunity_GetLinkFilterHashPrefixes_Request\x12\x19\n" +
	"\bhit_type\x18\x01 \x01(\rR\ahitType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\x12\x14\n" +
	"\x05start\x18\x03 \x01(\x04R\x05start\"T\n" +
	"-CCommunity_GetLinkFilterHashPrefixes_Response\x12#\n" +
	"\rhash_prefixes\x18\x01 \x03(\rR\fhashPrefixes\"o\n" +
	"&CCommunity_GetLinkFilterHashes_Request\x12\x19\n" +
	"\bhit_type\x18\x01 \x01(\rR\ahitType\x12\x14\n" +
	"\x05count\x18\x02 \x01(\rR\x05count\x12\x14\n" +
	"\x05start\x18\x03 \x01(\x04R\x05start\"A\n" +
	"'CCommunity_GetLinkFilterHashes_Response\x12\x16\n" +
	"\x06hashes\x18\x01 \x03(\fR\x06hashes\"H\n" +
	"+CCommunity_GetLinkFilterListVersion_Request\x12\x19\n" +
	"\bhit_type\x18\x01 \x01(\rR\ahitType\"^\n" +
	",CCommunity_GetLinkFilterListVersion_Response\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05count2\xf4\x02\n" +
	"\x13CommunityLinkFilter\x12z\n" +
	"\x19GetLinkFilterHashPrefixes\x12-.CCommunity_GetLinkFilterHashPrefixes_Request\x1a..CCommunity_GetLinkFilterHashPrefixes_Response\x12h\n" +
	"\x13GetLinkFilterHashes\x12'.CCommunity_GetLinkFilterHashes_Request\x1a(.CCommunity_GetLinkFilterHashes_Response\x12w\n" +
	"\x18GetLinkFilterListVersion\x12,.CCommunity_GetLinkFilterListVersion_Request\x1a-.CCommunity_GetLinkFilterListVersion_ResponseB\x03\x80\x01\x01"

var (
	file_steammessages_linkfilter_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_linkfilter_steamclient_proto_rawDescData []byte
)

func file_steammessages_linkfilter_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_linkfilter_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_linkfilter_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_linkfilter_steamclient_proto_rawDesc), len(file_steammessages_linkfilter_steamclient_proto_rawDesc)))
	})
	return file_steammessages_linkfilter_steamclient_proto_rawDescData
}

var file_steammessages_linkfilter_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_steammessages_linkfilter_steamclient_proto_goTypes = []any{
	(*CCommunity_GetLinkFilterHashPrefixes_Request)(nil),  // 0: CCommunity_GetLinkFilterHashPrefixes_Request
	(*CCommunity_GetLinkFilterHashPrefixes_Response)(nil), // 1: CCommunity_GetLinkFilterHashPrefixes_Response
	(*CCommunity_GetLinkFilterHashes_Request)(nil),        // 2: CCommunity_GetLinkFilterHashes_Request
	(*CCommunity_GetLinkFilterHashes_Response)(nil),       // 3: CCommunity_GetLinkFilterHashes_Response
	(*CCommunity_GetLinkFilterListVersion_Request)(nil),   // 4: CCommunity_GetLinkFilterListVersion_Request
	(*CCommunity_GetLinkFilterListVersion_Response)(nil),  // 5: CCommunity_GetLinkFilterListVersion_Response
}
var file_steammessages_linkfilter_steamclient_proto_depIdxs = []int32{
	0, // 0: CommunityLinkFilter.GetLinkFilterHashPrefixes:input_type -> CCommunity_GetLinkFilterHashPrefixes_Request
	2, // 1: CommunityLinkFilter.GetLinkFilterHashes:input_type -> CCommunity_GetLinkFilterHashes_Request
	4, // 2: CommunityLinkFilter.GetLinkFilterListVersion:input_type -> CCommunity_GetLinkFilterListVersion_Request
	1, // 3: CommunityLinkFilter.GetLinkFilterHashPrefixes:output_type -> CCommunity_GetLinkFilterHashPrefixes_Response
	3, // 4: CommunityLinkFilter.GetLinkFilterHashes:output_type -> CCommunity_GetLinkFilterHashes_Response
	5, // 5: CommunityLinkFilter.GetLinkFilterListVersion:output_type -> CCommunity_GetLinkFilterListVersion_Response
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_steammessages_linkfilter_steamclient_proto_init() }
func file_steammessages_linkfilter_steamclient_proto_init() {
	if File_steammessages_linkfilter_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_linkfilter_steamclient_proto_rawDesc), len(file_steammessages_linkfilter_steamclient_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_linkfilter_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_linkfilter_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_linkfilter_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_linkfilter_steamclient_proto = out.File
	file_steammessages_linkfilter_steamclient_proto_goTypes = nil
	file_steammessages_linkfilter_steamclient_proto_depIdxs = nil
}
