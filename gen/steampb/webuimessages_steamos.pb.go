// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: webuimessages_steamos.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgFactoryResetState struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	IsRunning                *bool                  `protobuf:"varint,1,opt,name=is_running,json=isRunning" json:"is_running,omitempty"`
	Progress                 *int32                 `protobuf:"varint,2,opt,name=progress" json:"progress,omitempty"`
	IsRestartPending         *bool                  `protobuf:"varint,3,opt,name=is_restart_pending,json=isRestartPending" json:"is_restart_pending,omitempty"`
	RtimeEstimatedCompletion *uint32                `protobuf:"fixed32,4,opt,name=rtime_estimated_completion,json=rtimeEstimatedCompletion" json:"rtime_estimated_completion,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CMsgFactoryResetState) Reset() {
	*x = CMsgFactoryResetState{}
	mi := &file_webuimessages_steamos_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgFactoryResetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgFactoryResetState) ProtoMessage() {}

func (x *CMsgFactoryResetState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgFactoryResetState.ProtoReflect.Descriptor instead.
func (*CMsgFactoryResetState) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgFactoryResetState) GetIsRunning() bool {
	if x != nil && x.IsRunning != nil {
		return *x.IsRunning
	}
	return false
}

func (x *CMsgFactoryResetState) GetProgress() int32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *CMsgFactoryResetState) GetIsRestartPending() bool {
	if x != nil && x.IsRestartPending != nil {
		return *x.IsRestartPending
	}
	return false
}

func (x *CMsgFactoryResetState) GetRtimeEstimatedCompletion() uint32 {
	if x != nil && x.RtimeEstimatedCompletion != nil {
		return *x.RtimeEstimatedCompletion
	}
	return 0
}

type CSteamOSManagerState struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	IsServiceAvailable                   *bool                  `protobuf:"varint,1,opt,name=is_service_available,json=isServiceAvailable" json:"is_service_available,omitempty"`
	OsVersion                            *string                `protobuf:"bytes,2,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	IsMandatoryUpdateAvailable           *bool                  `protobuf:"varint,3,opt,name=is_mandatory_update_available,json=isMandatoryUpdateAvailable" json:"is_mandatory_update_available,omitempty"`
	StartupMovieVariant                  *EStartupMovieVariant  `protobuf:"varint,4,opt,name=startup_movie_variant,json=startupMovieVariant,enum=EStartupMovieVariant,def=0" json:"startup_movie_variant,omitempty"`
	IsStatusLedControlAvailable          *bool                  `protobuf:"varint,5,opt,name=is_status_led_control_available,json=isStatusLedControlAvailable" json:"is_status_led_control_available,omitempty"`
	FactoryResetState                    *CMsgFactoryResetState `protobuf:"bytes,6,opt,name=factory_reset_state,json=factoryResetState" json:"factory_reset_state,omitempty"`
	IsTdpLimitAvailable                  *bool                  `protobuf:"varint,7,opt,name=is_tdp_limit_available,json=isTdpLimitAvailable" json:"is_tdp_limit_available,omitempty"`
	TdpLimitMin                          *int32                 `protobuf:"varint,8,opt,name=tdp_limit_min,json=tdpLimitMin" json:"tdp_limit_min,omitempty"`
	TdpLimitMax                          *int32                 `protobuf:"varint,9,opt,name=tdp_limit_max,json=tdpLimitMax" json:"tdp_limit_max,omitempty"`
	IsCecAvailable                       *bool                  `protobuf:"varint,10,opt,name=is_cec_available,json=isCecAvailable" json:"is_cec_available,omitempty"`
	IsWifiDebugSupported                 *bool                  `protobuf:"varint,11,opt,name=is_wifi_debug_supported,json=isWifiDebugSupported" json:"is_wifi_debug_supported,omitempty"`
	IsWifiDebugForceDisabled             *bool                  `protobuf:"varint,12,opt,name=is_wifi_debug_force_disabled,json=isWifiDebugForceDisabled" json:"is_wifi_debug_force_disabled,omitempty"`
	IsWifiForceWpaSupplicantSupported    *bool                  `protobuf:"varint,13,opt,name=is_wifi_force_wpa_supplicant_supported,json=isWifiForceWpaSupplicantSupported" json:"is_wifi_force_wpa_supplicant_supported,omitempty"`
	IsManualGpuClockAvailable            *bool                  `protobuf:"varint,14,opt,name=is_manual_gpu_clock_available,json=isManualGpuClockAvailable" json:"is_manual_gpu_clock_available,omitempty"`
	ManualGpuClockMin                    *int32                 `protobuf:"varint,15,opt,name=manual_gpu_clock_min,json=manualGpuClockMin" json:"manual_gpu_clock_min,omitempty"`
	ManualGpuClockMax                    *int32                 `protobuf:"varint,16,opt,name=manual_gpu_clock_max,json=manualGpuClockMax" json:"manual_gpu_clock_max,omitempty"`
	PlatformPerformanceProfilesAvailable []string               `protobuf:"bytes,17,rep,name=platform_performance_profiles_available,json=platformPerformanceProfilesAvailable" json:"platform_performance_profiles_available,omitempty"`
	PlatformPerformanceProfileDefault    *string                `protobuf:"bytes,18,opt,name=platform_performance_profile_default,json=platformPerformanceProfileDefault" json:"platform_performance_profile_default,omitempty"`
	IsChargeLimitAvailable               *bool                  `protobuf:"varint,20,opt,name=is_charge_limit_available,json=isChargeLimitAvailable" json:"is_charge_limit_available,omitempty"`
	ChargeLimitMin                       *int32                 `protobuf:"varint,21,opt,name=charge_limit_min,json=chargeLimitMin" json:"charge_limit_min,omitempty"`
	ChargeLimitMax                       *int32                 `protobuf:"varint,22,opt,name=charge_limit_max,json=chargeLimitMax" json:"charge_limit_max,omitempty"`
	ChargeLimitDefault                   *int32                 `protobuf:"varint,23,opt,name=charge_limit_default,json=chargeLimitDefault" json:"charge_limit_default,omitempty"`
	IsScreenReaderSupported              *bool                  `protobuf:"varint,24,opt,name=is_screen_reader_supported,json=isScreenReaderSupported" json:"is_screen_reader_supported,omitempty"`
	ScreenReaderLocalesAvailable         []string               `protobuf:"bytes,25,rep,name=screen_reader_locales_available,json=screenReaderLocalesAvailable" json:"screen_reader_locales_available,omitempty"`
	ScreenReaderLocaleDefault            *string                `protobuf:"bytes,26,opt,name=screen_reader_locale_default,json=screenReaderLocaleDefault" json:"screen_reader_locale_default,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

// Default values for CSteamOSManagerState fields.
const (
	Default_CSteamOSManagerState_StartupMovieVariant = EStartupMovieVariant_k_EStartupMovieVariant_Invalid
)

func (x *CSteamOSManagerState) Reset() {
	*x = CSteamOSManagerState{}
	mi := &file_webuimessages_steamos_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManagerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManagerState) ProtoMessage() {}

func (x *CSteamOSManagerState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManagerState.ProtoReflect.Descriptor instead.
func (*CSteamOSManagerState) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{1}
}

func (x *CSteamOSManagerState) GetIsServiceAvailable() bool {
	if x != nil && x.IsServiceAvailable != nil {
		return *x.IsServiceAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *CSteamOSManagerState) GetIsMandatoryUpdateAvailable() bool {
	if x != nil && x.IsMandatoryUpdateAvailable != nil {
		return *x.IsMandatoryUpdateAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetStartupMovieVariant() EStartupMovieVariant {
	if x != nil && x.StartupMovieVariant != nil {
		return *x.StartupMovieVariant
	}
	return Default_CSteamOSManagerState_StartupMovieVariant
}

func (x *CSteamOSManagerState) GetIsStatusLedControlAvailable() bool {
	if x != nil && x.IsStatusLedControlAvailable != nil {
		return *x.IsStatusLedControlAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetFactoryResetState() *CMsgFactoryResetState {
	if x != nil {
		return x.FactoryResetState
	}
	return nil
}

func (x *CSteamOSManagerState) GetIsTdpLimitAvailable() bool {
	if x != nil && x.IsTdpLimitAvailable != nil {
		return *x.IsTdpLimitAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetTdpLimitMin() int32 {
	if x != nil && x.TdpLimitMin != nil {
		return *x.TdpLimitMin
	}
	return 0
}

func (x *CSteamOSManagerState) GetTdpLimitMax() int32 {
	if x != nil && x.TdpLimitMax != nil {
		return *x.TdpLimitMax
	}
	return 0
}

func (x *CSteamOSManagerState) GetIsCecAvailable() bool {
	if x != nil && x.IsCecAvailable != nil {
		return *x.IsCecAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetIsWifiDebugSupported() bool {
	if x != nil && x.IsWifiDebugSupported != nil {
		return *x.IsWifiDebugSupported
	}
	return false
}

func (x *CSteamOSManagerState) GetIsWifiDebugForceDisabled() bool {
	if x != nil && x.IsWifiDebugForceDisabled != nil {
		return *x.IsWifiDebugForceDisabled
	}
	return false
}

func (x *CSteamOSManagerState) GetIsWifiForceWpaSupplicantSupported() bool {
	if x != nil && x.IsWifiForceWpaSupplicantSupported != nil {
		return *x.IsWifiForceWpaSupplicantSupported
	}
	return false
}

func (x *CSteamOSManagerState) GetIsManualGpuClockAvailable() bool {
	if x != nil && x.IsManualGpuClockAvailable != nil {
		return *x.IsManualGpuClockAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetManualGpuClockMin() int32 {
	if x != nil && x.ManualGpuClockMin != nil {
		return *x.ManualGpuClockMin
	}
	return 0
}

func (x *CSteamOSManagerState) GetManualGpuClockMax() int32 {
	if x != nil && x.ManualGpuClockMax != nil {
		return *x.ManualGpuClockMax
	}
	return 0
}

func (x *CSteamOSManagerState) GetPlatformPerformanceProfilesAvailable() []string {
	if x != nil {
		return x.PlatformPerformanceProfilesAvailable
	}
	return nil
}

func (x *CSteamOSManagerState) GetPlatformPerformanceProfileDefault() string {
	if x != nil && x.PlatformPerformanceProfileDefault != nil {
		return *x.PlatformPerformanceProfileDefault
	}
	return ""
}

func (x *CSteamOSManagerState) GetIsChargeLimitAvailable() bool {
	if x != nil && x.IsChargeLimitAvailable != nil {
		return *x.IsChargeLimitAvailable
	}
	return false
}

func (x *CSteamOSManagerState) GetChargeLimitMin() int32 {
	if x != nil && x.ChargeLimitMin != nil {
		return *x.ChargeLimitMin
	}
	return 0
}

func (x *CSteamOSManagerState) GetChargeLimitMax() int32 {
	if x != nil && x.ChargeLimitMax != nil {
		return *x.ChargeLimitMax
	}
	return 0
}

func (x *CSteamOSManagerState) GetChargeLimitDefault() int32 {
	if x != nil && x.ChargeLimitDefault != nil {
		return *x.ChargeLimitDefault
	}
	return 0
}

func (x *CSteamOSManagerState) GetIsScreenReaderSupported() bool {
	if x != nil && x.IsScreenReaderSupported != nil {
		return *x.IsScreenReaderSupported
	}
	return false
}

func (x *CSteamOSManagerState) GetScreenReaderLocalesAvailable() []string {
	if x != nil {
		return x.ScreenReaderLocalesAvailable
	}
	return nil
}

func (x *CSteamOSManagerState) GetScreenReaderLocaleDefault() string {
	if x != nil && x.ScreenReaderLocaleDefault != nil {
		return *x.ScreenReaderLocaleDefault
	}
	return ""
}

type CSteamOSManager_GetState_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_GetState_Request) Reset() {
	*x = CSteamOSManager_GetState_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_GetState_Request) ProtoMessage() {}

func (x *CSteamOSManager_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_GetState_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_GetState_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{2}
}

type CSteamOSManager_GetState_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *CSteamOSManagerState  `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_GetState_Response) Reset() {
	*x = CSteamOSManager_GetState_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_GetState_Response) ProtoMessage() {}

func (x *CSteamOSManager_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_GetState_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_GetState_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{3}
}

func (x *CSteamOSManager_GetState_Response) GetState() *CSteamOSManagerState {
	if x != nil {
		return x.State
	}
	return nil
}

type CSteamOSManager_StateChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_StateChanged_Notification) Reset() {
	*x = CSteamOSManager_StateChanged_Notification{}
	mi := &file_webuimessages_steamos_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_StateChanged_Notification) ProtoMessage() {}

func (x *CSteamOSManager_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{4}
}

type CSteamOSManager_IsTelemetryHelperAvailable_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Etype         *ESLSHelper            `protobuf:"varint,1,opt,name=etype,enum=ESLSHelper,def=0" json:"etype,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSteamOSManager_IsTelemetryHelperAvailable_Request fields.
const (
	Default_CSteamOSManager_IsTelemetryHelperAvailable_Request_Etype = ESLSHelper_k_ESLSHelper_Invalid
)

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) Reset() {
	*x = CSteamOSManager_IsTelemetryHelperAvailable_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_IsTelemetryHelperAvailable_Request) ProtoMessage() {}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_IsTelemetryHelperAvailable_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_IsTelemetryHelperAvailable_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{5}
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Request) GetEtype() ESLSHelper {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_CSteamOSManager_IsTelemetryHelperAvailable_Request_Etype
}

type CSteamOSManager_IsTelemetryHelperAvailable_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Available     *bool                  `protobuf:"varint,1,opt,name=available" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) Reset() {
	*x = CSteamOSManager_IsTelemetryHelperAvailable_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_IsTelemetryHelperAvailable_Response) ProtoMessage() {}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_IsTelemetryHelperAvailable_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_IsTelemetryHelperAvailable_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{6}
}

func (x *CSteamOSManager_IsTelemetryHelperAvailable_Response) GetAvailable() bool {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return false
}

type CSteamOSManager_OptOutOfSideloadedClient_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Request) Reset() {
	*x = CSteamOSManager_OptOutOfSideloadedClient_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_OptOutOfSideloadedClient_Request) ProtoMessage() {}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_OptOutOfSideloadedClient_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_OptOutOfSideloadedClient_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{7}
}

type CSteamOSManager_OptOutOfSideloadedClient_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Response) Reset() {
	*x = CSteamOSManager_OptOutOfSideloadedClient_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_OptOutOfSideloadedClient_Response) ProtoMessage() {}

func (x *CSteamOSManager_OptOutOfSideloadedClient_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_OptOutOfSideloadedClient_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_OptOutOfSideloadedClient_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{8}
}

type CSteamOSManager_ApplyMandatoryUpdate_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Request) Reset() {
	*x = CSteamOSManager_ApplyMandatoryUpdate_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_ApplyMandatoryUpdate_Request) ProtoMessage() {}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_ApplyMandatoryUpdate_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_ApplyMandatoryUpdate_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{9}
}

type CSteamOSManager_ApplyMandatoryUpdate_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Response) Reset() {
	*x = CSteamOSManager_ApplyMandatoryUpdate_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_ApplyMandatoryUpdate_Response) ProtoMessage() {}

func (x *CSteamOSManager_ApplyMandatoryUpdate_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_ApplyMandatoryUpdate_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_ApplyMandatoryUpdate_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{10}
}

type CSteamOSManager_FactoryReset_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResetOs       *bool                  `protobuf:"varint,1,opt,name=reset_os,json=resetOs" json:"reset_os,omitempty"`
	ResetUserData *bool                  `protobuf:"varint,2,opt,name=reset_user_data,json=resetUserData" json:"reset_user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_FactoryReset_Request) Reset() {
	*x = CSteamOSManager_FactoryReset_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_FactoryReset_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_FactoryReset_Request) ProtoMessage() {}

func (x *CSteamOSManager_FactoryReset_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_FactoryReset_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_FactoryReset_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{11}
}

func (x *CSteamOSManager_FactoryReset_Request) GetResetOs() bool {
	if x != nil && x.ResetOs != nil {
		return *x.ResetOs
	}
	return false
}

func (x *CSteamOSManager_FactoryReset_Request) GetResetUserData() bool {
	if x != nil && x.ResetUserData != nil {
		return *x.ResetUserData
	}
	return false
}

type CSteamOSManager_FactoryReset_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSManager_FactoryReset_Response) Reset() {
	*x = CSteamOSManager_FactoryReset_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSManager_FactoryReset_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSManager_FactoryReset_Response) ProtoMessage() {}

func (x *CSteamOSManager_FactoryReset_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSManager_FactoryReset_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSManager_FactoryReset_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{12}
}

type CSteamOSSLSPlugin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Etype         *ESLSHelper            `protobuf:"varint,1,opt,name=etype,enum=ESLSHelper,def=0" json:"etype,omitempty"`
	IsAvailable   *bool                  `protobuf:"varint,2,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	IsEnabled     *bool                  `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSteamOSSLSPlugin fields.
const (
	Default_CSteamOSSLSPlugin_Etype = ESLSHelper_k_ESLSHelper_Invalid
)

func (x *CSteamOSSLSPlugin) Reset() {
	*x = CSteamOSSLSPlugin{}
	mi := &file_webuimessages_steamos_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLSPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLSPlugin) ProtoMessage() {}

func (x *CSteamOSSLSPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLSPlugin.ProtoReflect.Descriptor instead.
func (*CSteamOSSLSPlugin) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{13}
}

func (x *CSteamOSSLSPlugin) GetEtype() ESLSHelper {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_CSteamOSSLSPlugin_Etype
}

func (x *CSteamOSSLSPlugin) GetIsAvailable() bool {
	if x != nil && x.IsAvailable != nil {
		return *x.IsAvailable
	}
	return false
}

func (x *CSteamOSSLSPlugin) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

type CSteamOSSLSState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsAvailable   *bool                  `protobuf:"varint,1,opt,name=is_available,json=isAvailable" json:"is_available,omitempty"`
	IsEnabled     *bool                  `protobuf:"varint,2,opt,name=is_enabled,json=isEnabled" json:"is_enabled,omitempty"`
	Plugins       []*CSteamOSSLSPlugin   `protobuf:"bytes,3,rep,name=plugins" json:"plugins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLSState) Reset() {
	*x = CSteamOSSLSState{}
	mi := &file_webuimessages_steamos_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLSState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLSState) ProtoMessage() {}

func (x *CSteamOSSLSState) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLSState.ProtoReflect.Descriptor instead.
func (*CSteamOSSLSState) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{14}
}

func (x *CSteamOSSLSState) GetIsAvailable() bool {
	if x != nil && x.IsAvailable != nil {
		return *x.IsAvailable
	}
	return false
}

func (x *CSteamOSSLSState) GetIsEnabled() bool {
	if x != nil && x.IsEnabled != nil {
		return *x.IsEnabled
	}
	return false
}

func (x *CSteamOSSLSState) GetPlugins() []*CSteamOSSLSPlugin {
	if x != nil {
		return x.Plugins
	}
	return nil
}

type CSteamOSSLS_GetState_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLS_GetState_Request) Reset() {
	*x = CSteamOSSLS_GetState_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_GetState_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_GetState_Request) ProtoMessage() {}

func (x *CSteamOSSLS_GetState_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_GetState_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_GetState_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{15}
}

type CSteamOSSLS_GetState_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         *CSteamOSSLSState      `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLS_GetState_Response) Reset() {
	*x = CSteamOSSLS_GetState_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_GetState_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_GetState_Response) ProtoMessage() {}

func (x *CSteamOSSLS_GetState_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_GetState_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_GetState_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{16}
}

func (x *CSteamOSSLS_GetState_Response) GetState() *CSteamOSSLSState {
	if x != nil {
		return x.State
	}
	return nil
}

type CSteamOSSLS_StateChanged_Notification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLS_StateChanged_Notification) Reset() {
	*x = CSteamOSSLS_StateChanged_Notification{}
	mi := &file_webuimessages_steamos_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_StateChanged_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_StateChanged_Notification) ProtoMessage() {}

func (x *CSteamOSSLS_StateChanged_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_StateChanged_Notification.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_StateChanged_Notification) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{17}
}

type CSteamOSSLS_SetEnabled_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       *bool                  `protobuf:"varint,1,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLS_SetEnabled_Request) Reset() {
	*x = CSteamOSSLS_SetEnabled_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_SetEnabled_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetEnabled_Request) ProtoMessage() {}

func (x *CSteamOSSLS_SetEnabled_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetEnabled_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetEnabled_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{18}
}

func (x *CSteamOSSLS_SetEnabled_Request) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CSteamOSSLS_SetEnabled_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLS_SetEnabled_Response) Reset() {
	*x = CSteamOSSLS_SetEnabled_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_SetEnabled_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetEnabled_Response) ProtoMessage() {}

func (x *CSteamOSSLS_SetEnabled_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetEnabled_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetEnabled_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{19}
}

type CSteamOSSLS_SetPluginEnabled_Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Etype         *ESLSHelper            `protobuf:"varint,1,opt,name=etype,enum=ESLSHelper,def=0" json:"etype,omitempty"`
	Enabled       *bool                  `protobuf:"varint,2,opt,name=enabled" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSteamOSSLS_SetPluginEnabled_Request fields.
const (
	Default_CSteamOSSLS_SetPluginEnabled_Request_Etype = ESLSHelper_k_ESLSHelper_Invalid
)

func (x *CSteamOSSLS_SetPluginEnabled_Request) Reset() {
	*x = CSteamOSSLS_SetPluginEnabled_Request{}
	mi := &file_webuimessages_steamos_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_SetPluginEnabled_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetPluginEnabled_Request) ProtoMessage() {}

func (x *CSteamOSSLS_SetPluginEnabled_Request) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetPluginEnabled_Request.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetPluginEnabled_Request) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{20}
}

func (x *CSteamOSSLS_SetPluginEnabled_Request) GetEtype() ESLSHelper {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return Default_CSteamOSSLS_SetPluginEnabled_Request_Etype
}

func (x *CSteamOSSLS_SetPluginEnabled_Request) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CSteamOSSLS_SetPluginEnabled_Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamOSSLS_SetPluginEnabled_Response) Reset() {
	*x = CSteamOSSLS_SetPluginEnabled_Response{}
	mi := &file_webuimessages_steamos_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamOSSLS_SetPluginEnabled_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamOSSLS_SetPluginEnabled_Response) ProtoMessage() {}

func (x *CSteamOSSLS_SetPluginEnabled_Response) ProtoReflect() protoreflect.Message {
	mi := &file_webuimessages_steamos_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamOSSLS_SetPluginEnabled_Response.ProtoReflect.Descriptor instead.
func (*CSteamOSSLS_SetPluginEnabled_Response) Descriptor() ([]byte, []int) {
	return file_webuimessages_steamos_proto_rawDescGZIP(), []int{21}
}

var File_webuimessages_steamos_proto protoreflect.FileDescriptor

const file_webuimessages_steamos_proto_rawDesc = "" +
	"\n" +
	"\x1bwebuimessages_steamos.proto\x1a\venums.proto\x1a\x18steammessages_base.proto\x1a\x18webuimessages_base.proto\"\xbe\x01\n" +
	"\x15CMsgFactoryResetState\x12\x1d\n" +
	"\n" +
	"is_running\x18\x01 \x01(\bR\tisRunning\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x05R\bprogress\x12,\n" +
	"\x12is_restart_pending\x18\x03 \x01(\bR\x10isRestartPending\x12<\n" +
	"\x1artime_estimated_completion\x18\x04 \x01(\aR\x18rtimeEstimatedCompletion\"\xe6\v\n" +
	"\x14CSteamOSManagerState\x120\n" +
	"\x14is_service_available\x18\x01 \x01(\bR\x12isServiceAvailable\x12\x1d\n" +
	"\n" +
	"os_version\x18\x02 \x01(\tR\tosVersion\x12A\n" +
	"\x1dis_mandatory_update_available\x18\x03 \x01(\bR\x1aisMandatoryUpdateAvailable\x12i\n" +
	"\x15startup_movie_variant\x18\x04 \x01(\x0e2\x15.EStartupMovieVariant:\x1ek_EStartupMovieVariant_InvalidR\x13startupMovieVariant\x12D\n" +
	"\x1fis_status_led_control_available\x18\x05 \x01(\bR\x1bisStatusLedControlAvailable\x12F\n" +
	"\x13factory_reset_state\x18\x06 \x01(\v2\x16.CMsgFactoryResetStateR\x11factoryResetState\x123\n" +
	"\x16is_tdp_limit_available\x18\a \x01(\bR\x13isTdpLimitAvailable\x12\"\n" +
	"\rtdp_limit_min\x18\b \x01(\x05R\vtdpLimitMin\x12\"\n" +
	"\rtdp_limit_max\x18\t \x01(\x05R\vtdpLimitMax\x12(\n" +
	"\x10is_cec_available\x18\n" +
	" \x01(\bR\x0eisCecAvailable\x125\n" +
	"\x17is_wifi_debug_supported\x18\v \x01(\bR\x14isWifiDebugSupported\x12>\n" +
	"\x1cis_wifi_debug_force_disabled\x18\f \x01(\bR\x18isWifiDebugForceDisabled\x12Q\n" +
	"&is_wifi_force_wpa_supplicant_supported\x18\r \x01(\bR!isWifiForceWpaSupplicantSupported\x12@\n" +
	"\x1dis_manual_gpu_clock_available\x18\x0e \x01(\bR\x19isManualGpuClockAvailable\x12/\n" +
	"\x14manual_gpu_clock_min\x18\x0f \x01(\x05R\x11manualGpuClockMin\x12/\n" +
	"\x14manual_gpu_clock_max\x18\x10 \x01(\x05R\x11manualGpuClockMax\x12U\n" +
	"'platform_performance_profiles_available\x18\x11 \x03(\tR$platformPerformanceProfilesAvailable\x12O\n" +
	"$platform_performance_profile_default\x18\x12 \x01(\tR!platformPerformanceProfileDefault\x129\n" +
	"\x19is_charge_limit_available\x18\x14 \x01(\bR\x16isChargeLimitAvailable\x12(\n" +
	"\x10charge_limit_min\x18\x15 \x01(\x05R\x0echargeLimitMin\x12(\n" +
	"\x10charge_limit_max\x18\x16 \x01(\x05R\x0echargeLimitMax\x120\n" +
	"\x14charge_limit_default\x18\x17 \x01(\x05R\x12chargeLimitDefault\x12;\n" +
	"\x1ais_screen_reader_supported\x18\x18 \x01(\bR\x17isScreenReaderSupported\x12E\n" +
	"\x1fscreen_reader_locales_available\x18\x19 \x03(\tR\x1cscreenReaderLocalesAvailable\x12?\n" +
	"\x1cscreen_reader_locale_default\x18\x1a \x01(\tR\x19screenReaderLocaleDefault\"\"\n" +
	" CSteamOSManager_GetState_Request\"P\n" +
	"!CSteamOSManager_GetState_Response\x12+\n" +
	"\x05state\x18\x01 \x01(\v2\x15.CSteamOSManagerStateR\x05state\"+\n" +
	")CSteamOSManager_StateChanged_Notification\"m\n" +
	"2CSteamOSManager_IsTelemetryHelperAvailable_Request\x127\n" +
	"\x05etype\x18\x01 \x01(\x0e2\v.ESLSHelper:\x14k_ESLSHelper_InvalidR\x05etype\"S\n" +
	"3CSteamOSManager_IsTelemetryHelperAvailable_Response\x12\x1c\n" +
	"\tavailable\x18\x01 \x01(\bR\tavailable\"2\n" +
	"0CSteamOSManager_OptOutOfSideloadedClient_Request\"3\n" +
	"1CSteamOSManager_OptOutOfSideloadedClient_Response\".\n" +
	",CSteamOSManager_ApplyMandatoryUpdate_Request\"/\n" +
	"-CSteamOSManager_ApplyMandatoryUpdate_Response\"i\n" +
	"$CSteamOSManager_FactoryReset_Request\x12\x19\n" +
	"\breset_os\x18\x01 \x01(\bR\aresetOs\x12&\n" +
	"\x0freset_user_data\x18\x02 \x01(\bR\rresetUserData\"'\n" +
	"%CSteamOSManager_FactoryReset_Response\"\x8e\x01\n" +
	"\x11CSteamOSSLSPlugin\x127\n" +
	"\x05etype\x18\x01 \x01(\x0e2\v.ESLSHelper:\x14k_ESLSHelper_InvalidR\x05etype\x12!\n" +
	"\fis_available\x18\x02 \x01(\bR\visAvailable\x12\x1d\n" +
	"\n" +
	"is_enabled\x18\x03 \x01(\bR\tisEnabled\"\x82\x01\n" +
	"\x10CSteamOSSLSState\x12!\n" +
	"\fis_available\x18\x01 \x01(\bR\visAvailable\x12\x1d\n" +
	"\n" +
	"is_enabled\x18\x02 \x01(\bR\tisEnabled\x12,\n" +
	"\aplugins\x18\x03 \x03(\v2\x12.CSteamOSSLSPluginR\aplugins\"\x1e\n" +
	"\x1cCSteamOSSLS_GetState_Request\"H\n" +
	"\x1dCSteamOSSLS_GetState_Response\x12'\n" +
	"\x05state\x18\x01 \x01(\v2\x11.CSteamOSSLSStateR\x05state\"'\n" +
	"%CSteamOSSLS_StateChanged_Notification\":\n" +
	"\x1eCSteamOSSLS_SetEnabled_Request\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"!\n" +
	"\x1fCSteamOSSLS_SetEnabled_Response\"y\n" +
	"$CSteamOSSLS_SetPluginEnabled_Request\x127\n" +
	"\x05etype\x18\x01 \x01(\x0e2\v.ESLSHelper:\x14k_ESLSHelper_InvalidR\x05etype\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\"'\n" +
	"%CSteamOSSLS_SetPluginEnabled_Response2\x97\x04\n" +
	"\x0eSteamOSManager\x12Q\n" +
	"\bGetState\x12!.CSteamOSManager_GetState_Request\x1a\".CSteamOSManager_GetState_Response\x12R\n" +
	"\x12NotifyStateChanged\x12*.CSteamOSManager_StateChanged_Notification\x1a\x10.WebUINoResponse\x12\x81\x01\n" +
	"\x18OptOutOfSideloadedClient\x121.CSteamOSManager_OptOutOfSideloadedClient_Request\x1a2.CSteamOSManager_OptOutOfSideloadedClient_Response\x12u\n" +
	"\x14ApplyMandatoryUpdate\x12-.CSteamOSManager_ApplyMandatoryUpdate_Request\x1a..CSteamOSManager_ApplyMandatoryUpdate_Response\x12]\n" +
	"\fFactoryReset\x12%.CSteamOSManager_FactoryReset_Request\x1a&.CSteamOSManager_FactoryReset_Response\x1a\x04\x80\x97\"\x012\xe1\x02\n" +
	"\n" +
	"SteamOSSLS\x12I\n" +
	"\bGetState\x12\x1d.CSteamOSSLS_GetState_Request\x1a\x1e.CSteamOSSLS_GetState_Response\x12N\n" +
	"\x12NotifyStateChanged\x12&.CSteamOSSLS_StateChanged_Notification\x1a\x10.WebUINoResponse\x12O\n" +
	"\n" +
	"SetEnabled\x12\x1f.CSteamOSSLS_SetEnabled_Request\x1a .CSteamOSSLS_SetEnabled_Response\x12a\n" +
	"\x10SetPluginEnabled\x12%.CSteamOSSLS_SetPluginEnabled_Request\x1a&.CSteamOSSLS_SetPluginEnabled_Response\x1a\x04\x80\x97\"\x01B\x05H\x01\x80\x01\x01"

var (
	file_webuimessages_steamos_proto_rawDescOnce sync.Once
	file_webuimessages_steamos_proto_rawDescData []byte
)

func file_webuimessages_steamos_proto_rawDescGZIP() []byte {
	file_webuimessages_steamos_proto_rawDescOnce.Do(func() {
		file_webuimessages_steamos_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_webuimessages_steamos_proto_rawDesc), len(file_webuimessages_steamos_proto_rawDesc)))
	})
	return file_webuimessages_steamos_proto_rawDescData
}

var file_webuimessages_steamos_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_webuimessages_steamos_proto_goTypes = []any{
	(*CMsgFactoryResetState)(nil),                               // 0: CMsgFactoryResetState
	(*CSteamOSManagerState)(nil),                                // 1: CSteamOSManagerState
	(*CSteamOSManager_GetState_Request)(nil),                    // 2: CSteamOSManager_GetState_Request
	(*CSteamOSManager_GetState_Response)(nil),                   // 3: CSteamOSManager_GetState_Response
	(*CSteamOSManager_StateChanged_Notification)(nil),           // 4: CSteamOSManager_StateChanged_Notification
	(*CSteamOSManager_IsTelemetryHelperAvailable_Request)(nil),  // 5: CSteamOSManager_IsTelemetryHelperAvailable_Request
	(*CSteamOSManager_IsTelemetryHelperAvailable_Response)(nil), // 6: CSteamOSManager_IsTelemetryHelperAvailable_Response
	(*CSteamOSManager_OptOutOfSideloadedClient_Request)(nil),    // 7: CSteamOSManager_OptOutOfSideloadedClient_Request
	(*CSteamOSManager_OptOutOfSideloadedClient_Response)(nil),   // 8: CSteamOSManager_OptOutOfSideloadedClient_Response
	(*CSteamOSManager_ApplyMandatoryUpdate_Request)(nil),        // 9: CSteamOSManager_ApplyMandatoryUpdate_Request
	(*CSteamOSManager_ApplyMandatoryUpdate_Response)(nil),       // 10: CSteamOSManager_ApplyMandatoryUpdate_Response
	(*CSteamOSManager_FactoryReset_Request)(nil),                // 11: CSteamOSManager_FactoryReset_Request
	(*CSteamOSManager_FactoryReset_Response)(nil),               // 12: CSteamOSManager_FactoryReset_Response
	(*CSteamOSSLSPlugin)(nil),                                   // 13: CSteamOSSLSPlugin
	(*CSteamOSSLSState)(nil),                                    // 14: CSteamOSSLSState
	(*CSteamOSSLS_GetState_Request)(nil),                        // 15: CSteamOSSLS_GetState_Request
	(*CSteamOSSLS_GetState_Response)(nil),                       // 16: CSteamOSSLS_GetState_Response
	(*CSteamOSSLS_StateChanged_Notification)(nil),               // 17: CSteamOSSLS_StateChanged_Notification
	(*CSteamOSSLS_SetEnabled_Request)(nil),                      // 18: CSteamOSSLS_SetEnabled_Request
	(*CSteamOSSLS_SetEnabled_Response)(nil),                     // 19: CSteamOSSLS_SetEnabled_Response
	(*CSteamOSSLS_SetPluginEnabled_Request)(nil),                // 20: CSteamOSSLS_SetPluginEnabled_Request
	(*CSteamOSSLS_SetPluginEnabled_Response)(nil),               // 21: CSteamOSSLS_SetPluginEnabled_Response
	(EStartupMovieVariant)(0),                                   // 22: EStartupMovieVariant
	(ESLSHelper)(0),                                             // 23: ESLSHelper
	(*WebUINoResponse)(nil),                                     // 24: WebUINoResponse
}
var file_webuimessages_steamos_proto_depIdxs = []int32{
	22, // 0: CSteamOSManagerState.startup_movie_variant:type_name -> EStartupMovieVariant
	0,  // 1: CSteamOSManagerState.factory_reset_state:type_name -> CMsgFactoryResetState
	1,  // 2: CSteamOSManager_GetState_Response.state:type_name -> CSteamOSManagerState
	23, // 3: CSteamOSManager_IsTelemetryHelperAvailable_Request.etype:type_name -> ESLSHelper
	23, // 4: CSteamOSSLSPlugin.etype:type_name -> ESLSHelper
	13, // 5: CSteamOSSLSState.plugins:type_name -> CSteamOSSLSPlugin
	14, // 6: CSteamOSSLS_GetState_Response.state:type_name -> CSteamOSSLSState
	23, // 7: CSteamOSSLS_SetPluginEnabled_Request.etype:type_name -> ESLSHelper
	2,  // 8: SteamOSManager.GetState:input_type -> CSteamOSManager_GetState_Request
	4,  // 9: SteamOSManager.NotifyStateChanged:input_type -> CSteamOSManager_StateChanged_Notification
	7,  // 10: SteamOSManager.OptOutOfSideloadedClient:input_type -> CSteamOSManager_OptOutOfSideloadedClient_Request
	9,  // 11: SteamOSManager.ApplyMandatoryUpdate:input_type -> CSteamOSManager_ApplyMandatoryUpdate_Request
	11, // 12: SteamOSManager.FactoryReset:input_type -> CSteamOSManager_FactoryReset_Request
	15, // 13: SteamOSSLS.GetState:input_type -> CSteamOSSLS_GetState_Request
	17, // 14: SteamOSSLS.NotifyStateChanged:input_type -> CSteamOSSLS_StateChanged_Notification
	18, // 15: SteamOSSLS.SetEnabled:input_type -> CSteamOSSLS_SetEnabled_Request
	20, // 16: SteamOSSLS.SetPluginEnabled:input_type -> CSteamOSSLS_SetPluginEnabled_Request
	3,  // 17: SteamOSManager.GetState:output_type -> CSteamOSManager_GetState_Response
	24, // 18: SteamOSManager.NotifyStateChanged:output_type -> WebUINoResponse
	8,  // 19: SteamOSManager.OptOutOfSideloadedClient:output_type -> CSteamOSManager_OptOutOfSideloadedClient_Response
	10, // 20: SteamOSManager.ApplyMandatoryUpdate:output_type -> CSteamOSManager_ApplyMandatoryUpdate_Response
	12, // 21: SteamOSManager.FactoryReset:output_type -> CSteamOSManager_FactoryReset_Response
	16, // 22: SteamOSSLS.GetState:output_type -> CSteamOSSLS_GetState_Response
	24, // 23: SteamOSSLS.NotifyStateChanged:output_type -> WebUINoResponse
	19, // 24: SteamOSSLS.SetEnabled:output_type -> CSteamOSSLS_SetEnabled_Response
	21, // 25: SteamOSSLS.SetPluginEnabled:output_type -> CSteamOSSLS_SetPluginEnabled_Response
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_webuimessages_steamos_proto_init() }
func file_webuimessages_steamos_proto_init() {
	if File_webuimessages_steamos_proto != nil {
		return
	}
	file_enums_proto_init()
	file_steammessages_base_proto_init()
	file_webuimessages_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_webuimessages_steamos_proto_rawDesc), len(file_webuimessages_steamos_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_webuimessages_steamos_proto_goTypes,
		DependencyIndexes: file_webuimessages_steamos_proto_depIdxs,
		MessageInfos:      file_webuimessages_steamos_proto_msgTypes,
	}.Build()
	File_webuimessages_steamos_proto = out.File
	file_webuimessages_steamos_proto_goTypes = nil
	file_webuimessages_steamos_proto_depIdxs = nil
}
