// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_notifications.steamclient.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ESteamNotificationType int32

const (
	ESteamNotificationType_k_ESteamNotificationType_Invalid                       ESteamNotificationType = 0
	ESteamNotificationType_k_ESteamNotificationType_Test                          ESteamNotificationType = 1
	ESteamNotificationType_k_ESteamNotificationType_Gift                          ESteamNotificationType = 2
	ESteamNotificationType_k_ESteamNotificationType_Comment                       ESteamNotificationType = 3
	ESteamNotificationType_k_ESteamNotificationType_Item                          ESteamNotificationType = 4
	ESteamNotificationType_k_ESteamNotificationType_FriendInvite                  ESteamNotificationType = 5
	ESteamNotificationType_k_ESteamNotificationType_MajorSale                     ESteamNotificationType = 6
	ESteamNotificationType_k_ESteamNotificationType_PreloadAvailable              ESteamNotificationType = 7
	ESteamNotificationType_k_ESteamNotificationType_Wishlist                      ESteamNotificationType = 8
	ESteamNotificationType_k_ESteamNotificationType_TradeOffer                    ESteamNotificationType = 9
	ESteamNotificationType_k_ESteamNotificationType_General                       ESteamNotificationType = 10
	ESteamNotificationType_k_ESteamNotificationType_HelpRequest                   ESteamNotificationType = 11
	ESteamNotificationType_k_ESteamNotificationType_AsyncGame                     ESteamNotificationType = 12
	ESteamNotificationType_k_ESteamNotificationType_ChatMsg                       ESteamNotificationType = 13
	ESteamNotificationType_k_ESteamNotificationType_ModeratorMsg                  ESteamNotificationType = 14
	ESteamNotificationType_k_ESteamNotificationType_ParentalFeatureAccessRequest  ESteamNotificationType = 15
	ESteamNotificationType_k_ESteamNotificationType_FamilyInvite                  ESteamNotificationType = 16
	ESteamNotificationType_k_ESteamNotificationType_FamilyPurchaseRequest         ESteamNotificationType = 17
	ESteamNotificationType_k_ESteamNotificationType_ParentalPlaytimeRequest       ESteamNotificationType = 18
	ESteamNotificationType_k_ESteamNotificationType_FamilyPurchaseRequestResponse ESteamNotificationType = 19
	ESteamNotificationType_k_ESteamNotificationType_ParentalFeatureAccessResponse ESteamNotificationType = 20
	ESteamNotificationType_k_ESteamNotificationType_ParentalPlaytimeResponse      ESteamNotificationType = 21
	ESteamNotificationType_k_ESteamNotificationType_RequestedGameAdded            ESteamNotificationType = 22
	ESteamNotificationType_k_ESteamNotificationType_SendToPhone                   ESteamNotificationType = 23
	ESteamNotificationType_k_ESteamNotificationType_ClipDownloaded                ESteamNotificationType = 24
	ESteamNotificationType_k_ESteamNotificationType_2FAPrompt                     ESteamNotificationType = 25
	ESteamNotificationType_k_ESteamNotificationType_MobileConfirmation            ESteamNotificationType = 26
	ESteamNotificationType_k_ESteamNotificationType_PartnerEvent                  ESteamNotificationType = 27
	ESteamNotificationType_k_ESteamNotificationType_PlaytestInvite                ESteamNotificationType = 28
	ESteamNotificationType_k_ESteamNotificationType_TradeReversal                 ESteamNotificationType = 29
)

// Enum value maps for ESteamNotificationType.
var (
	ESteamNotificationType_name = map[int32]string{
		0:  "k_ESteamNotificationType_Invalid",
		1:  "k_ESteamNotificationType_Test",
		2:  "k_ESteamNotificationType_Gift",
		3:  "k_ESteamNotificationType_Comment",
		4:  "k_ESteamNotificationType_Item",
		5:  "k_ESteamNotificationType_FriendInvite",
		6:  "k_ESteamNotificationType_MajorSale",
		7:  "k_ESteamNotificationType_PreloadAvailable",
		8:  "k_ESteamNotificationType_Wishlist",
		9:  "k_ESteamNotificationType_TradeOffer",
		10: "k_ESteamNotificationType_General",
		11: "k_ESteamNotificationType_HelpRequest",
		12: "k_ESteamNotificationType_AsyncGame",
		13: "k_ESteamNotificationType_ChatMsg",
		14: "k_ESteamNotificationType_ModeratorMsg",
		15: "k_ESteamNotificationType_ParentalFeatureAccessRequest",
		16: "k_ESteamNotificationType_FamilyInvite",
		17: "k_ESteamNotificationType_FamilyPurchaseRequest",
		18: "k_ESteamNotificationType_ParentalPlaytimeRequest",
		19: "k_ESteamNotificationType_FamilyPurchaseRequestResponse",
		20: "k_ESteamNotificationType_ParentalFeatureAccessResponse",
		21: "k_ESteamNotificationType_ParentalPlaytimeResponse",
		22: "k_ESteamNotificationType_RequestedGameAdded",
		23: "k_ESteamNotificationType_SendToPhone",
		24: "k_ESteamNotificationType_ClipDownloaded",
		25: "k_ESteamNotificationType_2FAPrompt",
		26: "k_ESteamNotificationType_MobileConfirmation",
		27: "k_ESteamNotificationType_PartnerEvent",
		28: "k_ESteamNotificationType_PlaytestInvite",
		29: "k_ESteamNotificationType_TradeReversal",
	}
	ESteamNotificationType_value = map[string]int32{
		"k_ESteamNotificationType_Invalid":                       0,
		"k_ESteamNotificationType_Test":                          1,
		"k_ESteamNotificationType_Gift":                          2,
		"k_ESteamNotificationType_Comment":                       3,
		"k_ESteamNotificationType_Item":                          4,
		"k_ESteamNotificationType_FriendInvite":                  5,
		"k_ESteamNotificationType_MajorSale":                     6,
		"k_ESteamNotificationType_PreloadAvailable":              7,
		"k_ESteamNotificationType_Wishlist":                      8,
		"k_ESteamNotificationType_TradeOffer":                    9,
		"k_ESteamNotificationType_General":                       10,
		"k_ESteamNotificationType_HelpRequest":                   11,
		"k_ESteamNotificationType_AsyncGame":                     12,
		"k_ESteamNotificationType_ChatMsg":                       13,
		"k_ESteamNotificationType_ModeratorMsg":                  14,
		"k_ESteamNotificationType_ParentalFeatureAccessRequest":  15,
		"k_ESteamNotificationType_FamilyInvite":                  16,
		"k_ESteamNotificationType_FamilyPurchaseRequest":         17,
		"k_ESteamNotificationType_ParentalPlaytimeRequest":       18,
		"k_ESteamNotificationType_FamilyPurchaseRequestResponse": 19,
		"k_ESteamNotificationType_ParentalFeatureAccessResponse": 20,
		"k_ESteamNotificationType_ParentalPlaytimeResponse":      21,
		"k_ESteamNotificationType_RequestedGameAdded":            22,
		"k_ESteamNotificationType_SendToPhone":                   23,
		"k_ESteamNotificationType_ClipDownloaded":                24,
		"k_ESteamNotificationType_2FAPrompt":                     25,
		"k_ESteamNotificationType_MobileConfirmation":            26,
		"k_ESteamNotificationType_PartnerEvent":                  27,
		"k_ESteamNotificationType_PlaytestInvite":                28,
		"k_ESteamNotificationType_TradeReversal":                 29,
	}
)

func (x ESteamNotificationType) Enum() *ESteamNotificationType {
	p := new(ESteamNotificationType)
	*p = x
	return p
}

func (x ESteamNotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESteamNotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_steammessages_notifications_steamclient_proto_enumTypes[0].Descriptor()
}

func (ESteamNotificationType) Type() protoreflect.EnumType {
	return &file_steammessages_notifications_steamclient_proto_enumTypes[0]
}

func (x ESteamNotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESteamNotificationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESteamNotificationType(num)
	return nil
}

// Deprecated: Use ESteamNotificationType.Descriptor instead.
func (ESteamNotificationType) EnumDescriptor() ([]byte, []int) {
	return file_steammessages_notifications_steamclient_proto_rawDescGZIP(), []int{0}
}

type SteamNotificationData struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	NotificationId      *uint64                 `protobuf:"varint,1,opt,name=notification_id,json=notificationId" json:"notification_id,omitempty"`
	NotificationTargets *uint32                 `protobuf:"varint,2,opt,name=notification_targets,json=notificationTargets" json:"notification_targets,omitempty"`
	NotificationType    *ESteamNotificationType `protobuf:"varint,3,opt,name=notification_type,json=notificationType,enum=ESteamNotificationType,def=0" json:"notification_type,omitempty"`
	BodyData            *string                 `protobuf:"bytes,4,opt,name=body_data,json=bodyData" json:"body_data,omitempty"`
	Read                *bool                   `protobuf:"varint,7,opt,name=read" json:"read,omitempty"`
	Timestamp           *uint32                 `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	Hidden              *bool                   `protobuf:"varint,9,opt,name=hidden" json:"hidden,omitempty"`
	Expiry              *uint32                 `protobuf:"varint,10,opt,name=expiry" json:"expiry,omitempty"`
	Viewed              *uint32                 `protobuf:"varint,11,opt,name=viewed" json:"viewed,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for SteamNotificationData fields.
const (
	Default_SteamNotificationData_NotificationType = ESteamNotificationType_k_ESteamNotificationType_Invalid
)

func (x *SteamNotificationData) Reset() {
	*x = SteamNotificationData{}
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SteamNotificationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteamNotificationData) ProtoMessage() {}

func (x *SteamNotificationData) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteamNotificationData.ProtoReflect.Descriptor instead.
func (*SteamNotificationData) Descriptor() ([]byte, []int) {
	return file_steammessages_notifications_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *SteamNotificationData) GetNotificationId() uint64 {
	if x != nil && x.NotificationId != nil {
		return *x.NotificationId
	}
	return 0
}

func (x *SteamNotificationData) GetNotificationTargets() uint32 {
	if x != nil && x.NotificationTargets != nil {
		return *x.NotificationTargets
	}
	return 0
}

func (x *SteamNotificationData) GetNotificationType() ESteamNotificationType {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return Default_SteamNotificationData_NotificationType
}

func (x *SteamNotificationData) GetBodyData() string {
	if x != nil && x.BodyData != nil {
		return *x.BodyData
	}
	return ""
}

func (x *SteamNotificationData) GetRead() bool {
	if x != nil && x.Read != nil {
		return *x.Read
	}
	return false
}

func (x *SteamNotificationData) GetTimestamp() uint32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *SteamNotificationData) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *SteamNotificationData) GetExpiry() uint32 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

func (x *SteamNotificationData) GetViewed() uint32 {
	if x != nil && x.Viewed != nil {
		return *x.Viewed
	}
	return 0
}

type CSteamNotification_NotificationsReceived_Notification struct {
	state                    protoimpl.MessageState   `protogen:"open.v1"`
	Notifications            []*SteamNotificationData `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
	PendingGiftCount         *uint32                  `protobuf:"varint,2,opt,name=pending_gift_count,json=pendingGiftCount" json:"pending_gift_count,omitempty"`
	PendingFriendCount       *uint32                  `protobuf:"varint,3,opt,name=pending_friend_count,json=pendingFriendCount" json:"pending_friend_count,omitempty"`
	PendingFamilyInviteCount *uint32                  `protobuf:"varint,4,opt,name=pending_family_invite_count,json=pendingFamilyInviteCount" json:"pending_family_invite_count,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *CSteamNotification_NotificationsReceived_Notification) Reset() {
	*x = CSteamNotification_NotificationsReceived_Notification{}
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamNotification_NotificationsReceived_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamNotification_NotificationsReceived_Notification) ProtoMessage() {}

func (x *CSteamNotification_NotificationsReceived_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamNotification_NotificationsReceived_Notification.ProtoReflect.Descriptor instead.
func (*CSteamNotification_NotificationsReceived_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_notifications_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CSteamNotification_NotificationsReceived_Notification) GetNotifications() []*SteamNotificationData {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *CSteamNotification_NotificationsReceived_Notification) GetPendingGiftCount() uint32 {
	if x != nil && x.PendingGiftCount != nil {
		return *x.PendingGiftCount
	}
	return 0
}

func (x *CSteamNotification_NotificationsReceived_Notification) GetPendingFriendCount() uint32 {
	if x != nil && x.PendingFriendCount != nil {
		return *x.PendingFriendCount
	}
	return 0
}

func (x *CSteamNotification_NotificationsReceived_Notification) GetPendingFamilyInviteCount() uint32 {
	if x != nil && x.PendingFamilyInviteCount != nil {
		return *x.PendingFamilyInviteCount
	}
	return 0
}

type SteamNotificationPreference struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	NotificationType    *ESteamNotificationType `protobuf:"varint,1,opt,name=notification_type,json=notificationType,enum=ESteamNotificationType,def=0" json:"notification_type,omitempty"`
	NotificationTargets *uint32                 `protobuf:"varint,2,opt,name=notification_targets,json=notificationTargets" json:"notification_targets,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for SteamNotificationPreference fields.
const (
	Default_SteamNotificationPreference_NotificationType = ESteamNotificationType_k_ESteamNotificationType_Invalid
)

func (x *SteamNotificationPreference) Reset() {
	*x = SteamNotificationPreference{}
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SteamNotificationPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SteamNotificationPreference) ProtoMessage() {}

func (x *SteamNotificationPreference) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SteamNotificationPreference.ProtoReflect.Descriptor instead.
func (*SteamNotificationPreference) Descriptor() ([]byte, []int) {
	return file_steammessages_notifications_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *SteamNotificationPreference) GetNotificationType() ESteamNotificationType {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return Default_SteamNotificationPreference_NotificationType
}

func (x *SteamNotificationPreference) GetNotificationTargets() uint32 {
	if x != nil && x.NotificationTargets != nil {
		return *x.NotificationTargets
	}
	return 0
}

type CSteamNotification_PreferencesUpdated_Notification struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Preferences   []*SteamNotificationPreference `protobuf:"bytes,1,rep,name=preferences" json:"preferences,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSteamNotification_PreferencesUpdated_Notification) Reset() {
	*x = CSteamNotification_PreferencesUpdated_Notification{}
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSteamNotification_PreferencesUpdated_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSteamNotification_PreferencesUpdated_Notification) ProtoMessage() {}

func (x *CSteamNotification_PreferencesUpdated_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_notifications_steamclient_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSteamNotification_PreferencesUpdated_Notification.ProtoReflect.Descriptor instead.
func (*CSteamNotification_PreferencesUpdated_Notification) Descriptor() ([]byte, []int) {
	return file_steammessages_notifications_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CSteamNotification_PreferencesUpdated_Notification) GetPreferences() []*SteamNotificationPreference {
	if x != nil {
		return x.Preferences
	}
	return nil
}

var File_steammessages_notifications_steamclient_proto protoreflect.FileDescriptor

const file_steammessages_notifications_steamclient_proto_rawDesc = "" +
	"\n" +
	"-steammessages_notifications.steamclient.proto\x1a\x18steammessages_base.proto\x1a,steammessages_unified_base.steamclient.proto\"\xf2\x02\n" +
	"\x15SteamNotificationData\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x04R\x0enotificationId\x121\n" +
	"\x14notification_targets\x18\x02 \x01(\rR\x13notificationTargets\x12f\n" +
	"\x11notification_type\x18\x03 \x01(\x0e2\x17.ESteamNotificationType: k_ESteamNotificationType_InvalidR\x10notificationType\x12\x1b\n" +
	"\tbody_data\x18\x04 \x01(\tR\bbodyData\x12\x12\n" +
	"\x04read\x18\a \x01(\bR\x04read\x12\x1c\n" +
	"\ttimestamp\x18\b \x01(\rR\ttimestamp\x12\x16\n" +
	"\x06hidden\x18\t \x01(\bR\x06hidden\x12\x16\n" +
	"\x06expiry\x18\n" +
	" \x01(\rR\x06expiry\x12\x16\n" +
	"\x06viewed\x18\v \x01(\rR\x06viewed\"\x94\x02\n" +
	"5CSteamNotification_NotificationsReceived_Notification\x12<\n" +
	"\rnotifications\x18\x01 \x03(\v2\x16.SteamNotificationDataR\rnotifications\x12,\n" +
	"\x12pending_gift_count\x18\x02 \x01(\rR\x10pendingGiftCount\x120\n" +
	"\x14pending_friend_count\x18\x03 \x01(\rR\x12pendingFriendCount\x12=\n" +
	"\x1bpending_family_invite_count\x18\x04 \x01(\rR\x18pendingFamilyInviteCount\"\xb8\x01\n" +
	"\x1bSteamNotificationPreference\x12f\n" +
	"\x11notification_type\x18\x01 \x01(\x0e2\x17.ESteamNotificationType: k_ESteamNotificationType_InvalidR\x10notificationType\x121\n" +
	"\x14notification_targets\x18\x02 \x01(\rR\x13notificationTargets\"t\n" +
	"2CSteamNotification_PreferencesUpdated_Notification\x12>\n" +
	"\vpreferences\x18\x01 \x03(\v2\x1c.SteamNotificationPreferenceR\vpreferences*\xcc\n" +
	"\n" +
	"\x16ESteamNotificationType\x12$\n" +
	" k_ESteamNotificationType_Invalid\x10\x00\x12!\n" +
	"\x1dk_ESteamNotificationType_Test\x10\x01\x12!\n" +
	"\x1dk_ESteamNotificationType_Gift\x10\x02\x12$\n" +
	" k_ESteamNotificationType_Comment\x10\x03\x12!\n" +
	"\x1dk_ESteamNotificationType_Item\x10\x04\x12)\n" +
	"%k_ESteamNotificationType_FriendInvite\x10\x05\x12&\n" +
	"\"k_ESteamNotificationType_MajorSale\x10\x06\x12-\n" +
	")k_ESteamNotificationType_PreloadAvailable\x10\a\x12%\n" +
	"!k_ESteamNotificationType_Wishlist\x10\b\x12'\n" +
	"#k_ESteamNotificationType_TradeOffer\x10\t\x12$\n" +
	" k_ESteamNotificationType_General\x10\n" +
	"\x12(\n" +
	"$k_ESteamNotificationType_HelpRequest\x10\v\x12&\n" +
	"\"k_ESteamNotificationType_AsyncGame\x10\f\x12$\n" +
	" k_ESteamNotificationType_ChatMsg\x10\r\x12)\n" +
	"%k_ESteamNotificationType_ModeratorMsg\x10\x0e\x129\n" +
	"5k_ESteamNotificationType_ParentalFeatureAccessRequest\x10\x0f\x12)\n" +
	"%k_ESteamNotificationType_FamilyInvite\x10\x10\x122\n" +
	".k_ESteamNotificationType_FamilyPurchaseRequest\x10\x11\x124\n" +
	"0k_ESteamNotificationType_ParentalPlaytimeRequest\x10\x12\x12:\n" +
	"6k_ESteamNotificationType_FamilyPurchaseRequestResponse\x10\x13\x12:\n" +
	"6k_ESteamNotificationType_ParentalFeatureAccessResponse\x10\x14\x125\n" +
	"1k_ESteamNotificationType_ParentalPlaytimeResponse\x10\x15\x12/\n" +
	"+k_ESteamNotificationType_RequestedGameAdded\x10\x16\x12(\n" +
	"$k_ESteamNotificationType_SendToPhone\x10\x17\x12+\n" +
	"'k_ESteamNotificationType_ClipDownloaded\x10\x18\x12&\n" +
	"\"k_ESteamNotificationType_2FAPrompt\x10\x19\x12/\n" +
	"+k_ESteamNotificationType_MobileConfirmation\x10\x1a\x12)\n" +
	"%k_ESteamNotificationType_PartnerEvent\x10\x1b\x12+\n" +
	"'k_ESteamNotificationType_PlaytestInvite\x10\x1c\x12*\n" +
	"&k_ESteamNotificationType_TradeReversal\x10\x1d2\xd5\x01\n" +
	"\x17SteamNotificationClient\x12\\\n" +
	"\x15NotificationsReceived\x126.CSteamNotification_NotificationsReceived_Notification\x1a\v.NoResponse\x12V\n" +
	"\x12PreferencesUpdated\x123.CSteamNotification_PreferencesUpdated_Notification\x1a\v.NoResponse\x1a\x04\xc0\xb5\x18\x02B\x03\x80\x01\x01"

var (
	file_steammessages_notifications_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_notifications_steamclient_proto_rawDescData []byte
)

func file_steammessages_notifications_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_notifications_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_notifications_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_notifications_steamclient_proto_rawDesc), len(file_steammessages_notifications_steamclient_proto_rawDesc)))
	})
	return file_steammessages_notifications_steamclient_proto_rawDescData
}

var file_steammessages_notifications_steamclient_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_steammessages_notifications_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_steammessages_notifications_steamclient_proto_goTypes = []any{
	(ESteamNotificationType)(0),                                   // 0: ESteamNotificationType
	(*SteamNotificationData)(nil),                                 // 1: SteamNotificationData
	(*CSteamNotification_NotificationsReceived_Notification)(nil), // 2: CSteamNotification_NotificationsReceived_Notification
	(*SteamNotificationPreference)(nil),                           // 3: SteamNotificationPreference
	(*CSteamNotification_PreferencesUpdated_Notification)(nil),    // 4: CSteamNotification_PreferencesUpdated_Notification
	(*NoResponse)(nil),                                            // 5: NoResponse
}
var file_steammessages_notifications_steamclient_proto_depIdxs = []int32{
	0, // 0: SteamNotificationData.notification_type:type_name -> ESteamNotificationType
	1, // 1: CSteamNotification_NotificationsReceived_Notification.notifications:type_name -> SteamNotificationData
	0, // 2: SteamNotificationPreference.notification_type:type_name -> ESteamNotificationType
	3, // 3: CSteamNotification_PreferencesUpdated_Notification.preferences:type_name -> SteamNotificationPreference
	2, // 4: SteamNotificationClient.NotificationsReceived:input_type -> CSteamNotification_NotificationsReceived_Notification
	4, // 5: SteamNotificationClient.PreferencesUpdated:input_type -> CSteamNotification_PreferencesUpdated_Notification
	5, // 6: SteamNotificationClient.NotificationsReceived:output_type -> NoResponse
	5, // 7: SteamNotificationClient.PreferencesUpdated:output_type -> NoResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_steammessages_notifications_steamclient_proto_init() }
func file_steammessages_notifications_steamclient_proto_init() {
	if File_steammessages_notifications_steamclient_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	file_steammessages_unified_base_steamclient_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_notifications_steamclient_proto_rawDesc), len(file_steammessages_notifications_steamclient_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_notifications_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_notifications_steamclient_proto_depIdxs,
		EnumInfos:         file_steammessages_notifications_steamclient_proto_enumTypes,
		MessageInfos:      file_steammessages_notifications_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_notifications_steamclient_proto = out.File
	file_steammessages_notifications_steamclient_proto_goTypes = nil
	file_steammessages_notifications_steamclient_proto_depIdxs = nil
}
