// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steamdatagram_messages_auth.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgSteamDatagramRelayAuthTicket struct {
	state                                protoimpl.MessageState                         `protogen:"open.v1"`
	TimeExpiry                           *uint32                                        `protobuf:"fixed32,1,opt,name=time_expiry,json=timeExpiry" json:"time_expiry,omitempty"`
	AuthorizedClientIdentityString       *string                                        `protobuf:"bytes,14,opt,name=authorized_client_identity_string,json=authorizedClientIdentityString" json:"authorized_client_identity_string,omitempty"`
	GameserverIdentityString             *string                                        `protobuf:"bytes,15,opt,name=gameserver_identity_string,json=gameserverIdentityString" json:"gameserver_identity_string,omitempty"`
	AuthorizedPublicIp                   *uint32                                        `protobuf:"fixed32,3,opt,name=authorized_public_ip,json=authorizedPublicIp" json:"authorized_public_ip,omitempty"`
	GameserverAddress                    []byte                                         `protobuf:"bytes,11,opt,name=gameserver_address,json=gameserverAddress" json:"gameserver_address,omitempty"`
	AppId                                *uint32                                        `protobuf:"varint,7,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	VirtualPort                          *uint32                                        `protobuf:"varint,10,opt,name=virtual_port,json=virtualPort" json:"virtual_port,omitempty"`
	ExtraFields                          []*CMsgSteamDatagramRelayAuthTicket_ExtraField `protobuf:"bytes,8,rep,name=extra_fields,json=extraFields" json:"extra_fields,omitempty"`
	LegacyAuthorizedSteamId              *uint64                                        `protobuf:"fixed64,2,opt,name=legacy_authorized_steam_id,json=legacyAuthorizedSteamId" json:"legacy_authorized_steam_id,omitempty"`
	LegacyGameserverSteamId              *uint64                                        `protobuf:"fixed64,4,opt,name=legacy_gameserver_steam_id,json=legacyGameserverSteamId" json:"legacy_gameserver_steam_id,omitempty"`
	LegacyGameserverPopId                *uint32                                        `protobuf:"fixed32,9,opt,name=legacy_gameserver_pop_id,json=legacyGameserverPopId" json:"legacy_gameserver_pop_id,omitempty"`
	LegacyAuthorizedClientIdentityBinary []byte                                         `protobuf:"bytes,12,opt,name=legacy_authorized_client_identity_binary,json=legacyAuthorizedClientIdentityBinary" json:"legacy_authorized_client_identity_binary,omitempty"`
	LegacyGameserverIdentityBinary       []byte                                         `protobuf:"bytes,13,opt,name=legacy_gameserver_identity_binary,json=legacyGameserverIdentityBinary" json:"legacy_gameserver_identity_binary,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *CMsgSteamDatagramRelayAuthTicket) Reset() {
	*x = CMsgSteamDatagramRelayAuthTicket{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramRelayAuthTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramRelayAuthTicket) ProtoMessage() {}

func (x *CMsgSteamDatagramRelayAuthTicket) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramRelayAuthTicket.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramRelayAuthTicket) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetTimeExpiry() uint32 {
	if x != nil && x.TimeExpiry != nil {
		return *x.TimeExpiry
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetAuthorizedClientIdentityString() string {
	if x != nil && x.AuthorizedClientIdentityString != nil {
		return *x.AuthorizedClientIdentityString
	}
	return ""
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetGameserverIdentityString() string {
	if x != nil && x.GameserverIdentityString != nil {
		return *x.GameserverIdentityString
	}
	return ""
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetAuthorizedPublicIp() uint32 {
	if x != nil && x.AuthorizedPublicIp != nil {
		return *x.AuthorizedPublicIp
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetGameserverAddress() []byte {
	if x != nil {
		return x.GameserverAddress
	}
	return nil
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetVirtualPort() uint32 {
	if x != nil && x.VirtualPort != nil {
		return *x.VirtualPort
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetExtraFields() []*CMsgSteamDatagramRelayAuthTicket_ExtraField {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetLegacyAuthorizedSteamId() uint64 {
	if x != nil && x.LegacyAuthorizedSteamId != nil {
		return *x.LegacyAuthorizedSteamId
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetLegacyGameserverSteamId() uint64 {
	if x != nil && x.LegacyGameserverSteamId != nil {
		return *x.LegacyGameserverSteamId
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetLegacyGameserverPopId() uint32 {
	if x != nil && x.LegacyGameserverPopId != nil {
		return *x.LegacyGameserverPopId
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetLegacyAuthorizedClientIdentityBinary() []byte {
	if x != nil {
		return x.LegacyAuthorizedClientIdentityBinary
	}
	return nil
}

func (x *CMsgSteamDatagramRelayAuthTicket) GetLegacyGameserverIdentityBinary() []byte {
	if x != nil {
		return x.LegacyGameserverIdentityBinary
	}
	return nil
}

type CMsgSteamDatagramSignedRelayAuthTicket struct {
	state            protoimpl.MessageState                `protogen:"open.v1"`
	ReservedDoNotUse *uint64                               `protobuf:"fixed64,1,opt,name=reserved_do_not_use,json=reservedDoNotUse" json:"reserved_do_not_use,omitempty"`
	Ticket           []byte                                `protobuf:"bytes,3,opt,name=ticket" json:"ticket,omitempty"`
	Signature        []byte                                `protobuf:"bytes,4,opt,name=signature" json:"signature,omitempty"`
	KeyId            *uint64                               `protobuf:"fixed64,2,opt,name=key_id,json=keyId" json:"key_id,omitempty"`
	Certs            []*CMsgSteamDatagramCertificateSigned `protobuf:"bytes,5,rep,name=certs" json:"certs,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) Reset() {
	*x = CMsgSteamDatagramSignedRelayAuthTicket{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramSignedRelayAuthTicket) ProtoMessage() {}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramSignedRelayAuthTicket.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramSignedRelayAuthTicket) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) GetReservedDoNotUse() uint64 {
	if x != nil && x.ReservedDoNotUse != nil {
		return *x.ReservedDoNotUse
	}
	return 0
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) GetTicket() []byte {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) GetKeyId() uint64 {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return 0
}

func (x *CMsgSteamDatagramSignedRelayAuthTicket) GetCerts() []*CMsgSteamDatagramCertificateSigned {
	if x != nil {
		return x.Certs
	}
	return nil
}

type CMsgSteamDatagramCachedCredentialsForApp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivateKey    []byte                 `protobuf:"bytes,1,opt,name=private_key,json=privateKey" json:"private_key,omitempty"`
	Cert          []byte                 `protobuf:"bytes,2,opt,name=cert" json:"cert,omitempty"`
	RelayTickets  [][]byte               `protobuf:"bytes,3,rep,name=relay_tickets,json=relayTickets" json:"relay_tickets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamDatagramCachedCredentialsForApp) Reset() {
	*x = CMsgSteamDatagramCachedCredentialsForApp{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramCachedCredentialsForApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramCachedCredentialsForApp) ProtoMessage() {}

func (x *CMsgSteamDatagramCachedCredentialsForApp) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramCachedCredentialsForApp.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramCachedCredentialsForApp) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgSteamDatagramCachedCredentialsForApp) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *CMsgSteamDatagramCachedCredentialsForApp) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *CMsgSteamDatagramCachedCredentialsForApp) GetRelayTickets() [][]byte {
	if x != nil {
		return x.RelayTickets
	}
	return nil
}

type CMsgSteamDatagramGameCoordinatorServerLogin struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TimeGenerated        *uint32                `protobuf:"varint,1,opt,name=time_generated,json=timeGenerated" json:"time_generated,omitempty"`
	Appid                *uint32                `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Routing              []byte                 `protobuf:"bytes,3,opt,name=routing" json:"routing,omitempty"`
	Appdata              []byte                 `protobuf:"bytes,4,opt,name=appdata" json:"appdata,omitempty"`
	LegacyIdentityBinary []byte                 `protobuf:"bytes,5,opt,name=legacy_identity_binary,json=legacyIdentityBinary" json:"legacy_identity_binary,omitempty"`
	IdentityString       *string                `protobuf:"bytes,6,opt,name=identity_string,json=identityString" json:"identity_string,omitempty"`
	DummySteamId         *uint64                `protobuf:"fixed64,99,opt,name=dummy_steam_id,json=dummySteamId" json:"dummy_steam_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) Reset() {
	*x = CMsgSteamDatagramGameCoordinatorServerLogin{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramGameCoordinatorServerLogin) ProtoMessage() {}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramGameCoordinatorServerLogin.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramGameCoordinatorServerLogin) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetTimeGenerated() uint32 {
	if x != nil && x.TimeGenerated != nil {
		return *x.TimeGenerated
	}
	return 0
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetRouting() []byte {
	if x != nil {
		return x.Routing
	}
	return nil
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetAppdata() []byte {
	if x != nil {
		return x.Appdata
	}
	return nil
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetLegacyIdentityBinary() []byte {
	if x != nil {
		return x.LegacyIdentityBinary
	}
	return nil
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetIdentityString() string {
	if x != nil && x.IdentityString != nil {
		return *x.IdentityString
	}
	return ""
}

func (x *CMsgSteamDatagramGameCoordinatorServerLogin) GetDummySteamId() uint64 {
	if x != nil && x.DummySteamId != nil {
		return *x.DummySteamId
	}
	return 0
}

type CMsgSteamDatagramSignedGameCoordinatorServerLogin struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Cert          *CMsgSteamDatagramCertificateSigned `protobuf:"bytes,1,opt,name=cert" json:"cert,omitempty"`
	Login         []byte                              `protobuf:"bytes,2,opt,name=login" json:"login,omitempty"`
	Signature     []byte                              `protobuf:"bytes,3,opt,name=signature" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamDatagramSignedGameCoordinatorServerLogin) Reset() {
	*x = CMsgSteamDatagramSignedGameCoordinatorServerLogin{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramSignedGameCoordinatorServerLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramSignedGameCoordinatorServerLogin) ProtoMessage() {}

func (x *CMsgSteamDatagramSignedGameCoordinatorServerLogin) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramSignedGameCoordinatorServerLogin.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramSignedGameCoordinatorServerLogin) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgSteamDatagramSignedGameCoordinatorServerLogin) GetCert() *CMsgSteamDatagramCertificateSigned {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *CMsgSteamDatagramSignedGameCoordinatorServerLogin) GetLogin() []byte {
	if x != nil {
		return x.Login
	}
	return nil
}

func (x *CMsgSteamDatagramSignedGameCoordinatorServerLogin) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CMsgSteamDatagramHostedServerAddressPlaintext struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ipv4            *uint32                `protobuf:"fixed32,1,opt,name=ipv4" json:"ipv4,omitempty"`
	Ipv6            []byte                 `protobuf:"bytes,2,opt,name=ipv6" json:"ipv6,omitempty"`
	Port            *uint32                `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	RoutingSecret   *uint64                `protobuf:"fixed64,4,opt,name=routing_secret,json=routingSecret" json:"routing_secret,omitempty"`
	ProtocolVersion *uint32                `protobuf:"varint,5,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) Reset() {
	*x = CMsgSteamDatagramHostedServerAddressPlaintext{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramHostedServerAddressPlaintext) ProtoMessage() {}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramHostedServerAddressPlaintext.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramHostedServerAddressPlaintext) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) GetIpv4() uint32 {
	if x != nil && x.Ipv4 != nil {
		return *x.Ipv4
	}
	return 0
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) GetIpv6() []byte {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) GetRoutingSecret() uint64 {
	if x != nil && x.RoutingSecret != nil {
		return *x.RoutingSecret
	}
	return 0
}

func (x *CMsgSteamDatagramHostedServerAddressPlaintext) GetProtocolVersion() uint32 {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return 0
}

type CMsgSteamDatagramRelayAuthTicket_ExtraField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	StringValue   *string                `protobuf:"bytes,2,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	Int64Value    *int64                 `protobuf:"zigzag64,3,opt,name=int64_value,json=int64Value" json:"int64_value,omitempty"`
	Fixed64Value  *uint64                `protobuf:"fixed64,5,opt,name=fixed64_value,json=fixed64Value" json:"fixed64_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) Reset() {
	*x = CMsgSteamDatagramRelayAuthTicket_ExtraField{}
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSteamDatagramRelayAuthTicket_ExtraField) ProtoMessage() {}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) ProtoReflect() protoreflect.Message {
	mi := &file_steamdatagram_messages_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSteamDatagramRelayAuthTicket_ExtraField.ProtoReflect.Descriptor instead.
func (*CMsgSteamDatagramRelayAuthTicket_ExtraField) Descriptor() ([]byte, []int) {
	return file_steamdatagram_messages_auth_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) GetInt64Value() int64 {
	if x != nil && x.Int64Value != nil {
		return *x.Int64Value
	}
	return 0
}

func (x *CMsgSteamDatagramRelayAuthTicket_ExtraField) GetFixed64Value() uint64 {
	if x != nil && x.Fixed64Value != nil {
		return *x.Fixed64Value
	}
	return 0
}

var File_steamdatagram_messages_auth_proto protoreflect.FileDescriptor

const file_steamdatagram_messages_auth_proto_rawDesc = "" +
	"\n" +
	"!steamdatagram_messages_auth.proto\x1a+steamnetworkingsockets_messages_certs.proto\"\x9a\a\n" +
	" CMsgSteamDatagramRelayAuthTicket\x12\x1f\n" +
	"\vtime_expiry\x18\x01 \x01(\aR\n" +
	"timeExpiry\x12I\n" +
	"!authorized_client_identity_string\x18\x0e \x01(\tR\x1eauthorizedClientIdentityString\x12<\n" +
	"\x1agameserver_identity_string\x18\x0f \x01(\tR\x18gameserverIdentityString\x120\n" +
	"\x14authorized_public_ip\x18\x03 \x01(\aR\x12authorizedPublicIp\x12-\n" +
	"\x12gameserver_address\x18\v \x01(\fR\x11gameserverAddress\x12\x15\n" +
	"\x06app_id\x18\a \x01(\rR\x05appId\x12!\n" +
	"\fvirtual_port\x18\n" +
	" \x01(\rR\vvirtualPort\x12O\n" +
	"\fextra_fields\x18\b \x03(\v2,.CMsgSteamDatagramRelayAuthTicket.ExtraFieldR\vextraFields\x12;\n" +
	"\x1alegacy_authorized_steam_id\x18\x02 \x01(\x06R\x17legacyAuthorizedSteamId\x12;\n" +
	"\x1alegacy_gameserver_steam_id\x18\x04 \x01(\x06R\x17legacyGameserverSteamId\x127\n" +
	"\x18legacy_gameserver_pop_id\x18\t \x01(\aR\x15legacyGameserverPopId\x12V\n" +
	"(legacy_authorized_client_identity_binary\x18\f \x01(\fR$legacyAuthorizedClientIdentityBinary\x12I\n" +
	"!legacy_gameserver_identity_binary\x18\r \x01(\fR\x1elegacyGameserverIdentityBinary\x1a\x89\x01\n" +
	"\n" +
	"ExtraField\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12!\n" +
	"\fstring_value\x18\x02 \x01(\tR\vstringValue\x12\x1f\n" +
	"\vint64_value\x18\x03 \x01(\x12R\n" +
	"int64Value\x12#\n" +
	"\rfixed64_value\x18\x05 \x01(\x06R\ffixed64Value\"\xdf\x01\n" +
	"&CMsgSteamDatagramSignedRelayAuthTicket\x12-\n" +
	"\x13reserved_do_not_use\x18\x01 \x01(\x06R\x10reservedDoNotUse\x12\x16\n" +
	"\x06ticket\x18\x03 \x01(\fR\x06ticket\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\x12\x15\n" +
	"\x06key_id\x18\x02 \x01(\x06R\x05keyId\x129\n" +
	"\x05certs\x18\x05 \x03(\v2#.CMsgSteamDatagramCertificateSignedR\x05certs\"\x84\x01\n" +
	"(CMsgSteamDatagramCachedCredentialsForApp\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\fR\n" +
	"privateKey\x12\x12\n" +
	"\x04cert\x18\x02 \x01(\fR\x04cert\x12#\n" +
	"\rrelay_tickets\x18\x03 \x03(\fR\frelayTickets\"\xa3\x02\n" +
	"+CMsgSteamDatagramGameCoordinatorServerLogin\x12%\n" +
	"\x0etime_generated\x18\x01 \x01(\rR\rtimeGenerated\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\rR\x05appid\x12\x18\n" +
	"\arouting\x18\x03 \x01(\fR\arouting\x12\x18\n" +
	"\aappdata\x18\x04 \x01(\fR\aappdata\x124\n" +
	"\x16legacy_identity_binary\x18\x05 \x01(\fR\x14legacyIdentityBinary\x12'\n" +
	"\x0fidentity_string\x18\x06 \x01(\tR\x0eidentityString\x12$\n" +
	"\x0edummy_steam_id\x18c \x01(\x06R\fdummySteamId\"\xa0\x01\n" +
	"1CMsgSteamDatagramSignedGameCoordinatorServerLogin\x127\n" +
	"\x04cert\x18\x01 \x01(\v2#.CMsgSteamDatagramCertificateSignedR\x04cert\x12\x14\n" +
	"\x05login\x18\x02 \x01(\fR\x05login\x12\x1c\n" +
	"\tsignature\x18\x03 \x01(\fR\tsignature\"\xbd\x01\n" +
	"-CMsgSteamDatagramHostedServerAddressPlaintext\x12\x12\n" +
	"\x04ipv4\x18\x01 \x01(\aR\x04ipv4\x12\x12\n" +
	"\x04ipv6\x18\x02 \x01(\fR\x04ipv6\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12%\n" +
	"\x0erouting_secret\x18\x04 \x01(\x06R\rroutingSecret\x12)\n" +
	"\x10protocol_version\x18\x05 \x01(\rR\x0fprotocolVersionB\x05H\x01\x80\x01\x00"

var (
	file_steamdatagram_messages_auth_proto_rawDescOnce sync.Once
	file_steamdatagram_messages_auth_proto_rawDescData []byte
)

func file_steamdatagram_messages_auth_proto_rawDescGZIP() []byte {
	file_steamdatagram_messages_auth_proto_rawDescOnce.Do(func() {
		file_steamdatagram_messages_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steamdatagram_messages_auth_proto_rawDesc), len(file_steamdatagram_messages_auth_proto_rawDesc)))
	})
	return file_steamdatagram_messages_auth_proto_rawDescData
}

var file_steamdatagram_messages_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_steamdatagram_messages_auth_proto_goTypes = []any{
	(*CMsgSteamDatagramRelayAuthTicket)(nil),                  // 0: CMsgSteamDatagramRelayAuthTicket
	(*CMsgSteamDatagramSignedRelayAuthTicket)(nil),            // 1: CMsgSteamDatagramSignedRelayAuthTicket
	(*CMsgSteamDatagramCachedCredentialsForApp)(nil),          // 2: CMsgSteamDatagramCachedCredentialsForApp
	(*CMsgSteamDatagramGameCoordinatorServerLogin)(nil),       // 3: CMsgSteamDatagramGameCoordinatorServerLogin
	(*CMsgSteamDatagramSignedGameCoordinatorServerLogin)(nil), // 4: CMsgSteamDatagramSignedGameCoordinatorServerLogin
	(*CMsgSteamDatagramHostedServerAddressPlaintext)(nil),     // 5: CMsgSteamDatagramHostedServerAddressPlaintext
	(*CMsgSteamDatagramRelayAuthTicket_ExtraField)(nil),       // 6: CMsgSteamDatagramRelayAuthTicket.ExtraField
	(*CMsgSteamDatagramCertificateSigned)(nil),                // 7: CMsgSteamDatagramCertificateSigned
}
var file_steamdatagram_messages_auth_proto_depIdxs = []int32{
	6, // 0: CMsgSteamDatagramRelayAuthTicket.extra_fields:type_name -> CMsgSteamDatagramRelayAuthTicket.ExtraField
	7, // 1: CMsgSteamDatagramSignedRelayAuthTicket.certs:type_name -> CMsgSteamDatagramCertificateSigned
	7, // 2: CMsgSteamDatagramSignedGameCoordinatorServerLogin.cert:type_name -> CMsgSteamDatagramCertificateSigned
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_steamdatagram_messages_auth_proto_init() }
func file_steamdatagram_messages_auth_proto_init() {
	if File_steamdatagram_messages_auth_proto != nil {
		return
	}
	file_steamnetworkingsockets_messages_certs_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steamdatagram_messages_auth_proto_rawDesc), len(file_steamdatagram_messages_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steamdatagram_messages_auth_proto_goTypes,
		DependencyIndexes: file_steamdatagram_messages_auth_proto_depIdxs,
		MessageInfos:      file_steamdatagram_messages_auth_proto_msgTypes,
	}.Build()
	File_steamdatagram_messages_auth_proto = out.File
	file_steamdatagram_messages_auth_proto_goTypes = nil
	file_steamdatagram_messages_auth_proto_depIdxs = nil
}
