// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: steammessages_clientserver_uds.proto

package steampb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CMsgClientUDSP2PSessionStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SteamidRemote *uint64                `protobuf:"fixed64,1,opt,name=steamid_remote,json=steamidRemote" json:"steamid_remote,omitempty"`
	Appid         *int32                 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientUDSP2PSessionStarted) Reset() {
	*x = CMsgClientUDSP2PSessionStarted{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientUDSP2PSessionStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUDSP2PSessionStarted) ProtoMessage() {}

func (x *CMsgClientUDSP2PSessionStarted) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUDSP2PSessionStarted.ProtoReflect.Descriptor instead.
func (*CMsgClientUDSP2PSessionStarted) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgClientUDSP2PSessionStarted) GetSteamidRemote() uint64 {
	if x != nil && x.SteamidRemote != nil {
		return *x.SteamidRemote
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionStarted) GetAppid() int32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CMsgClientUDSP2PSessionEnded struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SteamidRemote    *uint64                `protobuf:"fixed64,1,opt,name=steamid_remote,json=steamidRemote" json:"steamid_remote,omitempty"`
	Appid            *int32                 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	SessionLengthSec *int32                 `protobuf:"varint,3,opt,name=session_length_sec,json=sessionLengthSec" json:"session_length_sec,omitempty"`
	SessionError     *int32                 `protobuf:"varint,4,opt,name=session_error,json=sessionError" json:"session_error,omitempty"`
	Nattype          *int32                 `protobuf:"varint,5,opt,name=nattype" json:"nattype,omitempty"`
	BytesRecv        *int32                 `protobuf:"varint,6,opt,name=bytes_recv,json=bytesRecv" json:"bytes_recv,omitempty"`
	BytesSent        *int32                 `protobuf:"varint,7,opt,name=bytes_sent,json=bytesSent" json:"bytes_sent,omitempty"`
	BytesSentRelay   *int32                 `protobuf:"varint,8,opt,name=bytes_sent_relay,json=bytesSentRelay" json:"bytes_sent_relay,omitempty"`
	BytesRecvRelay   *int32                 `protobuf:"varint,9,opt,name=bytes_recv_relay,json=bytesRecvRelay" json:"bytes_recv_relay,omitempty"`
	TimeToConnectMs  *int32                 `protobuf:"varint,10,opt,name=time_to_connect_ms,json=timeToConnectMs" json:"time_to_connect_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgClientUDSP2PSessionEnded) Reset() {
	*x = CMsgClientUDSP2PSessionEnded{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientUDSP2PSessionEnded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUDSP2PSessionEnded) ProtoMessage() {}

func (x *CMsgClientUDSP2PSessionEnded) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUDSP2PSessionEnded.ProtoReflect.Descriptor instead.
func (*CMsgClientUDSP2PSessionEnded) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgClientUDSP2PSessionEnded) GetSteamidRemote() uint64 {
	if x != nil && x.SteamidRemote != nil {
		return *x.SteamidRemote
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetAppid() int32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetSessionLengthSec() int32 {
	if x != nil && x.SessionLengthSec != nil {
		return *x.SessionLengthSec
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetSessionError() int32 {
	if x != nil && x.SessionError != nil {
		return *x.SessionError
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetNattype() int32 {
	if x != nil && x.Nattype != nil {
		return *x.Nattype
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetBytesRecv() int32 {
	if x != nil && x.BytesRecv != nil {
		return *x.BytesRecv
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetBytesSent() int32 {
	if x != nil && x.BytesSent != nil {
		return *x.BytesSent
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetBytesSentRelay() int32 {
	if x != nil && x.BytesSentRelay != nil {
		return *x.BytesSentRelay
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetBytesRecvRelay() int32 {
	if x != nil && x.BytesRecvRelay != nil {
		return *x.BytesRecvRelay
	}
	return 0
}

func (x *CMsgClientUDSP2PSessionEnded) GetTimeToConnectMs() int32 {
	if x != nil && x.TimeToConnectMs != nil {
		return *x.TimeToConnectMs
	}
	return 0
}

type CMsgClientGetClientDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientGetClientDetails) Reset() {
	*x = CMsgClientGetClientDetails{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientDetails) ProtoMessage() {}

func (x *CMsgClientGetClientDetails) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientDetails.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientDetails) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{2}
}

type CMsgClientGetClientDetailsResponse struct {
	state             protoimpl.MessageState                     `protogen:"open.v1"`
	PackageVersion    *uint32                                    `protobuf:"varint,1,opt,name=package_version,json=packageVersion" json:"package_version,omitempty"`
	Os                *string                                    `protobuf:"bytes,2,opt,name=os" json:"os,omitempty"`
	MachineName       *string                                    `protobuf:"bytes,3,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	IpPublic          *string                                    `protobuf:"bytes,4,opt,name=ip_public,json=ipPublic" json:"ip_public,omitempty"`
	IpPrivate         *string                                    `protobuf:"bytes,5,opt,name=ip_private,json=ipPrivate" json:"ip_private,omitempty"`
	GamesRunning      []*CMsgClientGetClientDetailsResponse_Game `protobuf:"bytes,6,rep,name=games_running,json=gamesRunning" json:"games_running,omitempty"`
	BytesAvailable    *uint64                                    `protobuf:"varint,7,opt,name=bytes_available,json=bytesAvailable" json:"bytes_available,omitempty"`
	ProtocolVersion   *uint32                                    `protobuf:"varint,8,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	ClientcommVersion *uint32                                    `protobuf:"varint,9,opt,name=clientcomm_version,json=clientcommVersion" json:"clientcomm_version,omitempty"`
	LocalUsers        []uint32                                   `protobuf:"varint,10,rep,name=local_users,json=localUsers" json:"local_users,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgClientGetClientDetailsResponse) Reset() {
	*x = CMsgClientGetClientDetailsResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientDetailsResponse) ProtoMessage() {}

func (x *CMsgClientGetClientDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientDetailsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientDetailsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClientGetClientDetailsResponse) GetPackageVersion() uint32 {
	if x != nil && x.PackageVersion != nil {
		return *x.PackageVersion
	}
	return 0
}

func (x *CMsgClientGetClientDetailsResponse) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *CMsgClientGetClientDetailsResponse) GetMachineName() string {
	if x != nil && x.MachineName != nil {
		return *x.MachineName
	}
	return ""
}

func (x *CMsgClientGetClientDetailsResponse) GetIpPublic() string {
	if x != nil && x.IpPublic != nil {
		return *x.IpPublic
	}
	return ""
}

func (x *CMsgClientGetClientDetailsResponse) GetIpPrivate() string {
	if x != nil && x.IpPrivate != nil {
		return *x.IpPrivate
	}
	return ""
}

func (x *CMsgClientGetClientDetailsResponse) GetGamesRunning() []*CMsgClientGetClientDetailsResponse_Game {
	if x != nil {
		return x.GamesRunning
	}
	return nil
}

func (x *CMsgClientGetClientDetailsResponse) GetBytesAvailable() uint64 {
	if x != nil && x.BytesAvailable != nil {
		return *x.BytesAvailable
	}
	return 0
}

func (x *CMsgClientGetClientDetailsResponse) GetProtocolVersion() uint32 {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return 0
}

func (x *CMsgClientGetClientDetailsResponse) GetClientcommVersion() uint32 {
	if x != nil && x.ClientcommVersion != nil {
		return *x.ClientcommVersion
	}
	return 0
}

func (x *CMsgClientGetClientDetailsResponse) GetLocalUsers() []uint32 {
	if x != nil {
		return x.LocalUsers
	}
	return nil
}

type CMsgClientGetClientAppList struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Media             *bool                  `protobuf:"varint,1,opt,name=media" json:"media,omitempty"`
	Tools             *bool                  `protobuf:"varint,2,opt,name=tools" json:"tools,omitempty"`
	Games             *bool                  `protobuf:"varint,3,opt,name=games" json:"games,omitempty"`
	OnlyInstalled     *bool                  `protobuf:"varint,4,opt,name=only_installed,json=onlyInstalled" json:"only_installed,omitempty"`
	OnlyChanging      *bool                  `protobuf:"varint,5,opt,name=only_changing,json=onlyChanging" json:"only_changing,omitempty"`
	Comics            *bool                  `protobuf:"varint,6,opt,name=comics" json:"comics,omitempty"`
	IncludeClientInfo *bool                  `protobuf:"varint,7,opt,name=include_client_info,json=includeClientInfo" json:"include_client_info,omitempty"`
	FilterAppids      []uint32               `protobuf:"varint,8,rep,name=filter_appids,json=filterAppids" json:"filter_appids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CMsgClientGetClientAppList) Reset() {
	*x = CMsgClientGetClientAppList{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientAppList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientAppList) ProtoMessage() {}

func (x *CMsgClientGetClientAppList) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientAppList.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientAppList) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClientGetClientAppList) GetMedia() bool {
	if x != nil && x.Media != nil {
		return *x.Media
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetTools() bool {
	if x != nil && x.Tools != nil {
		return *x.Tools
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetGames() bool {
	if x != nil && x.Games != nil {
		return *x.Games
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetOnlyInstalled() bool {
	if x != nil && x.OnlyInstalled != nil {
		return *x.OnlyInstalled
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetOnlyChanging() bool {
	if x != nil && x.OnlyChanging != nil {
		return *x.OnlyChanging
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetComics() bool {
	if x != nil && x.Comics != nil {
		return *x.Comics
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetIncludeClientInfo() bool {
	if x != nil && x.IncludeClientInfo != nil {
		return *x.IncludeClientInfo
	}
	return false
}

func (x *CMsgClientGetClientAppList) GetFilterAppids() []uint32 {
	if x != nil {
		return x.FilterAppids
	}
	return nil
}

type CMsgClientGetClientAppListResponse struct {
	state          protoimpl.MessageState                    `protogen:"open.v1"`
	Apps           []*CMsgClientGetClientAppListResponse_App `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	BytesAvailable *uint64                                   `protobuf:"varint,2,opt,name=bytes_available,json=bytesAvailable" json:"bytes_available,omitempty"`
	ClientInfo     *CMsgClientGetClientDetailsResponse       `protobuf:"bytes,3,opt,name=client_info,json=clientInfo" json:"client_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgClientGetClientAppListResponse) Reset() {
	*x = CMsgClientGetClientAppListResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientAppListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientAppListResponse) ProtoMessage() {}

func (x *CMsgClientGetClientAppListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientAppListResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientAppListResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgClientGetClientAppListResponse) GetApps() []*CMsgClientGetClientAppListResponse_App {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *CMsgClientGetClientAppListResponse) GetBytesAvailable() uint64 {
	if x != nil && x.BytesAvailable != nil {
		return *x.BytesAvailable
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse) GetClientInfo() *CMsgClientGetClientDetailsResponse {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

type CMsgClientInstallClientApp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientInstallClientApp) Reset() {
	*x = CMsgClientInstallClientApp{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientInstallClientApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientInstallClientApp) ProtoMessage() {}

func (x *CMsgClientInstallClientApp) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientInstallClientApp.ProtoReflect.Descriptor instead.
func (*CMsgClientInstallClientApp) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgClientInstallClientApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CMsgClientInstallClientAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientInstallClientAppResponse) Reset() {
	*x = CMsgClientInstallClientAppResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientInstallClientAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientInstallClientAppResponse) ProtoMessage() {}

func (x *CMsgClientInstallClientAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientInstallClientAppResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientInstallClientAppResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgClientInstallClientAppResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgClientUninstallClientApp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientUninstallClientApp) Reset() {
	*x = CMsgClientUninstallClientApp{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientUninstallClientApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUninstallClientApp) ProtoMessage() {}

func (x *CMsgClientUninstallClientApp) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUninstallClientApp.ProtoReflect.Descriptor instead.
func (*CMsgClientUninstallClientApp) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgClientUninstallClientApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CMsgClientUninstallClientAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientUninstallClientAppResponse) Reset() {
	*x = CMsgClientUninstallClientAppResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientUninstallClientAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientUninstallClientAppResponse) ProtoMessage() {}

func (x *CMsgClientUninstallClientAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientUninstallClientAppResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientUninstallClientAppResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgClientUninstallClientAppResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgClientSetClientAppUpdateState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Update        *bool                  `protobuf:"varint,2,opt,name=update" json:"update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientSetClientAppUpdateState) Reset() {
	*x = CMsgClientSetClientAppUpdateState{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientSetClientAppUpdateState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSetClientAppUpdateState) ProtoMessage() {}

func (x *CMsgClientSetClientAppUpdateState) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSetClientAppUpdateState.ProtoReflect.Descriptor instead.
func (*CMsgClientSetClientAppUpdateState) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgClientSetClientAppUpdateState) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientSetClientAppUpdateState) GetUpdate() bool {
	if x != nil && x.Update != nil {
		return *x.Update
	}
	return false
}

type CMsgClientSetClientAppUpdateStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientSetClientAppUpdateStateResponse) Reset() {
	*x = CMsgClientSetClientAppUpdateStateResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientSetClientAppUpdateStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientSetClientAppUpdateStateResponse) ProtoMessage() {}

func (x *CMsgClientSetClientAppUpdateStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientSetClientAppUpdateStateResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientSetClientAppUpdateStateResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgClientSetClientAppUpdateStateResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgClientLaunchClientApp struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Appid            *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Language         *uint32                `protobuf:"varint,2,opt,name=language" json:"language,omitempty"`
	LaunchOptionType *uint32                `protobuf:"varint,3,opt,name=launch_option_type,json=launchOptionType" json:"launch_option_type,omitempty"`
	LaunchOption     *uint32                `protobuf:"varint,4,opt,name=launch_option,json=launchOption" json:"launch_option,omitempty"`
	LaunchSource     *uint32                `protobuf:"varint,5,opt,name=launch_source,json=launchSource" json:"launch_source,omitempty"`
	Args             *string                `protobuf:"bytes,6,opt,name=args" json:"args,omitempty"`
	QueryParams      *string                `protobuf:"bytes,7,opt,name=query_params,json=queryParams" json:"query_params,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgClientLaunchClientApp) Reset() {
	*x = CMsgClientLaunchClientApp{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientLaunchClientApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientLaunchClientApp) ProtoMessage() {}

func (x *CMsgClientLaunchClientApp) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientLaunchClientApp.ProtoReflect.Descriptor instead.
func (*CMsgClientLaunchClientApp) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgClientLaunchClientApp) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientLaunchClientApp) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *CMsgClientLaunchClientApp) GetLaunchOptionType() uint32 {
	if x != nil && x.LaunchOptionType != nil {
		return *x.LaunchOptionType
	}
	return 0
}

func (x *CMsgClientLaunchClientApp) GetLaunchOption() uint32 {
	if x != nil && x.LaunchOption != nil {
		return *x.LaunchOption
	}
	return 0
}

func (x *CMsgClientLaunchClientApp) GetLaunchSource() uint32 {
	if x != nil && x.LaunchSource != nil {
		return *x.LaunchSource
	}
	return 0
}

func (x *CMsgClientLaunchClientApp) GetArgs() string {
	if x != nil && x.Args != nil {
		return *x.Args
	}
	return ""
}

func (x *CMsgClientLaunchClientApp) GetQueryParams() string {
	if x != nil && x.QueryParams != nil {
		return *x.QueryParams
	}
	return ""
}

type CMsgClientLaunchClientAppResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientLaunchClientAppResponse) Reset() {
	*x = CMsgClientLaunchClientAppResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientLaunchClientAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientLaunchClientAppResponse) ProtoMessage() {}

func (x *CMsgClientLaunchClientAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientLaunchClientAppResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientLaunchClientAppResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{13}
}

func (x *CMsgClientLaunchClientAppResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgClientEnableOrDisableDownloads struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enable        *bool                  `protobuf:"varint,1,opt,name=enable" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientEnableOrDisableDownloads) Reset() {
	*x = CMsgClientEnableOrDisableDownloads{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientEnableOrDisableDownloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEnableOrDisableDownloads) ProtoMessage() {}

func (x *CMsgClientEnableOrDisableDownloads) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEnableOrDisableDownloads.ProtoReflect.Descriptor instead.
func (*CMsgClientEnableOrDisableDownloads) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgClientEnableOrDisableDownloads) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

type CMsgClientEnableOrDisableDownloadsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *uint32                `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientEnableOrDisableDownloadsResponse) Reset() {
	*x = CMsgClientEnableOrDisableDownloadsResponse{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientEnableOrDisableDownloadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientEnableOrDisableDownloadsResponse) ProtoMessage() {}

func (x *CMsgClientEnableOrDisableDownloadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientEnableOrDisableDownloadsResponse.ProtoReflect.Descriptor instead.
func (*CMsgClientEnableOrDisableDownloadsResponse) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgClientEnableOrDisableDownloadsResponse) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

type CMsgClientGetClientDetailsResponse_Game struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Appid          *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	ExtraInfo      *string                `protobuf:"bytes,2,opt,name=extra_info,json=extraInfo" json:"extra_info,omitempty"`
	TimeRunningSec *uint32                `protobuf:"varint,3,opt,name=time_running_sec,json=timeRunningSec" json:"time_running_sec,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgClientGetClientDetailsResponse_Game) Reset() {
	*x = CMsgClientGetClientDetailsResponse_Game{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientDetailsResponse_Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientDetailsResponse_Game) ProtoMessage() {}

func (x *CMsgClientGetClientDetailsResponse_Game) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientDetailsResponse_Game.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientDetailsResponse_Game) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CMsgClientGetClientDetailsResponse_Game) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientGetClientDetailsResponse_Game) GetExtraInfo() string {
	if x != nil && x.ExtraInfo != nil {
		return *x.ExtraInfo
	}
	return ""
}

func (x *CMsgClientGetClientDetailsResponse_Game) GetTimeRunningSec() uint32 {
	if x != nil && x.TimeRunningSec != nil {
		return *x.TimeRunningSec
	}
	return 0
}

type CMsgClientGetClientAppListResponse_App struct {
	state                     protoimpl.MessageState                        `protogen:"open.v1"`
	Appid                     *uint32                                       `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Category                  *string                                       `protobuf:"bytes,2,opt,name=category" json:"category,omitempty"`
	AppType                   *string                                       `protobuf:"bytes,10,opt,name=app_type,json=appType" json:"app_type,omitempty"`
	Favorite                  *bool                                         `protobuf:"varint,3,opt,name=favorite" json:"favorite,omitempty"`
	Installed                 *bool                                         `protobuf:"varint,4,opt,name=installed" json:"installed,omitempty"`
	AutoUpdate                *bool                                         `protobuf:"varint,5,opt,name=auto_update,json=autoUpdate" json:"auto_update,omitempty"`
	BytesDownloaded           *uint64                                       `protobuf:"varint,6,opt,name=bytes_downloaded,json=bytesDownloaded" json:"bytes_downloaded,omitempty"`
	BytesToDownload           *uint64                                       `protobuf:"varint,7,opt,name=bytes_to_download,json=bytesToDownload" json:"bytes_to_download,omitempty"`
	BytesDownloadRate         *uint32                                       `protobuf:"varint,8,opt,name=bytes_download_rate,json=bytesDownloadRate" json:"bytes_download_rate,omitempty"`
	Dlcs                      []*CMsgClientGetClientAppListResponse_App_DLC `protobuf:"bytes,9,rep,name=dlcs" json:"dlcs,omitempty"`
	DownloadPaused            *bool                                         `protobuf:"varint,11,opt,name=download_paused,json=downloadPaused" json:"download_paused,omitempty"`
	NumDownloading            *uint32                                       `protobuf:"varint,12,opt,name=num_downloading,json=numDownloading" json:"num_downloading,omitempty"`
	Changing                  *bool                                         `protobuf:"varint,14,opt,name=changing" json:"changing,omitempty"`
	AvailableOnPlatform       *bool                                         `protobuf:"varint,15,opt,name=available_on_platform,json=availableOnPlatform" json:"available_on_platform,omitempty"`
	BytesStaged               *uint64                                       `protobuf:"varint,16,opt,name=bytes_staged,json=bytesStaged" json:"bytes_staged,omitempty"`
	BytesToStage              *uint64                                       `protobuf:"varint,17,opt,name=bytes_to_stage,json=bytesToStage" json:"bytes_to_stage,omitempty"`
	BytesRequired             *uint64                                       `protobuf:"varint,18,opt,name=bytes_required,json=bytesRequired" json:"bytes_required,omitempty"`
	SourceBuildid             *uint32                                       `protobuf:"varint,19,opt,name=source_buildid,json=sourceBuildid" json:"source_buildid,omitempty"`
	TargetBuildid             *uint32                                       `protobuf:"varint,20,opt,name=target_buildid,json=targetBuildid" json:"target_buildid,omitempty"`
	EstimatedSecondsRemaining *uint32                                       `protobuf:"varint,21,opt,name=estimated_seconds_remaining,json=estimatedSecondsRemaining" json:"estimated_seconds_remaining,omitempty"`
	QueuePosition             *int32                                        `protobuf:"varint,22,opt,name=queue_position,json=queuePosition" json:"queue_position,omitempty"`
	Uninstalling              *bool                                         `protobuf:"varint,23,opt,name=uninstalling" json:"uninstalling,omitempty"`
	RtTimeScheduled           *uint32                                       `protobuf:"varint,24,opt,name=rt_time_scheduled,json=rtTimeScheduled" json:"rt_time_scheduled,omitempty"`
	Running                   *bool                                         `protobuf:"varint,25,opt,name=running" json:"running,omitempty"`
	UpdatePercentage          *uint32                                       `protobuf:"varint,26,opt,name=update_percentage,json=updatePercentage" json:"update_percentage,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *CMsgClientGetClientAppListResponse_App) Reset() {
	*x = CMsgClientGetClientAppListResponse_App{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientAppListResponse_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientAppListResponse_App) ProtoMessage() {}

func (x *CMsgClientGetClientAppListResponse_App) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientAppListResponse_App.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientAppListResponse_App) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CMsgClientGetClientAppListResponse_App) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *CMsgClientGetClientAppListResponse_App) GetAppType() string {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return ""
}

func (x *CMsgClientGetClientAppListResponse_App) GetFavorite() bool {
	if x != nil && x.Favorite != nil {
		return *x.Favorite
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetInstalled() bool {
	if x != nil && x.Installed != nil {
		return *x.Installed
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetAutoUpdate() bool {
	if x != nil && x.AutoUpdate != nil {
		return *x.AutoUpdate
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetBytesDownloaded() uint64 {
	if x != nil && x.BytesDownloaded != nil {
		return *x.BytesDownloaded
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetBytesToDownload() uint64 {
	if x != nil && x.BytesToDownload != nil {
		return *x.BytesToDownload
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetBytesDownloadRate() uint32 {
	if x != nil && x.BytesDownloadRate != nil {
		return *x.BytesDownloadRate
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetDlcs() []*CMsgClientGetClientAppListResponse_App_DLC {
	if x != nil {
		return x.Dlcs
	}
	return nil
}

func (x *CMsgClientGetClientAppListResponse_App) GetDownloadPaused() bool {
	if x != nil && x.DownloadPaused != nil {
		return *x.DownloadPaused
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetNumDownloading() uint32 {
	if x != nil && x.NumDownloading != nil {
		return *x.NumDownloading
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetChanging() bool {
	if x != nil && x.Changing != nil {
		return *x.Changing
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetAvailableOnPlatform() bool {
	if x != nil && x.AvailableOnPlatform != nil {
		return *x.AvailableOnPlatform
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetBytesStaged() uint64 {
	if x != nil && x.BytesStaged != nil {
		return *x.BytesStaged
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetBytesToStage() uint64 {
	if x != nil && x.BytesToStage != nil {
		return *x.BytesToStage
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetBytesRequired() uint64 {
	if x != nil && x.BytesRequired != nil {
		return *x.BytesRequired
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetSourceBuildid() uint32 {
	if x != nil && x.SourceBuildid != nil {
		return *x.SourceBuildid
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetTargetBuildid() uint32 {
	if x != nil && x.TargetBuildid != nil {
		return *x.TargetBuildid
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetEstimatedSecondsRemaining() uint32 {
	if x != nil && x.EstimatedSecondsRemaining != nil {
		return *x.EstimatedSecondsRemaining
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetQueuePosition() int32 {
	if x != nil && x.QueuePosition != nil {
		return *x.QueuePosition
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetUninstalling() bool {
	if x != nil && x.Uninstalling != nil {
		return *x.Uninstalling
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetRtTimeScheduled() uint32 {
	if x != nil && x.RtTimeScheduled != nil {
		return *x.RtTimeScheduled
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App) GetRunning() bool {
	if x != nil && x.Running != nil {
		return *x.Running
	}
	return false
}

func (x *CMsgClientGetClientAppListResponse_App) GetUpdatePercentage() uint32 {
	if x != nil && x.UpdatePercentage != nil {
		return *x.UpdatePercentage
	}
	return 0
}

type CMsgClientGetClientAppListResponse_App_DLC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Appid         *uint32                `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Installed     *bool                  `protobuf:"varint,2,opt,name=installed" json:"installed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClientGetClientAppListResponse_App_DLC) Reset() {
	*x = CMsgClientGetClientAppListResponse_App_DLC{}
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClientGetClientAppListResponse_App_DLC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClientGetClientAppListResponse_App_DLC) ProtoMessage() {}

func (x *CMsgClientGetClientAppListResponse_App_DLC) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_clientserver_uds_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClientGetClientAppListResponse_App_DLC.ProtoReflect.Descriptor instead.
func (*CMsgClientGetClientAppListResponse_App_DLC) Descriptor() ([]byte, []int) {
	return file_steammessages_clientserver_uds_proto_rawDescGZIP(), []int{5, 0, 0}
}

func (x *CMsgClientGetClientAppListResponse_App_DLC) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CMsgClientGetClientAppListResponse_App_DLC) GetInstalled() bool {
	if x != nil && x.Installed != nil {
		return *x.Installed
	}
	return false
}

var File_steammessages_clientserver_uds_proto protoreflect.FileDescriptor

const file_steammessages_clientserver_uds_proto_rawDesc = "" +
	"\n" +
	"$steammessages_clientserver_uds.proto\x1a\x18steammessages_base.proto\"]\n" +
	"\x1eCMsgClientUDSP2PSessionStarted\x12%\n" +
	"\x0esteamid_remote\x18\x01 \x01(\x06R\rsteamidRemote\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\x05R\x05appid\"\x87\x03\n" +
	"\x1cCMsgClientUDSP2PSessionEnded\x12%\n" +
	"\x0esteamid_remote\x18\x01 \x01(\x06R\rsteamidRemote\x12\x14\n" +
	"\x05appid\x18\x02 \x01(\x05R\x05appid\x12,\n" +
	"\x12session_length_sec\x18\x03 \x01(\x05R\x10sessionLengthSec\x12#\n" +
	"\rsession_error\x18\x04 \x01(\x05R\fsessionError\x12\x18\n" +
	"\anattype\x18\x05 \x01(\x05R\anattype\x12\x1d\n" +
	"\n" +
	"bytes_recv\x18\x06 \x01(\x05R\tbytesRecv\x12\x1d\n" +
	"\n" +
	"bytes_sent\x18\a \x01(\x05R\tbytesSent\x12(\n" +
	"\x10bytes_sent_relay\x18\b \x01(\x05R\x0ebytesSentRelay\x12(\n" +
	"\x10bytes_recv_relay\x18\t \x01(\x05R\x0ebytesRecvRelay\x12+\n" +
	"\x12time_to_connect_ms\x18\n" +
	" \x01(\x05R\x0ftimeToConnectMs\"\x1c\n" +
	"\x1aCMsgClientGetClientDetails\"\x96\x04\n" +
	"\"CMsgClientGetClientDetailsResponse\x12'\n" +
	"\x0fpackage_version\x18\x01 \x01(\rR\x0epackageVersion\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12!\n" +
	"\fmachine_name\x18\x03 \x01(\tR\vmachineName\x12\x1b\n" +
	"\tip_public\x18\x04 \x01(\tR\bipPublic\x12\x1d\n" +
	"\n" +
	"ip_private\x18\x05 \x01(\tR\tipPrivate\x12M\n" +
	"\rgames_running\x18\x06 \x03(\v2(.CMsgClientGetClientDetailsResponse.GameR\fgamesRunning\x12'\n" +
	"\x0fbytes_available\x18\a \x01(\x04R\x0ebytesAvailable\x12)\n" +
	"\x10protocol_version\x18\b \x01(\rR\x0fprotocolVersion\x12-\n" +
	"\x12clientcomm_version\x18\t \x01(\rR\x11clientcommVersion\x12\x1f\n" +
	"\vlocal_users\x18\n" +
	" \x03(\rR\n" +
	"localUsers\x1ae\n" +
	"\x04Game\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1d\n" +
	"\n" +
	"extra_info\x18\x02 \x01(\tR\textraInfo\x12(\n" +
	"\x10time_running_sec\x18\x03 \x01(\rR\x0etimeRunningSec\"\x97\x02\n" +
	"\x1aCMsgClientGetClientAppList\x12\x14\n" +
	"\x05media\x18\x01 \x01(\bR\x05media\x12\x14\n" +
	"\x05tools\x18\x02 \x01(\bR\x05tools\x12\x14\n" +
	"\x05games\x18\x03 \x01(\bR\x05games\x12%\n" +
	"\x0eonly_installed\x18\x04 \x01(\bR\ronlyInstalled\x12#\n" +
	"\ronly_changing\x18\x05 \x01(\bR\fonlyChanging\x12\x16\n" +
	"\x06comics\x18\x06 \x01(\bR\x06comics\x12.\n" +
	"\x13include_client_info\x18\a \x01(\bR\x11includeClientInfo\x12#\n" +
	"\rfilter_appids\x18\b \x03(\rR\ffilterAppids\"\xe1\t\n" +
	"\"CMsgClientGetClientAppListResponse\x12;\n" +
	"\x04apps\x18\x01 \x03(\v2'.CMsgClientGetClientAppListResponse.AppR\x04apps\x12'\n" +
	"\x0fbytes_available\x18\x02 \x01(\x04R\x0ebytesAvailable\x12D\n" +
	"\vclient_info\x18\x03 \x01(\v2#.CMsgClientGetClientDetailsResponseR\n" +
	"clientInfo\x1a\x8e\b\n" +
	"\x03App\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12\x19\n" +
	"\bapp_type\x18\n" +
	" \x01(\tR\aappType\x12\x1a\n" +
	"\bfavorite\x18\x03 \x01(\bR\bfavorite\x12\x1c\n" +
	"\tinstalled\x18\x04 \x01(\bR\tinstalled\x12\x1f\n" +
	"\vauto_update\x18\x05 \x01(\bR\n" +
	"autoUpdate\x12)\n" +
	"\x10bytes_downloaded\x18\x06 \x01(\x04R\x0fbytesDownloaded\x12*\n" +
	"\x11bytes_to_download\x18\a \x01(\x04R\x0fbytesToDownload\x12.\n" +
	"\x13bytes_download_rate\x18\b \x01(\rR\x11bytesDownloadRate\x12?\n" +
	"\x04dlcs\x18\t \x03(\v2+.CMsgClientGetClientAppListResponse.App.DLCR\x04dlcs\x12'\n" +
	"\x0fdownload_paused\x18\v \x01(\bR\x0edownloadPaused\x12'\n" +
	"\x0fnum_downloading\x18\f \x01(\rR\x0enumDownloading\x12\x1a\n" +
	"\bchanging\x18\x0e \x01(\bR\bchanging\x122\n" +
	"\x15available_on_platform\x18\x0f \x01(\bR\x13availableOnPlatform\x12!\n" +
	"\fbytes_staged\x18\x10 \x01(\x04R\vbytesStaged\x12$\n" +
	"\x0ebytes_to_stage\x18\x11 \x01(\x04R\fbytesToStage\x12%\n" +
	"\x0ebytes_required\x18\x12 \x01(\x04R\rbytesRequired\x12%\n" +
	"\x0esource_buildid\x18\x13 \x01(\rR\rsourceBuildid\x12%\n" +
	"\x0etarget_buildid\x18\x14 \x01(\rR\rtargetBuildid\x12>\n" +
	"\x1bestimated_seconds_remaining\x18\x15 \x01(\rR\x19estimatedSecondsRemaining\x12%\n" +
	"\x0equeue_position\x18\x16 \x01(\x05R\rqueuePosition\x12\"\n" +
	"\funinstalling\x18\x17 \x01(\bR\funinstalling\x12*\n" +
	"\x11rt_time_scheduled\x18\x18 \x01(\rR\x0frtTimeScheduled\x12\x18\n" +
	"\arunning\x18\x19 \x01(\bR\arunning\x12+\n" +
	"\x11update_percentage\x18\x1a \x01(\rR\x10updatePercentage\x1a9\n" +
	"\x03DLC\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1c\n" +
	"\tinstalled\x18\x02 \x01(\bR\tinstalled\"2\n" +
	"\x1aCMsgClientInstallClientApp\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\"<\n" +
	"\"CMsgClientInstallClientAppResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\"4\n" +
	"\x1cCMsgClientUninstallClientApp\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\">\n" +
	"$CMsgClientUninstallClientAppResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\"Q\n" +
	"!CMsgClientSetClientAppUpdateState\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x16\n" +
	"\x06update\x18\x02 \x01(\bR\x06update\"C\n" +
	")CMsgClientSetClientAppUpdateStateResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\"\xfc\x01\n" +
	"\x19CMsgClientLaunchClientApp\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\rR\blanguage\x12,\n" +
	"\x12launch_option_type\x18\x03 \x01(\rR\x10launchOptionType\x12#\n" +
	"\rlaunch_option\x18\x04 \x01(\rR\flaunchOption\x12#\n" +
	"\rlaunch_source\x18\x05 \x01(\rR\flaunchSource\x12\x12\n" +
	"\x04args\x18\x06 \x01(\tR\x04args\x12!\n" +
	"\fquery_params\x18\a \x01(\tR\vqueryParams\";\n" +
	"!CMsgClientLaunchClientAppResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06result\"<\n" +
	"\"CMsgClientEnableOrDisableDownloads\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\"D\n" +
	"*CMsgClientEnableOrDisableDownloadsResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\rR\x06resultB\x05H\x01\x80\x01\x00"

var (
	file_steammessages_clientserver_uds_proto_rawDescOnce sync.Once
	file_steammessages_clientserver_uds_proto_rawDescData []byte
)

func file_steammessages_clientserver_uds_proto_rawDescGZIP() []byte {
	file_steammessages_clientserver_uds_proto_rawDescOnce.Do(func() {
		file_steammessages_clientserver_uds_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_steammessages_clientserver_uds_proto_rawDesc), len(file_steammessages_clientserver_uds_proto_rawDesc)))
	})
	return file_steammessages_clientserver_uds_proto_rawDescData
}

var file_steammessages_clientserver_uds_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_steammessages_clientserver_uds_proto_goTypes = []any{
	(*CMsgClientUDSP2PSessionStarted)(nil),             // 0: CMsgClientUDSP2PSessionStarted
	(*CMsgClientUDSP2PSessionEnded)(nil),               // 1: CMsgClientUDSP2PSessionEnded
	(*CMsgClientGetClientDetails)(nil),                 // 2: CMsgClientGetClientDetails
	(*CMsgClientGetClientDetailsResponse)(nil),         // 3: CMsgClientGetClientDetailsResponse
	(*CMsgClientGetClientAppList)(nil),                 // 4: CMsgClientGetClientAppList
	(*CMsgClientGetClientAppListResponse)(nil),         // 5: CMsgClientGetClientAppListResponse
	(*CMsgClientInstallClientApp)(nil),                 // 6: CMsgClientInstallClientApp
	(*CMsgClientInstallClientAppResponse)(nil),         // 7: CMsgClientInstallClientAppResponse
	(*CMsgClientUninstallClientApp)(nil),               // 8: CMsgClientUninstallClientApp
	(*CMsgClientUninstallClientAppResponse)(nil),       // 9: CMsgClientUninstallClientAppResponse
	(*CMsgClientSetClientAppUpdateState)(nil),          // 10: CMsgClientSetClientAppUpdateState
	(*CMsgClientSetClientAppUpdateStateResponse)(nil),  // 11: CMsgClientSetClientAppUpdateStateResponse
	(*CMsgClientLaunchClientApp)(nil),                  // 12: CMsgClientLaunchClientApp
	(*CMsgClientLaunchClientAppResponse)(nil),          // 13: CMsgClientLaunchClientAppResponse
	(*CMsgClientEnableOrDisableDownloads)(nil),         // 14: CMsgClientEnableOrDisableDownloads
	(*CMsgClientEnableOrDisableDownloadsResponse)(nil), // 15: CMsgClientEnableOrDisableDownloadsResponse
	(*CMsgClientGetClientDetailsResponse_Game)(nil),    // 16: CMsgClientGetClientDetailsResponse.Game
	(*CMsgClientGetClientAppListResponse_App)(nil),     // 17: CMsgClientGetClientAppListResponse.App
	(*CMsgClientGetClientAppListResponse_App_DLC)(nil), // 18: CMsgClientGetClientAppListResponse.App.DLC
}
var file_steammessages_clientserver_uds_proto_depIdxs = []int32{
	16, // 0: CMsgClientGetClientDetailsResponse.games_running:type_name -> CMsgClientGetClientDetailsResponse.Game
	17, // 1: CMsgClientGetClientAppListResponse.apps:type_name -> CMsgClientGetClientAppListResponse.App
	3,  // 2: CMsgClientGetClientAppListResponse.client_info:type_name -> CMsgClientGetClientDetailsResponse
	18, // 3: CMsgClientGetClientAppListResponse.App.dlcs:type_name -> CMsgClientGetClientAppListResponse.App.DLC
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_steammessages_clientserver_uds_proto_init() }
func file_steammessages_clientserver_uds_proto_init() {
	if File_steammessages_clientserver_uds_proto != nil {
		return
	}
	file_steammessages_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_steammessages_clientserver_uds_proto_rawDesc), len(file_steammessages_clientserver_uds_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_steammessages_clientserver_uds_proto_goTypes,
		DependencyIndexes: file_steammessages_clientserver_uds_proto_depIdxs,
		MessageInfos:      file_steammessages_clientserver_uds_proto_msgTypes,
	}.Build()
	File_steammessages_clientserver_uds_proto = out.File
	file_steammessages_clientserver_uds_proto_goTypes = nil
	file_steammessages_clientserver_uds_proto_depIdxs = nil
}
